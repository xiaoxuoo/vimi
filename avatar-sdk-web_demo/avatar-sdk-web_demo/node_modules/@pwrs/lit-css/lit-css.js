import stringToTemplateLiteral from "string-to-template-literal";
import { processString } from "uglifycss";
import cssnano from "cssnano";
async function cssnanoify(css, options) {
  const cssnanoOptions = typeof options === "object" ? options : void 0;
  const result = await cssnano(cssnanoOptions).process(css);
  return result.css;
}
async function uglifycssify(css, options) {
  const uglifyOptions = typeof options === "object" ? options : void 0;
  const result = processString(css, uglifyOptions);
  return result;
}
async function transform({
  css: source,
  filePath,
  specifier = "lit",
  tag = "css",
  uglify = false,
  cssnano: cssnano2 = false,
  transform: transform2 = (x) => x
}) {
  const css = await transform2(source, { filePath });
  const cssContent = cssnano2 ? await cssnanoify(css, cssnano2) : uglify ? await uglifycssify(css, uglify) : css;
  return `import {${tag}} from '${specifier}';
export const styles = ${tag}${stringToTemplateLiteral(cssContent)};
export default styles;
`;
}
export {
  transform
};
//# sourceMappingURL=lit-css.js.map

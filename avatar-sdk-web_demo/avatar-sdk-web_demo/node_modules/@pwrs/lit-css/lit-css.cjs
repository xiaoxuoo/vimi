var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __commonJS = (cb, mod) => function __require() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// node_modules/uglifycss/uglifycss-lib.js
var require_uglifycss_lib = __commonJS({
  "node_modules/uglifycss/uglifycss-lib.js"(exports, module2) {
    var { readFileSync } = require("fs");
    var { sep, resolve } = require("path");
    var SEP = "/";
    var PATH_SEP = sep;
    var ___PRESERVED_TOKEN_ = "___PRESERVED_TOKEN_";
    var defaultOptions = {
      maxLineLen: 0,
      expandVars: false,
      uglyComments: false,
      cuteComments: false,
      convertUrls: "",
      debug: false,
      output: ""
    };
    function convertRelativeUrls(css, options, preservedTokens) {
      const pattern = /(url\s*\()\s*(["']?)/g;
      const maxIndex = css.length - 1;
      const sb = [];
      let appendIndex = 0;
      let match;
      while ((match = pattern.exec(css)) !== null) {
        let startIndex = match.index + match[1].length;
        let terminator = match[2];
        if (terminator.length === 0) {
          terminator = ")";
        }
        let foundTerminator = false;
        let endIndex = pattern.lastIndex - 1;
        while (foundTerminator === false && endIndex + 1 <= maxIndex) {
          endIndex = css.indexOf(terminator, endIndex + 1);
          if (endIndex > 0 && css.charAt(endIndex - 1) !== "\\") {
            foundTerminator = true;
            if (")" != terminator) {
              endIndex = css.indexOf(")", endIndex);
            }
          }
        }
        sb.push(css.substring(appendIndex, match.index));
        if (foundTerminator) {
          let token = css.substring(startIndex, endIndex).replace(/(^\s*|\s*$)/g, "");
          if (token.slice(0, 19) !== ___PRESERVED_TOKEN_) {
            if (terminator === "'" || terminator === '"') {
              token = token.slice(1, -1);
            } else if (terminator === ")") {
              terminator = "";
            }
            let url;
            if (options.convertUrls && token.charAt(0) !== SEP && token.slice(0, 7) !== "http://" && token.slice(0, 8) !== "https://") {
              let target = options.target.slice();
              token = token.split(SEP).join(PATH_SEP);
              url = resolve(options.source.join(PATH_SEP), token).split(PATH_SEP);
              let file = url.pop();
              while (target[0] === url[0]) {
                target.shift();
                url.shift();
              }
              for (let i = 0, l = target.length; i < l; ++i) {
                target[i] = "..";
              }
              url = terminator + [...target, ...url, file].join(SEP) + terminator;
            } else {
              url = terminator + token + terminator;
            }
            preservedTokens.push(url);
            let preserver = "url(" + ___PRESERVED_TOKEN_ + (preservedTokens.length - 1) + "___)";
            sb.push(preserver);
          } else {
            sb.push(`url(${token})`);
          }
          appendIndex = endIndex + 1;
        } else {
          sb.push(css.substring(match.index, pattern.lastIndex));
          appendIndex = pattern.lastIndex;
        }
      }
      sb.push(css.substring(appendIndex));
      return sb.join("");
    }
    function extractDataUrls(css, preservedTokens) {
      const pattern = /url\(\s*(["']?)data\:/g;
      const maxIndex = css.length - 1;
      const sb = [];
      let appendIndex = 0;
      let match;
      while ((match = pattern.exec(css)) !== null) {
        let startIndex = match.index + 4;
        let terminator = match[1];
        if (terminator.length === 0) {
          terminator = ")";
        }
        let foundTerminator = false;
        let endIndex = pattern.lastIndex - 1;
        while (foundTerminator === false && endIndex + 1 <= maxIndex) {
          endIndex = css.indexOf(terminator, endIndex + 1);
          if (endIndex > 0 && css.charAt(endIndex - 1) !== "\\") {
            foundTerminator = true;
            if (")" != terminator) {
              endIndex = css.indexOf(")", endIndex);
            }
          }
        }
        sb.push(css.substring(appendIndex, match.index));
        if (foundTerminator) {
          let token = css.substring(startIndex, endIndex);
          let parts = token.split(",");
          if (parts.length > 1 && parts[0].slice(-7) == ";base64") {
            token = token.replace(/\s+/g, "");
          } else {
            token = token.replace(/\n/g, " ");
            token = token.replace(/\s+/g, " ");
            token = token.replace(/(^\s+|\s+$)/g, "");
          }
          preservedTokens.push(token);
          let preserver = "url(" + ___PRESERVED_TOKEN_ + (preservedTokens.length - 1) + "___)";
          sb.push(preserver);
          appendIndex = endIndex + 1;
        } else {
          sb.push(css.substring(match.index, pattern.lastIndex));
          appendIndex = pattern.lastIndex;
        }
      }
      sb.push(css.substring(appendIndex));
      return sb.join("");
    }
    function compressHexColors(css) {
      const pattern = /(\=\s*?["']?)?#([0-9a-f])([0-9a-f])([0-9a-f])([0-9a-f])([0-9a-f])([0-9a-f])(\}|[^0-9a-f{][^{]*?\})/gi;
      const sb = [];
      let index = 0;
      let match;
      while ((match = pattern.exec(css)) !== null) {
        sb.push(css.substring(index, match.index));
        let isFilter = match[1];
        if (isFilter) {
          sb.push(match[1] + "#" + (match[2] + match[3] + match[4] + match[5] + match[6] + match[7]));
        } else {
          if (match[2].toLowerCase() == match[3].toLowerCase() && match[4].toLowerCase() == match[5].toLowerCase() && match[6].toLowerCase() == match[7].toLowerCase()) {
            sb.push("#" + (match[3] + match[5] + match[7]).toLowerCase());
          } else {
            sb.push("#" + (match[2] + match[3] + match[4] + match[5] + match[6] + match[7]).toLowerCase());
          }
        }
        index = pattern.lastIndex = pattern.lastIndex - match[8].length;
      }
      sb.push(css.substring(index));
      return sb.join("");
    }
    function keyframes(content, preservedTokens) {
      const pattern = /@[a-z0-9-_]*keyframes\s+[a-z0-9-_]+\s*{/gi;
      let index = 0;
      let buffer;
      const preserve = (part, i) => {
        part = part.replace(/(^\s|\s$)/g, "");
        if (part.charAt(0) === "0") {
          preservedTokens.push(part);
          buffer[i] = ___PRESERVED_TOKEN_ + (preservedTokens.length - 1) + "___";
        }
      };
      while (true) {
        let level = 0;
        buffer = "";
        let startIndex = content.slice(index).search(pattern);
        if (startIndex < 0) {
          break;
        }
        index += startIndex;
        startIndex = index;
        let len = content.length;
        let buffers = [];
        for (; index < len; ++index) {
          let ch = content.charAt(index);
          if (ch === "{") {
            if (level === 0) {
              buffers.push(buffer.replace(/(^\s|\s$)/g, ""));
            } else if (level === 1) {
              buffer = buffer.split(",");
              buffer.forEach(preserve);
              buffers.push(buffer.join(",").replace(/(^\s|\s$)/g, ""));
            }
            buffer = "";
            level += 1;
          } else if (ch === "}") {
            if (level === 2) {
              buffers.push("{" + buffer.replace(/(^\s|\s$)/g, "") + "}");
              buffer = "";
            } else if (level === 1) {
              content = content.slice(0, startIndex) + buffers.shift() + "{" + buffers.join("") + content.slice(index);
              break;
            }
            level -= 1;
          }
          if (level < 0) {
            break;
          } else if (ch !== "{" && ch !== "}") {
            buffer += ch;
          }
        }
      }
      return content;
    }
    function collectComments(content, comments) {
      const table = [];
      let from = 0;
      let end;
      while (true) {
        let start = content.indexOf("/*", from);
        if (start > -1) {
          end = content.indexOf("*/", start + 2);
          if (end > -1) {
            comments.push(content.slice(start + 2, end));
            table.push(content.slice(from, start));
            table.push("/*___PRESERVE_CANDIDATE_COMMENT_" + (comments.length - 1) + "___*/");
            from = end + 2;
          } else {
            end = -2;
            break;
          }
        } else {
          break;
        }
      }
      table.push(content.slice(end + 2));
      return table.join("");
    }
    function processString2(content = "", options = defaultOptions) {
      const comments = [];
      const preservedTokens = [];
      let pattern;
      content = extractDataUrls(content, preservedTokens);
      content = convertRelativeUrls(content, options, preservedTokens);
      content = collectComments(content, comments);
      pattern = /("([^\\"]|\\.|\\)*")|('([^\\']|\\.|\\)*')/g;
      content = content.replace(pattern, (token) => {
        const quote = token.substring(0, 1);
        token = token.slice(1, -1);
        if (token.indexOf("___PRESERVE_CANDIDATE_COMMENT_") >= 0) {
          for (let i = 0, len = comments.length; i < len; i += 1) {
            token = token.replace("___PRESERVE_CANDIDATE_COMMENT_" + i + "___", comments[i]);
          }
        }
        token = token.replace(/progid:DXImageTransform.Microsoft.Alpha\(Opacity=/gi, "alpha(opacity=");
        preservedTokens.push(token);
        return quote + ___PRESERVED_TOKEN_ + (preservedTokens.length - 1) + "___" + quote;
      });
      for (let i = 0, len = comments.length; i < len; i += 1) {
        let token = comments[i];
        let placeholder = "___PRESERVE_CANDIDATE_COMMENT_" + i + "___";
        if (token.charAt(0) === "!") {
          if (options.cuteComments) {
            preservedTokens.push(token.substring(1).replace(/\r\n/g, "\n"));
          } else if (options.uglyComments) {
            preservedTokens.push(token.substring(1).replace(/[\r\n]/g, ""));
          } else {
            preservedTokens.push(token);
          }
          content = content.replace(placeholder, ___PRESERVED_TOKEN_ + (preservedTokens.length - 1) + "___");
          continue;
        }
        if (token.charAt(token.length - 1) === "\\") {
          preservedTokens.push("\\");
          content = content.replace(placeholder, ___PRESERVED_TOKEN_ + (preservedTokens.length - 1) + "___");
          i = i + 1;
          preservedTokens.push("");
          content = content.replace(
            "___PRESERVE_CANDIDATE_COMMENT_" + i + "___",
            ___PRESERVED_TOKEN_ + (preservedTokens.length - 1) + "___"
          );
          continue;
        }
        if (token.length === 0) {
          let startIndex = content.indexOf(placeholder);
          if (startIndex > 2) {
            if (content.charAt(startIndex - 3) === ">") {
              preservedTokens.push("");
              content = content.replace(placeholder, ___PRESERVED_TOKEN_ + (preservedTokens.length - 1) + "___");
            }
          }
        }
        content = content.replace(`/*${placeholder}*/`, "");
      }
      if (options.expandVars) {
        const vars = {};
        pattern = /@variables\s*\{\s*([^\}]+)\s*\}/g;
        content = content.replace(pattern, (_, f1) => {
          pattern = /\s*([a-z0-9\-]+)\s*:\s*([^;\}]+)\s*/gi;
          f1.replace(pattern, (_2, f12, f2) => {
            if (f12 && f2) {
              vars[f12] = f2;
            }
            return "";
          });
          return "";
        });
        pattern = /var\s*\(\s*([^\)]+)\s*\)/g;
        content = content.replace(pattern, (_, f1) => {
          return vars[f1] || "none";
        });
      }
      content = content.replace(/\s+/g, " ");
      pattern = /calc\(([^;}]*)\)/g;
      content = content.replace(pattern, (_, f1) => {
        preservedTokens.push(
          "calc(" + f1.replace(/(^\s*|\s*$)/g, "").replace(/\( /g, "(").replace(/ \)/g, ")") + ")"
        );
        return ___PRESERVED_TOKEN_ + (preservedTokens.length - 1) + "___";
      });
      pattern = /\s*filter:\s*progid:DXImageTransform.Microsoft.Matrix\(([^\)]+)\);/g;
      content = content.replace(pattern, (_, f1) => {
        preservedTokens.push(f1);
        return "filter:progid:DXImageTransform.Microsoft.Matrix(" + ___PRESERVED_TOKEN_ + (preservedTokens.length - 1) + "___);";
      });
      pattern = /(^|\})(([^\{:])+:)+([^\{]*\{)/g;
      content = content.replace(pattern, (token) => token.replace(/:/g, "___PSEUDOCLASSCOLON___"));
      content = content.replace(/\s+([!{};:>+\(\)\],])/g, "$1");
      content = content.replace(/!important/g, " !important");
      content = content.replace(/___PSEUDOCLASSCOLON___/g, ":");
      pattern = /\s*(animation|animation-delay|animation-duration|transition|transition-delay|transition-duration):\s*([^;}]+)/gi;
      content = content.replace(pattern, (_, f1, f2) => {
        f2 = f2.replace(/(^|\D)0?\.?0(m?s)/gi, (_2, g1, g2) => {
          preservedTokens.push("0" + g2);
          return g1 + ___PRESERVED_TOKEN_ + (preservedTokens.length - 1) + "___";
        });
        return f1 + ":" + f2;
      });
      pattern = /\s*(flex|flex-basis):\s*([^;}]+)/gi;
      content = content.replace(pattern, (_, f1, f2) => {
        let f2b = f2.split(/\s+/);
        preservedTokens.push(f2b.pop());
        f2b.push(___PRESERVED_TOKEN_ + (preservedTokens.length - 1) + "___");
        f2b = f2b.join(" ");
        return `${f1}:${f2b}`;
      });
      content = content.replace(/(hsla?)\(([^)]+)\)/g, (_, f1, f2) => {
        var f0 = [];
        f2.split(",").forEach((part) => {
          part = part.replace(/(^\s+|\s+$)/g, "");
          if (part === "0%") {
            preservedTokens.push("0%");
            f0.push(___PRESERVED_TOKEN_ + (preservedTokens.length - 1) + "___");
          } else {
            f0.push(part);
          }
        });
        return f1 + "(" + f0.join(",") + ")";
      });
      content = keyframes(content, preservedTokens);
      content = content.replace(/:first-(line|letter)(\{|,)/gi, (_, f1, f2) => ":first-" + f1.toLowerCase() + " " + f2);
      if (options.cuteComments) {
        content = content.replace(/\s*\/\*/g, "___PRESERVED_NEWLINE___/*");
        content = content.replace(/\*\/\s*/g, "*/___PRESERVED_NEWLINE___");
      } else {
        content = content.replace(/\*\/\s*/g, "*/");
      }
      pattern = /^(.*)(@charset)( "[^"]*";)/gi;
      content = content.replace(pattern, (_, f1, f2, f3) => f2.toLowerCase() + f3 + f1);
      pattern = /^((\s*)(@charset)( [^;]+;\s*))+/gi;
      content = content.replace(pattern, (_, __, f2, f3, f4) => f2 + f3.toLowerCase() + f4);
      pattern = /@(font-face|import|(?:-(?:atsc|khtml|moz|ms|o|wap|webkit)-)?keyframe|media|page|namespace)/gi;
      content = content.replace(pattern, (_, f1) => "@" + f1.toLowerCase());
      pattern = /:(active|after|before|checked|disabled|empty|enabled|first-(?:child|of-type)|focus|hover|last-(?:child|of-type)|link|only-(?:child|of-type)|root|:selection|target|visited)/gi;
      content = content.replace(pattern, (_, f1) => ":" + f1.toLowerCase());
      content = content.replace(/^(.*)(@charset \"[^\"]*\";)/g, "$2$1");
      content = content.replace(/^(\s*@charset [^;]+;\s*)+/g, "$1");
      pattern = /:(lang|not|nth-child|nth-last-child|nth-last-of-type|nth-of-type|(?:-(?:atsc|khtml|moz|ms|o|wap|webkit)-)?any)\(/gi;
      content = content.replace(pattern, (_, f1) => ":" + f1.toLowerCase() + "(");
      pattern = /([:,\( ]\s*)(attr|color-stop|from|rgba|to|url|(?:-(?:atsc|khtml|moz|ms|o|wap|webkit)-)?(?:calc|max|min|(?:repeating-)?(?:linear|radial)-gradient)|-webkit-gradient)/gi;
      content = content.replace(pattern, (_, f1, f2) => f1 + f2.toLowerCase());
      content = content.replace(/\band\(/gi, "and (");
      content = content.replace(/([!{}:;>+\(\[,])\s+/g, "$1");
      content = content.replace(/;+\}/g, "}");
      content = content.replace(/(^|[^.0-9\\])(?:0?\.)?0(?:ex|ch|r?em|vw|vh|vmin|vmax|cm|mm|in|pt|pc|px|deg|g?rad|turn|m?s|k?Hz|dpi|dpcm|dppx|%)/gi, "$10");
      content = content.replace(/([0-9])\.0(ex|ch|r?em|vw|vh|vmin|vmax|cm|mm|in|pt|pc|px|deg|g?rad|turn|m?s|k?Hz|dpi|dpcm|dppx|%| |;)/gi, "$1$2");
      content = content.replace(/:0 0 0 0(;|\})/g, ":0$1");
      content = content.replace(/:0 0 0(;|\})/g, ":0$1");
      content = content.replace(/:0 0(;|\})/g, ":0$1");
      pattern = /(background-position|transform-origin|webkit-transform-origin|moz-transform-origin|o-transform-origin|ms-transform-origin|box-shadow):0(;|\})/gi;
      content = content.replace(pattern, (_, f1, f2) => f1.toLowerCase() + ":0 0" + f2);
      content = content.replace(/(:|\s)0+\.(\d+)/g, "$1.$2");
      pattern = /rgb\s*\(\s*([0-9,\s]+)\s*\)/gi;
      content = content.replace(pattern, (_, f1) => {
        const rgbcolors = f1.split(",");
        let hexcolor = "#";
        for (let i = 0; i < rgbcolors.length; i += 1) {
          let val = parseInt(rgbcolors[i], 10);
          if (val < 16) {
            hexcolor += "0";
          }
          if (val > 255) {
            val = 255;
          }
          hexcolor += val.toString(16);
        }
        return hexcolor;
      });
      content = compressHexColors(content);
      content = content.replace(/(:|\s)(#f00)(;|})/g, "$1red$3");
      content = content.replace(/(:|\s)(#000080)(;|})/g, "$1navy$3");
      content = content.replace(/(:|\s)(#808080)(;|})/g, "$1gray$3");
      content = content.replace(/(:|\s)(#808000)(;|})/g, "$1olive$3");
      content = content.replace(/(:|\s)(#800080)(;|})/g, "$1purple$3");
      content = content.replace(/(:|\s)(#c0c0c0)(;|})/g, "$1silver$3");
      content = content.replace(/(:|\s)(#008080)(;|})/g, "$1teal$3");
      content = content.replace(/(:|\s)(#ffa500)(;|})/g, "$1orange$3");
      content = content.replace(/(:|\s)(#800000)(;|})/g, "$1maroon$3");
      pattern = /(border|border-top|border-right|border-bottom|border-left|outline|background):none(;|\})/gi;
      content = content.replace(pattern, (_, f1, f2) => f1.toLowerCase() + ":0" + f2);
      content = content.replace(/progid:DXImageTransform\.Microsoft\.Alpha\(Opacity=/gi, "alpha(opacity=");
      content = content.replace(/\(([\-A-Za-z]+):([0-9]+)\/([0-9]+)\)/g, "($1:$2___QUERY_FRACTION___$3)");
      content = content.replace(/[^\};\{\/]+\{\}/g, "");
      content = content.replace(/___QUERY_FRACTION___/g, "/");
      if (options.maxLineLen > 0) {
        const lines = [];
        let line = [];
        for (let i = 0, len = content.length; i < len; i += 1) {
          let ch = content.charAt(i);
          line.push(ch);
          if (ch === "}" && line.length > options.maxLineLen) {
            lines.push(line.join(""));
            line = [];
          }
        }
        if (line.length) {
          lines.push(line.join(""));
        }
        content = lines.join("\n");
      }
      content = content.replace(/;;+/g, ";");
      content = content.replace(/(^\s*|\s*$)/g, "");
      for (let i = preservedTokens.length - 1; i >= 0; i--) {
        content = content.replace(___PRESERVED_TOKEN_ + i + "___", preservedTokens[i], "g");
      }
      content = content.replace(/___PRESERVED_NEWLINE___/g, "\n");
      return content;
    }
    function processFiles(filenames = [], options = defaultOptions) {
      if (options.convertUrls) {
        options.target = resolve(process.cwd(), options.convertUrls).split(PATH_SEP);
      }
      const uglies = [];
      filenames.forEach((filename) => {
        try {
          const content = readFileSync(filename, "utf8");
          if (content.length) {
            if (options.convertUrls) {
              options.source = resolve(process.cwd(), filename).split(PATH_SEP);
              options.source.pop();
            }
            uglies.push(processString2(content, options));
          }
        } catch (e) {
          if (options.debug) {
            console.error(`uglifycss: unable to process "${filename}"
${e.stack}`);
          } else {
            console.error(`uglifycss: unable to process "${filename}"
	${e}`);
          }
          process.exit(1);
        }
      });
      return uglies.join("");
    }
    module2.exports = {
      defaultOptions,
      processString: processString2,
      processFiles
    };
  }
});

// node_modules/uglifycss/index.js
var require_uglifycss = __commonJS({
  "node_modules/uglifycss/index.js"(exports, module2) {
    module2.exports = require_uglifycss_lib();
  }
});

// node_modules/picocolors/picocolors.js
var require_picocolors = __commonJS({
  "node_modules/picocolors/picocolors.js"(exports, module2) {
    var tty = require("tty");
    var isColorSupported = !("NO_COLOR" in process.env || process.argv.includes("--no-color")) && ("FORCE_COLOR" in process.env || process.argv.includes("--color") || process.platform === "win32" || tty.isatty(1) && process.env.TERM !== "dumb" || "CI" in process.env);
    var formatter = (open, close, replace = open) => (input) => {
      let string = "" + input;
      let index = string.indexOf(close, open.length);
      return ~index ? open + replaceClose(string, close, replace, index) + close : open + string + close;
    };
    var replaceClose = (string, close, replace, index) => {
      let start = string.substring(0, index) + replace;
      let end = string.substring(index + close.length);
      let nextIndex = end.indexOf(close);
      return ~nextIndex ? start + replaceClose(end, close, replace, nextIndex) : start + end;
    };
    var createColors = (enabled = isColorSupported) => ({
      isColorSupported: enabled,
      reset: enabled ? (s) => `\x1B[0m${s}\x1B[0m` : String,
      bold: enabled ? formatter("\x1B[1m", "\x1B[22m", "\x1B[22m\x1B[1m") : String,
      dim: enabled ? formatter("\x1B[2m", "\x1B[22m", "\x1B[22m\x1B[2m") : String,
      italic: enabled ? formatter("\x1B[3m", "\x1B[23m") : String,
      underline: enabled ? formatter("\x1B[4m", "\x1B[24m") : String,
      inverse: enabled ? formatter("\x1B[7m", "\x1B[27m") : String,
      hidden: enabled ? formatter("\x1B[8m", "\x1B[28m") : String,
      strikethrough: enabled ? formatter("\x1B[9m", "\x1B[29m") : String,
      black: enabled ? formatter("\x1B[30m", "\x1B[39m") : String,
      red: enabled ? formatter("\x1B[31m", "\x1B[39m") : String,
      green: enabled ? formatter("\x1B[32m", "\x1B[39m") : String,
      yellow: enabled ? formatter("\x1B[33m", "\x1B[39m") : String,
      blue: enabled ? formatter("\x1B[34m", "\x1B[39m") : String,
      magenta: enabled ? formatter("\x1B[35m", "\x1B[39m") : String,
      cyan: enabled ? formatter("\x1B[36m", "\x1B[39m") : String,
      white: enabled ? formatter("\x1B[37m", "\x1B[39m") : String,
      gray: enabled ? formatter("\x1B[90m", "\x1B[39m") : String,
      bgBlack: enabled ? formatter("\x1B[40m", "\x1B[49m") : String,
      bgRed: enabled ? formatter("\x1B[41m", "\x1B[49m") : String,
      bgGreen: enabled ? formatter("\x1B[42m", "\x1B[49m") : String,
      bgYellow: enabled ? formatter("\x1B[43m", "\x1B[49m") : String,
      bgBlue: enabled ? formatter("\x1B[44m", "\x1B[49m") : String,
      bgMagenta: enabled ? formatter("\x1B[45m", "\x1B[49m") : String,
      bgCyan: enabled ? formatter("\x1B[46m", "\x1B[49m") : String,
      bgWhite: enabled ? formatter("\x1B[47m", "\x1B[49m") : String
    });
    module2.exports = createColors();
    module2.exports.createColors = createColors;
  }
});

// node_modules/postcss/lib/tokenize.js
var require_tokenize = __commonJS({
  "node_modules/postcss/lib/tokenize.js"(exports, module2) {
    "use strict";
    var SINGLE_QUOTE = "'".charCodeAt(0);
    var DOUBLE_QUOTE = '"'.charCodeAt(0);
    var BACKSLASH = "\\".charCodeAt(0);
    var SLASH = "/".charCodeAt(0);
    var NEWLINE = "\n".charCodeAt(0);
    var SPACE = " ".charCodeAt(0);
    var FEED = "\f".charCodeAt(0);
    var TAB = "	".charCodeAt(0);
    var CR = "\r".charCodeAt(0);
    var OPEN_SQUARE = "[".charCodeAt(0);
    var CLOSE_SQUARE = "]".charCodeAt(0);
    var OPEN_PARENTHESES = "(".charCodeAt(0);
    var CLOSE_PARENTHESES = ")".charCodeAt(0);
    var OPEN_CURLY = "{".charCodeAt(0);
    var CLOSE_CURLY = "}".charCodeAt(0);
    var SEMICOLON = ";".charCodeAt(0);
    var ASTERISK = "*".charCodeAt(0);
    var COLON = ":".charCodeAt(0);
    var AT = "@".charCodeAt(0);
    var RE_AT_END = /[\t\n\f\r "#'()/;[\\\]{}]/g;
    var RE_WORD_END = /[\t\n\f\r !"#'():;@[\\\]{}]|\/(?=\*)/g;
    var RE_BAD_BRACKET = /.[\r\n"'(/\\]/;
    var RE_HEX_ESCAPE = /[\da-f]/i;
    module2.exports = function tokenizer(input, options = {}) {
      let css = input.css.valueOf();
      let ignore = options.ignoreErrors;
      let code, next, quote, content, escape;
      let escaped, escapePos, prev, n, currentToken;
      let length = css.length;
      let pos = 0;
      let buffer = [];
      let returned = [];
      function position() {
        return pos;
      }
      function unclosed(what) {
        throw input.error("Unclosed " + what, pos);
      }
      function endOfFile() {
        return returned.length === 0 && pos >= length;
      }
      function nextToken(opts) {
        if (returned.length)
          return returned.pop();
        if (pos >= length)
          return;
        let ignoreUnclosed = opts ? opts.ignoreUnclosed : false;
        code = css.charCodeAt(pos);
        switch (code) {
          case NEWLINE:
          case SPACE:
          case TAB:
          case CR:
          case FEED: {
            next = pos;
            do {
              next += 1;
              code = css.charCodeAt(next);
            } while (code === SPACE || code === NEWLINE || code === TAB || code === CR || code === FEED);
            currentToken = ["space", css.slice(pos, next)];
            pos = next - 1;
            break;
          }
          case OPEN_SQUARE:
          case CLOSE_SQUARE:
          case OPEN_CURLY:
          case CLOSE_CURLY:
          case COLON:
          case SEMICOLON:
          case CLOSE_PARENTHESES: {
            let controlChar = String.fromCharCode(code);
            currentToken = [controlChar, controlChar, pos];
            break;
          }
          case OPEN_PARENTHESES: {
            prev = buffer.length ? buffer.pop()[1] : "";
            n = css.charCodeAt(pos + 1);
            if (prev === "url" && n !== SINGLE_QUOTE && n !== DOUBLE_QUOTE && n !== SPACE && n !== NEWLINE && n !== TAB && n !== FEED && n !== CR) {
              next = pos;
              do {
                escaped = false;
                next = css.indexOf(")", next + 1);
                if (next === -1) {
                  if (ignore || ignoreUnclosed) {
                    next = pos;
                    break;
                  } else {
                    unclosed("bracket");
                  }
                }
                escapePos = next;
                while (css.charCodeAt(escapePos - 1) === BACKSLASH) {
                  escapePos -= 1;
                  escaped = !escaped;
                }
              } while (escaped);
              currentToken = ["brackets", css.slice(pos, next + 1), pos, next];
              pos = next;
            } else {
              next = css.indexOf(")", pos + 1);
              content = css.slice(pos, next + 1);
              if (next === -1 || RE_BAD_BRACKET.test(content)) {
                currentToken = ["(", "(", pos];
              } else {
                currentToken = ["brackets", content, pos, next];
                pos = next;
              }
            }
            break;
          }
          case SINGLE_QUOTE:
          case DOUBLE_QUOTE: {
            quote = code === SINGLE_QUOTE ? "'" : '"';
            next = pos;
            do {
              escaped = false;
              next = css.indexOf(quote, next + 1);
              if (next === -1) {
                if (ignore || ignoreUnclosed) {
                  next = pos + 1;
                  break;
                } else {
                  unclosed("string");
                }
              }
              escapePos = next;
              while (css.charCodeAt(escapePos - 1) === BACKSLASH) {
                escapePos -= 1;
                escaped = !escaped;
              }
            } while (escaped);
            currentToken = ["string", css.slice(pos, next + 1), pos, next];
            pos = next;
            break;
          }
          case AT: {
            RE_AT_END.lastIndex = pos + 1;
            RE_AT_END.test(css);
            if (RE_AT_END.lastIndex === 0) {
              next = css.length - 1;
            } else {
              next = RE_AT_END.lastIndex - 2;
            }
            currentToken = ["at-word", css.slice(pos, next + 1), pos, next];
            pos = next;
            break;
          }
          case BACKSLASH: {
            next = pos;
            escape = true;
            while (css.charCodeAt(next + 1) === BACKSLASH) {
              next += 1;
              escape = !escape;
            }
            code = css.charCodeAt(next + 1);
            if (escape && code !== SLASH && code !== SPACE && code !== NEWLINE && code !== TAB && code !== CR && code !== FEED) {
              next += 1;
              if (RE_HEX_ESCAPE.test(css.charAt(next))) {
                while (RE_HEX_ESCAPE.test(css.charAt(next + 1))) {
                  next += 1;
                }
                if (css.charCodeAt(next + 1) === SPACE) {
                  next += 1;
                }
              }
            }
            currentToken = ["word", css.slice(pos, next + 1), pos, next];
            pos = next;
            break;
          }
          default: {
            if (code === SLASH && css.charCodeAt(pos + 1) === ASTERISK) {
              next = css.indexOf("*/", pos + 2) + 1;
              if (next === 0) {
                if (ignore || ignoreUnclosed) {
                  next = css.length;
                } else {
                  unclosed("comment");
                }
              }
              currentToken = ["comment", css.slice(pos, next + 1), pos, next];
              pos = next;
            } else {
              RE_WORD_END.lastIndex = pos + 1;
              RE_WORD_END.test(css);
              if (RE_WORD_END.lastIndex === 0) {
                next = css.length - 1;
              } else {
                next = RE_WORD_END.lastIndex - 2;
              }
              currentToken = ["word", css.slice(pos, next + 1), pos, next];
              buffer.push(currentToken);
              pos = next;
            }
            break;
          }
        }
        pos++;
        return currentToken;
      }
      function back(token) {
        returned.push(token);
      }
      return {
        back,
        endOfFile,
        nextToken,
        position
      };
    };
  }
});

// node_modules/postcss/lib/terminal-highlight.js
var require_terminal_highlight = __commonJS({
  "node_modules/postcss/lib/terminal-highlight.js"(exports, module2) {
    "use strict";
    var pico = require_picocolors();
    var tokenizer = require_tokenize();
    var Input;
    function registerInput(dependant) {
      Input = dependant;
    }
    var HIGHLIGHT_THEME = {
      ";": pico.yellow,
      ":": pico.yellow,
      "(": pico.cyan,
      ")": pico.cyan,
      "[": pico.yellow,
      "]": pico.yellow,
      "{": pico.yellow,
      "}": pico.yellow,
      "at-word": pico.cyan,
      "brackets": pico.cyan,
      "call": pico.cyan,
      "class": pico.yellow,
      "comment": pico.gray,
      "hash": pico.magenta,
      "string": pico.green
    };
    function getTokenType([type, value], processor) {
      if (type === "word") {
        if (value[0] === ".") {
          return "class";
        }
        if (value[0] === "#") {
          return "hash";
        }
      }
      if (!processor.endOfFile()) {
        let next = processor.nextToken();
        processor.back(next);
        if (next[0] === "brackets" || next[0] === "(")
          return "call";
      }
      return type;
    }
    function terminalHighlight(css) {
      let processor = tokenizer(new Input(css), { ignoreErrors: true });
      let result = "";
      while (!processor.endOfFile()) {
        let token = processor.nextToken();
        let color = HIGHLIGHT_THEME[getTokenType(token, processor)];
        if (color) {
          result += token[1].split(/\r?\n/).map((i) => color(i)).join("\n");
        } else {
          result += token[1];
        }
      }
      return result;
    }
    terminalHighlight.registerInput = registerInput;
    module2.exports = terminalHighlight;
  }
});

// node_modules/postcss/lib/css-syntax-error.js
var require_css_syntax_error = __commonJS({
  "node_modules/postcss/lib/css-syntax-error.js"(exports, module2) {
    "use strict";
    var pico = require_picocolors();
    var terminalHighlight = require_terminal_highlight();
    var CssSyntaxError = class _CssSyntaxError extends Error {
      constructor(message, line, column, source, file, plugin) {
        super(message);
        this.name = "CssSyntaxError";
        this.reason = message;
        if (file) {
          this.file = file;
        }
        if (source) {
          this.source = source;
        }
        if (plugin) {
          this.plugin = plugin;
        }
        if (typeof line !== "undefined" && typeof column !== "undefined") {
          if (typeof line === "number") {
            this.line = line;
            this.column = column;
          } else {
            this.line = line.line;
            this.column = line.column;
            this.endLine = column.line;
            this.endColumn = column.column;
          }
        }
        this.setMessage();
        if (Error.captureStackTrace) {
          Error.captureStackTrace(this, _CssSyntaxError);
        }
      }
      setMessage() {
        this.message = this.plugin ? this.plugin + ": " : "";
        this.message += this.file ? this.file : "<css input>";
        if (typeof this.line !== "undefined") {
          this.message += ":" + this.line + ":" + this.column;
        }
        this.message += ": " + this.reason;
      }
      showSourceCode(color) {
        if (!this.source)
          return "";
        let css = this.source;
        if (color == null)
          color = pico.isColorSupported;
        if (terminalHighlight) {
          if (color)
            css = terminalHighlight(css);
        }
        let lines = css.split(/\r?\n/);
        let start = Math.max(this.line - 3, 0);
        let end = Math.min(this.line + 2, lines.length);
        let maxWidth = String(end).length;
        let mark, aside;
        if (color) {
          let { bold, gray, red } = pico.createColors(true);
          mark = (text) => bold(red(text));
          aside = (text) => gray(text);
        } else {
          mark = aside = (str) => str;
        }
        return lines.slice(start, end).map((line, index) => {
          let number = start + 1 + index;
          let gutter = " " + (" " + number).slice(-maxWidth) + " | ";
          if (number === this.line) {
            let spacing = aside(gutter.replace(/\d/g, " ")) + line.slice(0, this.column - 1).replace(/[^\t]/g, " ");
            return mark(">") + aside(gutter) + line + "\n " + spacing + mark("^");
          }
          return " " + aside(gutter) + line;
        }).join("\n");
      }
      toString() {
        let code = this.showSourceCode();
        if (code) {
          code = "\n\n" + code + "\n";
        }
        return this.name + ": " + this.message + code;
      }
    };
    module2.exports = CssSyntaxError;
    CssSyntaxError.default = CssSyntaxError;
  }
});

// node_modules/postcss/lib/symbols.js
var require_symbols = __commonJS({
  "node_modules/postcss/lib/symbols.js"(exports, module2) {
    "use strict";
    module2.exports.isClean = Symbol("isClean");
    module2.exports.my = Symbol("my");
  }
});

// node_modules/postcss/lib/stringifier.js
var require_stringifier = __commonJS({
  "node_modules/postcss/lib/stringifier.js"(exports, module2) {
    "use strict";
    var DEFAULT_RAW = {
      after: "\n",
      beforeClose: "\n",
      beforeComment: "\n",
      beforeDecl: "\n",
      beforeOpen: " ",
      beforeRule: "\n",
      colon: ": ",
      commentLeft: " ",
      commentRight: " ",
      emptyBody: "",
      indent: "    ",
      semicolon: false
    };
    function capitalize(str) {
      return str[0].toUpperCase() + str.slice(1);
    }
    var Stringifier = class {
      constructor(builder) {
        this.builder = builder;
      }
      atrule(node, semicolon) {
        let name = "@" + node.name;
        let params = node.params ? this.rawValue(node, "params") : "";
        if (typeof node.raws.afterName !== "undefined") {
          name += node.raws.afterName;
        } else if (params) {
          name += " ";
        }
        if (node.nodes) {
          this.block(node, name + params);
        } else {
          let end = (node.raws.between || "") + (semicolon ? ";" : "");
          this.builder(name + params + end, node);
        }
      }
      beforeAfter(node, detect) {
        let value;
        if (node.type === "decl") {
          value = this.raw(node, null, "beforeDecl");
        } else if (node.type === "comment") {
          value = this.raw(node, null, "beforeComment");
        } else if (detect === "before") {
          value = this.raw(node, null, "beforeRule");
        } else {
          value = this.raw(node, null, "beforeClose");
        }
        let buf = node.parent;
        let depth = 0;
        while (buf && buf.type !== "root") {
          depth += 1;
          buf = buf.parent;
        }
        if (value.includes("\n")) {
          let indent = this.raw(node, null, "indent");
          if (indent.length) {
            for (let step = 0; step < depth; step++)
              value += indent;
          }
        }
        return value;
      }
      block(node, start) {
        let between = this.raw(node, "between", "beforeOpen");
        this.builder(start + between + "{", node, "start");
        let after;
        if (node.nodes && node.nodes.length) {
          this.body(node);
          after = this.raw(node, "after");
        } else {
          after = this.raw(node, "after", "emptyBody");
        }
        if (after)
          this.builder(after);
        this.builder("}", node, "end");
      }
      body(node) {
        let last = node.nodes.length - 1;
        while (last > 0) {
          if (node.nodes[last].type !== "comment")
            break;
          last -= 1;
        }
        let semicolon = this.raw(node, "semicolon");
        for (let i = 0; i < node.nodes.length; i++) {
          let child = node.nodes[i];
          let before = this.raw(child, "before");
          if (before)
            this.builder(before);
          this.stringify(child, last !== i || semicolon);
        }
      }
      comment(node) {
        let left = this.raw(node, "left", "commentLeft");
        let right = this.raw(node, "right", "commentRight");
        this.builder("/*" + left + node.text + right + "*/", node);
      }
      decl(node, semicolon) {
        let between = this.raw(node, "between", "colon");
        let string = node.prop + between + this.rawValue(node, "value");
        if (node.important) {
          string += node.raws.important || " !important";
        }
        if (semicolon)
          string += ";";
        this.builder(string, node);
      }
      document(node) {
        this.body(node);
      }
      raw(node, own, detect) {
        let value;
        if (!detect)
          detect = own;
        if (own) {
          value = node.raws[own];
          if (typeof value !== "undefined")
            return value;
        }
        let parent = node.parent;
        if (detect === "before") {
          if (!parent || parent.type === "root" && parent.first === node) {
            return "";
          }
          if (parent && parent.type === "document") {
            return "";
          }
        }
        if (!parent)
          return DEFAULT_RAW[detect];
        let root = node.root();
        if (!root.rawCache)
          root.rawCache = {};
        if (typeof root.rawCache[detect] !== "undefined") {
          return root.rawCache[detect];
        }
        if (detect === "before" || detect === "after") {
          return this.beforeAfter(node, detect);
        } else {
          let method = "raw" + capitalize(detect);
          if (this[method]) {
            value = this[method](root, node);
          } else {
            root.walk((i) => {
              value = i.raws[own];
              if (typeof value !== "undefined")
                return false;
            });
          }
        }
        if (typeof value === "undefined")
          value = DEFAULT_RAW[detect];
        root.rawCache[detect] = value;
        return value;
      }
      rawBeforeClose(root) {
        let value;
        root.walk((i) => {
          if (i.nodes && i.nodes.length > 0) {
            if (typeof i.raws.after !== "undefined") {
              value = i.raws.after;
              if (value.includes("\n")) {
                value = value.replace(/[^\n]+$/, "");
              }
              return false;
            }
          }
        });
        if (value)
          value = value.replace(/\S/g, "");
        return value;
      }
      rawBeforeComment(root, node) {
        let value;
        root.walkComments((i) => {
          if (typeof i.raws.before !== "undefined") {
            value = i.raws.before;
            if (value.includes("\n")) {
              value = value.replace(/[^\n]+$/, "");
            }
            return false;
          }
        });
        if (typeof value === "undefined") {
          value = this.raw(node, null, "beforeDecl");
        } else if (value) {
          value = value.replace(/\S/g, "");
        }
        return value;
      }
      rawBeforeDecl(root, node) {
        let value;
        root.walkDecls((i) => {
          if (typeof i.raws.before !== "undefined") {
            value = i.raws.before;
            if (value.includes("\n")) {
              value = value.replace(/[^\n]+$/, "");
            }
            return false;
          }
        });
        if (typeof value === "undefined") {
          value = this.raw(node, null, "beforeRule");
        } else if (value) {
          value = value.replace(/\S/g, "");
        }
        return value;
      }
      rawBeforeOpen(root) {
        let value;
        root.walk((i) => {
          if (i.type !== "decl") {
            value = i.raws.between;
            if (typeof value !== "undefined")
              return false;
          }
        });
        return value;
      }
      rawBeforeRule(root) {
        let value;
        root.walk((i) => {
          if (i.nodes && (i.parent !== root || root.first !== i)) {
            if (typeof i.raws.before !== "undefined") {
              value = i.raws.before;
              if (value.includes("\n")) {
                value = value.replace(/[^\n]+$/, "");
              }
              return false;
            }
          }
        });
        if (value)
          value = value.replace(/\S/g, "");
        return value;
      }
      rawColon(root) {
        let value;
        root.walkDecls((i) => {
          if (typeof i.raws.between !== "undefined") {
            value = i.raws.between.replace(/[^\s:]/g, "");
            return false;
          }
        });
        return value;
      }
      rawEmptyBody(root) {
        let value;
        root.walk((i) => {
          if (i.nodes && i.nodes.length === 0) {
            value = i.raws.after;
            if (typeof value !== "undefined")
              return false;
          }
        });
        return value;
      }
      rawIndent(root) {
        if (root.raws.indent)
          return root.raws.indent;
        let value;
        root.walk((i) => {
          let p = i.parent;
          if (p && p !== root && p.parent && p.parent === root) {
            if (typeof i.raws.before !== "undefined") {
              let parts = i.raws.before.split("\n");
              value = parts[parts.length - 1];
              value = value.replace(/\S/g, "");
              return false;
            }
          }
        });
        return value;
      }
      rawSemicolon(root) {
        let value;
        root.walk((i) => {
          if (i.nodes && i.nodes.length && i.last.type === "decl") {
            value = i.raws.semicolon;
            if (typeof value !== "undefined")
              return false;
          }
        });
        return value;
      }
      rawValue(node, prop) {
        let value = node[prop];
        let raw = node.raws[prop];
        if (raw && raw.value === value) {
          return raw.raw;
        }
        return value;
      }
      root(node) {
        this.body(node);
        if (node.raws.after)
          this.builder(node.raws.after);
      }
      rule(node) {
        this.block(node, this.rawValue(node, "selector"));
        if (node.raws.ownSemicolon) {
          this.builder(node.raws.ownSemicolon, node, "end");
        }
      }
      stringify(node, semicolon) {
        if (!this[node.type]) {
          throw new Error(
            "Unknown AST node type " + node.type + ". Maybe you need to change PostCSS stringifier."
          );
        }
        this[node.type](node, semicolon);
      }
    };
    module2.exports = Stringifier;
    Stringifier.default = Stringifier;
  }
});

// node_modules/postcss/lib/stringify.js
var require_stringify = __commonJS({
  "node_modules/postcss/lib/stringify.js"(exports, module2) {
    "use strict";
    var Stringifier = require_stringifier();
    function stringify(node, builder) {
      let str = new Stringifier(builder);
      str.stringify(node);
    }
    module2.exports = stringify;
    stringify.default = stringify;
  }
});

// node_modules/postcss/lib/node.js
var require_node = __commonJS({
  "node_modules/postcss/lib/node.js"(exports, module2) {
    "use strict";
    var { isClean, my } = require_symbols();
    var CssSyntaxError = require_css_syntax_error();
    var Stringifier = require_stringifier();
    var stringify = require_stringify();
    function cloneNode(obj, parent) {
      let cloned = new obj.constructor();
      for (let i in obj) {
        if (!Object.prototype.hasOwnProperty.call(obj, i)) {
          continue;
        }
        if (i === "proxyCache")
          continue;
        let value = obj[i];
        let type = typeof value;
        if (i === "parent" && type === "object") {
          if (parent)
            cloned[i] = parent;
        } else if (i === "source") {
          cloned[i] = value;
        } else if (Array.isArray(value)) {
          cloned[i] = value.map((j) => cloneNode(j, cloned));
        } else {
          if (type === "object" && value !== null)
            value = cloneNode(value);
          cloned[i] = value;
        }
      }
      return cloned;
    }
    var Node = class {
      constructor(defaults = {}) {
        this.raws = {};
        this[isClean] = false;
        this[my] = true;
        for (let name in defaults) {
          if (name === "nodes") {
            this.nodes = [];
            for (let node of defaults[name]) {
              if (typeof node.clone === "function") {
                this.append(node.clone());
              } else {
                this.append(node);
              }
            }
          } else {
            this[name] = defaults[name];
          }
        }
      }
      addToError(error) {
        error.postcssNode = this;
        if (error.stack && this.source && /\n\s{4}at /.test(error.stack)) {
          let s = this.source;
          error.stack = error.stack.replace(
            /\n\s{4}at /,
            `$&${s.input.from}:${s.start.line}:${s.start.column}$&`
          );
        }
        return error;
      }
      after(add) {
        this.parent.insertAfter(this, add);
        return this;
      }
      assign(overrides = {}) {
        for (let name in overrides) {
          this[name] = overrides[name];
        }
        return this;
      }
      before(add) {
        this.parent.insertBefore(this, add);
        return this;
      }
      cleanRaws(keepBetween) {
        delete this.raws.before;
        delete this.raws.after;
        if (!keepBetween)
          delete this.raws.between;
      }
      clone(overrides = {}) {
        let cloned = cloneNode(this);
        for (let name in overrides) {
          cloned[name] = overrides[name];
        }
        return cloned;
      }
      cloneAfter(overrides = {}) {
        let cloned = this.clone(overrides);
        this.parent.insertAfter(this, cloned);
        return cloned;
      }
      cloneBefore(overrides = {}) {
        let cloned = this.clone(overrides);
        this.parent.insertBefore(this, cloned);
        return cloned;
      }
      error(message, opts = {}) {
        if (this.source) {
          let { end, start } = this.rangeBy(opts);
          return this.source.input.error(
            message,
            { column: start.column, line: start.line },
            { column: end.column, line: end.line },
            opts
          );
        }
        return new CssSyntaxError(message);
      }
      getProxyProcessor() {
        return {
          get(node, prop) {
            if (prop === "proxyOf") {
              return node;
            } else if (prop === "root") {
              return () => node.root().toProxy();
            } else {
              return node[prop];
            }
          },
          set(node, prop, value) {
            if (node[prop] === value)
              return true;
            node[prop] = value;
            if (prop === "prop" || prop === "value" || prop === "name" || prop === "params" || prop === "important" || /* c8 ignore next */
            prop === "text") {
              node.markDirty();
            }
            return true;
          }
        };
      }
      markDirty() {
        if (this[isClean]) {
          this[isClean] = false;
          let next = this;
          while (next = next.parent) {
            next[isClean] = false;
          }
        }
      }
      next() {
        if (!this.parent)
          return void 0;
        let index = this.parent.index(this);
        return this.parent.nodes[index + 1];
      }
      positionBy(opts, stringRepresentation) {
        let pos = this.source.start;
        if (opts.index) {
          pos = this.positionInside(opts.index, stringRepresentation);
        } else if (opts.word) {
          stringRepresentation = this.toString();
          let index = stringRepresentation.indexOf(opts.word);
          if (index !== -1)
            pos = this.positionInside(index, stringRepresentation);
        }
        return pos;
      }
      positionInside(index, stringRepresentation) {
        let string = stringRepresentation || this.toString();
        let column = this.source.start.column;
        let line = this.source.start.line;
        for (let i = 0; i < index; i++) {
          if (string[i] === "\n") {
            column = 1;
            line += 1;
          } else {
            column += 1;
          }
        }
        return { column, line };
      }
      prev() {
        if (!this.parent)
          return void 0;
        let index = this.parent.index(this);
        return this.parent.nodes[index - 1];
      }
      rangeBy(opts) {
        let start = {
          column: this.source.start.column,
          line: this.source.start.line
        };
        let end = this.source.end ? {
          column: this.source.end.column + 1,
          line: this.source.end.line
        } : {
          column: start.column + 1,
          line: start.line
        };
        if (opts.word) {
          let stringRepresentation = this.toString();
          let index = stringRepresentation.indexOf(opts.word);
          if (index !== -1) {
            start = this.positionInside(index, stringRepresentation);
            end = this.positionInside(index + opts.word.length, stringRepresentation);
          }
        } else {
          if (opts.start) {
            start = {
              column: opts.start.column,
              line: opts.start.line
            };
          } else if (opts.index) {
            start = this.positionInside(opts.index);
          }
          if (opts.end) {
            end = {
              column: opts.end.column,
              line: opts.end.line
            };
          } else if (opts.endIndex) {
            end = this.positionInside(opts.endIndex);
          } else if (opts.index) {
            end = this.positionInside(opts.index + 1);
          }
        }
        if (end.line < start.line || end.line === start.line && end.column <= start.column) {
          end = { column: start.column + 1, line: start.line };
        }
        return { end, start };
      }
      raw(prop, defaultType) {
        let str = new Stringifier();
        return str.raw(this, prop, defaultType);
      }
      remove() {
        if (this.parent) {
          this.parent.removeChild(this);
        }
        this.parent = void 0;
        return this;
      }
      replaceWith(...nodes) {
        if (this.parent) {
          let bookmark = this;
          let foundSelf = false;
          for (let node of nodes) {
            if (node === this) {
              foundSelf = true;
            } else if (foundSelf) {
              this.parent.insertAfter(bookmark, node);
              bookmark = node;
            } else {
              this.parent.insertBefore(bookmark, node);
            }
          }
          if (!foundSelf) {
            this.remove();
          }
        }
        return this;
      }
      root() {
        let result = this;
        while (result.parent && result.parent.type !== "document") {
          result = result.parent;
        }
        return result;
      }
      toJSON(_, inputs) {
        let fixed = {};
        let emitInputs = inputs == null;
        inputs = inputs || /* @__PURE__ */ new Map();
        let inputsNextIndex = 0;
        for (let name in this) {
          if (!Object.prototype.hasOwnProperty.call(this, name)) {
            continue;
          }
          if (name === "parent" || name === "proxyCache")
            continue;
          let value = this[name];
          if (Array.isArray(value)) {
            fixed[name] = value.map((i) => {
              if (typeof i === "object" && i.toJSON) {
                return i.toJSON(null, inputs);
              } else {
                return i;
              }
            });
          } else if (typeof value === "object" && value.toJSON) {
            fixed[name] = value.toJSON(null, inputs);
          } else if (name === "source") {
            let inputId = inputs.get(value.input);
            if (inputId == null) {
              inputId = inputsNextIndex;
              inputs.set(value.input, inputsNextIndex);
              inputsNextIndex++;
            }
            fixed[name] = {
              end: value.end,
              inputId,
              start: value.start
            };
          } else {
            fixed[name] = value;
          }
        }
        if (emitInputs) {
          fixed.inputs = [...inputs.keys()].map((input) => input.toJSON());
        }
        return fixed;
      }
      toProxy() {
        if (!this.proxyCache) {
          this.proxyCache = new Proxy(this, this.getProxyProcessor());
        }
        return this.proxyCache;
      }
      toString(stringifier = stringify) {
        if (stringifier.stringify)
          stringifier = stringifier.stringify;
        let result = "";
        stringifier(this, (i) => {
          result += i;
        });
        return result;
      }
      warn(result, text, opts) {
        let data = { node: this };
        for (let i in opts)
          data[i] = opts[i];
        return result.warn(text, data);
      }
      get proxyOf() {
        return this;
      }
    };
    module2.exports = Node;
    Node.default = Node;
  }
});

// node_modules/postcss/lib/declaration.js
var require_declaration = __commonJS({
  "node_modules/postcss/lib/declaration.js"(exports, module2) {
    "use strict";
    var Node = require_node();
    var Declaration = class extends Node {
      constructor(defaults) {
        if (defaults && typeof defaults.value !== "undefined" && typeof defaults.value !== "string") {
          defaults = { ...defaults, value: String(defaults.value) };
        }
        super(defaults);
        this.type = "decl";
      }
      get variable() {
        return this.prop.startsWith("--") || this.prop[0] === "$";
      }
    };
    module2.exports = Declaration;
    Declaration.default = Declaration;
  }
});

// node_modules/source-map-js/lib/base64.js
var require_base64 = __commonJS({
  "node_modules/source-map-js/lib/base64.js"(exports) {
    var intToCharMap = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".split("");
    exports.encode = function(number) {
      if (0 <= number && number < intToCharMap.length) {
        return intToCharMap[number];
      }
      throw new TypeError("Must be between 0 and 63: " + number);
    };
    exports.decode = function(charCode) {
      var bigA = 65;
      var bigZ = 90;
      var littleA = 97;
      var littleZ = 122;
      var zero = 48;
      var nine = 57;
      var plus = 43;
      var slash = 47;
      var littleOffset = 26;
      var numberOffset = 52;
      if (bigA <= charCode && charCode <= bigZ) {
        return charCode - bigA;
      }
      if (littleA <= charCode && charCode <= littleZ) {
        return charCode - littleA + littleOffset;
      }
      if (zero <= charCode && charCode <= nine) {
        return charCode - zero + numberOffset;
      }
      if (charCode == plus) {
        return 62;
      }
      if (charCode == slash) {
        return 63;
      }
      return -1;
    };
  }
});

// node_modules/source-map-js/lib/base64-vlq.js
var require_base64_vlq = __commonJS({
  "node_modules/source-map-js/lib/base64-vlq.js"(exports) {
    var base64 = require_base64();
    var VLQ_BASE_SHIFT = 5;
    var VLQ_BASE = 1 << VLQ_BASE_SHIFT;
    var VLQ_BASE_MASK = VLQ_BASE - 1;
    var VLQ_CONTINUATION_BIT = VLQ_BASE;
    function toVLQSigned(aValue) {
      return aValue < 0 ? (-aValue << 1) + 1 : (aValue << 1) + 0;
    }
    function fromVLQSigned(aValue) {
      var isNegative = (aValue & 1) === 1;
      var shifted = aValue >> 1;
      return isNegative ? -shifted : shifted;
    }
    exports.encode = function base64VLQ_encode(aValue) {
      var encoded = "";
      var digit;
      var vlq = toVLQSigned(aValue);
      do {
        digit = vlq & VLQ_BASE_MASK;
        vlq >>>= VLQ_BASE_SHIFT;
        if (vlq > 0) {
          digit |= VLQ_CONTINUATION_BIT;
        }
        encoded += base64.encode(digit);
      } while (vlq > 0);
      return encoded;
    };
    exports.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {
      var strLen = aStr.length;
      var result = 0;
      var shift = 0;
      var continuation, digit;
      do {
        if (aIndex >= strLen) {
          throw new Error("Expected more digits in base 64 VLQ value.");
        }
        digit = base64.decode(aStr.charCodeAt(aIndex++));
        if (digit === -1) {
          throw new Error("Invalid base64 digit: " + aStr.charAt(aIndex - 1));
        }
        continuation = !!(digit & VLQ_CONTINUATION_BIT);
        digit &= VLQ_BASE_MASK;
        result = result + (digit << shift);
        shift += VLQ_BASE_SHIFT;
      } while (continuation);
      aOutParam.value = fromVLQSigned(result);
      aOutParam.rest = aIndex;
    };
  }
});

// node_modules/source-map-js/lib/util.js
var require_util = __commonJS({
  "node_modules/source-map-js/lib/util.js"(exports) {
    function getArg(aArgs, aName, aDefaultValue) {
      if (aName in aArgs) {
        return aArgs[aName];
      } else if (arguments.length === 3) {
        return aDefaultValue;
      } else {
        throw new Error('"' + aName + '" is a required argument.');
      }
    }
    exports.getArg = getArg;
    var urlRegexp = /^(?:([\w+\-.]+):)?\/\/(?:(\w+:\w+)@)?([\w.-]*)(?::(\d+))?(.*)$/;
    var dataUrlRegexp = /^data:.+\,.+$/;
    function urlParse(aUrl) {
      var match = aUrl.match(urlRegexp);
      if (!match) {
        return null;
      }
      return {
        scheme: match[1],
        auth: match[2],
        host: match[3],
        port: match[4],
        path: match[5]
      };
    }
    exports.urlParse = urlParse;
    function urlGenerate(aParsedUrl) {
      var url = "";
      if (aParsedUrl.scheme) {
        url += aParsedUrl.scheme + ":";
      }
      url += "//";
      if (aParsedUrl.auth) {
        url += aParsedUrl.auth + "@";
      }
      if (aParsedUrl.host) {
        url += aParsedUrl.host;
      }
      if (aParsedUrl.port) {
        url += ":" + aParsedUrl.port;
      }
      if (aParsedUrl.path) {
        url += aParsedUrl.path;
      }
      return url;
    }
    exports.urlGenerate = urlGenerate;
    var MAX_CACHED_INPUTS = 32;
    function lruMemoize(f) {
      var cache = [];
      return function(input) {
        for (var i = 0; i < cache.length; i++) {
          if (cache[i].input === input) {
            var temp = cache[0];
            cache[0] = cache[i];
            cache[i] = temp;
            return cache[0].result;
          }
        }
        var result = f(input);
        cache.unshift({
          input,
          result
        });
        if (cache.length > MAX_CACHED_INPUTS) {
          cache.pop();
        }
        return result;
      };
    }
    var normalize = lruMemoize(function normalize2(aPath) {
      var path = aPath;
      var url = urlParse(aPath);
      if (url) {
        if (!url.path) {
          return aPath;
        }
        path = url.path;
      }
      var isAbsolute = exports.isAbsolute(path);
      var parts = [];
      var start = 0;
      var i = 0;
      while (true) {
        start = i;
        i = path.indexOf("/", start);
        if (i === -1) {
          parts.push(path.slice(start));
          break;
        } else {
          parts.push(path.slice(start, i));
          while (i < path.length && path[i] === "/") {
            i++;
          }
        }
      }
      for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {
        part = parts[i];
        if (part === ".") {
          parts.splice(i, 1);
        } else if (part === "..") {
          up++;
        } else if (up > 0) {
          if (part === "") {
            parts.splice(i + 1, up);
            up = 0;
          } else {
            parts.splice(i, 2);
            up--;
          }
        }
      }
      path = parts.join("/");
      if (path === "") {
        path = isAbsolute ? "/" : ".";
      }
      if (url) {
        url.path = path;
        return urlGenerate(url);
      }
      return path;
    });
    exports.normalize = normalize;
    function join(aRoot, aPath) {
      if (aRoot === "") {
        aRoot = ".";
      }
      if (aPath === "") {
        aPath = ".";
      }
      var aPathUrl = urlParse(aPath);
      var aRootUrl = urlParse(aRoot);
      if (aRootUrl) {
        aRoot = aRootUrl.path || "/";
      }
      if (aPathUrl && !aPathUrl.scheme) {
        if (aRootUrl) {
          aPathUrl.scheme = aRootUrl.scheme;
        }
        return urlGenerate(aPathUrl);
      }
      if (aPathUrl || aPath.match(dataUrlRegexp)) {
        return aPath;
      }
      if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {
        aRootUrl.host = aPath;
        return urlGenerate(aRootUrl);
      }
      var joined = aPath.charAt(0) === "/" ? aPath : normalize(aRoot.replace(/\/+$/, "") + "/" + aPath);
      if (aRootUrl) {
        aRootUrl.path = joined;
        return urlGenerate(aRootUrl);
      }
      return joined;
    }
    exports.join = join;
    exports.isAbsolute = function(aPath) {
      return aPath.charAt(0) === "/" || urlRegexp.test(aPath);
    };
    function relative(aRoot, aPath) {
      if (aRoot === "") {
        aRoot = ".";
      }
      aRoot = aRoot.replace(/\/$/, "");
      var level = 0;
      while (aPath.indexOf(aRoot + "/") !== 0) {
        var index = aRoot.lastIndexOf("/");
        if (index < 0) {
          return aPath;
        }
        aRoot = aRoot.slice(0, index);
        if (aRoot.match(/^([^\/]+:\/)?\/*$/)) {
          return aPath;
        }
        ++level;
      }
      return Array(level + 1).join("../") + aPath.substr(aRoot.length + 1);
    }
    exports.relative = relative;
    var supportsNullProto = function() {
      var obj = /* @__PURE__ */ Object.create(null);
      return !("__proto__" in obj);
    }();
    function identity(s) {
      return s;
    }
    function toSetString(aStr) {
      if (isProtoString(aStr)) {
        return "$" + aStr;
      }
      return aStr;
    }
    exports.toSetString = supportsNullProto ? identity : toSetString;
    function fromSetString(aStr) {
      if (isProtoString(aStr)) {
        return aStr.slice(1);
      }
      return aStr;
    }
    exports.fromSetString = supportsNullProto ? identity : fromSetString;
    function isProtoString(s) {
      if (!s) {
        return false;
      }
      var length = s.length;
      if (length < 9) {
        return false;
      }
      if (s.charCodeAt(length - 1) !== 95 || s.charCodeAt(length - 2) !== 95 || s.charCodeAt(length - 3) !== 111 || s.charCodeAt(length - 4) !== 116 || s.charCodeAt(length - 5) !== 111 || s.charCodeAt(length - 6) !== 114 || s.charCodeAt(length - 7) !== 112 || s.charCodeAt(length - 8) !== 95 || s.charCodeAt(length - 9) !== 95) {
        return false;
      }
      for (var i = length - 10; i >= 0; i--) {
        if (s.charCodeAt(i) !== 36) {
          return false;
        }
      }
      return true;
    }
    function compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {
      var cmp = strcmp(mappingA.source, mappingB.source);
      if (cmp !== 0) {
        return cmp;
      }
      cmp = mappingA.originalLine - mappingB.originalLine;
      if (cmp !== 0) {
        return cmp;
      }
      cmp = mappingA.originalColumn - mappingB.originalColumn;
      if (cmp !== 0 || onlyCompareOriginal) {
        return cmp;
      }
      cmp = mappingA.generatedColumn - mappingB.generatedColumn;
      if (cmp !== 0) {
        return cmp;
      }
      cmp = mappingA.generatedLine - mappingB.generatedLine;
      if (cmp !== 0) {
        return cmp;
      }
      return strcmp(mappingA.name, mappingB.name);
    }
    exports.compareByOriginalPositions = compareByOriginalPositions;
    function compareByOriginalPositionsNoSource(mappingA, mappingB, onlyCompareOriginal) {
      var cmp;
      cmp = mappingA.originalLine - mappingB.originalLine;
      if (cmp !== 0) {
        return cmp;
      }
      cmp = mappingA.originalColumn - mappingB.originalColumn;
      if (cmp !== 0 || onlyCompareOriginal) {
        return cmp;
      }
      cmp = mappingA.generatedColumn - mappingB.generatedColumn;
      if (cmp !== 0) {
        return cmp;
      }
      cmp = mappingA.generatedLine - mappingB.generatedLine;
      if (cmp !== 0) {
        return cmp;
      }
      return strcmp(mappingA.name, mappingB.name);
    }
    exports.compareByOriginalPositionsNoSource = compareByOriginalPositionsNoSource;
    function compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {
      var cmp = mappingA.generatedLine - mappingB.generatedLine;
      if (cmp !== 0) {
        return cmp;
      }
      cmp = mappingA.generatedColumn - mappingB.generatedColumn;
      if (cmp !== 0 || onlyCompareGenerated) {
        return cmp;
      }
      cmp = strcmp(mappingA.source, mappingB.source);
      if (cmp !== 0) {
        return cmp;
      }
      cmp = mappingA.originalLine - mappingB.originalLine;
      if (cmp !== 0) {
        return cmp;
      }
      cmp = mappingA.originalColumn - mappingB.originalColumn;
      if (cmp !== 0) {
        return cmp;
      }
      return strcmp(mappingA.name, mappingB.name);
    }
    exports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;
    function compareByGeneratedPositionsDeflatedNoLine(mappingA, mappingB, onlyCompareGenerated) {
      var cmp = mappingA.generatedColumn - mappingB.generatedColumn;
      if (cmp !== 0 || onlyCompareGenerated) {
        return cmp;
      }
      cmp = strcmp(mappingA.source, mappingB.source);
      if (cmp !== 0) {
        return cmp;
      }
      cmp = mappingA.originalLine - mappingB.originalLine;
      if (cmp !== 0) {
        return cmp;
      }
      cmp = mappingA.originalColumn - mappingB.originalColumn;
      if (cmp !== 0) {
        return cmp;
      }
      return strcmp(mappingA.name, mappingB.name);
    }
    exports.compareByGeneratedPositionsDeflatedNoLine = compareByGeneratedPositionsDeflatedNoLine;
    function strcmp(aStr1, aStr2) {
      if (aStr1 === aStr2) {
        return 0;
      }
      if (aStr1 === null) {
        return 1;
      }
      if (aStr2 === null) {
        return -1;
      }
      if (aStr1 > aStr2) {
        return 1;
      }
      return -1;
    }
    function compareByGeneratedPositionsInflated(mappingA, mappingB) {
      var cmp = mappingA.generatedLine - mappingB.generatedLine;
      if (cmp !== 0) {
        return cmp;
      }
      cmp = mappingA.generatedColumn - mappingB.generatedColumn;
      if (cmp !== 0) {
        return cmp;
      }
      cmp = strcmp(mappingA.source, mappingB.source);
      if (cmp !== 0) {
        return cmp;
      }
      cmp = mappingA.originalLine - mappingB.originalLine;
      if (cmp !== 0) {
        return cmp;
      }
      cmp = mappingA.originalColumn - mappingB.originalColumn;
      if (cmp !== 0) {
        return cmp;
      }
      return strcmp(mappingA.name, mappingB.name);
    }
    exports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;
    function parseSourceMapInput(str) {
      return JSON.parse(str.replace(/^\)]}'[^\n]*\n/, ""));
    }
    exports.parseSourceMapInput = parseSourceMapInput;
    function computeSourceURL(sourceRoot, sourceURL, sourceMapURL) {
      sourceURL = sourceURL || "";
      if (sourceRoot) {
        if (sourceRoot[sourceRoot.length - 1] !== "/" && sourceURL[0] !== "/") {
          sourceRoot += "/";
        }
        sourceURL = sourceRoot + sourceURL;
      }
      if (sourceMapURL) {
        var parsed = urlParse(sourceMapURL);
        if (!parsed) {
          throw new Error("sourceMapURL could not be parsed");
        }
        if (parsed.path) {
          var index = parsed.path.lastIndexOf("/");
          if (index >= 0) {
            parsed.path = parsed.path.substring(0, index + 1);
          }
        }
        sourceURL = join(urlGenerate(parsed), sourceURL);
      }
      return normalize(sourceURL);
    }
    exports.computeSourceURL = computeSourceURL;
  }
});

// node_modules/source-map-js/lib/array-set.js
var require_array_set = __commonJS({
  "node_modules/source-map-js/lib/array-set.js"(exports) {
    var util = require_util();
    var has = Object.prototype.hasOwnProperty;
    var hasNativeMap = typeof Map !== "undefined";
    function ArraySet() {
      this._array = [];
      this._set = hasNativeMap ? /* @__PURE__ */ new Map() : /* @__PURE__ */ Object.create(null);
    }
    ArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {
      var set = new ArraySet();
      for (var i = 0, len = aArray.length; i < len; i++) {
        set.add(aArray[i], aAllowDuplicates);
      }
      return set;
    };
    ArraySet.prototype.size = function ArraySet_size() {
      return hasNativeMap ? this._set.size : Object.getOwnPropertyNames(this._set).length;
    };
    ArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {
      var sStr = hasNativeMap ? aStr : util.toSetString(aStr);
      var isDuplicate = hasNativeMap ? this.has(aStr) : has.call(this._set, sStr);
      var idx = this._array.length;
      if (!isDuplicate || aAllowDuplicates) {
        this._array.push(aStr);
      }
      if (!isDuplicate) {
        if (hasNativeMap) {
          this._set.set(aStr, idx);
        } else {
          this._set[sStr] = idx;
        }
      }
    };
    ArraySet.prototype.has = function ArraySet_has(aStr) {
      if (hasNativeMap) {
        return this._set.has(aStr);
      } else {
        var sStr = util.toSetString(aStr);
        return has.call(this._set, sStr);
      }
    };
    ArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {
      if (hasNativeMap) {
        var idx = this._set.get(aStr);
        if (idx >= 0) {
          return idx;
        }
      } else {
        var sStr = util.toSetString(aStr);
        if (has.call(this._set, sStr)) {
          return this._set[sStr];
        }
      }
      throw new Error('"' + aStr + '" is not in the set.');
    };
    ArraySet.prototype.at = function ArraySet_at(aIdx) {
      if (aIdx >= 0 && aIdx < this._array.length) {
        return this._array[aIdx];
      }
      throw new Error("No element indexed by " + aIdx);
    };
    ArraySet.prototype.toArray = function ArraySet_toArray() {
      return this._array.slice();
    };
    exports.ArraySet = ArraySet;
  }
});

// node_modules/source-map-js/lib/mapping-list.js
var require_mapping_list = __commonJS({
  "node_modules/source-map-js/lib/mapping-list.js"(exports) {
    var util = require_util();
    function generatedPositionAfter(mappingA, mappingB) {
      var lineA = mappingA.generatedLine;
      var lineB = mappingB.generatedLine;
      var columnA = mappingA.generatedColumn;
      var columnB = mappingB.generatedColumn;
      return lineB > lineA || lineB == lineA && columnB >= columnA || util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;
    }
    function MappingList() {
      this._array = [];
      this._sorted = true;
      this._last = { generatedLine: -1, generatedColumn: 0 };
    }
    MappingList.prototype.unsortedForEach = function MappingList_forEach(aCallback, aThisArg) {
      this._array.forEach(aCallback, aThisArg);
    };
    MappingList.prototype.add = function MappingList_add(aMapping) {
      if (generatedPositionAfter(this._last, aMapping)) {
        this._last = aMapping;
        this._array.push(aMapping);
      } else {
        this._sorted = false;
        this._array.push(aMapping);
      }
    };
    MappingList.prototype.toArray = function MappingList_toArray() {
      if (!this._sorted) {
        this._array.sort(util.compareByGeneratedPositionsInflated);
        this._sorted = true;
      }
      return this._array;
    };
    exports.MappingList = MappingList;
  }
});

// node_modules/source-map-js/lib/source-map-generator.js
var require_source_map_generator = __commonJS({
  "node_modules/source-map-js/lib/source-map-generator.js"(exports) {
    var base64VLQ = require_base64_vlq();
    var util = require_util();
    var ArraySet = require_array_set().ArraySet;
    var MappingList = require_mapping_list().MappingList;
    function SourceMapGenerator(aArgs) {
      if (!aArgs) {
        aArgs = {};
      }
      this._file = util.getArg(aArgs, "file", null);
      this._sourceRoot = util.getArg(aArgs, "sourceRoot", null);
      this._skipValidation = util.getArg(aArgs, "skipValidation", false);
      this._sources = new ArraySet();
      this._names = new ArraySet();
      this._mappings = new MappingList();
      this._sourcesContents = null;
    }
    SourceMapGenerator.prototype._version = 3;
    SourceMapGenerator.fromSourceMap = function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {
      var sourceRoot = aSourceMapConsumer.sourceRoot;
      var generator = new SourceMapGenerator({
        file: aSourceMapConsumer.file,
        sourceRoot
      });
      aSourceMapConsumer.eachMapping(function(mapping) {
        var newMapping = {
          generated: {
            line: mapping.generatedLine,
            column: mapping.generatedColumn
          }
        };
        if (mapping.source != null) {
          newMapping.source = mapping.source;
          if (sourceRoot != null) {
            newMapping.source = util.relative(sourceRoot, newMapping.source);
          }
          newMapping.original = {
            line: mapping.originalLine,
            column: mapping.originalColumn
          };
          if (mapping.name != null) {
            newMapping.name = mapping.name;
          }
        }
        generator.addMapping(newMapping);
      });
      aSourceMapConsumer.sources.forEach(function(sourceFile) {
        var sourceRelative = sourceFile;
        if (sourceRoot !== null) {
          sourceRelative = util.relative(sourceRoot, sourceFile);
        }
        if (!generator._sources.has(sourceRelative)) {
          generator._sources.add(sourceRelative);
        }
        var content = aSourceMapConsumer.sourceContentFor(sourceFile);
        if (content != null) {
          generator.setSourceContent(sourceFile, content);
        }
      });
      return generator;
    };
    SourceMapGenerator.prototype.addMapping = function SourceMapGenerator_addMapping(aArgs) {
      var generated = util.getArg(aArgs, "generated");
      var original = util.getArg(aArgs, "original", null);
      var source = util.getArg(aArgs, "source", null);
      var name = util.getArg(aArgs, "name", null);
      if (!this._skipValidation) {
        this._validateMapping(generated, original, source, name);
      }
      if (source != null) {
        source = String(source);
        if (!this._sources.has(source)) {
          this._sources.add(source);
        }
      }
      if (name != null) {
        name = String(name);
        if (!this._names.has(name)) {
          this._names.add(name);
        }
      }
      this._mappings.add({
        generatedLine: generated.line,
        generatedColumn: generated.column,
        originalLine: original != null && original.line,
        originalColumn: original != null && original.column,
        source,
        name
      });
    };
    SourceMapGenerator.prototype.setSourceContent = function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {
      var source = aSourceFile;
      if (this._sourceRoot != null) {
        source = util.relative(this._sourceRoot, source);
      }
      if (aSourceContent != null) {
        if (!this._sourcesContents) {
          this._sourcesContents = /* @__PURE__ */ Object.create(null);
        }
        this._sourcesContents[util.toSetString(source)] = aSourceContent;
      } else if (this._sourcesContents) {
        delete this._sourcesContents[util.toSetString(source)];
        if (Object.keys(this._sourcesContents).length === 0) {
          this._sourcesContents = null;
        }
      }
    };
    SourceMapGenerator.prototype.applySourceMap = function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {
      var sourceFile = aSourceFile;
      if (aSourceFile == null) {
        if (aSourceMapConsumer.file == null) {
          throw new Error(
            `SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, or the source map's "file" property. Both were omitted.`
          );
        }
        sourceFile = aSourceMapConsumer.file;
      }
      var sourceRoot = this._sourceRoot;
      if (sourceRoot != null) {
        sourceFile = util.relative(sourceRoot, sourceFile);
      }
      var newSources = new ArraySet();
      var newNames = new ArraySet();
      this._mappings.unsortedForEach(function(mapping) {
        if (mapping.source === sourceFile && mapping.originalLine != null) {
          var original = aSourceMapConsumer.originalPositionFor({
            line: mapping.originalLine,
            column: mapping.originalColumn
          });
          if (original.source != null) {
            mapping.source = original.source;
            if (aSourceMapPath != null) {
              mapping.source = util.join(aSourceMapPath, mapping.source);
            }
            if (sourceRoot != null) {
              mapping.source = util.relative(sourceRoot, mapping.source);
            }
            mapping.originalLine = original.line;
            mapping.originalColumn = original.column;
            if (original.name != null) {
              mapping.name = original.name;
            }
          }
        }
        var source = mapping.source;
        if (source != null && !newSources.has(source)) {
          newSources.add(source);
        }
        var name = mapping.name;
        if (name != null && !newNames.has(name)) {
          newNames.add(name);
        }
      }, this);
      this._sources = newSources;
      this._names = newNames;
      aSourceMapConsumer.sources.forEach(function(sourceFile2) {
        var content = aSourceMapConsumer.sourceContentFor(sourceFile2);
        if (content != null) {
          if (aSourceMapPath != null) {
            sourceFile2 = util.join(aSourceMapPath, sourceFile2);
          }
          if (sourceRoot != null) {
            sourceFile2 = util.relative(sourceRoot, sourceFile2);
          }
          this.setSourceContent(sourceFile2, content);
        }
      }, this);
    };
    SourceMapGenerator.prototype._validateMapping = function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource, aName) {
      if (aOriginal && typeof aOriginal.line !== "number" && typeof aOriginal.column !== "number") {
        throw new Error(
          "original.line and original.column are not numbers -- you probably meant to omit the original mapping entirely and only map the generated position. If so, pass null for the original mapping instead of an object with empty or null values."
        );
      }
      if (aGenerated && "line" in aGenerated && "column" in aGenerated && aGenerated.line > 0 && aGenerated.column >= 0 && !aOriginal && !aSource && !aName) {
        return;
      } else if (aGenerated && "line" in aGenerated && "column" in aGenerated && aOriginal && "line" in aOriginal && "column" in aOriginal && aGenerated.line > 0 && aGenerated.column >= 0 && aOriginal.line > 0 && aOriginal.column >= 0 && aSource) {
        return;
      } else {
        throw new Error("Invalid mapping: " + JSON.stringify({
          generated: aGenerated,
          source: aSource,
          original: aOriginal,
          name: aName
        }));
      }
    };
    SourceMapGenerator.prototype._serializeMappings = function SourceMapGenerator_serializeMappings() {
      var previousGeneratedColumn = 0;
      var previousGeneratedLine = 1;
      var previousOriginalColumn = 0;
      var previousOriginalLine = 0;
      var previousName = 0;
      var previousSource = 0;
      var result = "";
      var next;
      var mapping;
      var nameIdx;
      var sourceIdx;
      var mappings = this._mappings.toArray();
      for (var i = 0, len = mappings.length; i < len; i++) {
        mapping = mappings[i];
        next = "";
        if (mapping.generatedLine !== previousGeneratedLine) {
          previousGeneratedColumn = 0;
          while (mapping.generatedLine !== previousGeneratedLine) {
            next += ";";
            previousGeneratedLine++;
          }
        } else {
          if (i > 0) {
            if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {
              continue;
            }
            next += ",";
          }
        }
        next += base64VLQ.encode(mapping.generatedColumn - previousGeneratedColumn);
        previousGeneratedColumn = mapping.generatedColumn;
        if (mapping.source != null) {
          sourceIdx = this._sources.indexOf(mapping.source);
          next += base64VLQ.encode(sourceIdx - previousSource);
          previousSource = sourceIdx;
          next += base64VLQ.encode(mapping.originalLine - 1 - previousOriginalLine);
          previousOriginalLine = mapping.originalLine - 1;
          next += base64VLQ.encode(mapping.originalColumn - previousOriginalColumn);
          previousOriginalColumn = mapping.originalColumn;
          if (mapping.name != null) {
            nameIdx = this._names.indexOf(mapping.name);
            next += base64VLQ.encode(nameIdx - previousName);
            previousName = nameIdx;
          }
        }
        result += next;
      }
      return result;
    };
    SourceMapGenerator.prototype._generateSourcesContent = function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {
      return aSources.map(function(source) {
        if (!this._sourcesContents) {
          return null;
        }
        if (aSourceRoot != null) {
          source = util.relative(aSourceRoot, source);
        }
        var key = util.toSetString(source);
        return Object.prototype.hasOwnProperty.call(this._sourcesContents, key) ? this._sourcesContents[key] : null;
      }, this);
    };
    SourceMapGenerator.prototype.toJSON = function SourceMapGenerator_toJSON() {
      var map = {
        version: this._version,
        sources: this._sources.toArray(),
        names: this._names.toArray(),
        mappings: this._serializeMappings()
      };
      if (this._file != null) {
        map.file = this._file;
      }
      if (this._sourceRoot != null) {
        map.sourceRoot = this._sourceRoot;
      }
      if (this._sourcesContents) {
        map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);
      }
      return map;
    };
    SourceMapGenerator.prototype.toString = function SourceMapGenerator_toString() {
      return JSON.stringify(this.toJSON());
    };
    exports.SourceMapGenerator = SourceMapGenerator;
  }
});

// node_modules/source-map-js/lib/binary-search.js
var require_binary_search = __commonJS({
  "node_modules/source-map-js/lib/binary-search.js"(exports) {
    exports.GREATEST_LOWER_BOUND = 1;
    exports.LEAST_UPPER_BOUND = 2;
    function recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {
      var mid = Math.floor((aHigh - aLow) / 2) + aLow;
      var cmp = aCompare(aNeedle, aHaystack[mid], true);
      if (cmp === 0) {
        return mid;
      } else if (cmp > 0) {
        if (aHigh - mid > 1) {
          return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);
        }
        if (aBias == exports.LEAST_UPPER_BOUND) {
          return aHigh < aHaystack.length ? aHigh : -1;
        } else {
          return mid;
        }
      } else {
        if (mid - aLow > 1) {
          return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);
        }
        if (aBias == exports.LEAST_UPPER_BOUND) {
          return mid;
        } else {
          return aLow < 0 ? -1 : aLow;
        }
      }
    }
    exports.search = function search(aNeedle, aHaystack, aCompare, aBias) {
      if (aHaystack.length === 0) {
        return -1;
      }
      var index = recursiveSearch(
        -1,
        aHaystack.length,
        aNeedle,
        aHaystack,
        aCompare,
        aBias || exports.GREATEST_LOWER_BOUND
      );
      if (index < 0) {
        return -1;
      }
      while (index - 1 >= 0) {
        if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {
          break;
        }
        --index;
      }
      return index;
    };
  }
});

// node_modules/source-map-js/lib/quick-sort.js
var require_quick_sort = __commonJS({
  "node_modules/source-map-js/lib/quick-sort.js"(exports) {
    function SortTemplate(comparator) {
      function swap(ary, x, y) {
        var temp = ary[x];
        ary[x] = ary[y];
        ary[y] = temp;
      }
      function randomIntInRange(low, high) {
        return Math.round(low + Math.random() * (high - low));
      }
      function doQuickSort(ary, comparator2, p, r) {
        if (p < r) {
          var pivotIndex = randomIntInRange(p, r);
          var i = p - 1;
          swap(ary, pivotIndex, r);
          var pivot = ary[r];
          for (var j = p; j < r; j++) {
            if (comparator2(ary[j], pivot, false) <= 0) {
              i += 1;
              swap(ary, i, j);
            }
          }
          swap(ary, i + 1, j);
          var q = i + 1;
          doQuickSort(ary, comparator2, p, q - 1);
          doQuickSort(ary, comparator2, q + 1, r);
        }
      }
      return doQuickSort;
    }
    function cloneSort(comparator) {
      let template = SortTemplate.toString();
      let templateFn = new Function(`return ${template}`)();
      return templateFn(comparator);
    }
    var sortCache = /* @__PURE__ */ new WeakMap();
    exports.quickSort = function(ary, comparator, start = 0) {
      let doQuickSort = sortCache.get(comparator);
      if (doQuickSort === void 0) {
        doQuickSort = cloneSort(comparator);
        sortCache.set(comparator, doQuickSort);
      }
      doQuickSort(ary, comparator, start, ary.length - 1);
    };
  }
});

// node_modules/source-map-js/lib/source-map-consumer.js
var require_source_map_consumer = __commonJS({
  "node_modules/source-map-js/lib/source-map-consumer.js"(exports) {
    var util = require_util();
    var binarySearch = require_binary_search();
    var ArraySet = require_array_set().ArraySet;
    var base64VLQ = require_base64_vlq();
    var quickSort = require_quick_sort().quickSort;
    function SourceMapConsumer(aSourceMap, aSourceMapURL) {
      var sourceMap = aSourceMap;
      if (typeof aSourceMap === "string") {
        sourceMap = util.parseSourceMapInput(aSourceMap);
      }
      return sourceMap.sections != null ? new IndexedSourceMapConsumer(sourceMap, aSourceMapURL) : new BasicSourceMapConsumer(sourceMap, aSourceMapURL);
    }
    SourceMapConsumer.fromSourceMap = function(aSourceMap, aSourceMapURL) {
      return BasicSourceMapConsumer.fromSourceMap(aSourceMap, aSourceMapURL);
    };
    SourceMapConsumer.prototype._version = 3;
    SourceMapConsumer.prototype.__generatedMappings = null;
    Object.defineProperty(SourceMapConsumer.prototype, "_generatedMappings", {
      configurable: true,
      enumerable: true,
      get: function() {
        if (!this.__generatedMappings) {
          this._parseMappings(this._mappings, this.sourceRoot);
        }
        return this.__generatedMappings;
      }
    });
    SourceMapConsumer.prototype.__originalMappings = null;
    Object.defineProperty(SourceMapConsumer.prototype, "_originalMappings", {
      configurable: true,
      enumerable: true,
      get: function() {
        if (!this.__originalMappings) {
          this._parseMappings(this._mappings, this.sourceRoot);
        }
        return this.__originalMappings;
      }
    });
    SourceMapConsumer.prototype._charIsMappingSeparator = function SourceMapConsumer_charIsMappingSeparator(aStr, index) {
      var c = aStr.charAt(index);
      return c === ";" || c === ",";
    };
    SourceMapConsumer.prototype._parseMappings = function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {
      throw new Error("Subclasses must implement _parseMappings");
    };
    SourceMapConsumer.GENERATED_ORDER = 1;
    SourceMapConsumer.ORIGINAL_ORDER = 2;
    SourceMapConsumer.GREATEST_LOWER_BOUND = 1;
    SourceMapConsumer.LEAST_UPPER_BOUND = 2;
    SourceMapConsumer.prototype.eachMapping = function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {
      var context = aContext || null;
      var order = aOrder || SourceMapConsumer.GENERATED_ORDER;
      var mappings;
      switch (order) {
        case SourceMapConsumer.GENERATED_ORDER:
          mappings = this._generatedMappings;
          break;
        case SourceMapConsumer.ORIGINAL_ORDER:
          mappings = this._originalMappings;
          break;
        default:
          throw new Error("Unknown order of iteration.");
      }
      var sourceRoot = this.sourceRoot;
      var boundCallback = aCallback.bind(context);
      var names = this._names;
      var sources = this._sources;
      var sourceMapURL = this._sourceMapURL;
      for (var i = 0, n = mappings.length; i < n; i++) {
        var mapping = mappings[i];
        var source = mapping.source === null ? null : sources.at(mapping.source);
        source = util.computeSourceURL(sourceRoot, source, sourceMapURL);
        boundCallback({
          source,
          generatedLine: mapping.generatedLine,
          generatedColumn: mapping.generatedColumn,
          originalLine: mapping.originalLine,
          originalColumn: mapping.originalColumn,
          name: mapping.name === null ? null : names.at(mapping.name)
        });
      }
    };
    SourceMapConsumer.prototype.allGeneratedPositionsFor = function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {
      var line = util.getArg(aArgs, "line");
      var needle = {
        source: util.getArg(aArgs, "source"),
        originalLine: line,
        originalColumn: util.getArg(aArgs, "column", 0)
      };
      needle.source = this._findSourceIndex(needle.source);
      if (needle.source < 0) {
        return [];
      }
      var mappings = [];
      var index = this._findMapping(
        needle,
        this._originalMappings,
        "originalLine",
        "originalColumn",
        util.compareByOriginalPositions,
        binarySearch.LEAST_UPPER_BOUND
      );
      if (index >= 0) {
        var mapping = this._originalMappings[index];
        if (aArgs.column === void 0) {
          var originalLine = mapping.originalLine;
          while (mapping && mapping.originalLine === originalLine) {
            mappings.push({
              line: util.getArg(mapping, "generatedLine", null),
              column: util.getArg(mapping, "generatedColumn", null),
              lastColumn: util.getArg(mapping, "lastGeneratedColumn", null)
            });
            mapping = this._originalMappings[++index];
          }
        } else {
          var originalColumn = mapping.originalColumn;
          while (mapping && mapping.originalLine === line && mapping.originalColumn == originalColumn) {
            mappings.push({
              line: util.getArg(mapping, "generatedLine", null),
              column: util.getArg(mapping, "generatedColumn", null),
              lastColumn: util.getArg(mapping, "lastGeneratedColumn", null)
            });
            mapping = this._originalMappings[++index];
          }
        }
      }
      return mappings;
    };
    exports.SourceMapConsumer = SourceMapConsumer;
    function BasicSourceMapConsumer(aSourceMap, aSourceMapURL) {
      var sourceMap = aSourceMap;
      if (typeof aSourceMap === "string") {
        sourceMap = util.parseSourceMapInput(aSourceMap);
      }
      var version = util.getArg(sourceMap, "version");
      var sources = util.getArg(sourceMap, "sources");
      var names = util.getArg(sourceMap, "names", []);
      var sourceRoot = util.getArg(sourceMap, "sourceRoot", null);
      var sourcesContent = util.getArg(sourceMap, "sourcesContent", null);
      var mappings = util.getArg(sourceMap, "mappings");
      var file = util.getArg(sourceMap, "file", null);
      if (version != this._version) {
        throw new Error("Unsupported version: " + version);
      }
      if (sourceRoot) {
        sourceRoot = util.normalize(sourceRoot);
      }
      sources = sources.map(String).map(util.normalize).map(function(source) {
        return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source) ? util.relative(sourceRoot, source) : source;
      });
      this._names = ArraySet.fromArray(names.map(String), true);
      this._sources = ArraySet.fromArray(sources, true);
      this._absoluteSources = this._sources.toArray().map(function(s) {
        return util.computeSourceURL(sourceRoot, s, aSourceMapURL);
      });
      this.sourceRoot = sourceRoot;
      this.sourcesContent = sourcesContent;
      this._mappings = mappings;
      this._sourceMapURL = aSourceMapURL;
      this.file = file;
    }
    BasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);
    BasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;
    BasicSourceMapConsumer.prototype._findSourceIndex = function(aSource) {
      var relativeSource = aSource;
      if (this.sourceRoot != null) {
        relativeSource = util.relative(this.sourceRoot, relativeSource);
      }
      if (this._sources.has(relativeSource)) {
        return this._sources.indexOf(relativeSource);
      }
      var i;
      for (i = 0; i < this._absoluteSources.length; ++i) {
        if (this._absoluteSources[i] == aSource) {
          return i;
        }
      }
      return -1;
    };
    BasicSourceMapConsumer.fromSourceMap = function SourceMapConsumer_fromSourceMap(aSourceMap, aSourceMapURL) {
      var smc = Object.create(BasicSourceMapConsumer.prototype);
      var names = smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);
      var sources = smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);
      smc.sourceRoot = aSourceMap._sourceRoot;
      smc.sourcesContent = aSourceMap._generateSourcesContent(
        smc._sources.toArray(),
        smc.sourceRoot
      );
      smc.file = aSourceMap._file;
      smc._sourceMapURL = aSourceMapURL;
      smc._absoluteSources = smc._sources.toArray().map(function(s) {
        return util.computeSourceURL(smc.sourceRoot, s, aSourceMapURL);
      });
      var generatedMappings = aSourceMap._mappings.toArray().slice();
      var destGeneratedMappings = smc.__generatedMappings = [];
      var destOriginalMappings = smc.__originalMappings = [];
      for (var i = 0, length = generatedMappings.length; i < length; i++) {
        var srcMapping = generatedMappings[i];
        var destMapping = new Mapping();
        destMapping.generatedLine = srcMapping.generatedLine;
        destMapping.generatedColumn = srcMapping.generatedColumn;
        if (srcMapping.source) {
          destMapping.source = sources.indexOf(srcMapping.source);
          destMapping.originalLine = srcMapping.originalLine;
          destMapping.originalColumn = srcMapping.originalColumn;
          if (srcMapping.name) {
            destMapping.name = names.indexOf(srcMapping.name);
          }
          destOriginalMappings.push(destMapping);
        }
        destGeneratedMappings.push(destMapping);
      }
      quickSort(smc.__originalMappings, util.compareByOriginalPositions);
      return smc;
    };
    BasicSourceMapConsumer.prototype._version = 3;
    Object.defineProperty(BasicSourceMapConsumer.prototype, "sources", {
      get: function() {
        return this._absoluteSources.slice();
      }
    });
    function Mapping() {
      this.generatedLine = 0;
      this.generatedColumn = 0;
      this.source = null;
      this.originalLine = null;
      this.originalColumn = null;
      this.name = null;
    }
    var compareGenerated = util.compareByGeneratedPositionsDeflatedNoLine;
    function sortGenerated(array, start) {
      let l = array.length;
      let n = array.length - start;
      if (n <= 1) {
        return;
      } else if (n == 2) {
        let a = array[start];
        let b = array[start + 1];
        if (compareGenerated(a, b) > 0) {
          array[start] = b;
          array[start + 1] = a;
        }
      } else if (n < 20) {
        for (let i = start; i < l; i++) {
          for (let j = i; j > start; j--) {
            let a = array[j - 1];
            let b = array[j];
            if (compareGenerated(a, b) <= 0) {
              break;
            }
            array[j - 1] = b;
            array[j] = a;
          }
        }
      } else {
        quickSort(array, compareGenerated, start);
      }
    }
    BasicSourceMapConsumer.prototype._parseMappings = function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {
      var generatedLine = 1;
      var previousGeneratedColumn = 0;
      var previousOriginalLine = 0;
      var previousOriginalColumn = 0;
      var previousSource = 0;
      var previousName = 0;
      var length = aStr.length;
      var index = 0;
      var cachedSegments = {};
      var temp = {};
      var originalMappings = [];
      var generatedMappings = [];
      var mapping, str, segment, end, value;
      let subarrayStart = 0;
      while (index < length) {
        if (aStr.charAt(index) === ";") {
          generatedLine++;
          index++;
          previousGeneratedColumn = 0;
          sortGenerated(generatedMappings, subarrayStart);
          subarrayStart = generatedMappings.length;
        } else if (aStr.charAt(index) === ",") {
          index++;
        } else {
          mapping = new Mapping();
          mapping.generatedLine = generatedLine;
          for (end = index; end < length; end++) {
            if (this._charIsMappingSeparator(aStr, end)) {
              break;
            }
          }
          str = aStr.slice(index, end);
          segment = [];
          while (index < end) {
            base64VLQ.decode(aStr, index, temp);
            value = temp.value;
            index = temp.rest;
            segment.push(value);
          }
          if (segment.length === 2) {
            throw new Error("Found a source, but no line and column");
          }
          if (segment.length === 3) {
            throw new Error("Found a source and line, but no column");
          }
          mapping.generatedColumn = previousGeneratedColumn + segment[0];
          previousGeneratedColumn = mapping.generatedColumn;
          if (segment.length > 1) {
            mapping.source = previousSource + segment[1];
            previousSource += segment[1];
            mapping.originalLine = previousOriginalLine + segment[2];
            previousOriginalLine = mapping.originalLine;
            mapping.originalLine += 1;
            mapping.originalColumn = previousOriginalColumn + segment[3];
            previousOriginalColumn = mapping.originalColumn;
            if (segment.length > 4) {
              mapping.name = previousName + segment[4];
              previousName += segment[4];
            }
          }
          generatedMappings.push(mapping);
          if (typeof mapping.originalLine === "number") {
            let currentSource = mapping.source;
            while (originalMappings.length <= currentSource) {
              originalMappings.push(null);
            }
            if (originalMappings[currentSource] === null) {
              originalMappings[currentSource] = [];
            }
            originalMappings[currentSource].push(mapping);
          }
        }
      }
      sortGenerated(generatedMappings, subarrayStart);
      this.__generatedMappings = generatedMappings;
      for (var i = 0; i < originalMappings.length; i++) {
        if (originalMappings[i] != null) {
          quickSort(originalMappings[i], util.compareByOriginalPositionsNoSource);
        }
      }
      this.__originalMappings = [].concat(...originalMappings);
    };
    BasicSourceMapConsumer.prototype._findMapping = function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName, aColumnName, aComparator, aBias) {
      if (aNeedle[aLineName] <= 0) {
        throw new TypeError("Line must be greater than or equal to 1, got " + aNeedle[aLineName]);
      }
      if (aNeedle[aColumnName] < 0) {
        throw new TypeError("Column must be greater than or equal to 0, got " + aNeedle[aColumnName]);
      }
      return binarySearch.search(aNeedle, aMappings, aComparator, aBias);
    };
    BasicSourceMapConsumer.prototype.computeColumnSpans = function SourceMapConsumer_computeColumnSpans() {
      for (var index = 0; index < this._generatedMappings.length; ++index) {
        var mapping = this._generatedMappings[index];
        if (index + 1 < this._generatedMappings.length) {
          var nextMapping = this._generatedMappings[index + 1];
          if (mapping.generatedLine === nextMapping.generatedLine) {
            mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;
            continue;
          }
        }
        mapping.lastGeneratedColumn = Infinity;
      }
    };
    BasicSourceMapConsumer.prototype.originalPositionFor = function SourceMapConsumer_originalPositionFor(aArgs) {
      var needle = {
        generatedLine: util.getArg(aArgs, "line"),
        generatedColumn: util.getArg(aArgs, "column")
      };
      var index = this._findMapping(
        needle,
        this._generatedMappings,
        "generatedLine",
        "generatedColumn",
        util.compareByGeneratedPositionsDeflated,
        util.getArg(aArgs, "bias", SourceMapConsumer.GREATEST_LOWER_BOUND)
      );
      if (index >= 0) {
        var mapping = this._generatedMappings[index];
        if (mapping.generatedLine === needle.generatedLine) {
          var source = util.getArg(mapping, "source", null);
          if (source !== null) {
            source = this._sources.at(source);
            source = util.computeSourceURL(this.sourceRoot, source, this._sourceMapURL);
          }
          var name = util.getArg(mapping, "name", null);
          if (name !== null) {
            name = this._names.at(name);
          }
          return {
            source,
            line: util.getArg(mapping, "originalLine", null),
            column: util.getArg(mapping, "originalColumn", null),
            name
          };
        }
      }
      return {
        source: null,
        line: null,
        column: null,
        name: null
      };
    };
    BasicSourceMapConsumer.prototype.hasContentsOfAllSources = function BasicSourceMapConsumer_hasContentsOfAllSources() {
      if (!this.sourcesContent) {
        return false;
      }
      return this.sourcesContent.length >= this._sources.size() && !this.sourcesContent.some(function(sc) {
        return sc == null;
      });
    };
    BasicSourceMapConsumer.prototype.sourceContentFor = function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {
      if (!this.sourcesContent) {
        return null;
      }
      var index = this._findSourceIndex(aSource);
      if (index >= 0) {
        return this.sourcesContent[index];
      }
      var relativeSource = aSource;
      if (this.sourceRoot != null) {
        relativeSource = util.relative(this.sourceRoot, relativeSource);
      }
      var url;
      if (this.sourceRoot != null && (url = util.urlParse(this.sourceRoot))) {
        var fileUriAbsPath = relativeSource.replace(/^file:\/\//, "");
        if (url.scheme == "file" && this._sources.has(fileUriAbsPath)) {
          return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)];
        }
        if ((!url.path || url.path == "/") && this._sources.has("/" + relativeSource)) {
          return this.sourcesContent[this._sources.indexOf("/" + relativeSource)];
        }
      }
      if (nullOnMissing) {
        return null;
      } else {
        throw new Error('"' + relativeSource + '" is not in the SourceMap.');
      }
    };
    BasicSourceMapConsumer.prototype.generatedPositionFor = function SourceMapConsumer_generatedPositionFor(aArgs) {
      var source = util.getArg(aArgs, "source");
      source = this._findSourceIndex(source);
      if (source < 0) {
        return {
          line: null,
          column: null,
          lastColumn: null
        };
      }
      var needle = {
        source,
        originalLine: util.getArg(aArgs, "line"),
        originalColumn: util.getArg(aArgs, "column")
      };
      var index = this._findMapping(
        needle,
        this._originalMappings,
        "originalLine",
        "originalColumn",
        util.compareByOriginalPositions,
        util.getArg(aArgs, "bias", SourceMapConsumer.GREATEST_LOWER_BOUND)
      );
      if (index >= 0) {
        var mapping = this._originalMappings[index];
        if (mapping.source === needle.source) {
          return {
            line: util.getArg(mapping, "generatedLine", null),
            column: util.getArg(mapping, "generatedColumn", null),
            lastColumn: util.getArg(mapping, "lastGeneratedColumn", null)
          };
        }
      }
      return {
        line: null,
        column: null,
        lastColumn: null
      };
    };
    exports.BasicSourceMapConsumer = BasicSourceMapConsumer;
    function IndexedSourceMapConsumer(aSourceMap, aSourceMapURL) {
      var sourceMap = aSourceMap;
      if (typeof aSourceMap === "string") {
        sourceMap = util.parseSourceMapInput(aSourceMap);
      }
      var version = util.getArg(sourceMap, "version");
      var sections = util.getArg(sourceMap, "sections");
      if (version != this._version) {
        throw new Error("Unsupported version: " + version);
      }
      this._sources = new ArraySet();
      this._names = new ArraySet();
      var lastOffset = {
        line: -1,
        column: 0
      };
      this._sections = sections.map(function(s) {
        if (s.url) {
          throw new Error("Support for url field in sections not implemented.");
        }
        var offset = util.getArg(s, "offset");
        var offsetLine = util.getArg(offset, "line");
        var offsetColumn = util.getArg(offset, "column");
        if (offsetLine < lastOffset.line || offsetLine === lastOffset.line && offsetColumn < lastOffset.column) {
          throw new Error("Section offsets must be ordered and non-overlapping.");
        }
        lastOffset = offset;
        return {
          generatedOffset: {
            // The offset fields are 0-based, but we use 1-based indices when
            // encoding/decoding from VLQ.
            generatedLine: offsetLine + 1,
            generatedColumn: offsetColumn + 1
          },
          consumer: new SourceMapConsumer(util.getArg(s, "map"), aSourceMapURL)
        };
      });
    }
    IndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);
    IndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer;
    IndexedSourceMapConsumer.prototype._version = 3;
    Object.defineProperty(IndexedSourceMapConsumer.prototype, "sources", {
      get: function() {
        var sources = [];
        for (var i = 0; i < this._sections.length; i++) {
          for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {
            sources.push(this._sections[i].consumer.sources[j]);
          }
        }
        return sources;
      }
    });
    IndexedSourceMapConsumer.prototype.originalPositionFor = function IndexedSourceMapConsumer_originalPositionFor(aArgs) {
      var needle = {
        generatedLine: util.getArg(aArgs, "line"),
        generatedColumn: util.getArg(aArgs, "column")
      };
      var sectionIndex = binarySearch.search(
        needle,
        this._sections,
        function(needle2, section2) {
          var cmp = needle2.generatedLine - section2.generatedOffset.generatedLine;
          if (cmp) {
            return cmp;
          }
          return needle2.generatedColumn - section2.generatedOffset.generatedColumn;
        }
      );
      var section = this._sections[sectionIndex];
      if (!section) {
        return {
          source: null,
          line: null,
          column: null,
          name: null
        };
      }
      return section.consumer.originalPositionFor({
        line: needle.generatedLine - (section.generatedOffset.generatedLine - 1),
        column: needle.generatedColumn - (section.generatedOffset.generatedLine === needle.generatedLine ? section.generatedOffset.generatedColumn - 1 : 0),
        bias: aArgs.bias
      });
    };
    IndexedSourceMapConsumer.prototype.hasContentsOfAllSources = function IndexedSourceMapConsumer_hasContentsOfAllSources() {
      return this._sections.every(function(s) {
        return s.consumer.hasContentsOfAllSources();
      });
    };
    IndexedSourceMapConsumer.prototype.sourceContentFor = function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {
      for (var i = 0; i < this._sections.length; i++) {
        var section = this._sections[i];
        var content = section.consumer.sourceContentFor(aSource, true);
        if (content) {
          return content;
        }
      }
      if (nullOnMissing) {
        return null;
      } else {
        throw new Error('"' + aSource + '" is not in the SourceMap.');
      }
    };
    IndexedSourceMapConsumer.prototype.generatedPositionFor = function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {
      for (var i = 0; i < this._sections.length; i++) {
        var section = this._sections[i];
        if (section.consumer._findSourceIndex(util.getArg(aArgs, "source")) === -1) {
          continue;
        }
        var generatedPosition = section.consumer.generatedPositionFor(aArgs);
        if (generatedPosition) {
          var ret = {
            line: generatedPosition.line + (section.generatedOffset.generatedLine - 1),
            column: generatedPosition.column + (section.generatedOffset.generatedLine === generatedPosition.line ? section.generatedOffset.generatedColumn - 1 : 0)
          };
          return ret;
        }
      }
      return {
        line: null,
        column: null
      };
    };
    IndexedSourceMapConsumer.prototype._parseMappings = function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {
      this.__generatedMappings = [];
      this.__originalMappings = [];
      for (var i = 0; i < this._sections.length; i++) {
        var section = this._sections[i];
        var sectionMappings = section.consumer._generatedMappings;
        for (var j = 0; j < sectionMappings.length; j++) {
          var mapping = sectionMappings[j];
          var source = section.consumer._sources.at(mapping.source);
          source = util.computeSourceURL(section.consumer.sourceRoot, source, this._sourceMapURL);
          this._sources.add(source);
          source = this._sources.indexOf(source);
          var name = null;
          if (mapping.name) {
            name = section.consumer._names.at(mapping.name);
            this._names.add(name);
            name = this._names.indexOf(name);
          }
          var adjustedMapping = {
            source,
            generatedLine: mapping.generatedLine + (section.generatedOffset.generatedLine - 1),
            generatedColumn: mapping.generatedColumn + (section.generatedOffset.generatedLine === mapping.generatedLine ? section.generatedOffset.generatedColumn - 1 : 0),
            originalLine: mapping.originalLine,
            originalColumn: mapping.originalColumn,
            name
          };
          this.__generatedMappings.push(adjustedMapping);
          if (typeof adjustedMapping.originalLine === "number") {
            this.__originalMappings.push(adjustedMapping);
          }
        }
      }
      quickSort(this.__generatedMappings, util.compareByGeneratedPositionsDeflated);
      quickSort(this.__originalMappings, util.compareByOriginalPositions);
    };
    exports.IndexedSourceMapConsumer = IndexedSourceMapConsumer;
  }
});

// node_modules/source-map-js/lib/source-node.js
var require_source_node = __commonJS({
  "node_modules/source-map-js/lib/source-node.js"(exports) {
    var SourceMapGenerator = require_source_map_generator().SourceMapGenerator;
    var util = require_util();
    var REGEX_NEWLINE = /(\r?\n)/;
    var NEWLINE_CODE = 10;
    var isSourceNode = "$$$isSourceNode$$$";
    function SourceNode(aLine, aColumn, aSource, aChunks, aName) {
      this.children = [];
      this.sourceContents = {};
      this.line = aLine == null ? null : aLine;
      this.column = aColumn == null ? null : aColumn;
      this.source = aSource == null ? null : aSource;
      this.name = aName == null ? null : aName;
      this[isSourceNode] = true;
      if (aChunks != null)
        this.add(aChunks);
    }
    SourceNode.fromStringWithSourceMap = function SourceNode_fromStringWithSourceMap(aGeneratedCode, aSourceMapConsumer, aRelativePath) {
      var node = new SourceNode();
      var remainingLines = aGeneratedCode.split(REGEX_NEWLINE);
      var remainingLinesIndex = 0;
      var shiftNextLine = function() {
        var lineContents = getNextLine();
        var newLine = getNextLine() || "";
        return lineContents + newLine;
        function getNextLine() {
          return remainingLinesIndex < remainingLines.length ? remainingLines[remainingLinesIndex++] : void 0;
        }
      };
      var lastGeneratedLine = 1, lastGeneratedColumn = 0;
      var lastMapping = null;
      aSourceMapConsumer.eachMapping(function(mapping) {
        if (lastMapping !== null) {
          if (lastGeneratedLine < mapping.generatedLine) {
            addMappingWithCode(lastMapping, shiftNextLine());
            lastGeneratedLine++;
            lastGeneratedColumn = 0;
          } else {
            var nextLine = remainingLines[remainingLinesIndex] || "";
            var code = nextLine.substr(0, mapping.generatedColumn - lastGeneratedColumn);
            remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn - lastGeneratedColumn);
            lastGeneratedColumn = mapping.generatedColumn;
            addMappingWithCode(lastMapping, code);
            lastMapping = mapping;
            return;
          }
        }
        while (lastGeneratedLine < mapping.generatedLine) {
          node.add(shiftNextLine());
          lastGeneratedLine++;
        }
        if (lastGeneratedColumn < mapping.generatedColumn) {
          var nextLine = remainingLines[remainingLinesIndex] || "";
          node.add(nextLine.substr(0, mapping.generatedColumn));
          remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn);
          lastGeneratedColumn = mapping.generatedColumn;
        }
        lastMapping = mapping;
      }, this);
      if (remainingLinesIndex < remainingLines.length) {
        if (lastMapping) {
          addMappingWithCode(lastMapping, shiftNextLine());
        }
        node.add(remainingLines.splice(remainingLinesIndex).join(""));
      }
      aSourceMapConsumer.sources.forEach(function(sourceFile) {
        var content = aSourceMapConsumer.sourceContentFor(sourceFile);
        if (content != null) {
          if (aRelativePath != null) {
            sourceFile = util.join(aRelativePath, sourceFile);
          }
          node.setSourceContent(sourceFile, content);
        }
      });
      return node;
      function addMappingWithCode(mapping, code) {
        if (mapping === null || mapping.source === void 0) {
          node.add(code);
        } else {
          var source = aRelativePath ? util.join(aRelativePath, mapping.source) : mapping.source;
          node.add(new SourceNode(
            mapping.originalLine,
            mapping.originalColumn,
            source,
            code,
            mapping.name
          ));
        }
      }
    };
    SourceNode.prototype.add = function SourceNode_add(aChunk) {
      if (Array.isArray(aChunk)) {
        aChunk.forEach(function(chunk) {
          this.add(chunk);
        }, this);
      } else if (aChunk[isSourceNode] || typeof aChunk === "string") {
        if (aChunk) {
          this.children.push(aChunk);
        }
      } else {
        throw new TypeError(
          "Expected a SourceNode, string, or an array of SourceNodes and strings. Got " + aChunk
        );
      }
      return this;
    };
    SourceNode.prototype.prepend = function SourceNode_prepend(aChunk) {
      if (Array.isArray(aChunk)) {
        for (var i = aChunk.length - 1; i >= 0; i--) {
          this.prepend(aChunk[i]);
        }
      } else if (aChunk[isSourceNode] || typeof aChunk === "string") {
        this.children.unshift(aChunk);
      } else {
        throw new TypeError(
          "Expected a SourceNode, string, or an array of SourceNodes and strings. Got " + aChunk
        );
      }
      return this;
    };
    SourceNode.prototype.walk = function SourceNode_walk(aFn) {
      var chunk;
      for (var i = 0, len = this.children.length; i < len; i++) {
        chunk = this.children[i];
        if (chunk[isSourceNode]) {
          chunk.walk(aFn);
        } else {
          if (chunk !== "") {
            aFn(chunk, {
              source: this.source,
              line: this.line,
              column: this.column,
              name: this.name
            });
          }
        }
      }
    };
    SourceNode.prototype.join = function SourceNode_join(aSep) {
      var newChildren;
      var i;
      var len = this.children.length;
      if (len > 0) {
        newChildren = [];
        for (i = 0; i < len - 1; i++) {
          newChildren.push(this.children[i]);
          newChildren.push(aSep);
        }
        newChildren.push(this.children[i]);
        this.children = newChildren;
      }
      return this;
    };
    SourceNode.prototype.replaceRight = function SourceNode_replaceRight(aPattern, aReplacement) {
      var lastChild = this.children[this.children.length - 1];
      if (lastChild[isSourceNode]) {
        lastChild.replaceRight(aPattern, aReplacement);
      } else if (typeof lastChild === "string") {
        this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement);
      } else {
        this.children.push("".replace(aPattern, aReplacement));
      }
      return this;
    };
    SourceNode.prototype.setSourceContent = function SourceNode_setSourceContent(aSourceFile, aSourceContent) {
      this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;
    };
    SourceNode.prototype.walkSourceContents = function SourceNode_walkSourceContents(aFn) {
      for (var i = 0, len = this.children.length; i < len; i++) {
        if (this.children[i][isSourceNode]) {
          this.children[i].walkSourceContents(aFn);
        }
      }
      var sources = Object.keys(this.sourceContents);
      for (var i = 0, len = sources.length; i < len; i++) {
        aFn(util.fromSetString(sources[i]), this.sourceContents[sources[i]]);
      }
    };
    SourceNode.prototype.toString = function SourceNode_toString() {
      var str = "";
      this.walk(function(chunk) {
        str += chunk;
      });
      return str;
    };
    SourceNode.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs) {
      var generated = {
        code: "",
        line: 1,
        column: 0
      };
      var map = new SourceMapGenerator(aArgs);
      var sourceMappingActive = false;
      var lastOriginalSource = null;
      var lastOriginalLine = null;
      var lastOriginalColumn = null;
      var lastOriginalName = null;
      this.walk(function(chunk, original) {
        generated.code += chunk;
        if (original.source !== null && original.line !== null && original.column !== null) {
          if (lastOriginalSource !== original.source || lastOriginalLine !== original.line || lastOriginalColumn !== original.column || lastOriginalName !== original.name) {
            map.addMapping({
              source: original.source,
              original: {
                line: original.line,
                column: original.column
              },
              generated: {
                line: generated.line,
                column: generated.column
              },
              name: original.name
            });
          }
          lastOriginalSource = original.source;
          lastOriginalLine = original.line;
          lastOriginalColumn = original.column;
          lastOriginalName = original.name;
          sourceMappingActive = true;
        } else if (sourceMappingActive) {
          map.addMapping({
            generated: {
              line: generated.line,
              column: generated.column
            }
          });
          lastOriginalSource = null;
          sourceMappingActive = false;
        }
        for (var idx = 0, length = chunk.length; idx < length; idx++) {
          if (chunk.charCodeAt(idx) === NEWLINE_CODE) {
            generated.line++;
            generated.column = 0;
            if (idx + 1 === length) {
              lastOriginalSource = null;
              sourceMappingActive = false;
            } else if (sourceMappingActive) {
              map.addMapping({
                source: original.source,
                original: {
                  line: original.line,
                  column: original.column
                },
                generated: {
                  line: generated.line,
                  column: generated.column
                },
                name: original.name
              });
            }
          } else {
            generated.column++;
          }
        }
      });
      this.walkSourceContents(function(sourceFile, sourceContent) {
        map.setSourceContent(sourceFile, sourceContent);
      });
      return { code: generated.code, map };
    };
    exports.SourceNode = SourceNode;
  }
});

// node_modules/source-map-js/source-map.js
var require_source_map = __commonJS({
  "node_modules/source-map-js/source-map.js"(exports) {
    exports.SourceMapGenerator = require_source_map_generator().SourceMapGenerator;
    exports.SourceMapConsumer = require_source_map_consumer().SourceMapConsumer;
    exports.SourceNode = require_source_node().SourceNode;
  }
});

// node_modules/nanoid/non-secure/index.cjs
var require_non_secure = __commonJS({
  "node_modules/nanoid/non-secure/index.cjs"(exports, module2) {
    var urlAlphabet = "useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict";
    var customAlphabet = (alphabet, defaultSize = 21) => {
      return (size = defaultSize) => {
        let id = "";
        let i = size;
        while (i--) {
          id += alphabet[Math.random() * alphabet.length | 0];
        }
        return id;
      };
    };
    var nanoid = (size = 21) => {
      let id = "";
      let i = size;
      while (i--) {
        id += urlAlphabet[Math.random() * 64 | 0];
      }
      return id;
    };
    module2.exports = { nanoid, customAlphabet };
  }
});

// node_modules/postcss/lib/previous-map.js
var require_previous_map = __commonJS({
  "node_modules/postcss/lib/previous-map.js"(exports, module2) {
    "use strict";
    var { SourceMapConsumer, SourceMapGenerator } = require_source_map();
    var { existsSync, readFileSync } = require("fs");
    var { dirname, join } = require("path");
    function fromBase64(str) {
      if (Buffer) {
        return Buffer.from(str, "base64").toString();
      } else {
        return window.atob(str);
      }
    }
    var PreviousMap = class {
      constructor(css, opts) {
        if (opts.map === false)
          return;
        this.loadAnnotation(css);
        this.inline = this.startWith(this.annotation, "data:");
        let prev = opts.map ? opts.map.prev : void 0;
        let text = this.loadMap(opts.from, prev);
        if (!this.mapFile && opts.from) {
          this.mapFile = opts.from;
        }
        if (this.mapFile)
          this.root = dirname(this.mapFile);
        if (text)
          this.text = text;
      }
      consumer() {
        if (!this.consumerCache) {
          this.consumerCache = new SourceMapConsumer(this.text);
        }
        return this.consumerCache;
      }
      decodeInline(text) {
        let baseCharsetUri = /^data:application\/json;charset=utf-?8;base64,/;
        let baseUri = /^data:application\/json;base64,/;
        let charsetUri = /^data:application\/json;charset=utf-?8,/;
        let uri = /^data:application\/json,/;
        if (charsetUri.test(text) || uri.test(text)) {
          return decodeURIComponent(text.substr(RegExp.lastMatch.length));
        }
        if (baseCharsetUri.test(text) || baseUri.test(text)) {
          return fromBase64(text.substr(RegExp.lastMatch.length));
        }
        let encoding = text.match(/data:application\/json;([^,]+),/)[1];
        throw new Error("Unsupported source map encoding " + encoding);
      }
      getAnnotationURL(sourceMapString) {
        return sourceMapString.replace(/^\/\*\s*# sourceMappingURL=/, "").trim();
      }
      isMap(map) {
        if (typeof map !== "object")
          return false;
        return typeof map.mappings === "string" || typeof map._mappings === "string" || Array.isArray(map.sections);
      }
      loadAnnotation(css) {
        let comments = css.match(/\/\*\s*# sourceMappingURL=/gm);
        if (!comments)
          return;
        let start = css.lastIndexOf(comments.pop());
        let end = css.indexOf("*/", start);
        if (start > -1 && end > -1) {
          this.annotation = this.getAnnotationURL(css.substring(start, end));
        }
      }
      loadFile(path) {
        this.root = dirname(path);
        if (existsSync(path)) {
          this.mapFile = path;
          return readFileSync(path, "utf-8").toString().trim();
        }
      }
      loadMap(file, prev) {
        if (prev === false)
          return false;
        if (prev) {
          if (typeof prev === "string") {
            return prev;
          } else if (typeof prev === "function") {
            let prevPath = prev(file);
            if (prevPath) {
              let map = this.loadFile(prevPath);
              if (!map) {
                throw new Error(
                  "Unable to load previous source map: " + prevPath.toString()
                );
              }
              return map;
            }
          } else if (prev instanceof SourceMapConsumer) {
            return SourceMapGenerator.fromSourceMap(prev).toString();
          } else if (prev instanceof SourceMapGenerator) {
            return prev.toString();
          } else if (this.isMap(prev)) {
            return JSON.stringify(prev);
          } else {
            throw new Error(
              "Unsupported previous source map format: " + prev.toString()
            );
          }
        } else if (this.inline) {
          return this.decodeInline(this.annotation);
        } else if (this.annotation) {
          let map = this.annotation;
          if (file)
            map = join(dirname(file), map);
          return this.loadFile(map);
        }
      }
      startWith(string, start) {
        if (!string)
          return false;
        return string.substr(0, start.length) === start;
      }
      withContent() {
        return !!(this.consumer().sourcesContent && this.consumer().sourcesContent.length > 0);
      }
    };
    module2.exports = PreviousMap;
    PreviousMap.default = PreviousMap;
  }
});

// node_modules/postcss/lib/input.js
var require_input = __commonJS({
  "node_modules/postcss/lib/input.js"(exports, module2) {
    "use strict";
    var { SourceMapConsumer, SourceMapGenerator } = require_source_map();
    var { fileURLToPath, pathToFileURL } = require("url");
    var { isAbsolute, resolve } = require("path");
    var { nanoid } = require_non_secure();
    var terminalHighlight = require_terminal_highlight();
    var CssSyntaxError = require_css_syntax_error();
    var PreviousMap = require_previous_map();
    var fromOffsetCache = Symbol("fromOffsetCache");
    var sourceMapAvailable = Boolean(SourceMapConsumer && SourceMapGenerator);
    var pathAvailable = Boolean(resolve && isAbsolute);
    var Input = class {
      constructor(css, opts = {}) {
        if (css === null || typeof css === "undefined" || typeof css === "object" && !css.toString) {
          throw new Error(`PostCSS received ${css} instead of CSS string`);
        }
        this.css = css.toString();
        if (this.css[0] === "\uFEFF" || this.css[0] === "\uFFFE") {
          this.hasBOM = true;
          this.css = this.css.slice(1);
        } else {
          this.hasBOM = false;
        }
        if (opts.from) {
          if (!pathAvailable || /^\w+:\/\//.test(opts.from) || isAbsolute(opts.from)) {
            this.file = opts.from;
          } else {
            this.file = resolve(opts.from);
          }
        }
        if (pathAvailable && sourceMapAvailable) {
          let map = new PreviousMap(this.css, opts);
          if (map.text) {
            this.map = map;
            let file = map.consumer().file;
            if (!this.file && file)
              this.file = this.mapResolve(file);
          }
        }
        if (!this.file) {
          this.id = "<input css " + nanoid(6) + ">";
        }
        if (this.map)
          this.map.file = this.from;
      }
      error(message, line, column, opts = {}) {
        let result, endLine, endColumn;
        if (line && typeof line === "object") {
          let start = line;
          let end = column;
          if (typeof start.offset === "number") {
            let pos = this.fromOffset(start.offset);
            line = pos.line;
            column = pos.col;
          } else {
            line = start.line;
            column = start.column;
          }
          if (typeof end.offset === "number") {
            let pos = this.fromOffset(end.offset);
            endLine = pos.line;
            endColumn = pos.col;
          } else {
            endLine = end.line;
            endColumn = end.column;
          }
        } else if (!column) {
          let pos = this.fromOffset(line);
          line = pos.line;
          column = pos.col;
        }
        let origin = this.origin(line, column, endLine, endColumn);
        if (origin) {
          result = new CssSyntaxError(
            message,
            origin.endLine === void 0 ? origin.line : { column: origin.column, line: origin.line },
            origin.endLine === void 0 ? origin.column : { column: origin.endColumn, line: origin.endLine },
            origin.source,
            origin.file,
            opts.plugin
          );
        } else {
          result = new CssSyntaxError(
            message,
            endLine === void 0 ? line : { column, line },
            endLine === void 0 ? column : { column: endColumn, line: endLine },
            this.css,
            this.file,
            opts.plugin
          );
        }
        result.input = { column, endColumn, endLine, line, source: this.css };
        if (this.file) {
          if (pathToFileURL) {
            result.input.url = pathToFileURL(this.file).toString();
          }
          result.input.file = this.file;
        }
        return result;
      }
      fromOffset(offset) {
        let lastLine, lineToIndex;
        if (!this[fromOffsetCache]) {
          let lines = this.css.split("\n");
          lineToIndex = new Array(lines.length);
          let prevIndex = 0;
          for (let i = 0, l = lines.length; i < l; i++) {
            lineToIndex[i] = prevIndex;
            prevIndex += lines[i].length + 1;
          }
          this[fromOffsetCache] = lineToIndex;
        } else {
          lineToIndex = this[fromOffsetCache];
        }
        lastLine = lineToIndex[lineToIndex.length - 1];
        let min = 0;
        if (offset >= lastLine) {
          min = lineToIndex.length - 1;
        } else {
          let max = lineToIndex.length - 2;
          let mid;
          while (min < max) {
            mid = min + (max - min >> 1);
            if (offset < lineToIndex[mid]) {
              max = mid - 1;
            } else if (offset >= lineToIndex[mid + 1]) {
              min = mid + 1;
            } else {
              min = mid;
              break;
            }
          }
        }
        return {
          col: offset - lineToIndex[min] + 1,
          line: min + 1
        };
      }
      mapResolve(file) {
        if (/^\w+:\/\//.test(file)) {
          return file;
        }
        return resolve(this.map.consumer().sourceRoot || this.map.root || ".", file);
      }
      origin(line, column, endLine, endColumn) {
        if (!this.map)
          return false;
        let consumer = this.map.consumer();
        let from = consumer.originalPositionFor({ column, line });
        if (!from.source)
          return false;
        let to;
        if (typeof endLine === "number") {
          to = consumer.originalPositionFor({ column: endColumn, line: endLine });
        }
        let fromUrl;
        if (isAbsolute(from.source)) {
          fromUrl = pathToFileURL(from.source);
        } else {
          fromUrl = new URL(
            from.source,
            this.map.consumer().sourceRoot || pathToFileURL(this.map.mapFile)
          );
        }
        let result = {
          column: from.column,
          endColumn: to && to.column,
          endLine: to && to.line,
          line: from.line,
          url: fromUrl.toString()
        };
        if (fromUrl.protocol === "file:") {
          if (fileURLToPath) {
            result.file = fileURLToPath(fromUrl);
          } else {
            throw new Error(`file: protocol is not available in this PostCSS build`);
          }
        }
        let source = consumer.sourceContentFor(from.source);
        if (source)
          result.source = source;
        return result;
      }
      toJSON() {
        let json = {};
        for (let name of ["hasBOM", "css", "file", "id"]) {
          if (this[name] != null) {
            json[name] = this[name];
          }
        }
        if (this.map) {
          json.map = { ...this.map };
          if (json.map.consumerCache) {
            json.map.consumerCache = void 0;
          }
        }
        return json;
      }
      get from() {
        return this.file || this.id;
      }
    };
    module2.exports = Input;
    Input.default = Input;
    if (terminalHighlight && terminalHighlight.registerInput) {
      terminalHighlight.registerInput(Input);
    }
  }
});

// node_modules/postcss/lib/map-generator.js
var require_map_generator = __commonJS({
  "node_modules/postcss/lib/map-generator.js"(exports, module2) {
    "use strict";
    var { SourceMapConsumer, SourceMapGenerator } = require_source_map();
    var { dirname, relative, resolve, sep } = require("path");
    var { pathToFileURL } = require("url");
    var Input = require_input();
    var sourceMapAvailable = Boolean(SourceMapConsumer && SourceMapGenerator);
    var pathAvailable = Boolean(dirname && resolve && relative && sep);
    var MapGenerator = class {
      constructor(stringify, root, opts, cssString) {
        this.stringify = stringify;
        this.mapOpts = opts.map || {};
        this.root = root;
        this.opts = opts;
        this.css = cssString;
        this.usesFileUrls = !this.mapOpts.from && this.mapOpts.absolute;
        this.memoizedFileURLs = /* @__PURE__ */ new Map();
        this.memoizedPaths = /* @__PURE__ */ new Map();
        this.memoizedURLs = /* @__PURE__ */ new Map();
      }
      addAnnotation() {
        let content;
        if (this.isInline()) {
          content = "data:application/json;base64," + this.toBase64(this.map.toString());
        } else if (typeof this.mapOpts.annotation === "string") {
          content = this.mapOpts.annotation;
        } else if (typeof this.mapOpts.annotation === "function") {
          content = this.mapOpts.annotation(this.opts.to, this.root);
        } else {
          content = this.outputFile() + ".map";
        }
        let eol = "\n";
        if (this.css.includes("\r\n"))
          eol = "\r\n";
        this.css += eol + "/*# sourceMappingURL=" + content + " */";
      }
      applyPrevMaps() {
        for (let prev of this.previous()) {
          let from = this.toUrl(this.path(prev.file));
          let root = prev.root || dirname(prev.file);
          let map;
          if (this.mapOpts.sourcesContent === false) {
            map = new SourceMapConsumer(prev.text);
            if (map.sourcesContent) {
              map.sourcesContent = map.sourcesContent.map(() => null);
            }
          } else {
            map = prev.consumer();
          }
          this.map.applySourceMap(map, from, this.toUrl(this.path(root)));
        }
      }
      clearAnnotation() {
        if (this.mapOpts.annotation === false)
          return;
        if (this.root) {
          let node;
          for (let i = this.root.nodes.length - 1; i >= 0; i--) {
            node = this.root.nodes[i];
            if (node.type !== "comment")
              continue;
            if (node.text.indexOf("# sourceMappingURL=") === 0) {
              this.root.removeChild(i);
            }
          }
        } else if (this.css) {
          this.css = this.css.replace(/(\n)?\/\*#[\S\s]*?\*\/$/gm, "");
        }
      }
      generate() {
        this.clearAnnotation();
        if (pathAvailable && sourceMapAvailable && this.isMap()) {
          return this.generateMap();
        } else {
          let result = "";
          this.stringify(this.root, (i) => {
            result += i;
          });
          return [result];
        }
      }
      generateMap() {
        if (this.root) {
          this.generateString();
        } else if (this.previous().length === 1) {
          let prev = this.previous()[0].consumer();
          prev.file = this.outputFile();
          this.map = SourceMapGenerator.fromSourceMap(prev);
        } else {
          this.map = new SourceMapGenerator({ file: this.outputFile() });
          this.map.addMapping({
            generated: { column: 0, line: 1 },
            original: { column: 0, line: 1 },
            source: this.opts.from ? this.toUrl(this.path(this.opts.from)) : "<no source>"
          });
        }
        if (this.isSourcesContent())
          this.setSourcesContent();
        if (this.root && this.previous().length > 0)
          this.applyPrevMaps();
        if (this.isAnnotation())
          this.addAnnotation();
        if (this.isInline()) {
          return [this.css];
        } else {
          return [this.css, this.map];
        }
      }
      generateString() {
        this.css = "";
        this.map = new SourceMapGenerator({ file: this.outputFile() });
        let line = 1;
        let column = 1;
        let noSource = "<no source>";
        let mapping = {
          generated: { column: 0, line: 0 },
          original: { column: 0, line: 0 },
          source: ""
        };
        let lines, last;
        this.stringify(this.root, (str, node, type) => {
          this.css += str;
          if (node && type !== "end") {
            mapping.generated.line = line;
            mapping.generated.column = column - 1;
            if (node.source && node.source.start) {
              mapping.source = this.sourcePath(node);
              mapping.original.line = node.source.start.line;
              mapping.original.column = node.source.start.column - 1;
              this.map.addMapping(mapping);
            } else {
              mapping.source = noSource;
              mapping.original.line = 1;
              mapping.original.column = 0;
              this.map.addMapping(mapping);
            }
          }
          lines = str.match(/\n/g);
          if (lines) {
            line += lines.length;
            last = str.lastIndexOf("\n");
            column = str.length - last;
          } else {
            column += str.length;
          }
          if (node && type !== "start") {
            let p = node.parent || { raws: {} };
            let childless = node.type === "decl" || node.type === "atrule" && !node.nodes;
            if (!childless || node !== p.last || p.raws.semicolon) {
              if (node.source && node.source.end) {
                mapping.source = this.sourcePath(node);
                mapping.original.line = node.source.end.line;
                mapping.original.column = node.source.end.column - 1;
                mapping.generated.line = line;
                mapping.generated.column = column - 2;
                this.map.addMapping(mapping);
              } else {
                mapping.source = noSource;
                mapping.original.line = 1;
                mapping.original.column = 0;
                mapping.generated.line = line;
                mapping.generated.column = column - 1;
                this.map.addMapping(mapping);
              }
            }
          }
        });
      }
      isAnnotation() {
        if (this.isInline()) {
          return true;
        }
        if (typeof this.mapOpts.annotation !== "undefined") {
          return this.mapOpts.annotation;
        }
        if (this.previous().length) {
          return this.previous().some((i) => i.annotation);
        }
        return true;
      }
      isInline() {
        if (typeof this.mapOpts.inline !== "undefined") {
          return this.mapOpts.inline;
        }
        let annotation = this.mapOpts.annotation;
        if (typeof annotation !== "undefined" && annotation !== true) {
          return false;
        }
        if (this.previous().length) {
          return this.previous().some((i) => i.inline);
        }
        return true;
      }
      isMap() {
        if (typeof this.opts.map !== "undefined") {
          return !!this.opts.map;
        }
        return this.previous().length > 0;
      }
      isSourcesContent() {
        if (typeof this.mapOpts.sourcesContent !== "undefined") {
          return this.mapOpts.sourcesContent;
        }
        if (this.previous().length) {
          return this.previous().some((i) => i.withContent());
        }
        return true;
      }
      outputFile() {
        if (this.opts.to) {
          return this.path(this.opts.to);
        } else if (this.opts.from) {
          return this.path(this.opts.from);
        } else {
          return "to.css";
        }
      }
      path(file) {
        if (this.mapOpts.absolute)
          return file;
        if (file.charCodeAt(0) === 60)
          return file;
        if (/^\w+:\/\//.test(file))
          return file;
        let cached = this.memoizedPaths.get(file);
        if (cached)
          return cached;
        let from = this.opts.to ? dirname(this.opts.to) : ".";
        if (typeof this.mapOpts.annotation === "string") {
          from = dirname(resolve(from, this.mapOpts.annotation));
        }
        let path = relative(from, file);
        this.memoizedPaths.set(file, path);
        return path;
      }
      previous() {
        if (!this.previousMaps) {
          this.previousMaps = [];
          if (this.root) {
            this.root.walk((node) => {
              if (node.source && node.source.input.map) {
                let map = node.source.input.map;
                if (!this.previousMaps.includes(map)) {
                  this.previousMaps.push(map);
                }
              }
            });
          } else {
            let input = new Input(this.css, this.opts);
            if (input.map)
              this.previousMaps.push(input.map);
          }
        }
        return this.previousMaps;
      }
      setSourcesContent() {
        let already = {};
        if (this.root) {
          this.root.walk((node) => {
            if (node.source) {
              let from = node.source.input.from;
              if (from && !already[from]) {
                already[from] = true;
                let fromUrl = this.usesFileUrls ? this.toFileUrl(from) : this.toUrl(this.path(from));
                this.map.setSourceContent(fromUrl, node.source.input.css);
              }
            }
          });
        } else if (this.css) {
          let from = this.opts.from ? this.toUrl(this.path(this.opts.from)) : "<no source>";
          this.map.setSourceContent(from, this.css);
        }
      }
      sourcePath(node) {
        if (this.mapOpts.from) {
          return this.toUrl(this.mapOpts.from);
        } else if (this.usesFileUrls) {
          return this.toFileUrl(node.source.input.from);
        } else {
          return this.toUrl(this.path(node.source.input.from));
        }
      }
      toBase64(str) {
        if (Buffer) {
          return Buffer.from(str).toString("base64");
        } else {
          return window.btoa(unescape(encodeURIComponent(str)));
        }
      }
      toFileUrl(path) {
        let cached = this.memoizedFileURLs.get(path);
        if (cached)
          return cached;
        if (pathToFileURL) {
          let fileURL = pathToFileURL(path).toString();
          this.memoizedFileURLs.set(path, fileURL);
          return fileURL;
        } else {
          throw new Error(
            "`map.absolute` option is not available in this PostCSS build"
          );
        }
      }
      toUrl(path) {
        let cached = this.memoizedURLs.get(path);
        if (cached)
          return cached;
        if (sep === "\\") {
          path = path.replace(/\\/g, "/");
        }
        let url = encodeURI(path).replace(/[#?]/g, encodeURIComponent);
        this.memoizedURLs.set(path, url);
        return url;
      }
    };
    module2.exports = MapGenerator;
  }
});

// node_modules/postcss/lib/comment.js
var require_comment = __commonJS({
  "node_modules/postcss/lib/comment.js"(exports, module2) {
    "use strict";
    var Node = require_node();
    var Comment = class extends Node {
      constructor(defaults) {
        super(defaults);
        this.type = "comment";
      }
    };
    module2.exports = Comment;
    Comment.default = Comment;
  }
});

// node_modules/postcss/lib/container.js
var require_container = __commonJS({
  "node_modules/postcss/lib/container.js"(exports, module2) {
    "use strict";
    var { isClean, my } = require_symbols();
    var Declaration = require_declaration();
    var Comment = require_comment();
    var Node = require_node();
    var parse;
    var Rule;
    var AtRule;
    var Root;
    function cleanSource(nodes) {
      return nodes.map((i) => {
        if (i.nodes)
          i.nodes = cleanSource(i.nodes);
        delete i.source;
        return i;
      });
    }
    function markDirtyUp(node) {
      node[isClean] = false;
      if (node.proxyOf.nodes) {
        for (let i of node.proxyOf.nodes) {
          markDirtyUp(i);
        }
      }
    }
    var Container = class _Container extends Node {
      append(...children) {
        for (let child of children) {
          let nodes = this.normalize(child, this.last);
          for (let node of nodes)
            this.proxyOf.nodes.push(node);
        }
        this.markDirty();
        return this;
      }
      cleanRaws(keepBetween) {
        super.cleanRaws(keepBetween);
        if (this.nodes) {
          for (let node of this.nodes)
            node.cleanRaws(keepBetween);
        }
      }
      each(callback) {
        if (!this.proxyOf.nodes)
          return void 0;
        let iterator = this.getIterator();
        let index, result;
        while (this.indexes[iterator] < this.proxyOf.nodes.length) {
          index = this.indexes[iterator];
          result = callback(this.proxyOf.nodes[index], index);
          if (result === false)
            break;
          this.indexes[iterator] += 1;
        }
        delete this.indexes[iterator];
        return result;
      }
      every(condition) {
        return this.nodes.every(condition);
      }
      getIterator() {
        if (!this.lastEach)
          this.lastEach = 0;
        if (!this.indexes)
          this.indexes = {};
        this.lastEach += 1;
        let iterator = this.lastEach;
        this.indexes[iterator] = 0;
        return iterator;
      }
      getProxyProcessor() {
        return {
          get(node, prop) {
            if (prop === "proxyOf") {
              return node;
            } else if (!node[prop]) {
              return node[prop];
            } else if (prop === "each" || typeof prop === "string" && prop.startsWith("walk")) {
              return (...args) => {
                return node[prop](
                  ...args.map((i) => {
                    if (typeof i === "function") {
                      return (child, index) => i(child.toProxy(), index);
                    } else {
                      return i;
                    }
                  })
                );
              };
            } else if (prop === "every" || prop === "some") {
              return (cb) => {
                return node[prop](
                  (child, ...other) => cb(child.toProxy(), ...other)
                );
              };
            } else if (prop === "root") {
              return () => node.root().toProxy();
            } else if (prop === "nodes") {
              return node.nodes.map((i) => i.toProxy());
            } else if (prop === "first" || prop === "last") {
              return node[prop].toProxy();
            } else {
              return node[prop];
            }
          },
          set(node, prop, value) {
            if (node[prop] === value)
              return true;
            node[prop] = value;
            if (prop === "name" || prop === "params" || prop === "selector") {
              node.markDirty();
            }
            return true;
          }
        };
      }
      index(child) {
        if (typeof child === "number")
          return child;
        if (child.proxyOf)
          child = child.proxyOf;
        return this.proxyOf.nodes.indexOf(child);
      }
      insertAfter(exist, add) {
        let existIndex = this.index(exist);
        let nodes = this.normalize(add, this.proxyOf.nodes[existIndex]).reverse();
        existIndex = this.index(exist);
        for (let node of nodes)
          this.proxyOf.nodes.splice(existIndex + 1, 0, node);
        let index;
        for (let id in this.indexes) {
          index = this.indexes[id];
          if (existIndex < index) {
            this.indexes[id] = index + nodes.length;
          }
        }
        this.markDirty();
        return this;
      }
      insertBefore(exist, add) {
        let existIndex = this.index(exist);
        let type = existIndex === 0 ? "prepend" : false;
        let nodes = this.normalize(add, this.proxyOf.nodes[existIndex], type).reverse();
        existIndex = this.index(exist);
        for (let node of nodes)
          this.proxyOf.nodes.splice(existIndex, 0, node);
        let index;
        for (let id in this.indexes) {
          index = this.indexes[id];
          if (existIndex <= index) {
            this.indexes[id] = index + nodes.length;
          }
        }
        this.markDirty();
        return this;
      }
      normalize(nodes, sample) {
        if (typeof nodes === "string") {
          nodes = cleanSource(parse(nodes).nodes);
        } else if (Array.isArray(nodes)) {
          nodes = nodes.slice(0);
          for (let i of nodes) {
            if (i.parent)
              i.parent.removeChild(i, "ignore");
          }
        } else if (nodes.type === "root" && this.type !== "document") {
          nodes = nodes.nodes.slice(0);
          for (let i of nodes) {
            if (i.parent)
              i.parent.removeChild(i, "ignore");
          }
        } else if (nodes.type) {
          nodes = [nodes];
        } else if (nodes.prop) {
          if (typeof nodes.value === "undefined") {
            throw new Error("Value field is missed in node creation");
          } else if (typeof nodes.value !== "string") {
            nodes.value = String(nodes.value);
          }
          nodes = [new Declaration(nodes)];
        } else if (nodes.selector) {
          nodes = [new Rule(nodes)];
        } else if (nodes.name) {
          nodes = [new AtRule(nodes)];
        } else if (nodes.text) {
          nodes = [new Comment(nodes)];
        } else {
          throw new Error("Unknown node type in node creation");
        }
        let processed = nodes.map((i) => {
          if (!i[my])
            _Container.rebuild(i);
          i = i.proxyOf;
          if (i.parent)
            i.parent.removeChild(i);
          if (i[isClean])
            markDirtyUp(i);
          if (typeof i.raws.before === "undefined") {
            if (sample && typeof sample.raws.before !== "undefined") {
              i.raws.before = sample.raws.before.replace(/\S/g, "");
            }
          }
          i.parent = this.proxyOf;
          return i;
        });
        return processed;
      }
      prepend(...children) {
        children = children.reverse();
        for (let child of children) {
          let nodes = this.normalize(child, this.first, "prepend").reverse();
          for (let node of nodes)
            this.proxyOf.nodes.unshift(node);
          for (let id in this.indexes) {
            this.indexes[id] = this.indexes[id] + nodes.length;
          }
        }
        this.markDirty();
        return this;
      }
      push(child) {
        child.parent = this;
        this.proxyOf.nodes.push(child);
        return this;
      }
      removeAll() {
        for (let node of this.proxyOf.nodes)
          node.parent = void 0;
        this.proxyOf.nodes = [];
        this.markDirty();
        return this;
      }
      removeChild(child) {
        child = this.index(child);
        this.proxyOf.nodes[child].parent = void 0;
        this.proxyOf.nodes.splice(child, 1);
        let index;
        for (let id in this.indexes) {
          index = this.indexes[id];
          if (index >= child) {
            this.indexes[id] = index - 1;
          }
        }
        this.markDirty();
        return this;
      }
      replaceValues(pattern, opts, callback) {
        if (!callback) {
          callback = opts;
          opts = {};
        }
        this.walkDecls((decl) => {
          if (opts.props && !opts.props.includes(decl.prop))
            return;
          if (opts.fast && !decl.value.includes(opts.fast))
            return;
          decl.value = decl.value.replace(pattern, callback);
        });
        this.markDirty();
        return this;
      }
      some(condition) {
        return this.nodes.some(condition);
      }
      walk(callback) {
        return this.each((child, i) => {
          let result;
          try {
            result = callback(child, i);
          } catch (e) {
            throw child.addToError(e);
          }
          if (result !== false && child.walk) {
            result = child.walk(callback);
          }
          return result;
        });
      }
      walkAtRules(name, callback) {
        if (!callback) {
          callback = name;
          return this.walk((child, i) => {
            if (child.type === "atrule") {
              return callback(child, i);
            }
          });
        }
        if (name instanceof RegExp) {
          return this.walk((child, i) => {
            if (child.type === "atrule" && name.test(child.name)) {
              return callback(child, i);
            }
          });
        }
        return this.walk((child, i) => {
          if (child.type === "atrule" && child.name === name) {
            return callback(child, i);
          }
        });
      }
      walkComments(callback) {
        return this.walk((child, i) => {
          if (child.type === "comment") {
            return callback(child, i);
          }
        });
      }
      walkDecls(prop, callback) {
        if (!callback) {
          callback = prop;
          return this.walk((child, i) => {
            if (child.type === "decl") {
              return callback(child, i);
            }
          });
        }
        if (prop instanceof RegExp) {
          return this.walk((child, i) => {
            if (child.type === "decl" && prop.test(child.prop)) {
              return callback(child, i);
            }
          });
        }
        return this.walk((child, i) => {
          if (child.type === "decl" && child.prop === prop) {
            return callback(child, i);
          }
        });
      }
      walkRules(selector, callback) {
        if (!callback) {
          callback = selector;
          return this.walk((child, i) => {
            if (child.type === "rule") {
              return callback(child, i);
            }
          });
        }
        if (selector instanceof RegExp) {
          return this.walk((child, i) => {
            if (child.type === "rule" && selector.test(child.selector)) {
              return callback(child, i);
            }
          });
        }
        return this.walk((child, i) => {
          if (child.type === "rule" && child.selector === selector) {
            return callback(child, i);
          }
        });
      }
      get first() {
        if (!this.proxyOf.nodes)
          return void 0;
        return this.proxyOf.nodes[0];
      }
      get last() {
        if (!this.proxyOf.nodes)
          return void 0;
        return this.proxyOf.nodes[this.proxyOf.nodes.length - 1];
      }
    };
    Container.registerParse = (dependant) => {
      parse = dependant;
    };
    Container.registerRule = (dependant) => {
      Rule = dependant;
    };
    Container.registerAtRule = (dependant) => {
      AtRule = dependant;
    };
    Container.registerRoot = (dependant) => {
      Root = dependant;
    };
    module2.exports = Container;
    Container.default = Container;
    Container.rebuild = (node) => {
      if (node.type === "atrule") {
        Object.setPrototypeOf(node, AtRule.prototype);
      } else if (node.type === "rule") {
        Object.setPrototypeOf(node, Rule.prototype);
      } else if (node.type === "decl") {
        Object.setPrototypeOf(node, Declaration.prototype);
      } else if (node.type === "comment") {
        Object.setPrototypeOf(node, Comment.prototype);
      } else if (node.type === "root") {
        Object.setPrototypeOf(node, Root.prototype);
      }
      node[my] = true;
      if (node.nodes) {
        node.nodes.forEach((child) => {
          Container.rebuild(child);
        });
      }
    };
  }
});

// node_modules/postcss/lib/document.js
var require_document = __commonJS({
  "node_modules/postcss/lib/document.js"(exports, module2) {
    "use strict";
    var Container = require_container();
    var LazyResult;
    var Processor;
    var Document = class extends Container {
      constructor(defaults) {
        super({ type: "document", ...defaults });
        if (!this.nodes) {
          this.nodes = [];
        }
      }
      toResult(opts = {}) {
        let lazy = new LazyResult(new Processor(), this, opts);
        return lazy.stringify();
      }
    };
    Document.registerLazyResult = (dependant) => {
      LazyResult = dependant;
    };
    Document.registerProcessor = (dependant) => {
      Processor = dependant;
    };
    module2.exports = Document;
    Document.default = Document;
  }
});

// node_modules/postcss/lib/warn-once.js
var require_warn_once = __commonJS({
  "node_modules/postcss/lib/warn-once.js"(exports, module2) {
    "use strict";
    var printed = {};
    module2.exports = function warnOnce(message) {
      if (printed[message])
        return;
      printed[message] = true;
      if (typeof console !== "undefined" && console.warn) {
        console.warn(message);
      }
    };
  }
});

// node_modules/postcss/lib/warning.js
var require_warning = __commonJS({
  "node_modules/postcss/lib/warning.js"(exports, module2) {
    "use strict";
    var Warning = class {
      constructor(text, opts = {}) {
        this.type = "warning";
        this.text = text;
        if (opts.node && opts.node.source) {
          let range = opts.node.rangeBy(opts);
          this.line = range.start.line;
          this.column = range.start.column;
          this.endLine = range.end.line;
          this.endColumn = range.end.column;
        }
        for (let opt in opts)
          this[opt] = opts[opt];
      }
      toString() {
        if (this.node) {
          return this.node.error(this.text, {
            index: this.index,
            plugin: this.plugin,
            word: this.word
          }).message;
        }
        if (this.plugin) {
          return this.plugin + ": " + this.text;
        }
        return this.text;
      }
    };
    module2.exports = Warning;
    Warning.default = Warning;
  }
});

// node_modules/postcss/lib/result.js
var require_result = __commonJS({
  "node_modules/postcss/lib/result.js"(exports, module2) {
    "use strict";
    var Warning = require_warning();
    var Result = class {
      constructor(processor, root, opts) {
        this.processor = processor;
        this.messages = [];
        this.root = root;
        this.opts = opts;
        this.css = void 0;
        this.map = void 0;
      }
      toString() {
        return this.css;
      }
      warn(text, opts = {}) {
        if (!opts.plugin) {
          if (this.lastPlugin && this.lastPlugin.postcssPlugin) {
            opts.plugin = this.lastPlugin.postcssPlugin;
          }
        }
        let warning = new Warning(text, opts);
        this.messages.push(warning);
        return warning;
      }
      warnings() {
        return this.messages.filter((i) => i.type === "warning");
      }
      get content() {
        return this.css;
      }
    };
    module2.exports = Result;
    Result.default = Result;
  }
});

// node_modules/postcss/lib/at-rule.js
var require_at_rule = __commonJS({
  "node_modules/postcss/lib/at-rule.js"(exports, module2) {
    "use strict";
    var Container = require_container();
    var AtRule = class extends Container {
      constructor(defaults) {
        super(defaults);
        this.type = "atrule";
      }
      append(...children) {
        if (!this.proxyOf.nodes)
          this.nodes = [];
        return super.append(...children);
      }
      prepend(...children) {
        if (!this.proxyOf.nodes)
          this.nodes = [];
        return super.prepend(...children);
      }
    };
    module2.exports = AtRule;
    AtRule.default = AtRule;
    Container.registerAtRule(AtRule);
  }
});

// node_modules/postcss/lib/root.js
var require_root = __commonJS({
  "node_modules/postcss/lib/root.js"(exports, module2) {
    "use strict";
    var Container = require_container();
    var LazyResult;
    var Processor;
    var Root = class extends Container {
      constructor(defaults) {
        super(defaults);
        this.type = "root";
        if (!this.nodes)
          this.nodes = [];
      }
      normalize(child, sample, type) {
        let nodes = super.normalize(child);
        if (sample) {
          if (type === "prepend") {
            if (this.nodes.length > 1) {
              sample.raws.before = this.nodes[1].raws.before;
            } else {
              delete sample.raws.before;
            }
          } else if (this.first !== sample) {
            for (let node of nodes) {
              node.raws.before = sample.raws.before;
            }
          }
        }
        return nodes;
      }
      removeChild(child, ignore) {
        let index = this.index(child);
        if (!ignore && index === 0 && this.nodes.length > 1) {
          this.nodes[1].raws.before = this.nodes[index].raws.before;
        }
        return super.removeChild(child);
      }
      toResult(opts = {}) {
        let lazy = new LazyResult(new Processor(), this, opts);
        return lazy.stringify();
      }
    };
    Root.registerLazyResult = (dependant) => {
      LazyResult = dependant;
    };
    Root.registerProcessor = (dependant) => {
      Processor = dependant;
    };
    module2.exports = Root;
    Root.default = Root;
    Container.registerRoot(Root);
  }
});

// node_modules/postcss/lib/list.js
var require_list = __commonJS({
  "node_modules/postcss/lib/list.js"(exports, module2) {
    "use strict";
    var list = {
      comma(string) {
        return list.split(string, [","], true);
      },
      space(string) {
        let spaces = [" ", "\n", "	"];
        return list.split(string, spaces);
      },
      split(string, separators, last) {
        let array = [];
        let current = "";
        let split = false;
        let func = 0;
        let inQuote = false;
        let prevQuote = "";
        let escape = false;
        for (let letter of string) {
          if (escape) {
            escape = false;
          } else if (letter === "\\") {
            escape = true;
          } else if (inQuote) {
            if (letter === prevQuote) {
              inQuote = false;
            }
          } else if (letter === '"' || letter === "'") {
            inQuote = true;
            prevQuote = letter;
          } else if (letter === "(") {
            func += 1;
          } else if (letter === ")") {
            if (func > 0)
              func -= 1;
          } else if (func === 0) {
            if (separators.includes(letter))
              split = true;
          }
          if (split) {
            if (current !== "")
              array.push(current.trim());
            current = "";
            split = false;
          } else {
            current += letter;
          }
        }
        if (last || current !== "")
          array.push(current.trim());
        return array;
      }
    };
    module2.exports = list;
    list.default = list;
  }
});

// node_modules/postcss/lib/rule.js
var require_rule = __commonJS({
  "node_modules/postcss/lib/rule.js"(exports, module2) {
    "use strict";
    var Container = require_container();
    var list = require_list();
    var Rule = class extends Container {
      constructor(defaults) {
        super(defaults);
        this.type = "rule";
        if (!this.nodes)
          this.nodes = [];
      }
      get selectors() {
        return list.comma(this.selector);
      }
      set selectors(values) {
        let match = this.selector ? this.selector.match(/,\s*/) : null;
        let sep = match ? match[0] : "," + this.raw("between", "beforeOpen");
        this.selector = values.join(sep);
      }
    };
    module2.exports = Rule;
    Rule.default = Rule;
    Container.registerRule(Rule);
  }
});

// node_modules/postcss/lib/parser.js
var require_parser = __commonJS({
  "node_modules/postcss/lib/parser.js"(exports, module2) {
    "use strict";
    var Declaration = require_declaration();
    var tokenizer = require_tokenize();
    var Comment = require_comment();
    var AtRule = require_at_rule();
    var Root = require_root();
    var Rule = require_rule();
    var SAFE_COMMENT_NEIGHBOR = {
      empty: true,
      space: true
    };
    function findLastWithPosition(tokens) {
      for (let i = tokens.length - 1; i >= 0; i--) {
        let token = tokens[i];
        let pos = token[3] || token[2];
        if (pos)
          return pos;
      }
    }
    var Parser = class {
      constructor(input) {
        this.input = input;
        this.root = new Root();
        this.current = this.root;
        this.spaces = "";
        this.semicolon = false;
        this.customProperty = false;
        this.createTokenizer();
        this.root.source = { input, start: { column: 1, line: 1, offset: 0 } };
      }
      atrule(token) {
        let node = new AtRule();
        node.name = token[1].slice(1);
        if (node.name === "") {
          this.unnamedAtrule(node, token);
        }
        this.init(node, token[2]);
        let type;
        let prev;
        let shift;
        let last = false;
        let open = false;
        let params = [];
        let brackets = [];
        while (!this.tokenizer.endOfFile()) {
          token = this.tokenizer.nextToken();
          type = token[0];
          if (type === "(" || type === "[") {
            brackets.push(type === "(" ? ")" : "]");
          } else if (type === "{" && brackets.length > 0) {
            brackets.push("}");
          } else if (type === brackets[brackets.length - 1]) {
            brackets.pop();
          }
          if (brackets.length === 0) {
            if (type === ";") {
              node.source.end = this.getPosition(token[2]);
              node.source.end.offset++;
              this.semicolon = true;
              break;
            } else if (type === "{") {
              open = true;
              break;
            } else if (type === "}") {
              if (params.length > 0) {
                shift = params.length - 1;
                prev = params[shift];
                while (prev && prev[0] === "space") {
                  prev = params[--shift];
                }
                if (prev) {
                  node.source.end = this.getPosition(prev[3] || prev[2]);
                  node.source.end.offset++;
                }
              }
              this.end(token);
              break;
            } else {
              params.push(token);
            }
          } else {
            params.push(token);
          }
          if (this.tokenizer.endOfFile()) {
            last = true;
            break;
          }
        }
        node.raws.between = this.spacesAndCommentsFromEnd(params);
        if (params.length) {
          node.raws.afterName = this.spacesAndCommentsFromStart(params);
          this.raw(node, "params", params);
          if (last) {
            token = params[params.length - 1];
            node.source.end = this.getPosition(token[3] || token[2]);
            node.source.end.offset++;
            this.spaces = node.raws.between;
            node.raws.between = "";
          }
        } else {
          node.raws.afterName = "";
          node.params = "";
        }
        if (open) {
          node.nodes = [];
          this.current = node;
        }
      }
      checkMissedSemicolon(tokens) {
        let colon = this.colon(tokens);
        if (colon === false)
          return;
        let founded = 0;
        let token;
        for (let j = colon - 1; j >= 0; j--) {
          token = tokens[j];
          if (token[0] !== "space") {
            founded += 1;
            if (founded === 2)
              break;
          }
        }
        throw this.input.error(
          "Missed semicolon",
          token[0] === "word" ? token[3] + 1 : token[2]
        );
      }
      colon(tokens) {
        let brackets = 0;
        let token, type, prev;
        for (let [i, element] of tokens.entries()) {
          token = element;
          type = token[0];
          if (type === "(") {
            brackets += 1;
          }
          if (type === ")") {
            brackets -= 1;
          }
          if (brackets === 0 && type === ":") {
            if (!prev) {
              this.doubleColon(token);
            } else if (prev[0] === "word" && prev[1] === "progid") {
              continue;
            } else {
              return i;
            }
          }
          prev = token;
        }
        return false;
      }
      comment(token) {
        let node = new Comment();
        this.init(node, token[2]);
        node.source.end = this.getPosition(token[3] || token[2]);
        node.source.end.offset++;
        let text = token[1].slice(2, -2);
        if (/^\s*$/.test(text)) {
          node.text = "";
          node.raws.left = text;
          node.raws.right = "";
        } else {
          let match = text.match(/^(\s*)([^]*\S)(\s*)$/);
          node.text = match[2];
          node.raws.left = match[1];
          node.raws.right = match[3];
        }
      }
      createTokenizer() {
        this.tokenizer = tokenizer(this.input);
      }
      decl(tokens, customProperty) {
        let node = new Declaration();
        this.init(node, tokens[0][2]);
        let last = tokens[tokens.length - 1];
        if (last[0] === ";") {
          this.semicolon = true;
          tokens.pop();
        }
        node.source.end = this.getPosition(
          last[3] || last[2] || findLastWithPosition(tokens)
        );
        node.source.end.offset++;
        while (tokens[0][0] !== "word") {
          if (tokens.length === 1)
            this.unknownWord(tokens);
          node.raws.before += tokens.shift()[1];
        }
        node.source.start = this.getPosition(tokens[0][2]);
        node.prop = "";
        while (tokens.length) {
          let type = tokens[0][0];
          if (type === ":" || type === "space" || type === "comment") {
            break;
          }
          node.prop += tokens.shift()[1];
        }
        node.raws.between = "";
        let token;
        while (tokens.length) {
          token = tokens.shift();
          if (token[0] === ":") {
            node.raws.between += token[1];
            break;
          } else {
            if (token[0] === "word" && /\w/.test(token[1])) {
              this.unknownWord([token]);
            }
            node.raws.between += token[1];
          }
        }
        if (node.prop[0] === "_" || node.prop[0] === "*") {
          node.raws.before += node.prop[0];
          node.prop = node.prop.slice(1);
        }
        let firstSpaces = [];
        let next;
        while (tokens.length) {
          next = tokens[0][0];
          if (next !== "space" && next !== "comment")
            break;
          firstSpaces.push(tokens.shift());
        }
        this.precheckMissedSemicolon(tokens);
        for (let i = tokens.length - 1; i >= 0; i--) {
          token = tokens[i];
          if (token[1].toLowerCase() === "!important") {
            node.important = true;
            let string = this.stringFrom(tokens, i);
            string = this.spacesFromEnd(tokens) + string;
            if (string !== " !important")
              node.raws.important = string;
            break;
          } else if (token[1].toLowerCase() === "important") {
            let cache = tokens.slice(0);
            let str = "";
            for (let j = i; j > 0; j--) {
              let type = cache[j][0];
              if (str.trim().indexOf("!") === 0 && type !== "space") {
                break;
              }
              str = cache.pop()[1] + str;
            }
            if (str.trim().indexOf("!") === 0) {
              node.important = true;
              node.raws.important = str;
              tokens = cache;
            }
          }
          if (token[0] !== "space" && token[0] !== "comment") {
            break;
          }
        }
        let hasWord = tokens.some((i) => i[0] !== "space" && i[0] !== "comment");
        if (hasWord) {
          node.raws.between += firstSpaces.map((i) => i[1]).join("");
          firstSpaces = [];
        }
        this.raw(node, "value", firstSpaces.concat(tokens), customProperty);
        if (node.value.includes(":") && !customProperty) {
          this.checkMissedSemicolon(tokens);
        }
      }
      doubleColon(token) {
        throw this.input.error(
          "Double colon",
          { offset: token[2] },
          { offset: token[2] + token[1].length }
        );
      }
      emptyRule(token) {
        let node = new Rule();
        this.init(node, token[2]);
        node.selector = "";
        node.raws.between = "";
        this.current = node;
      }
      end(token) {
        if (this.current.nodes && this.current.nodes.length) {
          this.current.raws.semicolon = this.semicolon;
        }
        this.semicolon = false;
        this.current.raws.after = (this.current.raws.after || "") + this.spaces;
        this.spaces = "";
        if (this.current.parent) {
          this.current.source.end = this.getPosition(token[2]);
          this.current.source.end.offset++;
          this.current = this.current.parent;
        } else {
          this.unexpectedClose(token);
        }
      }
      endFile() {
        if (this.current.parent)
          this.unclosedBlock();
        if (this.current.nodes && this.current.nodes.length) {
          this.current.raws.semicolon = this.semicolon;
        }
        this.current.raws.after = (this.current.raws.after || "") + this.spaces;
        this.root.source.end = this.getPosition(this.tokenizer.position());
      }
      freeSemicolon(token) {
        this.spaces += token[1];
        if (this.current.nodes) {
          let prev = this.current.nodes[this.current.nodes.length - 1];
          if (prev && prev.type === "rule" && !prev.raws.ownSemicolon) {
            prev.raws.ownSemicolon = this.spaces;
            this.spaces = "";
          }
        }
      }
      // Helpers
      getPosition(offset) {
        let pos = this.input.fromOffset(offset);
        return {
          column: pos.col,
          line: pos.line,
          offset
        };
      }
      init(node, offset) {
        this.current.push(node);
        node.source = {
          input: this.input,
          start: this.getPosition(offset)
        };
        node.raws.before = this.spaces;
        this.spaces = "";
        if (node.type !== "comment")
          this.semicolon = false;
      }
      other(start) {
        let end = false;
        let type = null;
        let colon = false;
        let bracket = null;
        let brackets = [];
        let customProperty = start[1].startsWith("--");
        let tokens = [];
        let token = start;
        while (token) {
          type = token[0];
          tokens.push(token);
          if (type === "(" || type === "[") {
            if (!bracket)
              bracket = token;
            brackets.push(type === "(" ? ")" : "]");
          } else if (customProperty && colon && type === "{") {
            if (!bracket)
              bracket = token;
            brackets.push("}");
          } else if (brackets.length === 0) {
            if (type === ";") {
              if (colon) {
                this.decl(tokens, customProperty);
                return;
              } else {
                break;
              }
            } else if (type === "{") {
              this.rule(tokens);
              return;
            } else if (type === "}") {
              this.tokenizer.back(tokens.pop());
              end = true;
              break;
            } else if (type === ":") {
              colon = true;
            }
          } else if (type === brackets[brackets.length - 1]) {
            brackets.pop();
            if (brackets.length === 0)
              bracket = null;
          }
          token = this.tokenizer.nextToken();
        }
        if (this.tokenizer.endOfFile())
          end = true;
        if (brackets.length > 0)
          this.unclosedBracket(bracket);
        if (end && colon) {
          if (!customProperty) {
            while (tokens.length) {
              token = tokens[tokens.length - 1][0];
              if (token !== "space" && token !== "comment")
                break;
              this.tokenizer.back(tokens.pop());
            }
          }
          this.decl(tokens, customProperty);
        } else {
          this.unknownWord(tokens);
        }
      }
      parse() {
        let token;
        while (!this.tokenizer.endOfFile()) {
          token = this.tokenizer.nextToken();
          switch (token[0]) {
            case "space":
              this.spaces += token[1];
              break;
            case ";":
              this.freeSemicolon(token);
              break;
            case "}":
              this.end(token);
              break;
            case "comment":
              this.comment(token);
              break;
            case "at-word":
              this.atrule(token);
              break;
            case "{":
              this.emptyRule(token);
              break;
            default:
              this.other(token);
              break;
          }
        }
        this.endFile();
      }
      precheckMissedSemicolon() {
      }
      raw(node, prop, tokens, customProperty) {
        let token, type;
        let length = tokens.length;
        let value = "";
        let clean = true;
        let next, prev;
        for (let i = 0; i < length; i += 1) {
          token = tokens[i];
          type = token[0];
          if (type === "space" && i === length - 1 && !customProperty) {
            clean = false;
          } else if (type === "comment") {
            prev = tokens[i - 1] ? tokens[i - 1][0] : "empty";
            next = tokens[i + 1] ? tokens[i + 1][0] : "empty";
            if (!SAFE_COMMENT_NEIGHBOR[prev] && !SAFE_COMMENT_NEIGHBOR[next]) {
              if (value.slice(-1) === ",") {
                clean = false;
              } else {
                value += token[1];
              }
            } else {
              clean = false;
            }
          } else {
            value += token[1];
          }
        }
        if (!clean) {
          let raw = tokens.reduce((all, i) => all + i[1], "");
          node.raws[prop] = { raw, value };
        }
        node[prop] = value;
      }
      rule(tokens) {
        tokens.pop();
        let node = new Rule();
        this.init(node, tokens[0][2]);
        node.raws.between = this.spacesAndCommentsFromEnd(tokens);
        this.raw(node, "selector", tokens);
        this.current = node;
      }
      spacesAndCommentsFromEnd(tokens) {
        let lastTokenType;
        let spaces = "";
        while (tokens.length) {
          lastTokenType = tokens[tokens.length - 1][0];
          if (lastTokenType !== "space" && lastTokenType !== "comment")
            break;
          spaces = tokens.pop()[1] + spaces;
        }
        return spaces;
      }
      // Errors
      spacesAndCommentsFromStart(tokens) {
        let next;
        let spaces = "";
        while (tokens.length) {
          next = tokens[0][0];
          if (next !== "space" && next !== "comment")
            break;
          spaces += tokens.shift()[1];
        }
        return spaces;
      }
      spacesFromEnd(tokens) {
        let lastTokenType;
        let spaces = "";
        while (tokens.length) {
          lastTokenType = tokens[tokens.length - 1][0];
          if (lastTokenType !== "space")
            break;
          spaces = tokens.pop()[1] + spaces;
        }
        return spaces;
      }
      stringFrom(tokens, from) {
        let result = "";
        for (let i = from; i < tokens.length; i++) {
          result += tokens[i][1];
        }
        tokens.splice(from, tokens.length - from);
        return result;
      }
      unclosedBlock() {
        let pos = this.current.source.start;
        throw this.input.error("Unclosed block", pos.line, pos.column);
      }
      unclosedBracket(bracket) {
        throw this.input.error(
          "Unclosed bracket",
          { offset: bracket[2] },
          { offset: bracket[2] + 1 }
        );
      }
      unexpectedClose(token) {
        throw this.input.error(
          "Unexpected }",
          { offset: token[2] },
          { offset: token[2] + 1 }
        );
      }
      unknownWord(tokens) {
        throw this.input.error(
          "Unknown word",
          { offset: tokens[0][2] },
          { offset: tokens[0][2] + tokens[0][1].length }
        );
      }
      unnamedAtrule(node, token) {
        throw this.input.error(
          "At-rule without name",
          { offset: token[2] },
          { offset: token[2] + token[1].length }
        );
      }
    };
    module2.exports = Parser;
  }
});

// node_modules/postcss/lib/parse.js
var require_parse = __commonJS({
  "node_modules/postcss/lib/parse.js"(exports, module2) {
    "use strict";
    var Container = require_container();
    var Parser = require_parser();
    var Input = require_input();
    function parse(css, opts) {
      let input = new Input(css, opts);
      let parser = new Parser(input);
      try {
        parser.parse();
      } catch (e) {
        if (process.env.NODE_ENV !== "production") {
          if (e.name === "CssSyntaxError" && opts && opts.from) {
            if (/\.scss$/i.test(opts.from)) {
              e.message += "\nYou tried to parse SCSS with the standard CSS parser; try again with the postcss-scss parser";
            } else if (/\.sass/i.test(opts.from)) {
              e.message += "\nYou tried to parse Sass with the standard CSS parser; try again with the postcss-sass parser";
            } else if (/\.less$/i.test(opts.from)) {
              e.message += "\nYou tried to parse Less with the standard CSS parser; try again with the postcss-less parser";
            }
          }
        }
        throw e;
      }
      return parser.root;
    }
    module2.exports = parse;
    parse.default = parse;
    Container.registerParse(parse);
  }
});

// node_modules/postcss/lib/lazy-result.js
var require_lazy_result = __commonJS({
  "node_modules/postcss/lib/lazy-result.js"(exports, module2) {
    "use strict";
    var { isClean, my } = require_symbols();
    var MapGenerator = require_map_generator();
    var stringify = require_stringify();
    var Container = require_container();
    var Document = require_document();
    var warnOnce = require_warn_once();
    var Result = require_result();
    var parse = require_parse();
    var Root = require_root();
    var TYPE_TO_CLASS_NAME = {
      atrule: "AtRule",
      comment: "Comment",
      decl: "Declaration",
      document: "Document",
      root: "Root",
      rule: "Rule"
    };
    var PLUGIN_PROPS = {
      AtRule: true,
      AtRuleExit: true,
      Comment: true,
      CommentExit: true,
      Declaration: true,
      DeclarationExit: true,
      Document: true,
      DocumentExit: true,
      Once: true,
      OnceExit: true,
      postcssPlugin: true,
      prepare: true,
      Root: true,
      RootExit: true,
      Rule: true,
      RuleExit: true
    };
    var NOT_VISITORS = {
      Once: true,
      postcssPlugin: true,
      prepare: true
    };
    var CHILDREN = 0;
    function isPromise(obj) {
      return typeof obj === "object" && typeof obj.then === "function";
    }
    function getEvents(node) {
      let key = false;
      let type = TYPE_TO_CLASS_NAME[node.type];
      if (node.type === "decl") {
        key = node.prop.toLowerCase();
      } else if (node.type === "atrule") {
        key = node.name.toLowerCase();
      }
      if (key && node.append) {
        return [
          type,
          type + "-" + key,
          CHILDREN,
          type + "Exit",
          type + "Exit-" + key
        ];
      } else if (key) {
        return [type, type + "-" + key, type + "Exit", type + "Exit-" + key];
      } else if (node.append) {
        return [type, CHILDREN, type + "Exit"];
      } else {
        return [type, type + "Exit"];
      }
    }
    function toStack(node) {
      let events;
      if (node.type === "document") {
        events = ["Document", CHILDREN, "DocumentExit"];
      } else if (node.type === "root") {
        events = ["Root", CHILDREN, "RootExit"];
      } else {
        events = getEvents(node);
      }
      return {
        eventIndex: 0,
        events,
        iterator: 0,
        node,
        visitorIndex: 0,
        visitors: []
      };
    }
    function cleanMarks(node) {
      node[isClean] = false;
      if (node.nodes)
        node.nodes.forEach((i) => cleanMarks(i));
      return node;
    }
    var postcss = {};
    var LazyResult = class _LazyResult {
      constructor(processor, css, opts) {
        this.stringified = false;
        this.processed = false;
        let root;
        if (typeof css === "object" && css !== null && (css.type === "root" || css.type === "document")) {
          root = cleanMarks(css);
        } else if (css instanceof _LazyResult || css instanceof Result) {
          root = cleanMarks(css.root);
          if (css.map) {
            if (typeof opts.map === "undefined")
              opts.map = {};
            if (!opts.map.inline)
              opts.map.inline = false;
            opts.map.prev = css.map;
          }
        } else {
          let parser = parse;
          if (opts.syntax)
            parser = opts.syntax.parse;
          if (opts.parser)
            parser = opts.parser;
          if (parser.parse)
            parser = parser.parse;
          try {
            root = parser(css, opts);
          } catch (error) {
            this.processed = true;
            this.error = error;
          }
          if (root && !root[my]) {
            Container.rebuild(root);
          }
        }
        this.result = new Result(processor, root, opts);
        this.helpers = { ...postcss, postcss, result: this.result };
        this.plugins = this.processor.plugins.map((plugin) => {
          if (typeof plugin === "object" && plugin.prepare) {
            return { ...plugin, ...plugin.prepare(this.result) };
          } else {
            return plugin;
          }
        });
      }
      async() {
        if (this.error)
          return Promise.reject(this.error);
        if (this.processed)
          return Promise.resolve(this.result);
        if (!this.processing) {
          this.processing = this.runAsync();
        }
        return this.processing;
      }
      catch(onRejected) {
        return this.async().catch(onRejected);
      }
      finally(onFinally) {
        return this.async().then(onFinally, onFinally);
      }
      getAsyncError() {
        throw new Error("Use process(css).then(cb) to work with async plugins");
      }
      handleError(error, node) {
        let plugin = this.result.lastPlugin;
        try {
          if (node)
            node.addToError(error);
          this.error = error;
          if (error.name === "CssSyntaxError" && !error.plugin) {
            error.plugin = plugin.postcssPlugin;
            error.setMessage();
          } else if (plugin.postcssVersion) {
            if (process.env.NODE_ENV !== "production") {
              let pluginName = plugin.postcssPlugin;
              let pluginVer = plugin.postcssVersion;
              let runtimeVer = this.result.processor.version;
              let a = pluginVer.split(".");
              let b = runtimeVer.split(".");
              if (a[0] !== b[0] || parseInt(a[1]) > parseInt(b[1])) {
                console.error(
                  "Unknown error from PostCSS plugin. Your current PostCSS version is " + runtimeVer + ", but " + pluginName + " uses " + pluginVer + ". Perhaps this is the source of the error below."
                );
              }
            }
          }
        } catch (err) {
          if (console && console.error)
            console.error(err);
        }
        return error;
      }
      prepareVisitors() {
        this.listeners = {};
        let add = (plugin, type, cb) => {
          if (!this.listeners[type])
            this.listeners[type] = [];
          this.listeners[type].push([plugin, cb]);
        };
        for (let plugin of this.plugins) {
          if (typeof plugin === "object") {
            for (let event in plugin) {
              if (!PLUGIN_PROPS[event] && /^[A-Z]/.test(event)) {
                throw new Error(
                  `Unknown event ${event} in ${plugin.postcssPlugin}. Try to update PostCSS (${this.processor.version} now).`
                );
              }
              if (!NOT_VISITORS[event]) {
                if (typeof plugin[event] === "object") {
                  for (let filter in plugin[event]) {
                    if (filter === "*") {
                      add(plugin, event, plugin[event][filter]);
                    } else {
                      add(
                        plugin,
                        event + "-" + filter.toLowerCase(),
                        plugin[event][filter]
                      );
                    }
                  }
                } else if (typeof plugin[event] === "function") {
                  add(plugin, event, plugin[event]);
                }
              }
            }
          }
        }
        this.hasListener = Object.keys(this.listeners).length > 0;
      }
      async runAsync() {
        this.plugin = 0;
        for (let i = 0; i < this.plugins.length; i++) {
          let plugin = this.plugins[i];
          let promise = this.runOnRoot(plugin);
          if (isPromise(promise)) {
            try {
              await promise;
            } catch (error) {
              throw this.handleError(error);
            }
          }
        }
        this.prepareVisitors();
        if (this.hasListener) {
          let root = this.result.root;
          while (!root[isClean]) {
            root[isClean] = true;
            let stack = [toStack(root)];
            while (stack.length > 0) {
              let promise = this.visitTick(stack);
              if (isPromise(promise)) {
                try {
                  await promise;
                } catch (e) {
                  let node = stack[stack.length - 1].node;
                  throw this.handleError(e, node);
                }
              }
            }
          }
          if (this.listeners.OnceExit) {
            for (let [plugin, visitor] of this.listeners.OnceExit) {
              this.result.lastPlugin = plugin;
              try {
                if (root.type === "document") {
                  let roots = root.nodes.map(
                    (subRoot) => visitor(subRoot, this.helpers)
                  );
                  await Promise.all(roots);
                } else {
                  await visitor(root, this.helpers);
                }
              } catch (e) {
                throw this.handleError(e);
              }
            }
          }
        }
        this.processed = true;
        return this.stringify();
      }
      runOnRoot(plugin) {
        this.result.lastPlugin = plugin;
        try {
          if (typeof plugin === "object" && plugin.Once) {
            if (this.result.root.type === "document") {
              let roots = this.result.root.nodes.map(
                (root) => plugin.Once(root, this.helpers)
              );
              if (isPromise(roots[0])) {
                return Promise.all(roots);
              }
              return roots;
            }
            return plugin.Once(this.result.root, this.helpers);
          } else if (typeof plugin === "function") {
            return plugin(this.result.root, this.result);
          }
        } catch (error) {
          throw this.handleError(error);
        }
      }
      stringify() {
        if (this.error)
          throw this.error;
        if (this.stringified)
          return this.result;
        this.stringified = true;
        this.sync();
        let opts = this.result.opts;
        let str = stringify;
        if (opts.syntax)
          str = opts.syntax.stringify;
        if (opts.stringifier)
          str = opts.stringifier;
        if (str.stringify)
          str = str.stringify;
        let map = new MapGenerator(str, this.result.root, this.result.opts);
        let data = map.generate();
        this.result.css = data[0];
        this.result.map = data[1];
        return this.result;
      }
      sync() {
        if (this.error)
          throw this.error;
        if (this.processed)
          return this.result;
        this.processed = true;
        if (this.processing) {
          throw this.getAsyncError();
        }
        for (let plugin of this.plugins) {
          let promise = this.runOnRoot(plugin);
          if (isPromise(promise)) {
            throw this.getAsyncError();
          }
        }
        this.prepareVisitors();
        if (this.hasListener) {
          let root = this.result.root;
          while (!root[isClean]) {
            root[isClean] = true;
            this.walkSync(root);
          }
          if (this.listeners.OnceExit) {
            if (root.type === "document") {
              for (let subRoot of root.nodes) {
                this.visitSync(this.listeners.OnceExit, subRoot);
              }
            } else {
              this.visitSync(this.listeners.OnceExit, root);
            }
          }
        }
        return this.result;
      }
      then(onFulfilled, onRejected) {
        if (process.env.NODE_ENV !== "production") {
          if (!("from" in this.opts)) {
            warnOnce(
              "Without `from` option PostCSS could generate wrong source map and will not find Browserslist config. Set it to CSS file path or to `undefined` to prevent this warning."
            );
          }
        }
        return this.async().then(onFulfilled, onRejected);
      }
      toString() {
        return this.css;
      }
      visitSync(visitors, node) {
        for (let [plugin, visitor] of visitors) {
          this.result.lastPlugin = plugin;
          let promise;
          try {
            promise = visitor(node, this.helpers);
          } catch (e) {
            throw this.handleError(e, node.proxyOf);
          }
          if (node.type !== "root" && node.type !== "document" && !node.parent) {
            return true;
          }
          if (isPromise(promise)) {
            throw this.getAsyncError();
          }
        }
      }
      visitTick(stack) {
        let visit = stack[stack.length - 1];
        let { node, visitors } = visit;
        if (node.type !== "root" && node.type !== "document" && !node.parent) {
          stack.pop();
          return;
        }
        if (visitors.length > 0 && visit.visitorIndex < visitors.length) {
          let [plugin, visitor] = visitors[visit.visitorIndex];
          visit.visitorIndex += 1;
          if (visit.visitorIndex === visitors.length) {
            visit.visitors = [];
            visit.visitorIndex = 0;
          }
          this.result.lastPlugin = plugin;
          try {
            return visitor(node.toProxy(), this.helpers);
          } catch (e) {
            throw this.handleError(e, node);
          }
        }
        if (visit.iterator !== 0) {
          let iterator = visit.iterator;
          let child;
          while (child = node.nodes[node.indexes[iterator]]) {
            node.indexes[iterator] += 1;
            if (!child[isClean]) {
              child[isClean] = true;
              stack.push(toStack(child));
              return;
            }
          }
          visit.iterator = 0;
          delete node.indexes[iterator];
        }
        let events = visit.events;
        while (visit.eventIndex < events.length) {
          let event = events[visit.eventIndex];
          visit.eventIndex += 1;
          if (event === CHILDREN) {
            if (node.nodes && node.nodes.length) {
              node[isClean] = true;
              visit.iterator = node.getIterator();
            }
            return;
          } else if (this.listeners[event]) {
            visit.visitors = this.listeners[event];
            return;
          }
        }
        stack.pop();
      }
      walkSync(node) {
        node[isClean] = true;
        let events = getEvents(node);
        for (let event of events) {
          if (event === CHILDREN) {
            if (node.nodes) {
              node.each((child) => {
                if (!child[isClean])
                  this.walkSync(child);
              });
            }
          } else {
            let visitors = this.listeners[event];
            if (visitors) {
              if (this.visitSync(visitors, node.toProxy()))
                return;
            }
          }
        }
      }
      warnings() {
        return this.sync().warnings();
      }
      get content() {
        return this.stringify().content;
      }
      get css() {
        return this.stringify().css;
      }
      get map() {
        return this.stringify().map;
      }
      get messages() {
        return this.sync().messages;
      }
      get opts() {
        return this.result.opts;
      }
      get processor() {
        return this.result.processor;
      }
      get root() {
        return this.sync().root;
      }
      get [Symbol.toStringTag]() {
        return "LazyResult";
      }
    };
    LazyResult.registerPostcss = (dependant) => {
      postcss = dependant;
    };
    module2.exports = LazyResult;
    LazyResult.default = LazyResult;
    Root.registerLazyResult(LazyResult);
    Document.registerLazyResult(LazyResult);
  }
});

// node_modules/postcss/lib/no-work-result.js
var require_no_work_result = __commonJS({
  "node_modules/postcss/lib/no-work-result.js"(exports, module2) {
    "use strict";
    var MapGenerator = require_map_generator();
    var stringify = require_stringify();
    var warnOnce = require_warn_once();
    var parse = require_parse();
    var Result = require_result();
    var NoWorkResult = class {
      constructor(processor, css, opts) {
        css = css.toString();
        this.stringified = false;
        this._processor = processor;
        this._css = css;
        this._opts = opts;
        this._map = void 0;
        let root;
        let str = stringify;
        this.result = new Result(this._processor, root, this._opts);
        this.result.css = css;
        let self2 = this;
        Object.defineProperty(this.result, "root", {
          get() {
            return self2.root;
          }
        });
        let map = new MapGenerator(str, root, this._opts, css);
        if (map.isMap()) {
          let [generatedCSS, generatedMap] = map.generate();
          if (generatedCSS) {
            this.result.css = generatedCSS;
          }
          if (generatedMap) {
            this.result.map = generatedMap;
          }
        }
      }
      async() {
        if (this.error)
          return Promise.reject(this.error);
        return Promise.resolve(this.result);
      }
      catch(onRejected) {
        return this.async().catch(onRejected);
      }
      finally(onFinally) {
        return this.async().then(onFinally, onFinally);
      }
      sync() {
        if (this.error)
          throw this.error;
        return this.result;
      }
      then(onFulfilled, onRejected) {
        if (process.env.NODE_ENV !== "production") {
          if (!("from" in this._opts)) {
            warnOnce(
              "Without `from` option PostCSS could generate wrong source map and will not find Browserslist config. Set it to CSS file path or to `undefined` to prevent this warning."
            );
          }
        }
        return this.async().then(onFulfilled, onRejected);
      }
      toString() {
        return this._css;
      }
      warnings() {
        return [];
      }
      get content() {
        return this.result.css;
      }
      get css() {
        return this.result.css;
      }
      get map() {
        return this.result.map;
      }
      get messages() {
        return [];
      }
      get opts() {
        return this.result.opts;
      }
      get processor() {
        return this.result.processor;
      }
      get root() {
        if (this._root) {
          return this._root;
        }
        let root;
        let parser = parse;
        try {
          root = parser(this._css, this._opts);
        } catch (error) {
          this.error = error;
        }
        if (this.error) {
          throw this.error;
        } else {
          this._root = root;
          return root;
        }
      }
      get [Symbol.toStringTag]() {
        return "NoWorkResult";
      }
    };
    module2.exports = NoWorkResult;
    NoWorkResult.default = NoWorkResult;
  }
});

// node_modules/postcss/lib/processor.js
var require_processor = __commonJS({
  "node_modules/postcss/lib/processor.js"(exports, module2) {
    "use strict";
    var NoWorkResult = require_no_work_result();
    var LazyResult = require_lazy_result();
    var Document = require_document();
    var Root = require_root();
    var Processor = class {
      constructor(plugins = []) {
        this.version = "8.4.31";
        this.plugins = this.normalize(plugins);
      }
      normalize(plugins) {
        let normalized = [];
        for (let i of plugins) {
          if (i.postcss === true) {
            i = i();
          } else if (i.postcss) {
            i = i.postcss;
          }
          if (typeof i === "object" && Array.isArray(i.plugins)) {
            normalized = normalized.concat(i.plugins);
          } else if (typeof i === "object" && i.postcssPlugin) {
            normalized.push(i);
          } else if (typeof i === "function") {
            normalized.push(i);
          } else if (typeof i === "object" && (i.parse || i.stringify)) {
            if (process.env.NODE_ENV !== "production") {
              throw new Error(
                "PostCSS syntaxes cannot be used as plugins. Instead, please use one of the syntax/parser/stringifier options as outlined in your PostCSS runner documentation."
              );
            }
          } else {
            throw new Error(i + " is not a PostCSS plugin");
          }
        }
        return normalized;
      }
      process(css, opts = {}) {
        if (this.plugins.length === 0 && typeof opts.parser === "undefined" && typeof opts.stringifier === "undefined" && typeof opts.syntax === "undefined") {
          return new NoWorkResult(this, css, opts);
        } else {
          return new LazyResult(this, css, opts);
        }
      }
      use(plugin) {
        this.plugins = this.plugins.concat(this.normalize([plugin]));
        return this;
      }
    };
    module2.exports = Processor;
    Processor.default = Processor;
    Root.registerProcessor(Processor);
    Document.registerProcessor(Processor);
  }
});

// node_modules/postcss/lib/fromJSON.js
var require_fromJSON = __commonJS({
  "node_modules/postcss/lib/fromJSON.js"(exports, module2) {
    "use strict";
    var Declaration = require_declaration();
    var PreviousMap = require_previous_map();
    var Comment = require_comment();
    var AtRule = require_at_rule();
    var Input = require_input();
    var Root = require_root();
    var Rule = require_rule();
    function fromJSON(json, inputs) {
      if (Array.isArray(json))
        return json.map((n) => fromJSON(n));
      let { inputs: ownInputs, ...defaults } = json;
      if (ownInputs) {
        inputs = [];
        for (let input of ownInputs) {
          let inputHydrated = { ...input, __proto__: Input.prototype };
          if (inputHydrated.map) {
            inputHydrated.map = {
              ...inputHydrated.map,
              __proto__: PreviousMap.prototype
            };
          }
          inputs.push(inputHydrated);
        }
      }
      if (defaults.nodes) {
        defaults.nodes = json.nodes.map((n) => fromJSON(n, inputs));
      }
      if (defaults.source) {
        let { inputId, ...source } = defaults.source;
        defaults.source = source;
        if (inputId != null) {
          defaults.source.input = inputs[inputId];
        }
      }
      if (defaults.type === "root") {
        return new Root(defaults);
      } else if (defaults.type === "decl") {
        return new Declaration(defaults);
      } else if (defaults.type === "rule") {
        return new Rule(defaults);
      } else if (defaults.type === "comment") {
        return new Comment(defaults);
      } else if (defaults.type === "atrule") {
        return new AtRule(defaults);
      } else {
        throw new Error("Unknown node type: " + json.type);
      }
    }
    module2.exports = fromJSON;
    fromJSON.default = fromJSON;
  }
});

// node_modules/postcss/lib/postcss.js
var require_postcss = __commonJS({
  "node_modules/postcss/lib/postcss.js"(exports, module2) {
    "use strict";
    var CssSyntaxError = require_css_syntax_error();
    var Declaration = require_declaration();
    var LazyResult = require_lazy_result();
    var Container = require_container();
    var Processor = require_processor();
    var stringify = require_stringify();
    var fromJSON = require_fromJSON();
    var Document = require_document();
    var Warning = require_warning();
    var Comment = require_comment();
    var AtRule = require_at_rule();
    var Result = require_result();
    var Input = require_input();
    var parse = require_parse();
    var list = require_list();
    var Rule = require_rule();
    var Root = require_root();
    var Node = require_node();
    function postcss(...plugins) {
      if (plugins.length === 1 && Array.isArray(plugins[0])) {
        plugins = plugins[0];
      }
      return new Processor(plugins);
    }
    postcss.plugin = function plugin(name, initializer) {
      let warningPrinted = false;
      function creator(...args) {
        if (console && console.warn && !warningPrinted) {
          warningPrinted = true;
          console.warn(
            name + ": postcss.plugin was deprecated. Migration guide:\nhttps://evilmartians.com/chronicles/postcss-8-plugin-migration"
          );
          if (process.env.LANG && process.env.LANG.startsWith("cn")) {
            console.warn(
              name + ": \u91CC\u9762 postcss.plugin \u88AB\u5F03\u7528. \u8FC1\u79FB\u6307\u5357:\nhttps://www.w3ctech.com/topic/2226"
            );
          }
        }
        let transformer = initializer(...args);
        transformer.postcssPlugin = name;
        transformer.postcssVersion = new Processor().version;
        return transformer;
      }
      let cache;
      Object.defineProperty(creator, "postcss", {
        get() {
          if (!cache)
            cache = creator();
          return cache;
        }
      });
      creator.process = function(css, processOpts, pluginOpts) {
        return postcss([creator(pluginOpts)]).process(css, processOpts);
      };
      return creator;
    };
    postcss.stringify = stringify;
    postcss.parse = parse;
    postcss.fromJSON = fromJSON;
    postcss.list = list;
    postcss.comment = (defaults) => new Comment(defaults);
    postcss.atRule = (defaults) => new AtRule(defaults);
    postcss.decl = (defaults) => new Declaration(defaults);
    postcss.rule = (defaults) => new Rule(defaults);
    postcss.root = (defaults) => new Root(defaults);
    postcss.document = (defaults) => new Document(defaults);
    postcss.CssSyntaxError = CssSyntaxError;
    postcss.Declaration = Declaration;
    postcss.Container = Container;
    postcss.Processor = Processor;
    postcss.Document = Document;
    postcss.Comment = Comment;
    postcss.Warning = Warning;
    postcss.AtRule = AtRule;
    postcss.Result = Result;
    postcss.Input = Input;
    postcss.Rule = Rule;
    postcss.Root = Root;
    postcss.Node = Node;
    LazyResult.registerPostcss(postcss);
    module2.exports = postcss;
    postcss.default = postcss;
  }
});

// node_modules/lilconfig/dist/index.js
var require_dist = __commonJS({
  "node_modules/lilconfig/dist/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.lilconfigSync = exports.lilconfig = exports.defaultLoaders = void 0;
    var path = require("path");
    var fs = require("fs");
    var os = require("os");
    var fsReadFileAsync = fs.promises.readFile;
    function getDefaultSearchPlaces(name) {
      return [
        "package.json",
        `.${name}rc.json`,
        `.${name}rc.js`,
        `.${name}rc.cjs`,
        `.config/${name}rc`,
        `.config/${name}rc.json`,
        `.config/${name}rc.js`,
        `.config/${name}rc.cjs`,
        `${name}.config.js`,
        `${name}.config.cjs`
      ];
    }
    function getSearchPaths(startDir, stopDir) {
      return startDir.split(path.sep).reduceRight((acc, _, ind, arr) => {
        const currentPath = arr.slice(0, ind + 1).join(path.sep);
        if (!acc.passedStopDir)
          acc.searchPlaces.push(currentPath || path.sep);
        if (currentPath === stopDir)
          acc.passedStopDir = true;
        return acc;
      }, { searchPlaces: [], passedStopDir: false }).searchPlaces;
    }
    exports.defaultLoaders = Object.freeze({
      ".js": require,
      ".json": require,
      ".cjs": require,
      noExt(_, content) {
        return JSON.parse(content);
      }
    });
    function getExtDesc(ext) {
      return ext === "noExt" ? "files without extensions" : `extension "${ext}"`;
    }
    function getOptions(name, options = {}) {
      const conf = {
        stopDir: os.homedir(),
        searchPlaces: getDefaultSearchPlaces(name),
        ignoreEmptySearchPlaces: true,
        transform: (x) => x,
        packageProp: [name],
        ...options,
        loaders: { ...exports.defaultLoaders, ...options.loaders }
      };
      conf.searchPlaces.forEach((place) => {
        const key = path.extname(place) || "noExt";
        const loader = conf.loaders[key];
        if (!loader) {
          throw new Error(`No loader specified for ${getExtDesc(key)}, so searchPlaces item "${place}" is invalid`);
        }
        if (typeof loader !== "function") {
          throw new Error(`loader for ${getExtDesc(key)} is not a function (type provided: "${typeof loader}"), so searchPlaces item "${place}" is invalid`);
        }
      });
      return conf;
    }
    function getPackageProp(props, obj) {
      if (typeof props === "string" && props in obj)
        return obj[props];
      return (Array.isArray(props) ? props : props.split(".")).reduce((acc, prop) => acc === void 0 ? acc : acc[prop], obj) || null;
    }
    function getSearchItems(searchPlaces, searchPaths) {
      return searchPaths.reduce((acc, searchPath) => {
        searchPlaces.forEach((sp) => acc.push({
          searchPlace: sp,
          filepath: path.join(searchPath, sp),
          loaderKey: path.extname(sp) || "noExt"
        }));
        return acc;
      }, []);
    }
    function validateFilePath(filepath) {
      if (!filepath)
        throw new Error("load must pass a non-empty string");
    }
    function validateLoader(loader, ext) {
      if (!loader)
        throw new Error(`No loader specified for extension "${ext}"`);
      if (typeof loader !== "function")
        throw new Error("loader is not a function");
    }
    function lilconfig(name, options) {
      const { ignoreEmptySearchPlaces, loaders, packageProp, searchPlaces, stopDir, transform: transform2 } = getOptions(name, options);
      return {
        async search(searchFrom = process.cwd()) {
          const searchPaths = getSearchPaths(searchFrom, stopDir);
          const result = {
            config: null,
            filepath: ""
          };
          const searchItems = getSearchItems(searchPlaces, searchPaths);
          for (const { searchPlace, filepath, loaderKey } of searchItems) {
            try {
              await fs.promises.access(filepath);
            } catch (_a) {
              continue;
            }
            const content = String(await fsReadFileAsync(filepath));
            const loader = loaders[loaderKey];
            if (searchPlace === "package.json") {
              const pkg = await loader(filepath, content);
              const maybeConfig = getPackageProp(packageProp, pkg);
              if (maybeConfig != null) {
                result.config = maybeConfig;
                result.filepath = filepath;
                break;
              }
              continue;
            }
            const isEmpty = content.trim() === "";
            if (isEmpty && ignoreEmptySearchPlaces)
              continue;
            if (isEmpty) {
              result.isEmpty = true;
              result.config = void 0;
            } else {
              validateLoader(loader, loaderKey);
              result.config = await loader(filepath, content);
            }
            result.filepath = filepath;
            break;
          }
          if (result.filepath === "" && result.config === null)
            return transform2(null);
          return transform2(result);
        },
        async load(filepath) {
          validateFilePath(filepath);
          const absPath = path.resolve(process.cwd(), filepath);
          const { base, ext } = path.parse(absPath);
          const loaderKey = ext || "noExt";
          const loader = loaders[loaderKey];
          validateLoader(loader, loaderKey);
          const content = String(await fsReadFileAsync(absPath));
          if (base === "package.json") {
            const pkg = await loader(absPath, content);
            return transform2({
              config: getPackageProp(packageProp, pkg),
              filepath: absPath
            });
          }
          const result = {
            config: null,
            filepath: absPath
          };
          const isEmpty = content.trim() === "";
          if (isEmpty && ignoreEmptySearchPlaces)
            return transform2({
              config: void 0,
              filepath: absPath,
              isEmpty: true
            });
          result.config = isEmpty ? void 0 : await loader(absPath, content);
          return transform2(isEmpty ? { ...result, isEmpty, config: void 0 } : result);
        }
      };
    }
    exports.lilconfig = lilconfig;
    function lilconfigSync(name, options) {
      const { ignoreEmptySearchPlaces, loaders, packageProp, searchPlaces, stopDir, transform: transform2 } = getOptions(name, options);
      return {
        search(searchFrom = process.cwd()) {
          const searchPaths = getSearchPaths(searchFrom, stopDir);
          const result = {
            config: null,
            filepath: ""
          };
          const searchItems = getSearchItems(searchPlaces, searchPaths);
          for (const { searchPlace, filepath, loaderKey } of searchItems) {
            try {
              fs.accessSync(filepath);
            } catch (_a) {
              continue;
            }
            const loader = loaders[loaderKey];
            const content = String(fs.readFileSync(filepath));
            if (searchPlace === "package.json") {
              const pkg = loader(filepath, content);
              const maybeConfig = getPackageProp(packageProp, pkg);
              if (maybeConfig != null) {
                result.config = maybeConfig;
                result.filepath = filepath;
                break;
              }
              continue;
            }
            const isEmpty = content.trim() === "";
            if (isEmpty && ignoreEmptySearchPlaces)
              continue;
            if (isEmpty) {
              result.isEmpty = true;
              result.config = void 0;
            } else {
              validateLoader(loader, loaderKey);
              result.config = loader(filepath, content);
            }
            result.filepath = filepath;
            break;
          }
          if (result.filepath === "" && result.config === null)
            return transform2(null);
          return transform2(result);
        },
        load(filepath) {
          validateFilePath(filepath);
          const absPath = path.resolve(process.cwd(), filepath);
          const { base, ext } = path.parse(absPath);
          const loaderKey = ext || "noExt";
          const loader = loaders[loaderKey];
          validateLoader(loader, loaderKey);
          const content = String(fs.readFileSync(absPath));
          if (base === "package.json") {
            const pkg = loader(absPath, content);
            return transform2({
              config: getPackageProp(packageProp, pkg),
              filepath: absPath
            });
          }
          const result = {
            config: null,
            filepath: absPath
          };
          const isEmpty = content.trim() === "";
          if (isEmpty && ignoreEmptySearchPlaces)
            return transform2({
              filepath: absPath,
              config: void 0,
              isEmpty: true
            });
          result.config = isEmpty ? void 0 : loader(absPath, content);
          return transform2(isEmpty ? { ...result, isEmpty, config: void 0 } : result);
        }
      };
    }
    exports.lilconfigSync = lilconfigSync;
  }
});

// node_modules/css-declaration-sorter/dist/main.cjs
var require_main = __commonJS({
  "node_modules/css-declaration-sorter/dist/main.cjs"(exports, module2) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var shorthandData = {
      "animation": [
        "animation-name",
        "animation-duration",
        "animation-timing-function",
        "animation-delay",
        "animation-iteration-count",
        "animation-direction",
        "animation-fill-mode",
        "animation-play-state"
      ],
      "background": [
        "background-image",
        "background-size",
        "background-position",
        "background-repeat",
        "background-origin",
        "background-clip",
        "background-attachment",
        "background-color"
      ],
      "columns": [
        "column-width",
        "column-count"
      ],
      "column-rule": [
        "column-rule-width",
        "column-rule-style",
        "column-rule-color"
      ],
      "flex": [
        "flex-grow",
        "flex-shrink",
        "flex-basis"
      ],
      "flex-flow": [
        "flex-direction",
        "flex-wrap"
      ],
      "font": [
        "font-style",
        "font-variant",
        "font-weight",
        "font-stretch",
        "font-size",
        "font-family",
        "line-height"
      ],
      "grid": [
        "grid-template-rows",
        "grid-template-columns",
        "grid-template-areas",
        "grid-auto-rows",
        "grid-auto-columns",
        "grid-auto-flow",
        "column-gap",
        "row-gap"
      ],
      "grid-area": [
        "grid-row-start",
        "grid-column-start",
        "grid-row-end",
        "grid-column-end"
      ],
      "grid-column": [
        "grid-column-start",
        "grid-column-end"
      ],
      "grid-row": [
        "grid-row-start",
        "grid-row-end"
      ],
      "grid-template": [
        "grid-template-columns",
        "grid-template-rows",
        "grid-template-areas"
      ],
      "list-style": [
        "list-style-type",
        "list-style-position",
        "list-style-image"
      ],
      "padding": [
        "padding-block",
        "padding-block-start",
        "padding-block-end",
        "padding-inline",
        "padding-inline-start",
        "padding-inline-end",
        "padding-top",
        "padding-right",
        "padding-bottom",
        "padding-left"
      ],
      "padding-block": [
        "padding-block-start",
        "padding-block-end",
        "padding-top",
        "padding-right",
        "padding-bottom",
        "padding-left"
      ],
      "padding-block-start": [
        "padding-top",
        "padding-right",
        "padding-left"
      ],
      "padding-block-end": [
        "padding-right",
        "padding-bottom",
        "padding-left"
      ],
      "padding-inline": [
        "padding-inline-start",
        "padding-inline-end",
        "padding-top",
        "padding-right",
        "padding-bottom",
        "padding-left"
      ],
      "padding-inline-start": [
        "padding-top",
        "padding-right",
        "padding-left"
      ],
      "padding-inline-end": [
        "padding-right",
        "padding-bottom",
        "padding-left"
      ],
      "margin": [
        "margin-block",
        "margin-block-start",
        "margin-block-end",
        "margin-inline",
        "margin-inline-start",
        "margin-inline-end",
        "margin-top",
        "margin-right",
        "margin-bottom",
        "margin-left"
      ],
      "margin-block": [
        "margin-block-start",
        "margin-block-end",
        "margin-top",
        "margin-right",
        "margin-bottom",
        "margin-left"
      ],
      "margin-inline": [
        "margin-inline-start",
        "margin-inline-end",
        "margin-top",
        "margin-right",
        "margin-bottom",
        "margin-left"
      ],
      "margin-inline-start": [
        "margin-top",
        "margin-right",
        "margin-bottom",
        "margin-left"
      ],
      "margin-inline-end": [
        "margin-top",
        "margin-right",
        "margin-bottom",
        "margin-left"
      ],
      "border": [
        "border-top",
        "border-right",
        "border-bottom",
        "border-left",
        "border-width",
        "border-style",
        "border-color",
        "border-top-width",
        "border-right-width",
        "border-bottom-width",
        "border-left-width",
        "border-inline-start-width",
        "border-inline-end-width",
        "border-block-start-width",
        "border-block-end-width",
        "border-top-style",
        "border-right-style",
        "border-bottom-style",
        "border-left-style",
        "border-inline-start-style",
        "border-inline-end-style",
        "border-block-start-style",
        "border-block-end-style",
        "border-top-color",
        "border-right-color",
        "border-bottom-color",
        "border-left-color",
        "border-inline-start-color",
        "border-inline-end-color",
        "border-block-start-color",
        "border-block-end-color",
        "border-block",
        "border-block-start",
        "border-block-end",
        "border-block-width",
        "border-block-style",
        "border-block-color",
        "border-inline",
        "border-inline-start",
        "border-inline-end",
        "border-inline-width",
        "border-inline-style",
        "border-inline-color"
      ],
      "border-top": [
        "border-width",
        "border-style",
        "border-color",
        "border-top-width",
        "border-top-style",
        "border-top-color"
      ],
      "border-right": [
        "border-width",
        "border-style",
        "border-color",
        "border-right-width",
        "border-right-style",
        "border-right-color"
      ],
      "border-bottom": [
        "border-width",
        "border-style",
        "border-color",
        "border-bottom-width",
        "border-bottom-style",
        "border-bottom-color"
      ],
      "border-left": [
        "border-width",
        "border-style",
        "border-color",
        "border-left-width",
        "border-left-style",
        "border-left-color"
      ],
      "border-color": [
        "border-top-color",
        "border-bottom-color",
        "border-left-color",
        "border-right-color",
        "border-inline-start-color",
        "border-inline-end-color",
        "border-block-start-color",
        "border-block-end-color"
      ],
      "border-width": [
        "border-top-width",
        "border-bottom-width",
        "border-left-width",
        "border-right-width",
        "border-inline-start-width",
        "border-inline-end-width",
        "border-block-start-width",
        "border-block-end-width"
      ],
      "border-style": [
        "border-top-style",
        "border-bottom-style",
        "border-left-style",
        "border-right-style",
        "border-inline-start-style",
        "border-inline-end-style",
        "border-block-start-style",
        "border-block-end-style"
      ],
      "border-radius": [
        "border-top-right-radius",
        "border-top-left-radius",
        "border-bottom-right-radius",
        "border-bottom-left-radius"
      ],
      "border-block": [
        "border-block-start",
        "border-block-end",
        "border-block-width",
        "border-width",
        "border-block-style",
        "border-style",
        "border-block-color",
        "border-color"
      ],
      "border-block-start": [
        "border-block-start-width",
        "border-width",
        "border-block-start-style",
        "border-style",
        "border-block-start-color",
        "border-color"
      ],
      "border-block-end": [
        "border-block-end-width",
        "border-width",
        "border-block-end-style",
        "border-style",
        "border-block-end-color",
        "border-color"
      ],
      "border-inline": [
        "border-inline-start",
        "border-inline-end",
        "border-inline-width",
        "border-width",
        "border-inline-style",
        "border-style",
        "border-inline-color",
        "border-color"
      ],
      "border-inline-start": [
        "border-inline-start-width",
        "border-width",
        "border-inline-start-style",
        "border-style",
        "border-inline-start-color",
        "border-color"
      ],
      "border-inline-end": [
        "border-inline-end-width",
        "border-width",
        "border-inline-end-style",
        "border-style",
        "border-inline-end-color",
        "border-color"
      ],
      "border-image": [
        "border-image-source",
        "border-image-slice",
        "border-image-width",
        "border-image-outset",
        "border-image-repeat"
      ],
      "mask": [
        "mask-image",
        "mask-mode",
        "mask-position",
        "mask-size",
        "mask-repeat",
        "mask-origin",
        "mask-clip",
        "mask-composite"
      ],
      "inline-size": [
        "width",
        "height"
      ],
      "block-size": [
        "width",
        "height"
      ],
      "max-inline-size": [
        "max-width",
        "max-height"
      ],
      "max-block-size": [
        "max-width",
        "max-height"
      ],
      "inset": [
        "inset-block",
        "inset-block-start",
        "inset-block-end",
        "inset-inline",
        "inset-inline-start",
        "inset-inline-end",
        "top",
        "right",
        "bottom",
        "left"
      ],
      "inset-block": [
        "inset-block-start",
        "inset-block-end",
        "top",
        "right",
        "bottom",
        "left"
      ],
      "inset-inline": [
        "inset-inline-start",
        "inset-inline-end",
        "top",
        "right",
        "bottom",
        "left"
      ],
      "outline": [
        "outline-color",
        "outline-style",
        "outline-width"
      ],
      "overflow": [
        "overflow-x",
        "overflow-y"
      ],
      "place-content": [
        "align-content",
        "justify-content"
      ],
      "place-items": [
        "align-items",
        "justify-items"
      ],
      "place-self": [
        "align-self",
        "justify-self"
      ],
      "text-decoration": [
        "text-decoration-color",
        "text-decoration-style",
        "text-decoration-line"
      ],
      "transition": [
        "transition-delay",
        "transition-duration",
        "transition-property",
        "transition-timing-function"
      ],
      "text-emphasis": [
        "text-emphasis-style",
        "text-emphasis-color"
      ]
    };
    function bubbleSort(list, comparator) {
      let upperIndex = list.length - 1;
      while (upperIndex > 0) {
        let swapIndex = 0;
        for (let i = 0; i < upperIndex; i += 1) {
          if (comparator(list[i], list[i + 1]) > 0) {
            const temp = list[i + 1];
            list[i + 1] = list[i];
            list[i] = temp;
            swapIndex = i;
          }
        }
        upperIndex = swapIndex;
      }
      return list;
    }
    function __variableDynamicImportRuntime0__(path) {
      switch (path) {
        case "../orders/alphabetical.mjs":
          return Promise.resolve().then(function() {
            return alphabetical;
          });
        case "../orders/concentric-css.mjs":
          return Promise.resolve().then(function() {
            return concentricCss;
          });
        case "../orders/smacss.mjs":
          return Promise.resolve().then(function() {
            return smacss;
          });
        default:
          return new Promise(function(resolve, reject) {
            (typeof queueMicrotask === "function" ? queueMicrotask : setTimeout)(
              reject.bind(null, new Error("Unknown variable dynamic import: " + path))
            );
          });
      }
    }
    var builtInOrders = [
      "alphabetical",
      "concentric-css",
      "smacss"
    ];
    var cssDeclarationSorter = ({ order = "alphabetical", keepOverrides = false } = {}) => ({
      postcssPlugin: "css-declaration-sorter",
      OnceExit(css) {
        let withKeepOverrides = (comparator) => comparator;
        if (keepOverrides) {
          withKeepOverrides = withOverridesComparator(shorthandData);
        }
        if (typeof order === "function") {
          return processCss({ css, comparator: withKeepOverrides(order) });
        }
        if (!builtInOrders.includes(order))
          return Promise.reject(
            Error([
              `Invalid built-in order '${order}' provided.`,
              `Available built-in orders are: ${builtInOrders}`
            ].join("\n"))
          );
        return __variableDynamicImportRuntime0__(`../orders/${order}.mjs`).then(({ properties: properties2 }) => processCss({
          css,
          comparator: withKeepOverrides(orderComparator(properties2))
        }));
      }
    });
    cssDeclarationSorter.postcss = true;
    function processCss({ css, comparator }) {
      const comments = [];
      const rulesCache = [];
      css.walk((node) => {
        const nodes = node.nodes;
        const type = node.type;
        if (type === "comment") {
          const isNewlineNode = node.raws.before && node.raws.before.includes("\n");
          const lastNewlineNode = isNewlineNode && !node.next();
          const onlyNode = !node.prev() && !node.next() || !node.parent;
          if (lastNewlineNode || onlyNode || node.parent.type === "root") {
            return;
          }
          if (isNewlineNode) {
            const pairedNode = node.next() || node.prev();
            if (pairedNode) {
              comments.unshift({
                "comment": node,
                "pairedNode": pairedNode,
                "insertPosition": node.next() ? "Before" : "After"
              });
              node.remove();
            }
          } else {
            const pairedNode = node.prev() || node.next();
            if (pairedNode) {
              comments.push({
                "comment": node,
                "pairedNode": pairedNode,
                "insertPosition": "After"
              });
              node.remove();
            }
          }
          return;
        }
        const isRule = type === "rule" || type === "atrule";
        if (isRule && nodes && nodes.length > 1) {
          rulesCache.push(nodes);
        }
      });
      rulesCache.forEach((nodes) => {
        sortCssDeclarations({ nodes, comparator });
      });
      comments.forEach((node) => {
        const pairedNode = node.pairedNode;
        node.comment.remove();
        pairedNode.parent && pairedNode.parent["insert" + node.insertPosition](pairedNode, node.comment);
      });
    }
    function sortCssDeclarations({ nodes, comparator }) {
      bubbleSort(nodes, (a, b) => {
        if (a.type === "decl" && b.type === "decl") {
          return comparator(a.prop, b.prop);
        } else {
          return compareDifferentType(a, b);
        }
      });
    }
    function withOverridesComparator(shorthandData2) {
      return function(comparator) {
        return function(a, b) {
          a = removeVendorPrefix(a);
          b = removeVendorPrefix(b);
          if (shorthandData2[a] && shorthandData2[a].includes(b))
            return 0;
          if (shorthandData2[b] && shorthandData2[b].includes(a))
            return 0;
          return comparator(a, b);
        };
      };
    }
    function orderComparator(order) {
      return function(a, b) {
        return order.indexOf(a) - order.indexOf(b);
      };
    }
    function compareDifferentType(a, b) {
      if (b.type === "atrule" || a.type === "atrule") {
        return 0;
      }
      return a.type === "decl" ? -1 : b.type === "decl" ? 1 : 0;
    }
    function removeVendorPrefix(property) {
      return property.replace(/^-\w+-/, "");
    }
    var properties$2 = [
      "all",
      "-webkit-line-clamp",
      "-webkit-text-fill-color",
      "-webkit-text-stroke",
      "-webkit-text-stroke-color",
      "-webkit-text-stroke-width",
      "accent-color",
      "align-content",
      "align-items",
      "align-self",
      "animation",
      "animation-delay",
      "animation-direction",
      "animation-duration",
      "animation-fill-mode",
      "animation-iteration-count",
      "animation-name",
      "animation-play-state",
      "animation-timing-function",
      "appearance",
      "ascent-override",
      "aspect-ratio",
      "backdrop-filter",
      "backface-visibility",
      "background",
      "background-attachment",
      "background-blend-mode",
      "background-clip",
      "background-color",
      "background-image",
      "background-origin",
      "background-position",
      "background-position-x",
      "background-position-y",
      "background-repeat",
      "background-size",
      "block-size",
      "border",
      "border-block",
      "border-block-color",
      "border-block-end",
      "border-block-end-color",
      "border-block-end-style",
      "border-block-end-width",
      "border-block-start",
      "border-block-start-color",
      "border-block-start-style",
      "border-block-start-width",
      "border-block-style",
      "border-block-width",
      "border-bottom",
      "border-bottom-color",
      "border-bottom-left-radius",
      "border-bottom-right-radius",
      "border-bottom-style",
      "border-bottom-width",
      "border-collapse",
      "border-color",
      "border-end-end-radius",
      "border-end-start-radius",
      "border-image",
      "border-image-outset",
      "border-image-repeat",
      "border-image-slice",
      "border-image-source",
      "border-image-width",
      "border-inline",
      "border-inline-color",
      "border-inline-end",
      "border-inline-end-color",
      "border-inline-end-style",
      "border-inline-end-width",
      "border-inline-start",
      "border-inline-start-color",
      "border-inline-start-style",
      "border-inline-start-width",
      "border-inline-style",
      "border-inline-width",
      "border-left",
      "border-left-color",
      "border-left-style",
      "border-left-width",
      "border-radius",
      "border-right",
      "border-right-color",
      "border-right-style",
      "border-right-width",
      "border-spacing",
      "border-start-end-radius",
      "border-start-start-radius",
      "border-style",
      "border-top",
      "border-top-color",
      "border-top-left-radius",
      "border-top-right-radius",
      "border-top-style",
      "border-top-width",
      "border-width",
      "bottom",
      "box-decoration-break",
      "box-shadow",
      "box-sizing",
      "break-after",
      "break-before",
      "break-inside",
      "caption-side",
      "caret-color",
      "clear",
      "clip-path",
      "color",
      "color-scheme",
      "column-count",
      "column-fill",
      "column-gap",
      "column-rule",
      "column-rule-color",
      "column-rule-style",
      "column-rule-width",
      "column-span",
      "column-width",
      "columns",
      "contain",
      "contain-intrinsic-height",
      "contain-intrinsic-size",
      "contain-intrinsic-width",
      "container",
      "container-name",
      "container-type",
      "content",
      "content-visibility",
      "counter-increment",
      "counter-reset",
      "counter-set",
      "cursor",
      "descent-override",
      "direction",
      "display",
      "empty-cells",
      "filter",
      "flex",
      "flex-basis",
      "flex-direction",
      "flex-flow",
      "flex-grow",
      "flex-shrink",
      "flex-wrap",
      "float",
      "font",
      "font-display",
      "font-family",
      "font-kerning",
      "font-language-override",
      "font-optical-sizing",
      "font-palette",
      "font-size",
      "font-size-adjust",
      "font-stretch",
      "font-style",
      "font-synthesis",
      "font-variant",
      "font-variant-alternates",
      "font-variant-caps",
      "font-variant-east-asian",
      "font-variant-emoji",
      "font-variant-ligatures",
      "font-variant-numeric",
      "font-variant-position",
      "font-variation-settings",
      "font-weight",
      "forced-color-adjust",
      "gap",
      "grid",
      "grid-area",
      "grid-auto-columns",
      "grid-auto-flow",
      "grid-auto-rows",
      "grid-column",
      "grid-column-end",
      "grid-column-start",
      "grid-row",
      "grid-row-end",
      "grid-row-start",
      "grid-template",
      "grid-template-areas",
      "grid-template-columns",
      "grid-template-rows",
      "hanging-punctuation",
      "height",
      "hyphenate-character",
      "hyphens",
      "image-orientation",
      "image-rendering",
      "inline-size",
      "inset",
      "inset-block",
      "inset-block-end",
      "inset-block-start",
      "inset-inline",
      "inset-inline-end",
      "inset-inline-start",
      "isolation",
      "justify-content",
      "justify-items",
      "justify-self",
      "left",
      "letter-spacing",
      "line-break",
      "line-gap-override",
      "line-height",
      "list-style",
      "list-style-image",
      "list-style-position",
      "list-style-type",
      "margin",
      "margin-block",
      "margin-block-end",
      "margin-block-start",
      "margin-bottom",
      "margin-inline",
      "margin-inline-end",
      "margin-inline-start",
      "margin-left",
      "margin-right",
      "margin-top",
      "mask",
      "mask-border",
      "mask-border-outset",
      "mask-border-repeat",
      "mask-border-slice",
      "mask-border-source",
      "mask-border-width",
      "mask-clip",
      "mask-composite",
      "mask-image",
      "mask-mode",
      "mask-origin",
      "mask-position",
      "mask-repeat",
      "mask-size",
      "mask-type",
      "max-block-size",
      "max-height",
      "max-inline-size",
      "max-width",
      "min-block-size",
      "min-height",
      "min-inline-size",
      "min-width",
      "mix-blend-mode",
      "object-fit",
      "object-position",
      "offset",
      "offset-anchor",
      "offset-distance",
      "offset-path",
      "offset-rotate",
      "opacity",
      "order",
      "orphans",
      "outline",
      "outline-color",
      "outline-offset",
      "outline-style",
      "outline-width",
      "overflow",
      "overflow-anchor",
      "overflow-block",
      "overflow-clip-margin",
      "overflow-inline",
      "overflow-wrap",
      "overflow-x",
      "overflow-y",
      "overscroll-behavior",
      "overscroll-behavior-block",
      "overscroll-behavior-inline",
      "overscroll-behavior-x",
      "overscroll-behavior-y",
      "padding",
      "padding-block",
      "padding-block-end",
      "padding-block-start",
      "padding-bottom",
      "padding-inline",
      "padding-inline-end",
      "padding-inline-start",
      "padding-left",
      "padding-right",
      "padding-top",
      "page",
      "page-break-after",
      "page-break-before",
      "page-break-inside",
      "paint-order",
      "perspective",
      "perspective-origin",
      "place-content",
      "place-items",
      "place-self",
      "pointer-events",
      "position",
      "print-color-adjust",
      "quotes",
      "resize",
      "right",
      "rotate",
      "row-gap",
      "ruby-position",
      "scale",
      "scroll-behavior",
      "scroll-margin",
      "scroll-margin-block",
      "scroll-margin-block-end",
      "scroll-margin-block-start",
      "scroll-margin-bottom",
      "scroll-margin-inline",
      "scroll-margin-inline-end",
      "scroll-margin-inline-start",
      "scroll-margin-left",
      "scroll-margin-right",
      "scroll-margin-top",
      "scroll-padding",
      "scroll-padding-block",
      "scroll-padding-block-end",
      "scroll-padding-block-start",
      "scroll-padding-bottom",
      "scroll-padding-inline",
      "scroll-padding-inline-end",
      "scroll-padding-inline-start",
      "scroll-padding-left",
      "scroll-padding-right",
      "scroll-padding-top",
      "scroll-snap-align",
      "scroll-snap-stop",
      "scroll-snap-type",
      "scrollbar-color",
      "scrollbar-gutter",
      "scrollbar-width",
      "shape-image-threshold",
      "shape-margin",
      "shape-outside",
      "size-adjust",
      "src",
      "tab-size",
      "table-layout",
      "text-align",
      "text-align-last",
      "text-combine-upright",
      "text-decoration",
      "text-decoration-color",
      "text-decoration-line",
      "text-decoration-skip-ink",
      "text-decoration-style",
      "text-decoration-thickness",
      "text-emphasis",
      "text-emphasis-color",
      "text-emphasis-position",
      "text-emphasis-style",
      "text-indent",
      "text-justify",
      "text-orientation",
      "text-overflow",
      "text-rendering",
      "text-shadow",
      "text-transform",
      "text-underline-offset",
      "text-underline-position",
      "top",
      "touch-action",
      "transform",
      "transform-box",
      "transform-origin",
      "transform-style",
      "transition",
      "transition-delay",
      "transition-duration",
      "transition-property",
      "transition-timing-function",
      "translate",
      "unicode-bidi",
      "unicode-range",
      "user-select",
      "vertical-align",
      "visibility",
      "white-space",
      "widows",
      "width",
      "will-change",
      "word-break",
      "word-spacing",
      "writing-mode",
      "z-index"
    ];
    var alphabetical = /* @__PURE__ */ Object.freeze({
      __proto__: null,
      properties: properties$2
    });
    var properties$1 = [
      "all",
      "display",
      "position",
      "top",
      "right",
      "bottom",
      "left",
      "offset",
      "offset-anchor",
      "offset-distance",
      "offset-path",
      "offset-rotate",
      "grid",
      "grid-template-rows",
      "grid-template-columns",
      "grid-template-areas",
      "grid-auto-rows",
      "grid-auto-columns",
      "grid-auto-flow",
      "column-gap",
      "row-gap",
      "grid-area",
      "grid-row",
      "grid-row-start",
      "grid-row-end",
      "grid-column",
      "grid-column-start",
      "grid-column-end",
      "grid-template",
      "flex",
      "flex-grow",
      "flex-shrink",
      "flex-basis",
      "flex-direction",
      "flex-flow",
      "flex-wrap",
      "box-decoration-break",
      "place-content",
      "align-content",
      "justify-content",
      "place-items",
      "align-items",
      "justify-items",
      "place-self",
      "align-self",
      "justify-self",
      "vertical-align",
      "order",
      "float",
      "clear",
      "shape-margin",
      "shape-outside",
      "shape-image-threshold",
      "orphans",
      "gap",
      "columns",
      "column-fill",
      "column-rule",
      "column-rule-width",
      "column-rule-style",
      "column-rule-color",
      "column-width",
      "column-span",
      "column-count",
      "break-before",
      "break-after",
      "break-inside",
      "page",
      "page-break-before",
      "page-break-after",
      "page-break-inside",
      "transform",
      "transform-box",
      "transform-origin",
      "transform-style",
      "translate",
      "rotate",
      "scale",
      "perspective",
      "perspective-origin",
      "appearance",
      "visibility",
      "content-visibility",
      "opacity",
      "z-index",
      "paint-order",
      "mix-blend-mode",
      "backface-visibility",
      "backdrop-filter",
      "clip-path",
      "mask",
      "mask-border",
      "mask-border-outset",
      "mask-border-repeat",
      "mask-border-slice",
      "mask-border-source",
      "mask-border-width",
      "mask-image",
      "mask-mode",
      "mask-position",
      "mask-size",
      "mask-repeat",
      "mask-origin",
      "mask-clip",
      "mask-composite",
      "mask-type",
      "filter",
      "animation",
      "animation-duration",
      "animation-timing-function",
      "animation-delay",
      "animation-iteration-count",
      "animation-direction",
      "animation-fill-mode",
      "animation-play-state",
      "animation-name",
      "transition",
      "transition-delay",
      "transition-duration",
      "transition-property",
      "transition-timing-function",
      "will-change",
      "counter-increment",
      "counter-reset",
      "counter-set",
      "cursor",
      "box-sizing",
      "contain",
      "contain-intrinsic-height",
      "contain-intrinsic-size",
      "contain-intrinsic-width",
      "container",
      "container-name",
      "container-type",
      "margin",
      "margin-top",
      "margin-right",
      "margin-bottom",
      "margin-left",
      "margin-inline",
      "margin-inline-start",
      "margin-inline-end",
      "margin-block",
      "margin-block-start",
      "margin-block-end",
      "inset",
      "inset-block",
      "inset-block-end",
      "inset-block-start",
      "inset-inline",
      "inset-inline-end",
      "inset-inline-start",
      "outline",
      "outline-color",
      "outline-style",
      "outline-width",
      "outline-offset",
      "box-shadow",
      "border",
      "border-top",
      "border-right",
      "border-bottom",
      "border-left",
      "border-width",
      "border-top-width",
      "border-right-width",
      "border-bottom-width",
      "border-left-width",
      "border-style",
      "border-top-style",
      "border-right-style",
      "border-bottom-style",
      "border-left-style",
      "border-color",
      "border-top-color",
      "border-right-color",
      "border-bottom-color",
      "border-left-color",
      "border-radius",
      "border-top-right-radius",
      "border-top-left-radius",
      "border-bottom-right-radius",
      "border-bottom-left-radius",
      "border-inline",
      "border-inline-width",
      "border-inline-style",
      "border-inline-color",
      "border-inline-start",
      "border-inline-start-width",
      "border-inline-start-style",
      "border-inline-start-color",
      "border-inline-end",
      "border-inline-end-width",
      "border-inline-end-style",
      "border-inline-end-color",
      "border-block",
      "border-block-width",
      "border-block-style",
      "border-block-color",
      "border-block-start",
      "border-block-start-width",
      "border-block-start-style",
      "border-block-start-color",
      "border-block-end",
      "border-block-end-width",
      "border-block-end-style",
      "border-block-end-color",
      "border-image",
      "border-image-source",
      "border-image-slice",
      "border-image-width",
      "border-image-outset",
      "border-image-repeat",
      "border-collapse",
      "border-spacing",
      "border-start-start-radius",
      "border-start-end-radius",
      "border-end-start-radius",
      "border-end-end-radius",
      "background",
      "background-image",
      "background-position",
      "background-size",
      "background-repeat",
      "background-origin",
      "background-clip",
      "background-attachment",
      "background-color",
      "background-blend-mode",
      "background-position-x",
      "background-position-y",
      "isolation",
      "padding",
      "padding-top",
      "padding-right",
      "padding-bottom",
      "padding-left",
      "padding-inline",
      "padding-inline-start",
      "padding-inline-end",
      "padding-block",
      "padding-block-start",
      "padding-block-end",
      "image-orientation",
      "image-rendering",
      "aspect-ratio",
      "width",
      "min-width",
      "max-width",
      "height",
      "min-height",
      "max-height",
      "-webkit-line-clamp",
      "-webkit-text-fill-color",
      "-webkit-text-stroke",
      "-webkit-text-stroke-color",
      "-webkit-text-stroke-width",
      "inline-size",
      "min-inline-size",
      "max-inline-size",
      "block-size",
      "min-block-size",
      "max-block-size",
      "table-layout",
      "caption-side",
      "empty-cells",
      "overflow",
      "overflow-anchor",
      "overflow-block",
      "overflow-clip-margin",
      "overflow-inline",
      "overflow-x",
      "overflow-y",
      "overscroll-behavior",
      "overscroll-behavior-block",
      "overscroll-behavior-inline",
      "overscroll-behavior-x",
      "overscroll-behavior-y",
      "resize",
      "object-fit",
      "object-position",
      "scroll-behavior",
      "scroll-margin",
      "scroll-margin-block",
      "scroll-margin-block-end",
      "scroll-margin-block-start",
      "scroll-margin-bottom",
      "scroll-margin-inline",
      "scroll-margin-inline-end",
      "scroll-margin-inline-start",
      "scroll-margin-left",
      "scroll-margin-right",
      "scroll-margin-top",
      "scroll-padding",
      "scroll-padding-block",
      "scroll-padding-block-end",
      "scroll-padding-block-start",
      "scroll-padding-bottom",
      "scroll-padding-inline",
      "scroll-padding-inline-end",
      "scroll-padding-inline-start",
      "scroll-padding-left",
      "scroll-padding-right",
      "scroll-padding-top",
      "scroll-snap-align",
      "scroll-snap-stop",
      "scroll-snap-type",
      "scrollbar-color",
      "scrollbar-gutter",
      "scrollbar-width",
      "touch-action",
      "pointer-events",
      "content",
      "quotes",
      "hanging-punctuation",
      "color",
      "accent-color",
      "print-color-adjust",
      "forced-color-adjust",
      "color-scheme",
      "caret-color",
      "font",
      "font-style",
      "font-variant",
      "font-weight",
      "font-stretch",
      "font-size",
      "size-adjust",
      "line-height",
      "src",
      "font-family",
      "font-display",
      "font-kerning",
      "font-language-override",
      "font-optical-sizing",
      "font-palette",
      "font-size-adjust",
      "font-synthesis",
      "font-variant-alternates",
      "font-variant-caps",
      "font-variant-east-asian",
      "font-variant-emoji",
      "font-variant-ligatures",
      "font-variant-numeric",
      "font-variant-position",
      "font-variation-settings",
      "ascent-override",
      "descent-override",
      "line-gap-override",
      "hyphens",
      "hyphenate-character",
      "letter-spacing",
      "line-break",
      "list-style",
      "list-style-type",
      "list-style-image",
      "list-style-position",
      "writing-mode",
      "direction",
      "unicode-bidi",
      "unicode-range",
      "user-select",
      "ruby-position",
      "text-combine-upright",
      "text-align",
      "text-align-last",
      "text-decoration",
      "text-decoration-line",
      "text-decoration-style",
      "text-decoration-color",
      "text-decoration-thickness",
      "text-decoration-skip-ink",
      "text-emphasis",
      "text-emphasis-style",
      "text-emphasis-color",
      "text-emphasis-position",
      "text-indent",
      "text-justify",
      "text-underline-position",
      "text-underline-offset",
      "text-orientation",
      "text-overflow",
      "text-rendering",
      "text-shadow",
      "text-transform",
      "white-space",
      "word-break",
      "word-spacing",
      "overflow-wrap",
      "tab-size",
      "widows"
    ];
    var concentricCss = /* @__PURE__ */ Object.freeze({
      __proto__: null,
      properties: properties$1
    });
    var properties = [
      "all",
      "box-sizing",
      "contain",
      "contain-intrinsic-height",
      "contain-intrinsic-size",
      "contain-intrinsic-width",
      "container",
      "container-name",
      "container-type",
      "display",
      "appearance",
      "visibility",
      "content-visibility",
      "z-index",
      "paint-order",
      "position",
      "top",
      "right",
      "bottom",
      "left",
      "offset",
      "offset-anchor",
      "offset-distance",
      "offset-path",
      "offset-rotate",
      "grid",
      "grid-template-rows",
      "grid-template-columns",
      "grid-template-areas",
      "grid-auto-rows",
      "grid-auto-columns",
      "grid-auto-flow",
      "column-gap",
      "row-gap",
      "grid-area",
      "grid-row",
      "grid-row-start",
      "grid-row-end",
      "grid-column",
      "grid-column-start",
      "grid-column-end",
      "grid-template",
      "flex",
      "flex-grow",
      "flex-shrink",
      "flex-basis",
      "flex-direction",
      "flex-flow",
      "flex-wrap",
      "box-decoration-break",
      "place-content",
      "place-items",
      "place-self",
      "align-content",
      "align-items",
      "align-self",
      "justify-content",
      "justify-items",
      "justify-self",
      "order",
      "aspect-ratio",
      "width",
      "min-width",
      "max-width",
      "height",
      "min-height",
      "max-height",
      "-webkit-line-clamp",
      "-webkit-text-fill-color",
      "-webkit-text-stroke",
      "-webkit-text-stroke-color",
      "-webkit-text-stroke-width",
      "inline-size",
      "min-inline-size",
      "max-inline-size",
      "block-size",
      "min-block-size",
      "max-block-size",
      "margin",
      "margin-top",
      "margin-right",
      "margin-bottom",
      "margin-left",
      "margin-inline",
      "margin-inline-start",
      "margin-inline-end",
      "margin-block",
      "margin-block-start",
      "margin-block-end",
      "inset",
      "inset-block",
      "inset-block-end",
      "inset-block-start",
      "inset-inline",
      "inset-inline-end",
      "inset-inline-start",
      "padding",
      "padding-top",
      "padding-right",
      "padding-bottom",
      "padding-left",
      "padding-inline",
      "padding-inline-start",
      "padding-inline-end",
      "padding-block",
      "padding-block-start",
      "padding-block-end",
      "float",
      "clear",
      "overflow",
      "overflow-anchor",
      "overflow-block",
      "overflow-clip-margin",
      "overflow-inline",
      "overflow-x",
      "overflow-y",
      "overscroll-behavior",
      "overscroll-behavior-block",
      "overscroll-behavior-inline",
      "overscroll-behavior-x",
      "overscroll-behavior-y",
      "orphans",
      "gap",
      "columns",
      "column-fill",
      "column-rule",
      "column-rule-color",
      "column-rule-style",
      "column-rule-width",
      "column-span",
      "column-count",
      "column-width",
      "object-fit",
      "object-position",
      "transform",
      "transform-box",
      "transform-origin",
      "transform-style",
      "translate",
      "rotate",
      "scale",
      "border",
      "border-top",
      "border-right",
      "border-bottom",
      "border-left",
      "border-width",
      "border-top-width",
      "border-right-width",
      "border-bottom-width",
      "border-left-width",
      "border-style",
      "border-top-style",
      "border-right-style",
      "border-bottom-style",
      "border-left-style",
      "border-radius",
      "border-top-right-radius",
      "border-top-left-radius",
      "border-bottom-right-radius",
      "border-bottom-left-radius",
      "border-inline",
      "border-inline-color",
      "border-inline-style",
      "border-inline-width",
      "border-inline-start",
      "border-inline-start-color",
      "border-inline-start-style",
      "border-inline-start-width",
      "border-inline-end",
      "border-inline-end-color",
      "border-inline-end-style",
      "border-inline-end-width",
      "border-block",
      "border-block-color",
      "border-block-style",
      "border-block-width",
      "border-block-start",
      "border-block-start-color",
      "border-block-start-style",
      "border-block-start-width",
      "border-block-end",
      "border-block-end-color",
      "border-block-end-style",
      "border-block-end-width",
      "border-color",
      "border-image",
      "border-image-outset",
      "border-image-repeat",
      "border-image-slice",
      "border-image-source",
      "border-image-width",
      "border-top-color",
      "border-right-color",
      "border-bottom-color",
      "border-left-color",
      "border-collapse",
      "border-spacing",
      "border-start-start-radius",
      "border-start-end-radius",
      "border-end-start-radius",
      "border-end-end-radius",
      "outline",
      "outline-color",
      "outline-style",
      "outline-width",
      "outline-offset",
      "backdrop-filter",
      "backface-visibility",
      "background",
      "background-image",
      "background-position",
      "background-size",
      "background-repeat",
      "background-origin",
      "background-clip",
      "background-attachment",
      "background-color",
      "background-blend-mode",
      "background-position-x",
      "background-position-y",
      "box-shadow",
      "isolation",
      "content",
      "quotes",
      "hanging-punctuation",
      "color",
      "accent-color",
      "print-color-adjust",
      "forced-color-adjust",
      "color-scheme",
      "caret-color",
      "font",
      "font-style",
      "font-variant",
      "font-weight",
      "src",
      "font-stretch",
      "font-size",
      "size-adjust",
      "line-height",
      "font-family",
      "font-display",
      "font-kerning",
      "font-language-override",
      "font-optical-sizing",
      "font-palette",
      "font-size-adjust",
      "font-synthesis",
      "font-variant-alternates",
      "font-variant-caps",
      "font-variant-east-asian",
      "font-variant-emoji",
      "font-variant-ligatures",
      "font-variant-numeric",
      "font-variant-position",
      "font-variation-settings",
      "ascent-override",
      "descent-override",
      "line-gap-override",
      "hyphens",
      "hyphenate-character",
      "letter-spacing",
      "line-break",
      "list-style",
      "list-style-image",
      "list-style-position",
      "list-style-type",
      "direction",
      "text-align",
      "text-align-last",
      "text-decoration",
      "text-decoration-line",
      "text-decoration-style",
      "text-decoration-color",
      "text-decoration-thickness",
      "text-decoration-skip-ink",
      "text-emphasis",
      "text-emphasis-style",
      "text-emphasis-color",
      "text-emphasis-position",
      "text-indent",
      "text-justify",
      "text-underline-position",
      "text-underline-offset",
      "text-orientation",
      "text-overflow",
      "text-rendering",
      "text-shadow",
      "text-transform",
      "vertical-align",
      "white-space",
      "word-break",
      "word-spacing",
      "overflow-wrap",
      "animation",
      "animation-duration",
      "animation-timing-function",
      "animation-delay",
      "animation-iteration-count",
      "animation-direction",
      "animation-fill-mode",
      "animation-play-state",
      "animation-name",
      "mix-blend-mode",
      "break-before",
      "break-after",
      "break-inside",
      "page",
      "page-break-before",
      "page-break-after",
      "page-break-inside",
      "caption-side",
      "clip-path",
      "counter-increment",
      "counter-reset",
      "counter-set",
      "cursor",
      "empty-cells",
      "filter",
      "image-orientation",
      "image-rendering",
      "mask",
      "mask-border",
      "mask-border-outset",
      "mask-border-repeat",
      "mask-border-slice",
      "mask-border-source",
      "mask-border-width",
      "mask-clip",
      "mask-composite",
      "mask-image",
      "mask-mode",
      "mask-origin",
      "mask-position",
      "mask-repeat",
      "mask-size",
      "mask-type",
      "opacity",
      "perspective",
      "perspective-origin",
      "pointer-events",
      "resize",
      "scroll-behavior",
      "scroll-margin",
      "scroll-margin-block",
      "scroll-margin-block-end",
      "scroll-margin-block-start",
      "scroll-margin-bottom",
      "scroll-margin-inline",
      "scroll-margin-inline-end",
      "scroll-margin-inline-start",
      "scroll-margin-left",
      "scroll-margin-right",
      "scroll-margin-top",
      "scroll-padding",
      "scroll-padding-block",
      "scroll-padding-block-end",
      "scroll-padding-block-start",
      "scroll-padding-bottom",
      "scroll-padding-inline",
      "scroll-padding-inline-end",
      "scroll-padding-inline-start",
      "scroll-padding-left",
      "scroll-padding-right",
      "scroll-padding-top",
      "scroll-snap-align",
      "scroll-snap-stop",
      "scroll-snap-type",
      "scrollbar-color",
      "scrollbar-gutter",
      "scrollbar-width",
      "shape-image-threshold",
      "shape-margin",
      "shape-outside",
      "tab-size",
      "table-layout",
      "ruby-position",
      "text-combine-upright",
      "touch-action",
      "transition",
      "transition-delay",
      "transition-duration",
      "transition-property",
      "transition-timing-function",
      "will-change",
      "unicode-bidi",
      "unicode-range",
      "user-select",
      "widows",
      "writing-mode"
    ];
    var smacss = /* @__PURE__ */ Object.freeze({
      __proto__: null,
      properties
    });
    exports.cssDeclarationSorter = cssDeclarationSorter;
    exports.default = cssDeclarationSorter;
    module2.exports = cssDeclarationSorter;
  }
});

// node_modules/postcss-discard-comments/src/lib/commentRemover.js
var require_commentRemover = __commonJS({
  "node_modules/postcss-discard-comments/src/lib/commentRemover.js"(exports, module2) {
    "use strict";
    function CommentRemover(options) {
      this.options = options;
    }
    CommentRemover.prototype.canRemove = function(comment) {
      const remove = this.options.remove;
      if (remove) {
        return remove(comment);
      } else {
        const isImportant = comment.indexOf("!") === 0;
        if (!isImportant) {
          return true;
        }
        if (this.options.removeAll || this._hasFirst) {
          return true;
        } else if (this.options.removeAllButFirst && !this._hasFirst) {
          this._hasFirst = true;
          return false;
        }
      }
    };
    module2.exports = CommentRemover;
  }
});

// node_modules/postcss-discard-comments/src/lib/commentParser.js
var require_commentParser = __commonJS({
  "node_modules/postcss-discard-comments/src/lib/commentParser.js"(exports, module2) {
    "use strict";
    module2.exports = function commentParser(input) {
      const tokens = [];
      const length = input.length;
      let pos = 0;
      let next;
      while (pos < length) {
        next = input.indexOf("/*", pos);
        if (~next) {
          tokens.push([0, pos, next]);
          pos = next;
          next = input.indexOf("*/", pos + 2);
          tokens.push([1, pos + 2, next]);
          pos = next + 2;
        } else {
          tokens.push([0, pos, length]);
          pos = length;
        }
      }
      return tokens;
    };
  }
});

// node_modules/postcss-discard-comments/src/index.js
var require_src = __commonJS({
  "node_modules/postcss-discard-comments/src/index.js"(exports, module2) {
    "use strict";
    var CommentRemover = require_commentRemover();
    var commentParser = require_commentParser();
    function pluginCreator(opts = {}) {
      const remover = new CommentRemover(opts);
      const matcherCache = /* @__PURE__ */ new Map();
      const replacerCache = /* @__PURE__ */ new Map();
      function matchesComments(source) {
        if (matcherCache.has(source)) {
          return matcherCache.get(source);
        }
        const result = commentParser(source).filter(([type]) => type);
        matcherCache.set(source, result);
        return result;
      }
      function replaceComments(source, space, separator = " ") {
        const key = source + "@|@" + separator;
        if (replacerCache.has(key)) {
          return replacerCache.get(key);
        }
        const parsed = commentParser(source).reduce((value, [type, start, end]) => {
          const contents = source.slice(start, end);
          if (!type) {
            return value + contents;
          }
          if (remover.canRemove(contents)) {
            return value + separator;
          }
          return `${value}/*${contents}*/`;
        }, "");
        const result = space(parsed).join(" ");
        replacerCache.set(key, result);
        return result;
      }
      return {
        postcssPlugin: "postcss-discard-comments",
        OnceExit(css, { list }) {
          css.walk((node) => {
            if (node.type === "comment" && remover.canRemove(node.text)) {
              node.remove();
              return;
            }
            if (typeof node.raws.between === "string") {
              node.raws.between = replaceComments(node.raws.between, list.space);
            }
            if (node.type === "decl") {
              if (node.raws.value && node.raws.value.raw) {
                if (node.raws.value.value === node.value) {
                  node.value = replaceComments(node.raws.value.raw, list.space);
                } else {
                  node.value = replaceComments(node.value, list.space);
                }
                node.raws.value = null;
              }
              if (node.raws.important) {
                node.raws.important = replaceComments(
                  node.raws.important,
                  list.space
                );
                const b = matchesComments(node.raws.important);
                node.raws.important = b.length ? node.raws.important : "!important";
              } else {
                node.value = replaceComments(node.value, list.space);
              }
              return;
            }
            if (node.type === "rule" && node.raws.selector && node.raws.selector.raw) {
              node.raws.selector.raw = replaceComments(
                node.raws.selector.raw,
                list.space,
                ""
              );
              return;
            }
            if (node.type === "atrule") {
              if (node.raws.afterName) {
                const commentsReplaced = replaceComments(
                  node.raws.afterName,
                  list.space
                );
                if (!commentsReplaced.length) {
                  node.raws.afterName = commentsReplaced + " ";
                } else {
                  node.raws.afterName = " " + commentsReplaced + " ";
                }
              }
              if (node.raws.params && node.raws.params.raw) {
                node.raws.params.raw = replaceComments(
                  node.raws.params.raw,
                  list.space
                );
              }
            }
          });
        }
      };
    }
    pluginCreator.postcss = true;
    module2.exports = pluginCreator;
  }
});

// node_modules/node-releases/data/processed/envs.json
var require_envs = __commonJS({
  "node_modules/node-releases/data/processed/envs.json"(exports, module2) {
    module2.exports = [{ name: "nodejs", version: "0.2.0", date: "2011-08-26", lts: false, security: false, v8: "2.3.8.0" }, { name: "nodejs", version: "0.3.0", date: "2011-08-26", lts: false, security: false, v8: "2.5.1.0" }, { name: "nodejs", version: "0.4.0", date: "2011-08-26", lts: false, security: false, v8: "3.1.2.0" }, { name: "nodejs", version: "0.5.0", date: "2011-08-26", lts: false, security: false, v8: "3.1.8.25" }, { name: "nodejs", version: "0.6.0", date: "2011-11-04", lts: false, security: false, v8: "3.6.6.6" }, { name: "nodejs", version: "0.7.0", date: "2012-01-17", lts: false, security: false, v8: "3.8.6.0" }, { name: "nodejs", version: "0.8.0", date: "2012-06-22", lts: false, security: false, v8: "3.11.10.10" }, { name: "nodejs", version: "0.9.0", date: "2012-07-20", lts: false, security: false, v8: "3.11.10.15" }, { name: "nodejs", version: "0.10.0", date: "2013-03-11", lts: false, security: false, v8: "3.14.5.8" }, { name: "nodejs", version: "0.11.0", date: "2013-03-28", lts: false, security: false, v8: "3.17.13.0" }, { name: "nodejs", version: "0.12.0", date: "2015-02-06", lts: false, security: false, v8: "3.28.73.0" }, { name: "nodejs", version: "4.0.0", date: "2015-09-08", lts: false, security: false, v8: "4.5.103.30" }, { name: "nodejs", version: "4.1.0", date: "2015-09-17", lts: false, security: false, v8: "4.5.103.33" }, { name: "nodejs", version: "4.2.0", date: "2015-10-12", lts: "Argon", security: false, v8: "4.5.103.35" }, { name: "nodejs", version: "4.3.0", date: "2016-02-09", lts: "Argon", security: false, v8: "4.5.103.35" }, { name: "nodejs", version: "4.4.0", date: "2016-03-08", lts: "Argon", security: false, v8: "4.5.103.35" }, { name: "nodejs", version: "4.5.0", date: "2016-08-16", lts: "Argon", security: false, v8: "4.5.103.37" }, { name: "nodejs", version: "4.6.0", date: "2016-09-27", lts: "Argon", security: true, v8: "4.5.103.37" }, { name: "nodejs", version: "4.7.0", date: "2016-12-06", lts: "Argon", security: false, v8: "4.5.103.43" }, { name: "nodejs", version: "4.8.0", date: "2017-02-21", lts: "Argon", security: false, v8: "4.5.103.45" }, { name: "nodejs", version: "4.9.0", date: "2018-03-28", lts: "Argon", security: true, v8: "4.5.103.53" }, { name: "nodejs", version: "5.0.0", date: "2015-10-29", lts: false, security: false, v8: "4.6.85.28" }, { name: "nodejs", version: "5.1.0", date: "2015-11-17", lts: false, security: false, v8: "4.6.85.31" }, { name: "nodejs", version: "5.2.0", date: "2015-12-09", lts: false, security: false, v8: "4.6.85.31" }, { name: "nodejs", version: "5.3.0", date: "2015-12-15", lts: false, security: false, v8: "4.6.85.31" }, { name: "nodejs", version: "5.4.0", date: "2016-01-06", lts: false, security: false, v8: "4.6.85.31" }, { name: "nodejs", version: "5.5.0", date: "2016-01-21", lts: false, security: false, v8: "4.6.85.31" }, { name: "nodejs", version: "5.6.0", date: "2016-02-09", lts: false, security: false, v8: "4.6.85.31" }, { name: "nodejs", version: "5.7.0", date: "2016-02-23", lts: false, security: false, v8: "4.6.85.31" }, { name: "nodejs", version: "5.8.0", date: "2016-03-09", lts: false, security: false, v8: "4.6.85.31" }, { name: "nodejs", version: "5.9.0", date: "2016-03-16", lts: false, security: false, v8: "4.6.85.31" }, { name: "nodejs", version: "5.10.0", date: "2016-04-01", lts: false, security: false, v8: "4.6.85.31" }, { name: "nodejs", version: "5.11.0", date: "2016-04-21", lts: false, security: false, v8: "4.6.85.31" }, { name: "nodejs", version: "5.12.0", date: "2016-06-23", lts: false, security: false, v8: "4.6.85.32" }, { name: "nodejs", version: "6.0.0", date: "2016-04-26", lts: false, security: false, v8: "5.0.71.35" }, { name: "nodejs", version: "6.1.0", date: "2016-05-05", lts: false, security: false, v8: "5.0.71.35" }, { name: "nodejs", version: "6.2.0", date: "2016-05-17", lts: false, security: false, v8: "5.0.71.47" }, { name: "nodejs", version: "6.3.0", date: "2016-07-06", lts: false, security: false, v8: "5.0.71.52" }, { name: "nodejs", version: "6.4.0", date: "2016-08-12", lts: false, security: false, v8: "5.0.71.60" }, { name: "nodejs", version: "6.5.0", date: "2016-08-26", lts: false, security: false, v8: "5.1.281.81" }, { name: "nodejs", version: "6.6.0", date: "2016-09-14", lts: false, security: false, v8: "5.1.281.83" }, { name: "nodejs", version: "6.7.0", date: "2016-09-27", lts: false, security: true, v8: "5.1.281.83" }, { name: "nodejs", version: "6.8.0", date: "2016-10-12", lts: false, security: false, v8: "5.1.281.84" }, { name: "nodejs", version: "6.9.0", date: "2016-10-18", lts: "Boron", security: false, v8: "5.1.281.84" }, { name: "nodejs", version: "6.10.0", date: "2017-02-21", lts: "Boron", security: false, v8: "5.1.281.93" }, { name: "nodejs", version: "6.11.0", date: "2017-06-06", lts: "Boron", security: false, v8: "5.1.281.102" }, { name: "nodejs", version: "6.12.0", date: "2017-11-06", lts: "Boron", security: false, v8: "5.1.281.108" }, { name: "nodejs", version: "6.13.0", date: "2018-02-10", lts: "Boron", security: false, v8: "5.1.281.111" }, { name: "nodejs", version: "6.14.0", date: "2018-03-28", lts: "Boron", security: true, v8: "5.1.281.111" }, { name: "nodejs", version: "6.15.0", date: "2018-11-27", lts: "Boron", security: true, v8: "5.1.281.111" }, { name: "nodejs", version: "6.16.0", date: "2018-12-26", lts: "Boron", security: false, v8: "5.1.281.111" }, { name: "nodejs", version: "6.17.0", date: "2019-02-28", lts: "Boron", security: true, v8: "5.1.281.111" }, { name: "nodejs", version: "7.0.0", date: "2016-10-25", lts: false, security: false, v8: "5.4.500.36" }, { name: "nodejs", version: "7.1.0", date: "2016-11-08", lts: false, security: false, v8: "5.4.500.36" }, { name: "nodejs", version: "7.2.0", date: "2016-11-22", lts: false, security: false, v8: "5.4.500.43" }, { name: "nodejs", version: "7.3.0", date: "2016-12-20", lts: false, security: false, v8: "5.4.500.45" }, { name: "nodejs", version: "7.4.0", date: "2017-01-04", lts: false, security: false, v8: "5.4.500.45" }, { name: "nodejs", version: "7.5.0", date: "2017-01-31", lts: false, security: false, v8: "5.4.500.48" }, { name: "nodejs", version: "7.6.0", date: "2017-02-21", lts: false, security: false, v8: "5.5.372.40" }, { name: "nodejs", version: "7.7.0", date: "2017-02-28", lts: false, security: false, v8: "5.5.372.41" }, { name: "nodejs", version: "7.8.0", date: "2017-03-29", lts: false, security: false, v8: "5.5.372.43" }, { name: "nodejs", version: "7.9.0", date: "2017-04-11", lts: false, security: false, v8: "5.5.372.43" }, { name: "nodejs", version: "7.10.0", date: "2017-05-02", lts: false, security: false, v8: "5.5.372.43" }, { name: "nodejs", version: "8.0.0", date: "2017-05-30", lts: false, security: false, v8: "5.8.283.41" }, { name: "nodejs", version: "8.1.0", date: "2017-06-08", lts: false, security: false, v8: "5.8.283.41" }, { name: "nodejs", version: "8.2.0", date: "2017-07-19", lts: false, security: false, v8: "5.8.283.41" }, { name: "nodejs", version: "8.3.0", date: "2017-08-08", lts: false, security: false, v8: "6.0.286.52" }, { name: "nodejs", version: "8.4.0", date: "2017-08-15", lts: false, security: false, v8: "6.0.286.52" }, { name: "nodejs", version: "8.5.0", date: "2017-09-12", lts: false, security: false, v8: "6.0.287.53" }, { name: "nodejs", version: "8.6.0", date: "2017-09-26", lts: false, security: false, v8: "6.0.287.53" }, { name: "nodejs", version: "8.7.0", date: "2017-10-11", lts: false, security: false, v8: "6.1.534.42" }, { name: "nodejs", version: "8.8.0", date: "2017-10-24", lts: false, security: false, v8: "6.1.534.42" }, { name: "nodejs", version: "8.9.0", date: "2017-10-31", lts: "Carbon", security: false, v8: "6.1.534.46" }, { name: "nodejs", version: "8.10.0", date: "2018-03-06", lts: "Carbon", security: false, v8: "6.2.414.50" }, { name: "nodejs", version: "8.11.0", date: "2018-03-28", lts: "Carbon", security: true, v8: "6.2.414.50" }, { name: "nodejs", version: "8.12.0", date: "2018-09-10", lts: "Carbon", security: false, v8: "6.2.414.66" }, { name: "nodejs", version: "8.13.0", date: "2018-11-20", lts: "Carbon", security: false, v8: "6.2.414.72" }, { name: "nodejs", version: "8.14.0", date: "2018-11-27", lts: "Carbon", security: true, v8: "6.2.414.72" }, { name: "nodejs", version: "8.15.0", date: "2018-12-26", lts: "Carbon", security: false, v8: "6.2.414.75" }, { name: "nodejs", version: "8.16.0", date: "2019-04-16", lts: "Carbon", security: false, v8: "6.2.414.77" }, { name: "nodejs", version: "8.17.0", date: "2019-12-17", lts: "Carbon", security: true, v8: "6.2.414.78" }, { name: "nodejs", version: "9.0.0", date: "2017-10-31", lts: false, security: false, v8: "6.2.414.32" }, { name: "nodejs", version: "9.1.0", date: "2017-11-07", lts: false, security: false, v8: "6.2.414.32" }, { name: "nodejs", version: "9.2.0", date: "2017-11-14", lts: false, security: false, v8: "6.2.414.44" }, { name: "nodejs", version: "9.3.0", date: "2017-12-12", lts: false, security: false, v8: "6.2.414.46" }, { name: "nodejs", version: "9.4.0", date: "2018-01-10", lts: false, security: false, v8: "6.2.414.46" }, { name: "nodejs", version: "9.5.0", date: "2018-01-31", lts: false, security: false, v8: "6.2.414.46" }, { name: "nodejs", version: "9.6.0", date: "2018-02-21", lts: false, security: false, v8: "6.2.414.46" }, { name: "nodejs", version: "9.7.0", date: "2018-03-01", lts: false, security: false, v8: "6.2.414.46" }, { name: "nodejs", version: "9.8.0", date: "2018-03-07", lts: false, security: false, v8: "6.2.414.46" }, { name: "nodejs", version: "9.9.0", date: "2018-03-21", lts: false, security: false, v8: "6.2.414.46" }, { name: "nodejs", version: "9.10.0", date: "2018-03-28", lts: false, security: true, v8: "6.2.414.46" }, { name: "nodejs", version: "9.11.0", date: "2018-04-04", lts: false, security: false, v8: "6.2.414.46" }, { name: "nodejs", version: "10.0.0", date: "2018-04-24", lts: false, security: false, v8: "6.6.346.24" }, { name: "nodejs", version: "10.1.0", date: "2018-05-08", lts: false, security: false, v8: "6.6.346.27" }, { name: "nodejs", version: "10.2.0", date: "2018-05-23", lts: false, security: false, v8: "6.6.346.32" }, { name: "nodejs", version: "10.3.0", date: "2018-05-29", lts: false, security: false, v8: "6.6.346.32" }, { name: "nodejs", version: "10.4.0", date: "2018-06-06", lts: false, security: false, v8: "6.7.288.43" }, { name: "nodejs", version: "10.5.0", date: "2018-06-20", lts: false, security: false, v8: "6.7.288.46" }, { name: "nodejs", version: "10.6.0", date: "2018-07-04", lts: false, security: false, v8: "6.7.288.46" }, { name: "nodejs", version: "10.7.0", date: "2018-07-18", lts: false, security: false, v8: "6.7.288.49" }, { name: "nodejs", version: "10.8.0", date: "2018-08-01", lts: false, security: false, v8: "6.7.288.49" }, { name: "nodejs", version: "10.9.0", date: "2018-08-15", lts: false, security: false, v8: "6.8.275.24" }, { name: "nodejs", version: "10.10.0", date: "2018-09-06", lts: false, security: false, v8: "6.8.275.30" }, { name: "nodejs", version: "10.11.0", date: "2018-09-19", lts: false, security: false, v8: "6.8.275.32" }, { name: "nodejs", version: "10.12.0", date: "2018-10-10", lts: false, security: false, v8: "6.8.275.32" }, { name: "nodejs", version: "10.13.0", date: "2018-10-30", lts: "Dubnium", security: false, v8: "6.8.275.32" }, { name: "nodejs", version: "10.14.0", date: "2018-11-27", lts: "Dubnium", security: true, v8: "6.8.275.32" }, { name: "nodejs", version: "10.15.0", date: "2018-12-26", lts: "Dubnium", security: false, v8: "6.8.275.32" }, { name: "nodejs", version: "10.16.0", date: "2019-05-28", lts: "Dubnium", security: false, v8: "6.8.275.32" }, { name: "nodejs", version: "10.17.0", date: "2019-10-22", lts: "Dubnium", security: false, v8: "6.8.275.32" }, { name: "nodejs", version: "10.18.0", date: "2019-12-17", lts: "Dubnium", security: true, v8: "6.8.275.32" }, { name: "nodejs", version: "10.19.0", date: "2020-02-05", lts: "Dubnium", security: true, v8: "6.8.275.32" }, { name: "nodejs", version: "10.20.0", date: "2020-03-26", lts: "Dubnium", security: false, v8: "6.8.275.32" }, { name: "nodejs", version: "10.21.0", date: "2020-06-02", lts: "Dubnium", security: true, v8: "6.8.275.32" }, { name: "nodejs", version: "10.22.0", date: "2020-07-21", lts: "Dubnium", security: false, v8: "6.8.275.32" }, { name: "nodejs", version: "10.23.0", date: "2020-10-27", lts: "Dubnium", security: false, v8: "6.8.275.32" }, { name: "nodejs", version: "10.24.0", date: "2021-02-23", lts: "Dubnium", security: true, v8: "6.8.275.32" }, { name: "nodejs", version: "11.0.0", date: "2018-10-23", lts: false, security: false, v8: "7.0.276.28" }, { name: "nodejs", version: "11.1.0", date: "2018-10-30", lts: false, security: false, v8: "7.0.276.32" }, { name: "nodejs", version: "11.2.0", date: "2018-11-15", lts: false, security: false, v8: "7.0.276.38" }, { name: "nodejs", version: "11.3.0", date: "2018-11-27", lts: false, security: true, v8: "7.0.276.38" }, { name: "nodejs", version: "11.4.0", date: "2018-12-07", lts: false, security: false, v8: "7.0.276.38" }, { name: "nodejs", version: "11.5.0", date: "2018-12-18", lts: false, security: false, v8: "7.0.276.38" }, { name: "nodejs", version: "11.6.0", date: "2018-12-26", lts: false, security: false, v8: "7.0.276.38" }, { name: "nodejs", version: "11.7.0", date: "2019-01-17", lts: false, security: false, v8: "7.0.276.38" }, { name: "nodejs", version: "11.8.0", date: "2019-01-24", lts: false, security: false, v8: "7.0.276.38" }, { name: "nodejs", version: "11.9.0", date: "2019-01-30", lts: false, security: false, v8: "7.0.276.38" }, { name: "nodejs", version: "11.10.0", date: "2019-02-14", lts: false, security: false, v8: "7.0.276.38" }, { name: "nodejs", version: "11.11.0", date: "2019-03-05", lts: false, security: false, v8: "7.0.276.38" }, { name: "nodejs", version: "11.12.0", date: "2019-03-14", lts: false, security: false, v8: "7.0.276.38" }, { name: "nodejs", version: "11.13.0", date: "2019-03-28", lts: false, security: false, v8: "7.0.276.38" }, { name: "nodejs", version: "11.14.0", date: "2019-04-10", lts: false, security: false, v8: "7.0.276.38" }, { name: "nodejs", version: "11.15.0", date: "2019-04-30", lts: false, security: false, v8: "7.0.276.38" }, { name: "nodejs", version: "12.0.0", date: "2019-04-23", lts: false, security: false, v8: "7.4.288.21" }, { name: "nodejs", version: "12.1.0", date: "2019-04-29", lts: false, security: false, v8: "7.4.288.21" }, { name: "nodejs", version: "12.2.0", date: "2019-05-07", lts: false, security: false, v8: "7.4.288.21" }, { name: "nodejs", version: "12.3.0", date: "2019-05-21", lts: false, security: false, v8: "7.4.288.27" }, { name: "nodejs", version: "12.4.0", date: "2019-06-04", lts: false, security: false, v8: "7.4.288.27" }, { name: "nodejs", version: "12.5.0", date: "2019-06-26", lts: false, security: false, v8: "7.5.288.22" }, { name: "nodejs", version: "12.6.0", date: "2019-07-03", lts: false, security: false, v8: "7.5.288.22" }, { name: "nodejs", version: "12.7.0", date: "2019-07-23", lts: false, security: false, v8: "7.5.288.22" }, { name: "nodejs", version: "12.8.0", date: "2019-08-06", lts: false, security: false, v8: "7.5.288.22" }, { name: "nodejs", version: "12.9.0", date: "2019-08-20", lts: false, security: false, v8: "7.6.303.29" }, { name: "nodejs", version: "12.10.0", date: "2019-09-04", lts: false, security: false, v8: "7.6.303.29" }, { name: "nodejs", version: "12.11.0", date: "2019-09-25", lts: false, security: false, v8: "7.7.299.11" }, { name: "nodejs", version: "12.12.0", date: "2019-10-11", lts: false, security: false, v8: "7.7.299.13" }, { name: "nodejs", version: "12.13.0", date: "2019-10-21", lts: "Erbium", security: false, v8: "7.7.299.13" }, { name: "nodejs", version: "12.14.0", date: "2019-12-17", lts: "Erbium", security: true, v8: "7.7.299.13" }, { name: "nodejs", version: "12.15.0", date: "2020-02-05", lts: "Erbium", security: true, v8: "7.7.299.13" }, { name: "nodejs", version: "12.16.0", date: "2020-02-11", lts: "Erbium", security: false, v8: "7.8.279.23" }, { name: "nodejs", version: "12.17.0", date: "2020-05-26", lts: "Erbium", security: false, v8: "7.8.279.23" }, { name: "nodejs", version: "12.18.0", date: "2020-06-02", lts: "Erbium", security: true, v8: "7.8.279.23" }, { name: "nodejs", version: "12.19.0", date: "2020-10-06", lts: "Erbium", security: false, v8: "7.8.279.23" }, { name: "nodejs", version: "12.20.0", date: "2020-11-24", lts: "Erbium", security: false, v8: "7.8.279.23" }, { name: "nodejs", version: "12.21.0", date: "2021-02-23", lts: "Erbium", security: true, v8: "7.8.279.23" }, { name: "nodejs", version: "12.22.0", date: "2021-03-30", lts: "Erbium", security: false, v8: "7.8.279.23" }, { name: "nodejs", version: "13.0.0", date: "2019-10-22", lts: false, security: false, v8: "7.8.279.17" }, { name: "nodejs", version: "13.1.0", date: "2019-11-05", lts: false, security: false, v8: "7.8.279.17" }, { name: "nodejs", version: "13.2.0", date: "2019-11-21", lts: false, security: false, v8: "7.9.317.23" }, { name: "nodejs", version: "13.3.0", date: "2019-12-03", lts: false, security: false, v8: "7.9.317.25" }, { name: "nodejs", version: "13.4.0", date: "2019-12-17", lts: false, security: true, v8: "7.9.317.25" }, { name: "nodejs", version: "13.5.0", date: "2019-12-18", lts: false, security: false, v8: "7.9.317.25" }, { name: "nodejs", version: "13.6.0", date: "2020-01-07", lts: false, security: false, v8: "7.9.317.25" }, { name: "nodejs", version: "13.7.0", date: "2020-01-21", lts: false, security: false, v8: "7.9.317.25" }, { name: "nodejs", version: "13.8.0", date: "2020-02-05", lts: false, security: true, v8: "7.9.317.25" }, { name: "nodejs", version: "13.9.0", date: "2020-02-18", lts: false, security: false, v8: "7.9.317.25" }, { name: "nodejs", version: "13.10.0", date: "2020-03-04", lts: false, security: false, v8: "7.9.317.25" }, { name: "nodejs", version: "13.11.0", date: "2020-03-12", lts: false, security: false, v8: "7.9.317.25" }, { name: "nodejs", version: "13.12.0", date: "2020-03-26", lts: false, security: false, v8: "7.9.317.25" }, { name: "nodejs", version: "13.13.0", date: "2020-04-14", lts: false, security: false, v8: "7.9.317.25" }, { name: "nodejs", version: "13.14.0", date: "2020-04-29", lts: false, security: false, v8: "7.9.317.25" }, { name: "nodejs", version: "14.0.0", date: "2020-04-21", lts: false, security: false, v8: "8.1.307.30" }, { name: "nodejs", version: "14.1.0", date: "2020-04-29", lts: false, security: false, v8: "8.1.307.31" }, { name: "nodejs", version: "14.2.0", date: "2020-05-05", lts: false, security: false, v8: "8.1.307.31" }, { name: "nodejs", version: "14.3.0", date: "2020-05-19", lts: false, security: false, v8: "8.1.307.31" }, { name: "nodejs", version: "14.4.0", date: "2020-06-02", lts: false, security: true, v8: "8.1.307.31" }, { name: "nodejs", version: "14.5.0", date: "2020-06-30", lts: false, security: false, v8: "8.3.110.9" }, { name: "nodejs", version: "14.6.0", date: "2020-07-20", lts: false, security: false, v8: "8.4.371.19" }, { name: "nodejs", version: "14.7.0", date: "2020-07-29", lts: false, security: false, v8: "8.4.371.19" }, { name: "nodejs", version: "14.8.0", date: "2020-08-11", lts: false, security: false, v8: "8.4.371.19" }, { name: "nodejs", version: "14.9.0", date: "2020-08-27", lts: false, security: false, v8: "8.4.371.19" }, { name: "nodejs", version: "14.10.0", date: "2020-09-08", lts: false, security: false, v8: "8.4.371.19" }, { name: "nodejs", version: "14.11.0", date: "2020-09-15", lts: false, security: true, v8: "8.4.371.19" }, { name: "nodejs", version: "14.12.0", date: "2020-09-22", lts: false, security: false, v8: "8.4.371.19" }, { name: "nodejs", version: "14.13.0", date: "2020-09-29", lts: false, security: false, v8: "8.4.371.19" }, { name: "nodejs", version: "14.14.0", date: "2020-10-15", lts: false, security: false, v8: "8.4.371.19" }, { name: "nodejs", version: "14.15.0", date: "2020-10-27", lts: "Fermium", security: false, v8: "8.4.371.19" }, { name: "nodejs", version: "14.16.0", date: "2021-02-23", lts: "Fermium", security: true, v8: "8.4.371.19" }, { name: "nodejs", version: "14.17.0", date: "2021-05-11", lts: "Fermium", security: false, v8: "8.4.371.23" }, { name: "nodejs", version: "14.18.0", date: "2021-09-28", lts: "Fermium", security: false, v8: "8.4.371.23" }, { name: "nodejs", version: "14.19.0", date: "2022-02-01", lts: "Fermium", security: false, v8: "8.4.371.23" }, { name: "nodejs", version: "14.20.0", date: "2022-07-07", lts: "Fermium", security: true, v8: "8.4.371.23" }, { name: "nodejs", version: "14.21.0", date: "2022-11-01", lts: "Fermium", security: false, v8: "8.4.371.23" }, { name: "nodejs", version: "15.0.0", date: "2020-10-20", lts: false, security: false, v8: "8.6.395.16" }, { name: "nodejs", version: "15.1.0", date: "2020-11-04", lts: false, security: false, v8: "8.6.395.17" }, { name: "nodejs", version: "15.2.0", date: "2020-11-10", lts: false, security: false, v8: "8.6.395.17" }, { name: "nodejs", version: "15.3.0", date: "2020-11-24", lts: false, security: false, v8: "8.6.395.17" }, { name: "nodejs", version: "15.4.0", date: "2020-12-09", lts: false, security: false, v8: "8.6.395.17" }, { name: "nodejs", version: "15.5.0", date: "2020-12-22", lts: false, security: false, v8: "8.6.395.17" }, { name: "nodejs", version: "15.6.0", date: "2021-01-14", lts: false, security: false, v8: "8.6.395.17" }, { name: "nodejs", version: "15.7.0", date: "2021-01-25", lts: false, security: false, v8: "8.6.395.17" }, { name: "nodejs", version: "15.8.0", date: "2021-02-02", lts: false, security: false, v8: "8.6.395.17" }, { name: "nodejs", version: "15.9.0", date: "2021-02-18", lts: false, security: false, v8: "8.6.395.17" }, { name: "nodejs", version: "15.10.0", date: "2021-02-23", lts: false, security: true, v8: "8.6.395.17" }, { name: "nodejs", version: "15.11.0", date: "2021-03-03", lts: false, security: false, v8: "8.6.395.17" }, { name: "nodejs", version: "15.12.0", date: "2021-03-17", lts: false, security: false, v8: "8.6.395.17" }, { name: "nodejs", version: "15.13.0", date: "2021-03-31", lts: false, security: false, v8: "8.6.395.17" }, { name: "nodejs", version: "15.14.0", date: "2021-04-06", lts: false, security: false, v8: "8.6.395.17" }, { name: "nodejs", version: "16.0.0", date: "2021-04-20", lts: false, security: false, v8: "9.0.257.17" }, { name: "nodejs", version: "16.1.0", date: "2021-05-04", lts: false, security: false, v8: "9.0.257.24" }, { name: "nodejs", version: "16.2.0", date: "2021-05-19", lts: false, security: false, v8: "9.0.257.25" }, { name: "nodejs", version: "16.3.0", date: "2021-06-03", lts: false, security: false, v8: "9.0.257.25" }, { name: "nodejs", version: "16.4.0", date: "2021-06-23", lts: false, security: false, v8: "9.1.269.36" }, { name: "nodejs", version: "16.5.0", date: "2021-07-14", lts: false, security: false, v8: "9.1.269.38" }, { name: "nodejs", version: "16.6.0", date: "2021-07-29", lts: false, security: true, v8: "9.2.230.21" }, { name: "nodejs", version: "16.7.0", date: "2021-08-18", lts: false, security: false, v8: "9.2.230.21" }, { name: "nodejs", version: "16.8.0", date: "2021-08-25", lts: false, security: false, v8: "9.2.230.21" }, { name: "nodejs", version: "16.9.0", date: "2021-09-07", lts: false, security: false, v8: "9.3.345.16" }, { name: "nodejs", version: "16.10.0", date: "2021-09-22", lts: false, security: false, v8: "9.3.345.19" }, { name: "nodejs", version: "16.11.0", date: "2021-10-08", lts: false, security: false, v8: "9.4.146.19" }, { name: "nodejs", version: "16.12.0", date: "2021-10-20", lts: false, security: false, v8: "9.4.146.19" }, { name: "nodejs", version: "16.13.0", date: "2021-10-26", lts: "Gallium", security: false, v8: "9.4.146.19" }, { name: "nodejs", version: "16.14.0", date: "2022-02-08", lts: "Gallium", security: false, v8: "9.4.146.24" }, { name: "nodejs", version: "16.15.0", date: "2022-04-26", lts: "Gallium", security: false, v8: "9.4.146.24" }, { name: "nodejs", version: "16.16.0", date: "2022-07-07", lts: "Gallium", security: true, v8: "9.4.146.24" }, { name: "nodejs", version: "16.17.0", date: "2022-08-16", lts: "Gallium", security: false, v8: "9.4.146.26" }, { name: "nodejs", version: "16.18.0", date: "2022-10-12", lts: "Gallium", security: false, v8: "9.4.146.26" }, { name: "nodejs", version: "16.19.0", date: "2022-12-13", lts: "Gallium", security: false, v8: "9.4.146.26" }, { name: "nodejs", version: "16.20.0", date: "2023-03-28", lts: "Gallium", security: false, v8: "9.4.146.26" }, { name: "nodejs", version: "17.0.0", date: "2021-10-19", lts: false, security: false, v8: "9.5.172.21" }, { name: "nodejs", version: "17.1.0", date: "2021-11-09", lts: false, security: false, v8: "9.5.172.25" }, { name: "nodejs", version: "17.2.0", date: "2021-11-30", lts: false, security: false, v8: "9.6.180.14" }, { name: "nodejs", version: "17.3.0", date: "2021-12-17", lts: false, security: false, v8: "9.6.180.15" }, { name: "nodejs", version: "17.4.0", date: "2022-01-18", lts: false, security: false, v8: "9.6.180.15" }, { name: "nodejs", version: "17.5.0", date: "2022-02-10", lts: false, security: false, v8: "9.6.180.15" }, { name: "nodejs", version: "17.6.0", date: "2022-02-22", lts: false, security: false, v8: "9.6.180.15" }, { name: "nodejs", version: "17.7.0", date: "2022-03-09", lts: false, security: false, v8: "9.6.180.15" }, { name: "nodejs", version: "17.8.0", date: "2022-03-22", lts: false, security: false, v8: "9.6.180.15" }, { name: "nodejs", version: "17.9.0", date: "2022-04-07", lts: false, security: false, v8: "9.6.180.15" }, { name: "nodejs", version: "18.0.0", date: "2022-04-18", lts: false, security: false, v8: "10.1.124.8" }, { name: "nodejs", version: "18.1.0", date: "2022-05-03", lts: false, security: false, v8: "10.1.124.8" }, { name: "nodejs", version: "18.2.0", date: "2022-05-17", lts: false, security: false, v8: "10.1.124.8" }, { name: "nodejs", version: "18.3.0", date: "2022-06-02", lts: false, security: false, v8: "10.2.154.4" }, { name: "nodejs", version: "18.4.0", date: "2022-06-16", lts: false, security: false, v8: "10.2.154.4" }, { name: "nodejs", version: "18.5.0", date: "2022-07-06", lts: false, security: true, v8: "10.2.154.4" }, { name: "nodejs", version: "18.6.0", date: "2022-07-13", lts: false, security: false, v8: "10.2.154.13" }, { name: "nodejs", version: "18.7.0", date: "2022-07-26", lts: false, security: false, v8: "10.2.154.13" }, { name: "nodejs", version: "18.8.0", date: "2022-08-24", lts: false, security: false, v8: "10.2.154.13" }, { name: "nodejs", version: "18.9.0", date: "2022-09-07", lts: false, security: false, v8: "10.2.154.15" }, { name: "nodejs", version: "18.10.0", date: "2022-09-28", lts: false, security: false, v8: "10.2.154.15" }, { name: "nodejs", version: "18.11.0", date: "2022-10-13", lts: false, security: false, v8: "10.2.154.15" }, { name: "nodejs", version: "18.12.0", date: "2022-10-25", lts: "Hydrogen", security: false, v8: "10.2.154.15" }, { name: "nodejs", version: "18.13.0", date: "2023-01-05", lts: "Hydrogen", security: false, v8: "10.2.154.23" }, { name: "nodejs", version: "18.14.0", date: "2023-02-01", lts: "Hydrogen", security: false, v8: "10.2.154.23" }, { name: "nodejs", version: "18.15.0", date: "2023-03-05", lts: "Hydrogen", security: false, v8: "10.2.154.26" }, { name: "nodejs", version: "18.16.0", date: "2023-04-12", lts: "Hydrogen", security: false, v8: "10.2.154.26" }, { name: "nodejs", version: "19.0.0", date: "2022-10-17", lts: false, security: false, v8: "10.7.193.13" }, { name: "nodejs", version: "19.1.0", date: "2022-11-14", lts: false, security: false, v8: "10.7.193.20" }, { name: "nodejs", version: "19.2.0", date: "2022-11-29", lts: false, security: false, v8: "10.8.168.20" }, { name: "nodejs", version: "19.3.0", date: "2022-12-14", lts: false, security: false, v8: "10.8.168.21" }, { name: "nodejs", version: "19.4.0", date: "2023-01-05", lts: false, security: false, v8: "10.8.168.25" }, { name: "nodejs", version: "19.5.0", date: "2023-01-24", lts: false, security: false, v8: "10.8.168.25" }, { name: "nodejs", version: "19.6.0", date: "2023-02-01", lts: false, security: false, v8: "10.8.168.25" }, { name: "nodejs", version: "19.7.0", date: "2023-02-21", lts: false, security: false, v8: "10.8.168.25" }, { name: "nodejs", version: "19.8.0", date: "2023-03-14", lts: false, security: false, v8: "10.8.168.25" }, { name: "nodejs", version: "19.9.0", date: "2023-04-10", lts: false, security: false, v8: "10.8.168.25" }, { name: "nodejs", version: "20.0.0", date: "2023-04-17", lts: false, security: false, v8: "11.3.244.4" }, { name: "nodejs", version: "20.1.0", date: "2023-05-03", lts: false, security: false, v8: "11.3.244.8" }, { name: "nodejs", version: "20.2.0", date: "2023-05-16", lts: false, security: false, v8: "11.3.244.8" }, { name: "nodejs", version: "20.3.0", date: "2023-06-08", lts: false, security: false, v8: "11.3.244.8" }, { name: "nodejs", version: "20.4.0", date: "2023-07-04", lts: false, security: false, v8: "11.3.244.8" }];
  }
});

// node_modules/caniuse-lite/data/browsers.js
var require_browsers = __commonJS({
  "node_modules/caniuse-lite/data/browsers.js"(exports, module2) {
    module2.exports = { A: "ie", B: "edge", C: "firefox", D: "chrome", E: "safari", F: "opera", G: "ios_saf", H: "op_mini", I: "android", J: "bb", K: "op_mob", L: "and_chr", M: "and_ff", N: "ie_mob", O: "and_uc", P: "samsung", Q: "and_qq", R: "baidu", S: "kaios" };
  }
});

// node_modules/caniuse-lite/dist/unpacker/browsers.js
var require_browsers2 = __commonJS({
  "node_modules/caniuse-lite/dist/unpacker/browsers.js"(exports, module2) {
    module2.exports.browsers = require_browsers();
  }
});

// node_modules/caniuse-lite/data/browserVersions.js
var require_browserVersions = __commonJS({
  "node_modules/caniuse-lite/data/browserVersions.js"(exports, module2) {
    module2.exports = { "0": "112", "1": "113", "2": "114", "3": "115", "4": "116", "5": "5", "6": "19", "7": "23", "8": "24", "9": "25", A: "10", B: "11", C: "12", D: "7", E: "8", F: "9", G: "15", H: "117", I: "4", J: "6", K: "13", L: "14", M: "16", N: "17", O: "18", P: "79", Q: "80", R: "81", S: "83", T: "84", U: "85", V: "86", W: "87", X: "88", Y: "89", Z: "90", a: "91", b: "92", c: "93", d: "94", e: "95", f: "96", g: "97", h: "98", i: "99", j: "100", k: "101", l: "102", m: "103", n: "118", o: "20", p: "21", q: "22", r: "73", s: "104", t: "105", u: "106", v: "107", w: "108", x: "109", y: "110", z: "111", AB: "26", BB: "27", CB: "28", DB: "29", EB: "30", FB: "31", GB: "32", HB: "33", IB: "34", JB: "35", KB: "36", LB: "37", MB: "38", NB: "39", OB: "40", PB: "41", QB: "42", RB: "43", SB: "44", TB: "45", UB: "46", VB: "47", WB: "48", XB: "49", YB: "50", ZB: "51", aB: "52", bB: "53", cB: "54", dB: "55", eB: "56", fB: "57", gB: "58", hB: "60", iB: "62", jB: "63", kB: "64", lB: "65", mB: "66", nB: "67", oB: "68", pB: "69", qB: "70", rB: "71", sB: "72", tB: "74", uB: "75", vB: "76", wB: "77", xB: "78", yB: "11.1", zB: "12.1", "0B": "15.5", "1B": "16.0", "2B": "17.0", "3B": "3", "4B": "59", "5B": "61", "6B": "82", "7B": "119", "8B": "120", "9B": "121", AC: "3.2", BC: "10.1", CC: "13.1", DC: "15.2-15.3", EC: "15.4", FC: "16.1", GC: "16.2", HC: "16.3", IC: "16.4", JC: "16.5", KC: "16.6", LC: "17.1", MC: "11.5", NC: "4.2-4.3", OC: "5.5", PC: "2", QC: "3.5", RC: "3.6", SC: "3.1", TC: "5.1", UC: "6.1", VC: "7.1", WC: "9.1", XC: "14.1", YC: "15.1", ZC: "15.6", aC: "TP", bC: "9.5-9.6", cC: "10.0-10.1", dC: "10.5", eC: "10.6", fC: "11.6", gC: "4.0-4.1", hC: "5.0-5.1", iC: "6.0-6.1", jC: "7.0-7.1", kC: "8.1-8.4", lC: "9.0-9.2", mC: "9.3", nC: "10.0-10.2", oC: "10.3", pC: "11.0-11.2", qC: "11.3-11.4", rC: "12.0-12.1", sC: "12.2-12.5", tC: "13.0-13.1", uC: "13.2", vC: "13.3", wC: "13.4-13.7", xC: "14.0-14.4", yC: "14.5-14.8", zC: "15.0-15.1", "0C": "15.6-15.7", "1C": "all", "2C": "2.1", "3C": "2.2", "4C": "2.3", "5C": "4.1", "6C": "4.4", "7C": "4.4.3-4.4.4", "8C": "5.0-5.4", "9C": "6.2-6.4", AD: "7.2-7.4", BD: "8.2", CD: "9.2", DD: "11.1-11.2", ED: "12.0", FD: "13.0", GD: "14.0", HD: "15.0", ID: "18.0", JD: "19.0", KD: "13.18", LD: "2.5", MD: "3.0-3.1" };
  }
});

// node_modules/caniuse-lite/dist/unpacker/browserVersions.js
var require_browserVersions2 = __commonJS({
  "node_modules/caniuse-lite/dist/unpacker/browserVersions.js"(exports, module2) {
    module2.exports.browserVersions = require_browserVersions();
  }
});

// node_modules/caniuse-lite/data/agents.js
var require_agents = __commonJS({
  "node_modules/caniuse-lite/data/agents.js"(exports, module2) {
    module2.exports = { A: { A: { J: 0, D: 0, E: 0.0259843, F: 0.0649608, A: 0, B: 0.389765, OC: 0 }, B: "ms{ OC: 962323200, J: 998870400, D: 1161129600, E: 1237420800, F: 1300060800, A: 1346716800, B: 1381968e3 } }, B: { A: { "0": 0.12698, "1": 0.02721, "2": 0.176865, "3": 0.14512, "4": 2.54867, C: 4535e-6, K: 4535e-6, L: 4535e-6, G: 4535e-6, M: 0, N: 4535e-6, O: 0.013605, P: 0, Q: 907e-5, R: 907e-5, S: 907e-5, T: 907e-5, U: 4535e-6, V: 907e-5, W: 4535e-6, X: 4535e-6, Y: 4535e-6, Z: 907e-5, a: 0, b: 0.013605, c: 0, d: 0, e: 0, f: 0, g: 0, h: 0, i: 0.013605, j: 0, k: 0, l: 0, m: 0, s: 0, t: 0, u: 0, v: 907e-5, w: 907e-5, x: 0.07256, y: 0.013605, z: 0.12698, H: 1.76865, n: 0 }, B: "webkit", C: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "C", "K", "L", "G", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "s", "t", "u", "v", "w", "x", "y", "z", "0", "1", "2", "3", "4", "H", "n", "", "", ""], E: "Edge", F: { "0": 1680825600, "1": 1683158400, "2": 1685664e3, "3": 1689897600, "4": 1692576e3, C: 1438128e3, K: 1447286400, L: 1470096e3, G: 1491868800, M: 1508198400, N: 1525046400, O: 1542067200, P: 1579046400, Q: 1581033600, R: 1586736e3, S: 1590019200, T: 1594857600, U: 1598486400, V: 1602201600, W: 1605830400, X: 161136e4, Y: 1614816e3, Z: 1618358400, a: 1622073600, b: 1626912e3, c: 1630627200, d: 1632441600, e: 1634774400, f: 1637539200, g: 1641427200, h: 1643932800, i: 1646265600, j: 1649635200, k: 1651190400, l: 1653955200, m: 1655942400, s: 1659657600, t: 1661990400, u: 1664755200, v: 1666915200, w: 1670198400, x: 1673481600, y: 1675900800, z: 1678665600, H: 1694649600, n: 1697155200 }, D: { C: "ms", K: "ms", L: "ms", G: "ms", M: "ms", N: "ms", O: "ms" } }, C: { A: { "0": 0.06349, "1": 0.01814, "2": 0.01814, "3": 0.31745, "4": 0.113375, "5": 0, "6": 0, "7": 0, "8": 0, "9": 0, PC: 0, "3B": 0, I: 0, J: 0, D: 0, E: 0, F: 0, A: 0, B: 907e-5, C: 0, K: 0, L: 0, G: 0, M: 0, N: 0, O: 0, o: 0, p: 0, q: 0, AB: 0, BB: 0, CB: 0, DB: 0, EB: 0, FB: 0, GB: 0, HB: 0, IB: 0, JB: 0, KB: 0, LB: 0, MB: 0, NB: 0, OB: 0, PB: 0, QB: 0, RB: 4535e-6, SB: 4535e-6, TB: 4535e-6, UB: 0, VB: 0, WB: 0.01814, XB: 0, YB: 907e-5, ZB: 0, aB: 0.05442, bB: 907e-5, cB: 907e-5, dB: 0, eB: 0.013605, fB: 0, gB: 0, "4B": 4535e-6, hB: 0, "5B": 0, iB: 0, jB: 0, kB: 0, lB: 0, mB: 0, nB: 0, oB: 0, pB: 0, qB: 0, rB: 0, sB: 0.013605, r: 0, tB: 0, uB: 0, vB: 0, wB: 0, xB: 0.03628, P: 0, Q: 0, R: 0, "6B": 0, S: 4535e-6, T: 0, U: 0, V: 0, W: 0, X: 4535e-6, Y: 4535e-6, Z: 0, a: 4535e-6, b: 0, c: 0, d: 4535e-6, e: 0, f: 0, g: 0, h: 0, i: 0, j: 0, k: 0, l: 0.11791, m: 0.022675, s: 0, t: 4535e-6, u: 4535e-6, v: 4535e-6, w: 907e-5, x: 907e-5, y: 907e-5, z: 907e-5, H: 1.56457, n: 0.13605, "7B": 0, "8B": 0, "9B": 0, QC: 0, RC: 0 }, B: "moz", C: ["PC", "3B", "QC", "RC", "I", "5", "J", "D", "E", "F", "A", "B", "C", "K", "L", "G", "M", "N", "O", "6", "o", "p", "q", "7", "8", "9", "AB", "BB", "CB", "DB", "EB", "FB", "GB", "HB", "IB", "JB", "KB", "LB", "MB", "NB", "OB", "PB", "QB", "RB", "SB", "TB", "UB", "VB", "WB", "XB", "YB", "ZB", "aB", "bB", "cB", "dB", "eB", "fB", "gB", "4B", "hB", "5B", "iB", "jB", "kB", "lB", "mB", "nB", "oB", "pB", "qB", "rB", "sB", "r", "tB", "uB", "vB", "wB", "xB", "P", "Q", "R", "6B", "S", "T", "U", "V", "W", "X", "Y", "Z", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "s", "t", "u", "v", "w", "x", "y", "z", "0", "1", "2", "3", "4", "H", "n", "7B", "8B", "9B"], E: "Firefox", F: { "0": 1681171200, "1": 1683590400, "2": 1686009600, "3": 1688428800, "4": 1690848e3, "5": 1308614400, "6": 1357603200, "7": 1372118400, "8": 1375747200, "9": 1379376e3, PC: 1161648e3, "3B": 1213660800, QC: 124632e4, RC: 1264032e3, I: 1300752e3, J: 1313452800, D: 1317081600, E: 1317081600, F: 1320710400, A: 1324339200, B: 1327968e3, C: 1331596800, K: 1335225600, L: 1338854400, G: 1342483200, M: 1346112e3, N: 1349740800, O: 1353628800, o: 1361232e3, p: 1364860800, q: 1368489600, AB: 1386633600, BB: 1391472e3, CB: 1395100800, DB: 1398729600, EB: 1402358400, FB: 1405987200, GB: 1409616e3, HB: 1413244800, IB: 1417392e3, JB: 1421107200, KB: 1424736e3, LB: 1428278400, MB: 1431475200, NB: 1435881600, OB: 1439251200, PB: 144288e4, QB: 1446508800, RB: 1450137600, SB: 1453852800, TB: 1457395200, UB: 1461628800, VB: 1465257600, WB: 1470096e3, XB: 1474329600, YB: 1479168e3, ZB: 1485216e3, aB: 1488844800, bB: 149256e4, cB: 1497312e3, dB: 1502150400, eB: 1506556800, fB: 1510617600, gB: 1516665600, "4B": 1520985600, hB: 1525824e3, "5B": 1529971200, iB: 1536105600, jB: 1540252800, kB: 1544486400, lB: 154872e4, mB: 1552953600, nB: 1558396800, oB: 1562630400, pB: 1567468800, qB: 1571788800, rB: 1575331200, sB: 1578355200, r: 1581379200, tB: 1583798400, uB: 1586304e3, vB: 1588636800, wB: 1591056e3, xB: 1593475200, P: 1595894400, Q: 1598313600, R: 1600732800, "6B": 1603152e3, S: 1605571200, T: 1607990400, U: 1611619200, V: 1614038400, W: 1616457600, X: 1618790400, Y: 1622505600, Z: 1626134400, a: 1628553600, b: 1630972800, c: 1633392e3, d: 1635811200, e: 1638835200, f: 1641859200, g: 1644364800, h: 1646697600, i: 1649116800, j: 1651536e3, k: 1653955200, l: 1656374400, m: 1658793600, s: 1661212800, t: 1663632e3, u: 1666051200, v: 1668470400, w: 1670889600, x: 1673913600, y: 1676332800, z: 1678752e3, H: 1693267200, n: 1695686400, "7B": null, "8B": null, "9B": null } }, D: { A: { "0": 0.24489, "1": 0.15419, "2": 0.829905, "3": 1.44213, "4": 15.3691, "5": 0, "6": 0, "7": 0, "8": 0, "9": 0, I: 0, J: 0, D: 0, E: 0, F: 0, A: 0, B: 0, C: 0, K: 0, L: 0, G: 0, M: 0, N: 0, O: 0, o: 0, p: 0, q: 0, AB: 0, BB: 0, CB: 0, DB: 0, EB: 0, FB: 0, GB: 0, HB: 0, IB: 4535e-6, JB: 0, KB: 0, LB: 0, MB: 0.013605, NB: 0, OB: 0, PB: 0, QB: 0, RB: 0, SB: 0, TB: 0, UB: 0, VB: 907e-5, WB: 0.01814, XB: 0.03628, YB: 907e-5, ZB: 4535e-6, aB: 0, bB: 907e-5, cB: 0, dB: 907e-5, eB: 0.031745, fB: 907e-5, gB: 907e-5, "4B": 0, hB: 0.02721, "5B": 4535e-6, iB: 4535e-6, jB: 4535e-6, kB: 0, lB: 0.013605, mB: 0.022675, nB: 4535e-6, oB: 0.031745, pB: 0.06349, qB: 0.077095, rB: 0.022675, sB: 0.031745, r: 0.040815, tB: 0.040815, uB: 0.040815, vB: 0.104305, wB: 0.03628, xB: 0.04535, P: 0.204075, Q: 0.068025, R: 0.06349, S: 0.113375, T: 0.03628, U: 0.086165, V: 0.0907, W: 0.09977, X: 0.058955, Y: 0.04535, Z: 0.068025, a: 0.07256, b: 0.02721, c: 0.131515, d: 0.02721, e: 0.013605, f: 0.022675, g: 0.02721, h: 0.068025, i: 0.04535, j: 0.031745, k: 0.03628, l: 0.040815, m: 0.21768, s: 0.04535, t: 0.049885, u: 0.05442, v: 0.17233, w: 0.213145, x: 1.78679, y: 0.185935, z: 0.32652, H: 3.86382, n: 0.022675, "7B": 0.013605, "8B": 0, "9B": 0 }, B: "webkit", C: ["", "", "", "", "", "I", "5", "J", "D", "E", "F", "A", "B", "C", "K", "L", "G", "M", "N", "O", "6", "o", "p", "q", "7", "8", "9", "AB", "BB", "CB", "DB", "EB", "FB", "GB", "HB", "IB", "JB", "KB", "LB", "MB", "NB", "OB", "PB", "QB", "RB", "SB", "TB", "UB", "VB", "WB", "XB", "YB", "ZB", "aB", "bB", "cB", "dB", "eB", "fB", "gB", "4B", "hB", "5B", "iB", "jB", "kB", "lB", "mB", "nB", "oB", "pB", "qB", "rB", "sB", "r", "tB", "uB", "vB", "wB", "xB", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "s", "t", "u", "v", "w", "x", "y", "z", "0", "1", "2", "3", "4", "H", "n", "7B", "8B", "9B"], E: "Chrome", F: { "0": 1680566400, "1": 1682985600, "2": 1685404800, "3": 1689724800, "4": 1692057600, "5": 1274745600, "6": 1332892800, "7": 1348531200, "8": 1352246400, "9": 1357862400, I: 1264377600, J: 1283385600, D: 1287619200, E: 1291248e3, F: 1296777600, A: 1299542400, B: 1303862400, C: 1307404800, K: 1312243200, L: 1316131200, G: 1316131200, M: 1319500800, N: 1323734400, O: 1328659200, o: 133704e4, p: 1340668800, q: 1343692800, AB: 1361404800, BB: 1364428800, CB: 1369094400, DB: 1374105600, EB: 1376956800, FB: 1384214400, GB: 1389657600, HB: 1392940800, IB: 1397001600, JB: 1400544e3, KB: 1405468800, LB: 1409011200, MB: 141264e4, NB: 1416268800, OB: 1421798400, PB: 1425513600, QB: 1429401600, RB: 143208e4, SB: 1437523200, TB: 1441152e3, UB: 1444780800, VB: 1449014400, WB: 1453248e3, XB: 1456963200, YB: 1460592e3, ZB: 1464134400, aB: 1469059200, bB: 1472601600, cB: 1476230400, dB: 1480550400, eB: 1485302400, fB: 1489017600, gB: 149256e4, "4B": 1496707200, hB: 1500940800, "5B": 1504569600, iB: 1508198400, jB: 1512518400, kB: 1516752e3, lB: 1520294400, mB: 1523923200, nB: 1527552e3, oB: 1532390400, pB: 1536019200, qB: 1539648e3, rB: 1543968e3, sB: 154872e4, r: 1552348800, tB: 1555977600, uB: 1559606400, vB: 1564444800, wB: 1568073600, xB: 1571702400, P: 1575936e3, Q: 1580860800, R: 1586304e3, S: 1589846400, T: 1594684800, U: 1598313600, V: 1601942400, W: 1605571200, X: 1611014400, Y: 1614556800, Z: 1618272e3, a: 1621987200, b: 1626739200, c: 1630368e3, d: 1632268800, e: 1634601600, f: 1637020800, g: 1641340800, h: 1643673600, i: 1646092800, j: 1648512e3, k: 1650931200, l: 1653350400, m: 1655769600, s: 1659398400, t: 1661817600, u: 1664236800, v: 1666656e3, w: 166968e4, x: 1673308800, y: 1675728e3, z: 1678147200, H: 1694476800, n: 1696896e3, "7B": null, "8B": null, "9B": null } }, E: { A: { "5": 0, I: 0, J: 0, D: 0, E: 0, F: 0, A: 0, B: 0, C: 0, K: 0.01814, L: 0.0907, G: 0.01814, SC: 0, AC: 0, TC: 907e-5, UC: 0, VC: 0, WC: 0.1814, BC: 0, yB: 4535e-6, zB: 0.02721, CC: 0.131515, XC: 0.240355, YC: 0.040815, DC: 0.03628, EC: 0.068025, "0B": 0.10884, ZC: 0.5442, "1B": 0.068025, FC: 0.158725, GC: 0.15419, HC: 0.3628, IC: 0.185935, JC: 0.44443, KC: 2.50332, "2B": 0.09977, LC: 0, aC: 0 }, B: "webkit", C: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "SC", "AC", "I", "5", "TC", "J", "UC", "D", "VC", "E", "F", "WC", "A", "BC", "B", "yB", "C", "zB", "K", "CC", "L", "XC", "G", "YC", "DC", "EC", "0B", "ZC", "1B", "FC", "GC", "HC", "IC", "JC", "KC", "2B", "LC", "aC", ""], E: "Safari", F: { "5": 1275868800, SC: 1205798400, AC: 1226534400, I: 1244419200, TC: 131112e4, J: 1343174400, UC: 13824e5, D: 13824e5, VC: 1410998400, E: 1413417600, F: 1443657600, WC: 1458518400, A: 1474329600, BC: 1490572800, B: 1505779200, yB: 1522281600, C: 1537142400, zB: 1553472e3, K: 1568851200, CC: 1585008e3, L: 1600214400, XC: 1619395200, G: 1632096e3, YC: 1635292800, DC: 1639353600, EC: 1647216e3, "0B": 1652745600, ZC: 1658275200, "1B": 1662940800, FC: 1666569600, GC: 1670889600, HC: 1674432e3, IC: 1679875200, JC: 1684368e3, KC: 1690156800, "2B": 1695686400, LC: null, aC: null } }, F: { A: { "6": 0, "7": 0, "8": 0, "9": 0, F: 0, B: 0, C: 0, G: 0, M: 0, N: 0, O: 0, o: 0, p: 0, q: 0, AB: 0, BB: 0, CB: 4535e-6, DB: 0, EB: 0, FB: 0, GB: 0, HB: 0, IB: 0, JB: 0, KB: 0, LB: 0, MB: 0, NB: 0, OB: 0, PB: 0, QB: 0, RB: 0, SB: 0, TB: 0, UB: 0.013605, VB: 0, WB: 0, XB: 0, YB: 0, ZB: 0, aB: 0, bB: 0, cB: 4535e-6, dB: 4535e-6, eB: 0, fB: 0, gB: 0, hB: 0, iB: 0, jB: 0, kB: 0, lB: 0, mB: 0, nB: 0, oB: 0, pB: 0, qB: 0, rB: 0, sB: 0, r: 0, tB: 0, uB: 0, vB: 0, wB: 4535e-6, xB: 0, P: 0, Q: 0, R: 0, "6B": 0, S: 0, T: 0, U: 4535e-6, V: 0, W: 0, X: 0, Y: 4535e-6, Z: 0, a: 0, b: 0, c: 0, d: 0, e: 0.05442, f: 0, g: 0.11791, h: 0, i: 0.022675, j: 0.26303, k: 0.58048, l: 0.64397, m: 0, bC: 0, cC: 0, dC: 0, eC: 0, yB: 0, MC: 0, fC: 0, zB: 0 }, B: "webkit", C: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "F", "bC", "cC", "dC", "eC", "B", "yB", "MC", "fC", "C", "zB", "G", "M", "N", "O", "6", "o", "p", "q", "7", "8", "9", "AB", "BB", "CB", "DB", "EB", "FB", "GB", "HB", "IB", "JB", "KB", "LB", "MB", "NB", "OB", "PB", "QB", "RB", "SB", "TB", "UB", "VB", "WB", "XB", "YB", "ZB", "aB", "bB", "cB", "dB", "eB", "fB", "gB", "hB", "iB", "jB", "kB", "lB", "mB", "nB", "oB", "pB", "qB", "rB", "sB", "r", "tB", "uB", "vB", "wB", "xB", "P", "Q", "R", "6B", "S", "T", "U", "V", "W", "X", "Y", "Z", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "", "", ""], E: "Opera", F: { "6": 1390867200, "7": 1405987200, "8": 1409616e3, "9": 1413331200, F: 1150761600, bC: 1223424e3, cC: 1251763200, dC: 1267488e3, eC: 1277942400, B: 1292457600, yB: 1302566400, MC: 1309219200, fC: 1323129600, C: 1323129600, zB: 1352073600, G: 1372723200, M: 1377561600, N: 1381104e3, O: 1386288e3, o: 1393891200, p: 1399334400, q: 1401753600, AB: 1417132800, BB: 1422316800, CB: 1425945600, DB: 1430179200, EB: 1433808e3, FB: 1438646400, GB: 1442448e3, HB: 1445904e3, IB: 1449100800, JB: 1454371200, KB: 1457308800, LB: 146232e4, MB: 1465344e3, NB: 1470096e3, OB: 1474329600, PB: 1477267200, QB: 1481587200, RB: 1486425600, SB: 1490054400, TB: 1494374400, UB: 1498003200, VB: 1502236800, WB: 1506470400, XB: 1510099200, YB: 1515024e3, ZB: 1517961600, aB: 1521676800, bB: 1525910400, cB: 1530144e3, dB: 1534982400, eB: 1537833600, fB: 1543363200, gB: 1548201600, hB: 1554768e3, iB: 1561593600, jB: 1566259200, kB: 1570406400, lB: 1573689600, mB: 1578441600, nB: 1583971200, oB: 1587513600, pB: 1592956800, qB: 1595894400, rB: 1600128e3, sB: 1603238400, r: 161352e4, tB: 1612224e3, uB: 1616544e3, vB: 1619568e3, wB: 1623715200, xB: 1627948800, P: 1631577600, Q: 1633392e3, R: 1635984e3, "6B": 1638403200, S: 1642550400, T: 1644969600, U: 1647993600, V: 1650412800, W: 1652745600, X: 1654646400, Y: 1657152e3, Z: 1660780800, a: 1663113600, b: 1668816e3, c: 1668643200, d: 1671062400, e: 1675209600, f: 1677024e3, g: 1679529600, h: 1681948800, i: 1684195200, j: 1687219200, k: 1690329600, l: 1692748800, m: 1696204800 }, D: { F: "o", B: "o", C: "o", bC: "o", cC: "o", dC: "o", eC: "o", yB: "o", MC: "o", fC: "o", zB: "o" } }, G: { A: { E: 0, AC: 0, gC: 0, NC: 285607e-8, hC: 285607e-8, iC: 285607e-8, jC: 999624e-8, kC: 285607e-8, lC: 999624e-8, mC: 0.0342728, nC: 142803e-8, oC: 0.0514092, pC: 0.0214205, qC: 0.0157084, rC: 0.0142803, sC: 0.238482, tC: 714017e-8, uC: 0.0128523, vC: 0.155656, wC: 0.0499812, xC: 0.135663, yC: 0.225629, zC: 0.0899662, DC: 0.0985344, EC: 0.112815, "0B": 0.157084, "0C": 1.03961, "1B": 0.411274, FC: 0.761142, GC: 0.386997, HC: 0.722585, IC: 0.164224, JC: 0.489816, KC: 7.98414, "2B": 0.704021, LC: 142803e-8 }, B: "webkit", C: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "AC", "gC", "NC", "hC", "iC", "jC", "E", "kC", "lC", "mC", "nC", "oC", "pC", "qC", "rC", "sC", "tC", "uC", "vC", "wC", "xC", "yC", "zC", "DC", "EC", "0B", "0C", "1B", "FC", "GC", "HC", "IC", "JC", "KC", "2B", "LC", "", ""], E: "Safari on iOS", F: { AC: 1270252800, gC: 1283904e3, NC: 1299628800, hC: 1331078400, iC: 1359331200, jC: 1394409600, E: 1410912e3, kC: 1413763200, lC: 1442361600, mC: 1458518400, nC: 1473724800, oC: 1490572800, pC: 1505779200, qC: 1522281600, rC: 1537142400, sC: 1553472e3, tC: 1568851200, uC: 1572220800, vC: 1580169600, wC: 1585008e3, xC: 1600214400, yC: 1619395200, zC: 1632096e3, DC: 1639353600, EC: 1647216e3, "0B": 1652659200, "0C": 1658275200, "1B": 1662940800, FC: 1666569600, GC: 1670889600, HC: 1674432e3, IC: 1679875200, JC: 1684368e3, KC: 1690156800, "2B": 1694995200, LC: null } }, H: { A: { "1C": 1.02942 }, B: "opera Mini", F: { "1C": 1426464e3 } }, I: { A: { "3B": 0, I: 0.0156469, H: 0, "2C": 0, "3C": 0.0156469, "4C": 0, "5C": 0.0156469, NC: 0.0547642, "6C": 0, "7C": 0.242527 }, B: "webkit", C: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "2C", "3C", "4C", "3B", "I", "5C", "NC", "6C", "7C", "H", "", "", ""], E: "Android Browser", F: { "2C": 1256515200, "3C": 1274313600, "4C": 1291593600, "3B": 1298332800, I: 1318896e3, "5C": 1341792e3, NC: 1374624e3, "6C": 1386547200, "7C": 1401667200, H: 1694476800 } }, J: { A: { D: 0, A: 0 }, B: "webkit", C: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "D", "A", "", "", ""], E: "Blackberry Browser", F: { D: 1325376e3, A: 1359504e3 } }, K: { A: { A: 0, B: 0, C: 0, r: 0, yB: 0, MC: 0, zB: 0 }, B: "o", C: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "A", "B", "yB", "MC", "C", "zB", "r", "", "", ""], E: "Opera Mobile", F: { A: 1287100800, B: 1300752e3, yB: 1314835200, MC: 1318291200, C: 1330300800, zB: 1349740800, r: 1673827200 }, D: { r: "webkit" } }, L: { A: { H: 36.3803 }, B: "webkithrome for Android", F: { H: 1694476800 } }, M: { A: { n: 0.278664 }, B: "moz", C: ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "n", "", "", ""], E: "Firefox for Android", F: { n: 1695686400 } }, N: { A: { A: 0, B: 0 }, B: "msobile", F: { A: 1340150400, B: 1353456e3 } }, O: { A: { "0B": 0.890632 }, B: "webkitrowser for Android", F: { "0B": 1687132800 }, D: { "0B": "webkit" } }, P: { A: { I: 0.107075, o: 0.0642449, p: 0.139197, q: 1.87381, "8C": 0, "9C": 0, AD: 0.0321224, BD: 0, CD: 0, BC: 0, DD: 0.0107075, ED: 0, FD: 0.021415, GD: 0.0107075, HD: 0, "1B": 0.021415, "2B": 0.0321224, ID: 0.021415, JD: 0.0535374 }, B: "webkito", "p", "q", "", "", ""], E: "Samsung Internet", F: { I: 1461024e3, "8C": 1481846400, "9C": 1509408e3, AD: 1528329600, BD: 1546128e3, CD: 1554163200, BC: 1567900800, DD: 1582588800, ED: 1593475200, FD: 1605657600, GD: 1618531200, HD: 1629072e3, "1B": 1640736e3, "2B": 1651708800, ID: 1659657600, JD: 1667260800, o: 1677369600, p: 1684454400, q: 1689292800 } }, Q: { A: { CC: 0.16392 }, B: "webkitrowser", F: { CC: 1663718400 } }, R: { A: { KD: 0 }, B: "webkitaidu Browser", F: { KD: 1663027200 } }, S: { A: { LD: 0.05464, MD: 0 }, B: "mozaiOS Browser", F: { LD: 1527811200, MD: 1631664e3 } } };
  }
});

// node_modules/caniuse-lite/dist/unpacker/agents.js
var require_agents2 = __commonJS({
  "node_modules/caniuse-lite/dist/unpacker/agents.js"(exports, module2) {
    "use strict";
    var browsers = require_browsers2().browsers;
    var versions = require_browserVersions2().browserVersions;
    var agentsData = require_agents();
    function unpackBrowserVersions(versionsData) {
      return Object.keys(versionsData).reduce((usage, version) => {
        usage[versions[version]] = versionsData[version];
        return usage;
      }, {});
    }
    module2.exports.agents = Object.keys(agentsData).reduce((map, key) => {
      let versionsData = agentsData[key];
      map[browsers[key]] = Object.keys(versionsData).reduce((data, entry) => {
        if (entry === "A") {
          data.usage_global = unpackBrowserVersions(versionsData[entry]);
        } else if (entry === "C") {
          data.versions = versionsData[entry].reduce((list, version) => {
            if (version === "") {
              list.push(null);
            } else {
              list.push(versions[version]);
            }
            return list;
          }, []);
        } else if (entry === "D") {
          data.prefix_exceptions = unpackBrowserVersions(versionsData[entry]);
        } else if (entry === "E") {
          data.browser = versionsData[entry];
        } else if (entry === "F") {
          data.release_date = Object.keys(versionsData[entry]).reduce(
            (map2, key2) => {
              map2[versions[key2]] = versionsData[entry][key2];
              return map2;
            },
            {}
          );
        } else {
          data.prefix = versionsData[entry];
        }
        return data;
      }, {});
      return map;
    }, {});
  }
});

// node_modules/node-releases/data/release-schedule/release-schedule.json
var require_release_schedule = __commonJS({
  "node_modules/node-releases/data/release-schedule/release-schedule.json"(exports, module2) {
    module2.exports = { "v0.8": { start: "2012-06-25", end: "2014-07-31" }, "v0.10": { start: "2013-03-11", end: "2016-10-31" }, "v0.12": { start: "2015-02-06", end: "2016-12-31" }, v4: { start: "2015-09-08", lts: "2015-10-12", maintenance: "2017-04-01", end: "2018-04-30", codename: "Argon" }, v5: { start: "2015-10-29", maintenance: "2016-04-30", end: "2016-06-30" }, v6: { start: "2016-04-26", lts: "2016-10-18", maintenance: "2018-04-30", end: "2019-04-30", codename: "Boron" }, v7: { start: "2016-10-25", maintenance: "2017-04-30", end: "2017-06-30" }, v8: { start: "2017-05-30", lts: "2017-10-31", maintenance: "2019-01-01", end: "2019-12-31", codename: "Carbon" }, v9: { start: "2017-10-01", maintenance: "2018-04-01", end: "2018-06-30" }, v10: { start: "2018-04-24", lts: "2018-10-30", maintenance: "2020-05-19", end: "2021-04-30", codename: "Dubnium" }, v11: { start: "2018-10-23", maintenance: "2019-04-22", end: "2019-06-01" }, v12: { start: "2019-04-23", lts: "2019-10-21", maintenance: "2020-11-30", end: "2022-04-30", codename: "Erbium" }, v13: { start: "2019-10-22", maintenance: "2020-04-01", end: "2020-06-01" }, v14: { start: "2020-04-21", lts: "2020-10-27", maintenance: "2021-10-19", end: "2023-04-30", codename: "Fermium" }, v15: { start: "2020-10-20", maintenance: "2021-04-01", end: "2021-06-01" }, v16: { start: "2021-04-20", lts: "2021-10-26", maintenance: "2022-10-18", end: "2023-09-11", codename: "Gallium" }, v17: { start: "2021-10-19", maintenance: "2022-04-01", end: "2022-06-01" }, v18: { start: "2022-04-19", lts: "2022-10-25", maintenance: "2023-10-18", end: "2025-04-30", codename: "Hydrogen" }, v19: { start: "2022-10-18", maintenance: "2023-04-01", end: "2023-06-01" }, v20: { start: "2023-04-18", lts: "2023-10-24", maintenance: "2024-10-22", end: "2026-04-30", codename: "" } };
  }
});

// node_modules/electron-to-chromium/versions.js
var require_versions = __commonJS({
  "node_modules/electron-to-chromium/versions.js"(exports, module2) {
    module2.exports = {
      "0.20": "39",
      "0.21": "41",
      "0.22": "41",
      "0.23": "41",
      "0.24": "41",
      "0.25": "42",
      "0.26": "42",
      "0.27": "43",
      "0.28": "43",
      "0.29": "43",
      "0.30": "44",
      "0.31": "45",
      "0.32": "45",
      "0.33": "45",
      "0.34": "45",
      "0.35": "45",
      "0.36": "47",
      "0.37": "49",
      "1.0": "49",
      "1.1": "50",
      "1.2": "51",
      "1.3": "52",
      "1.4": "53",
      "1.5": "54",
      "1.6": "56",
      "1.7": "58",
      "1.8": "59",
      "2.0": "61",
      "2.1": "61",
      "3.0": "66",
      "3.1": "66",
      "4.0": "69",
      "4.1": "69",
      "4.2": "69",
      "5.0": "73",
      "6.0": "76",
      "6.1": "76",
      "7.0": "78",
      "7.1": "78",
      "7.2": "78",
      "7.3": "78",
      "8.0": "80",
      "8.1": "80",
      "8.2": "80",
      "8.3": "80",
      "8.4": "80",
      "8.5": "80",
      "9.0": "83",
      "9.1": "83",
      "9.2": "83",
      "9.3": "83",
      "9.4": "83",
      "10.0": "85",
      "10.1": "85",
      "10.2": "85",
      "10.3": "85",
      "10.4": "85",
      "11.0": "87",
      "11.1": "87",
      "11.2": "87",
      "11.3": "87",
      "11.4": "87",
      "11.5": "87",
      "12.0": "89",
      "12.1": "89",
      "12.2": "89",
      "13.0": "91",
      "13.1": "91",
      "13.2": "91",
      "13.3": "91",
      "13.4": "91",
      "13.5": "91",
      "13.6": "91",
      "14.0": "93",
      "14.1": "93",
      "14.2": "93",
      "15.0": "94",
      "15.1": "94",
      "15.2": "94",
      "15.3": "94",
      "15.4": "94",
      "15.5": "94",
      "16.0": "96",
      "16.1": "96",
      "16.2": "96",
      "17.0": "98",
      "17.1": "98",
      "17.2": "98",
      "17.3": "98",
      "17.4": "98",
      "18.0": "100",
      "18.1": "100",
      "18.2": "100",
      "18.3": "100",
      "19.0": "102",
      "19.1": "102",
      "20.0": "104",
      "20.1": "104",
      "20.2": "104",
      "20.3": "104",
      "21.0": "106",
      "21.1": "106",
      "21.2": "106",
      "21.3": "106",
      "21.4": "106",
      "22.0": "108",
      "22.1": "108",
      "22.2": "108",
      "22.3": "108",
      "23.0": "110",
      "23.1": "110",
      "23.2": "110",
      "23.3": "110",
      "24.0": "112",
      "24.1": "112",
      "24.2": "112",
      "24.3": "112",
      "24.4": "112",
      "24.5": "112",
      "24.6": "112",
      "24.7": "112",
      "24.8": "112",
      "25.0": "114",
      "25.1": "114",
      "25.2": "114",
      "25.3": "114",
      "25.4": "114",
      "25.5": "114",
      "25.6": "114",
      "25.7": "114",
      "25.8": "114",
      "25.9": "114",
      "26.0": "116",
      "26.1": "116",
      "26.2": "116",
      "26.3": "116",
      "26.4": "116",
      "27.0": "118",
      "28.0": "119"
    };
  }
});

// node_modules/browserslist/error.js
var require_error = __commonJS({
  "node_modules/browserslist/error.js"(exports, module2) {
    function BrowserslistError(message) {
      this.name = "BrowserslistError";
      this.message = message;
      this.browserslist = true;
      if (Error.captureStackTrace) {
        Error.captureStackTrace(this, BrowserslistError);
      }
    }
    BrowserslistError.prototype = Error.prototype;
    module2.exports = BrowserslistError;
  }
});

// node_modules/browserslist/parse.js
var require_parse2 = __commonJS({
  "node_modules/browserslist/parse.js"(exports, module2) {
    var AND_REGEXP = /^\s+and\s+(.*)/i;
    var OR_REGEXP = /^(?:,\s*|\s+or\s+)(.*)/i;
    function flatten(array) {
      if (!Array.isArray(array))
        return [array];
      return array.reduce(function(a, b) {
        return a.concat(flatten(b));
      }, []);
    }
    function find(string, predicate) {
      for (var n = 1, max = string.length; n <= max; n++) {
        var parsed = string.substr(-n, n);
        if (predicate(parsed, n, max)) {
          return string.slice(0, -n);
        }
      }
      return "";
    }
    function matchQuery(all, query) {
      var node = { query };
      if (query.indexOf("not ") === 0) {
        node.not = true;
        query = query.slice(4);
      }
      for (var name in all) {
        var type = all[name];
        var match = query.match(type.regexp);
        if (match) {
          node.type = name;
          for (var i = 0; i < type.matches.length; i++) {
            node[type.matches[i]] = match[i + 1];
          }
          return node;
        }
      }
      node.type = "unknown";
      return node;
    }
    function matchBlock(all, string, qs) {
      var node;
      return find(string, function(parsed, n, max) {
        if (AND_REGEXP.test(parsed)) {
          node = matchQuery(all, parsed.match(AND_REGEXP)[1]);
          node.compose = "and";
          qs.unshift(node);
          return true;
        } else if (OR_REGEXP.test(parsed)) {
          node = matchQuery(all, parsed.match(OR_REGEXP)[1]);
          node.compose = "or";
          qs.unshift(node);
          return true;
        } else if (n === max) {
          node = matchQuery(all, parsed.trim());
          node.compose = "or";
          qs.unshift(node);
          return true;
        }
        return false;
      });
    }
    module2.exports = function parse(all, queries) {
      if (!Array.isArray(queries))
        queries = [queries];
      return flatten(
        queries.map(function(block) {
          var qs = [];
          do {
            block = matchBlock(all, block, qs);
          } while (block);
          return qs;
        })
      );
    };
  }
});

// node_modules/caniuse-lite/dist/lib/statuses.js
var require_statuses = __commonJS({
  "node_modules/caniuse-lite/dist/lib/statuses.js"(exports, module2) {
    module2.exports = {
      1: "ls",
      // WHATWG Living Standard
      2: "rec",
      // W3C Recommendation
      3: "pr",
      // W3C Proposed Recommendation
      4: "cr",
      // W3C Candidate Recommendation
      5: "wd",
      // W3C Working Draft
      6: "other",
      // Non-W3C, but reputable
      7: "unoff"
      // Unofficial, Editor's Draft or W3C "Note"
    };
  }
});

// node_modules/caniuse-lite/dist/lib/supported.js
var require_supported = __commonJS({
  "node_modules/caniuse-lite/dist/lib/supported.js"(exports, module2) {
    module2.exports = {
      y: 1 << 0,
      n: 1 << 1,
      a: 1 << 2,
      p: 1 << 3,
      u: 1 << 4,
      x: 1 << 5,
      d: 1 << 6
    };
  }
});

// node_modules/caniuse-lite/dist/unpacker/feature.js
var require_feature = __commonJS({
  "node_modules/caniuse-lite/dist/unpacker/feature.js"(exports, module2) {
    "use strict";
    var statuses = require_statuses();
    var supported = require_supported();
    var browsers = require_browsers2().browsers;
    var versions = require_browserVersions2().browserVersions;
    var MATH2LOG = Math.log(2);
    function unpackSupport(cipher) {
      let stats = Object.keys(supported).reduce((list, support) => {
        if (cipher & supported[support])
          list.push(support);
        return list;
      }, []);
      let notes = cipher >> 7;
      let notesArray = [];
      while (notes) {
        let note = Math.floor(Math.log(notes) / MATH2LOG) + 1;
        notesArray.unshift(`#${note}`);
        notes -= Math.pow(2, note - 1);
      }
      return stats.concat(notesArray).join(" ");
    }
    function unpackFeature(packed) {
      let unpacked = {
        status: statuses[packed.B],
        title: packed.C,
        shown: packed.D
      };
      unpacked.stats = Object.keys(packed.A).reduce((browserStats, key) => {
        let browser = packed.A[key];
        browserStats[browsers[key]] = Object.keys(browser).reduce(
          (stats, support) => {
            let packedVersions = browser[support].split(" ");
            let unpacked2 = unpackSupport(support);
            packedVersions.forEach((v) => stats[versions[v]] = unpacked2);
            return stats;
          },
          {}
        );
        return browserStats;
      }, {});
      return unpacked;
    }
    module2.exports = unpackFeature;
    module2.exports.default = unpackFeature;
  }
});

// node_modules/caniuse-lite/dist/unpacker/region.js
var require_region = __commonJS({
  "node_modules/caniuse-lite/dist/unpacker/region.js"(exports, module2) {
    "use strict";
    var browsers = require_browsers2().browsers;
    function unpackRegion(packed) {
      return Object.keys(packed).reduce((list, browser) => {
        let data = packed[browser];
        list[browsers[browser]] = Object.keys(data).reduce((memo, key) => {
          let stats = data[key];
          if (key === "_") {
            stats.split(" ").forEach((version) => memo[version] = null);
          } else {
            memo[key] = stats;
          }
          return memo;
        }, {});
        return list;
      }, {});
    }
    module2.exports = unpackRegion;
    module2.exports.default = unpackRegion;
  }
});

// node_modules/browserslist/node.js
var require_node2 = __commonJS({
  "node_modules/browserslist/node.js"(exports, module2) {
    var feature = require_feature().default;
    var region = require_region().default;
    var path = require("path");
    var fs = require("fs");
    var BrowserslistError = require_error();
    var IS_SECTION = /^\s*\[(.+)]\s*$/;
    var CONFIG_PATTERN = /^browserslist-config-/;
    var SCOPED_CONFIG__PATTERN = /@[^/]+\/browserslist-config(-|$|\/)/;
    var TIME_TO_UPDATE_CANIUSE = 6 * 30 * 24 * 60 * 60 * 1e3;
    var FORMAT = "Browserslist config should be a string or an array of strings with browser queries";
    var dataTimeChecked = false;
    var filenessCache = {};
    var configCache = {};
    function checkExtend(name) {
      var use = " Use `dangerousExtend` option to disable.";
      if (!CONFIG_PATTERN.test(name) && !SCOPED_CONFIG__PATTERN.test(name)) {
        throw new BrowserslistError(
          "Browserslist config needs `browserslist-config-` prefix. " + use
        );
      }
      if (name.replace(/^@[^/]+\//, "").indexOf(".") !== -1) {
        throw new BrowserslistError(
          "`.` not allowed in Browserslist config name. " + use
        );
      }
      if (name.indexOf("node_modules") !== -1) {
        throw new BrowserslistError(
          "`node_modules` not allowed in Browserslist config." + use
        );
      }
    }
    function isFile(file) {
      if (file in filenessCache) {
        return filenessCache[file];
      }
      var result = fs.existsSync(file) && fs.statSync(file).isFile();
      if (!process.env.BROWSERSLIST_DISABLE_CACHE) {
        filenessCache[file] = result;
      }
      return result;
    }
    function eachParent(file, callback) {
      var dir = isFile(file) ? path.dirname(file) : file;
      var loc = path.resolve(dir);
      do {
        var result = callback(loc);
        if (typeof result !== "undefined")
          return result;
      } while (loc !== (loc = path.dirname(loc)));
      return void 0;
    }
    function check(section) {
      if (Array.isArray(section)) {
        for (var i = 0; i < section.length; i++) {
          if (typeof section[i] !== "string") {
            throw new BrowserslistError(FORMAT);
          }
        }
      } else if (typeof section !== "string") {
        throw new BrowserslistError(FORMAT);
      }
    }
    function pickEnv(config, opts) {
      if (typeof config !== "object")
        return config;
      var name;
      if (typeof opts.env === "string") {
        name = opts.env;
      } else if (process.env.BROWSERSLIST_ENV) {
        name = process.env.BROWSERSLIST_ENV;
      } else if (process.env.NODE_ENV) {
        name = process.env.NODE_ENV;
      } else {
        name = "production";
      }
      if (opts.throwOnMissing) {
        if (name && name !== "defaults" && !config[name]) {
          throw new BrowserslistError(
            "Missing config for Browserslist environment `" + name + "`"
          );
        }
      }
      return config[name] || config.defaults;
    }
    function parsePackage(file) {
      var config = JSON.parse(
        fs.readFileSync(file).toString().replace(/^\uFEFF/m, "")
      );
      if (config.browserlist && !config.browserslist) {
        throw new BrowserslistError(
          "`browserlist` key instead of `browserslist` in " + file
        );
      }
      var list = config.browserslist;
      if (Array.isArray(list) || typeof list === "string") {
        list = { defaults: list };
      }
      for (var i in list) {
        check(list[i]);
      }
      return list;
    }
    function latestReleaseTime(agents) {
      var latest = 0;
      for (var name in agents) {
        var dates = agents[name].releaseDate || {};
        for (var key in dates) {
          if (latest < dates[key]) {
            latest = dates[key];
          }
        }
      }
      return latest * 1e3;
    }
    function normalizeStats(data, stats) {
      if (!data) {
        data = {};
      }
      if (stats && "dataByBrowser" in stats) {
        stats = stats.dataByBrowser;
      }
      if (typeof stats !== "object")
        return void 0;
      var normalized = {};
      for (var i in stats) {
        var versions = Object.keys(stats[i]);
        if (versions.length === 1 && data[i] && data[i].versions.length === 1) {
          var normal = data[i].versions[0];
          normalized[i] = {};
          normalized[i][normal] = stats[i][versions[0]];
        } else {
          normalized[i] = stats[i];
        }
      }
      return normalized;
    }
    function normalizeUsageData(usageData, data) {
      for (var browser in usageData) {
        var browserUsage = usageData[browser];
        if ("0" in browserUsage) {
          var versions = data[browser].versions;
          browserUsage[versions[versions.length - 1]] = browserUsage[0];
          delete browserUsage[0];
        }
      }
    }
    module2.exports = {
      loadQueries: function loadQueries(ctx, name) {
        if (!ctx.dangerousExtend && !process.env.BROWSERSLIST_DANGEROUS_EXTEND) {
          checkExtend(name);
        }
        var queries = require(require.resolve(name, { paths: [".", ctx.path] }));
        if (queries) {
          if (Array.isArray(queries)) {
            return queries;
          } else if (typeof queries === "object") {
            if (!queries.defaults)
              queries.defaults = [];
            return pickEnv(queries, ctx, name);
          }
        }
        throw new BrowserslistError(
          "`" + name + "` config exports not an array of queries or an object of envs"
        );
      },
      loadStat: function loadStat(ctx, name, data) {
        if (!ctx.dangerousExtend && !process.env.BROWSERSLIST_DANGEROUS_EXTEND) {
          checkExtend(name);
        }
        var stats = require(require.resolve(
          path.join(name, "browserslist-stats.json"),
          { paths: ["."] }
        ));
        return normalizeStats(data, stats);
      },
      getStat: function getStat(opts, data) {
        var stats;
        if (opts.stats) {
          stats = opts.stats;
        } else if (process.env.BROWSERSLIST_STATS) {
          stats = process.env.BROWSERSLIST_STATS;
        } else if (opts.path && path.resolve && fs.existsSync) {
          stats = eachParent(opts.path, function(dir) {
            var file = path.join(dir, "browserslist-stats.json");
            return isFile(file) ? file : void 0;
          });
        }
        if (typeof stats === "string") {
          try {
            stats = JSON.parse(fs.readFileSync(stats));
          } catch (e) {
            throw new BrowserslistError("Can't read " + stats);
          }
        }
        return normalizeStats(data, stats);
      },
      loadConfig: function loadConfig(opts) {
        if (process.env.BROWSERSLIST) {
          return process.env.BROWSERSLIST;
        } else if (opts.config || process.env.BROWSERSLIST_CONFIG) {
          var file = opts.config || process.env.BROWSERSLIST_CONFIG;
          if (path.basename(file) === "package.json") {
            return pickEnv(parsePackage(file), opts);
          } else {
            return pickEnv(module2.exports.readConfig(file), opts);
          }
        } else if (opts.path) {
          return pickEnv(module2.exports.findConfig(opts.path), opts);
        } else {
          return void 0;
        }
      },
      loadCountry: function loadCountry(usage, country, data) {
        var code = country.replace(/[^\w-]/g, "");
        if (!usage[code]) {
          var compressed;
          try {
            compressed = require("caniuse-lite/data/regions/" + code + ".js");
          } catch (e) {
            throw new BrowserslistError("Unknown region name `" + code + "`.");
          }
          var usageData = region(compressed);
          normalizeUsageData(usageData, data);
          usage[country] = {};
          for (var i in usageData) {
            for (var j in usageData[i]) {
              usage[country][i + " " + j] = usageData[i][j];
            }
          }
        }
      },
      loadFeature: function loadFeature(features, name) {
        name = name.replace(/[^\w-]/g, "");
        if (features[name])
          return;
        var compressed;
        try {
          compressed = require("caniuse-lite/data/features/" + name + ".js");
        } catch (e) {
          throw new BrowserslistError("Unknown feature name `" + name + "`.");
        }
        var stats = feature(compressed).stats;
        features[name] = {};
        for (var i in stats) {
          features[name][i] = {};
          for (var j in stats[i]) {
            features[name][i][j] = stats[i][j];
          }
        }
      },
      parseConfig: function parseConfig(string) {
        var result = { defaults: [] };
        var sections = ["defaults"];
        string.toString().replace(/#[^\n]*/g, "").split(/\n|,/).map(function(line) {
          return line.trim();
        }).filter(function(line) {
          return line !== "";
        }).forEach(function(line) {
          if (IS_SECTION.test(line)) {
            sections = line.match(IS_SECTION)[1].trim().split(" ");
            sections.forEach(function(section) {
              if (result[section]) {
                throw new BrowserslistError(
                  "Duplicate section " + section + " in Browserslist config"
                );
              }
              result[section] = [];
            });
          } else {
            sections.forEach(function(section) {
              result[section].push(line);
            });
          }
        });
        return result;
      },
      readConfig: function readConfig(file) {
        if (!isFile(file)) {
          throw new BrowserslistError("Can't read " + file + " config");
        }
        return module2.exports.parseConfig(fs.readFileSync(file));
      },
      findConfig: function findConfig(from) {
        from = path.resolve(from);
        var passed = [];
        var resolved = eachParent(from, function(dir) {
          if (dir in configCache) {
            return configCache[dir];
          }
          passed.push(dir);
          var config = path.join(dir, "browserslist");
          var pkg = path.join(dir, "package.json");
          var rc = path.join(dir, ".browserslistrc");
          var pkgBrowserslist;
          if (isFile(pkg)) {
            try {
              pkgBrowserslist = parsePackage(pkg);
            } catch (e) {
              if (e.name === "BrowserslistError")
                throw e;
              console.warn(
                "[Browserslist] Could not parse " + pkg + ". Ignoring it."
              );
            }
          }
          if (isFile(config) && pkgBrowserslist) {
            throw new BrowserslistError(
              dir + " contains both browserslist and package.json with browsers"
            );
          } else if (isFile(rc) && pkgBrowserslist) {
            throw new BrowserslistError(
              dir + " contains both .browserslistrc and package.json with browsers"
            );
          } else if (isFile(config) && isFile(rc)) {
            throw new BrowserslistError(
              dir + " contains both .browserslistrc and browserslist"
            );
          } else if (isFile(config)) {
            return module2.exports.readConfig(config);
          } else if (isFile(rc)) {
            return module2.exports.readConfig(rc);
          } else {
            return pkgBrowserslist;
          }
        });
        if (!process.env.BROWSERSLIST_DISABLE_CACHE) {
          passed.forEach(function(dir) {
            configCache[dir] = resolved;
          });
        }
        return resolved;
      },
      clearCaches: function clearCaches() {
        dataTimeChecked = false;
        filenessCache = {};
        configCache = {};
        this.cache = {};
      },
      oldDataWarning: function oldDataWarning(agentsObj) {
        if (dataTimeChecked)
          return;
        dataTimeChecked = true;
        if (process.env.BROWSERSLIST_IGNORE_OLD_DATA)
          return;
        var latest = latestReleaseTime(agentsObj);
        var halfYearAgo = Date.now() - TIME_TO_UPDATE_CANIUSE;
        if (latest !== 0 && latest < halfYearAgo) {
          console.warn(
            "Browserslist: caniuse-lite is outdated. Please run:\n  npx update-browserslist-db@latest\n  Why you should do it regularly: https://github.com/browserslist/update-db#readme"
          );
        }
      },
      currentNode: function currentNode() {
        return "node " + process.versions.node;
      },
      env: process.env
    };
  }
});

// node_modules/browserslist/index.js
var require_browserslist = __commonJS({
  "node_modules/browserslist/index.js"(exports, module2) {
    var jsReleases = require_envs();
    var agents = require_agents2().agents;
    var jsEOL = require_release_schedule();
    var path = require("path");
    var e2c = require_versions();
    var BrowserslistError = require_error();
    var parse = require_parse2();
    var env = require_node2();
    var YEAR = 365.259641 * 24 * 60 * 60 * 1e3;
    var ANDROID_EVERGREEN_FIRST = "37";
    var OP_MOB_BLINK_FIRST = 14;
    function isVersionsMatch(versionA, versionB) {
      return (versionA + ".").indexOf(versionB + ".") === 0;
    }
    function isEolReleased(name) {
      var version = name.slice(1);
      return browserslist.nodeVersions.some(function(i) {
        return isVersionsMatch(i, version);
      });
    }
    function normalize(versions) {
      return versions.filter(function(version) {
        return typeof version === "string";
      });
    }
    function normalizeElectron(version) {
      var versionToUse = version;
      if (version.split(".").length === 3) {
        versionToUse = version.split(".").slice(0, -1).join(".");
      }
      return versionToUse;
    }
    function nameMapper(name) {
      return function mapName(version) {
        return name + " " + version;
      };
    }
    function getMajor(version) {
      return parseInt(version.split(".")[0]);
    }
    function getMajorVersions(released, number) {
      if (released.length === 0)
        return [];
      var majorVersions = uniq(released.map(getMajor));
      var minimum = majorVersions[majorVersions.length - number];
      if (!minimum) {
        return released;
      }
      var selected = [];
      for (var i = released.length - 1; i >= 0; i--) {
        if (minimum > getMajor(released[i]))
          break;
        selected.unshift(released[i]);
      }
      return selected;
    }
    function uniq(array) {
      var filtered = [];
      for (var i = 0; i < array.length; i++) {
        if (filtered.indexOf(array[i]) === -1)
          filtered.push(array[i]);
      }
      return filtered;
    }
    function fillUsage(result, name, data) {
      for (var i in data) {
        result[name + " " + i] = data[i];
      }
    }
    function generateFilter(sign, version) {
      version = parseFloat(version);
      if (sign === ">") {
        return function(v) {
          return parseFloat(v) > version;
        };
      } else if (sign === ">=") {
        return function(v) {
          return parseFloat(v) >= version;
        };
      } else if (sign === "<") {
        return function(v) {
          return parseFloat(v) < version;
        };
      } else {
        return function(v) {
          return parseFloat(v) <= version;
        };
      }
    }
    function generateSemverFilter(sign, version) {
      version = version.split(".").map(parseSimpleInt);
      version[1] = version[1] || 0;
      version[2] = version[2] || 0;
      if (sign === ">") {
        return function(v) {
          v = v.split(".").map(parseSimpleInt);
          return compareSemver(v, version) > 0;
        };
      } else if (sign === ">=") {
        return function(v) {
          v = v.split(".").map(parseSimpleInt);
          return compareSemver(v, version) >= 0;
        };
      } else if (sign === "<") {
        return function(v) {
          v = v.split(".").map(parseSimpleInt);
          return compareSemver(version, v) > 0;
        };
      } else {
        return function(v) {
          v = v.split(".").map(parseSimpleInt);
          return compareSemver(version, v) >= 0;
        };
      }
    }
    function parseSimpleInt(x) {
      return parseInt(x);
    }
    function compare(a, b) {
      if (a < b)
        return -1;
      if (a > b)
        return 1;
      return 0;
    }
    function compareSemver(a, b) {
      return compare(parseInt(a[0]), parseInt(b[0])) || compare(parseInt(a[1] || "0"), parseInt(b[1] || "0")) || compare(parseInt(a[2] || "0"), parseInt(b[2] || "0"));
    }
    function semverFilterLoose(operator, range) {
      range = range.split(".").map(parseSimpleInt);
      if (typeof range[1] === "undefined") {
        range[1] = "x";
      }
      switch (operator) {
        case "<=":
          return function(version) {
            version = version.split(".").map(parseSimpleInt);
            return compareSemverLoose(version, range) <= 0;
          };
        case ">=":
        default:
          return function(version) {
            version = version.split(".").map(parseSimpleInt);
            return compareSemverLoose(version, range) >= 0;
          };
      }
    }
    function compareSemverLoose(version, range) {
      if (version[0] !== range[0]) {
        return version[0] < range[0] ? -1 : 1;
      }
      if (range[1] === "x") {
        return 0;
      }
      if (version[1] !== range[1]) {
        return version[1] < range[1] ? -1 : 1;
      }
      return 0;
    }
    function resolveVersion(data, version) {
      if (data.versions.indexOf(version) !== -1) {
        return version;
      } else if (browserslist.versionAliases[data.name][version]) {
        return browserslist.versionAliases[data.name][version];
      } else {
        return false;
      }
    }
    function normalizeVersion(data, version) {
      var resolved = resolveVersion(data, version);
      if (resolved) {
        return resolved;
      } else if (data.versions.length === 1) {
        return data.versions[0];
      } else {
        return false;
      }
    }
    function filterByYear(since, context) {
      since = since / 1e3;
      return Object.keys(agents).reduce(function(selected, name) {
        var data = byName(name, context);
        if (!data)
          return selected;
        var versions = Object.keys(data.releaseDate).filter(function(v) {
          var date = data.releaseDate[v];
          return date !== null && date >= since;
        });
        return selected.concat(versions.map(nameMapper(data.name)));
      }, []);
    }
    function cloneData(data) {
      return {
        name: data.name,
        versions: data.versions,
        released: data.released,
        releaseDate: data.releaseDate
      };
    }
    function byName(name, context) {
      name = name.toLowerCase();
      name = browserslist.aliases[name] || name;
      if (context.mobileToDesktop && browserslist.desktopNames[name]) {
        var desktop = browserslist.data[browserslist.desktopNames[name]];
        if (name === "android") {
          return normalizeAndroidData(cloneData(browserslist.data[name]), desktop);
        } else {
          var cloned = cloneData(desktop);
          cloned.name = name;
          return cloned;
        }
      }
      return browserslist.data[name];
    }
    function normalizeAndroidVersions(androidVersions, chromeVersions) {
      var iFirstEvergreen = chromeVersions.indexOf(ANDROID_EVERGREEN_FIRST);
      return androidVersions.filter(function(version) {
        return /^(?:[2-4]\.|[34]$)/.test(version);
      }).concat(chromeVersions.slice(iFirstEvergreen));
    }
    function normalizeAndroidData(android, chrome) {
      android.released = normalizeAndroidVersions(android.released, chrome.released);
      android.versions = normalizeAndroidVersions(android.versions, chrome.versions);
      android.released.forEach(function(v) {
        if (android.releaseDate[v] === void 0) {
          android.releaseDate[v] = chrome.releaseDate[v];
        }
      });
      return android;
    }
    function checkName(name, context) {
      var data = byName(name, context);
      if (!data)
        throw new BrowserslistError("Unknown browser " + name);
      return data;
    }
    function unknownQuery(query) {
      return new BrowserslistError(
        "Unknown browser query `" + query + "`. Maybe you are using old Browserslist or made typo in query."
      );
    }
    function filterJumps(list, name, nVersions, context) {
      var jump = 1;
      switch (name) {
        case "android":
          if (context.mobileToDesktop)
            return list;
          var released = browserslist.data.chrome.released;
          jump = released.length - released.indexOf(ANDROID_EVERGREEN_FIRST);
          break;
        case "op_mob":
          var latest = browserslist.data.op_mob.released.slice(-1)[0];
          jump = getMajor(latest) - OP_MOB_BLINK_FIRST + 1;
          break;
        default:
          return list;
      }
      if (nVersions <= jump) {
        return list.slice(-1);
      }
      return list.slice(jump - 1 - nVersions);
    }
    function isSupported(flags, withPartial) {
      return typeof flags === "string" && (flags.indexOf("y") >= 0 || withPartial && flags.indexOf("a") >= 0);
    }
    function resolve(queries, context) {
      return parse(QUERIES, queries).reduce(function(result, node, index) {
        if (node.not && index === 0) {
          throw new BrowserslistError(
            "Write any browsers query (for instance, `defaults`) before `" + node.query + "`"
          );
        }
        var type = QUERIES[node.type];
        var array = type.select.call(browserslist, context, node).map(function(j) {
          var parts = j.split(" ");
          if (parts[1] === "0") {
            return parts[0] + " " + byName(parts[0], context).versions[0];
          } else {
            return j;
          }
        });
        if (node.compose === "and") {
          if (node.not) {
            return result.filter(function(j) {
              return array.indexOf(j) === -1;
            });
          } else {
            return result.filter(function(j) {
              return array.indexOf(j) !== -1;
            });
          }
        } else {
          if (node.not) {
            var filter = {};
            array.forEach(function(j) {
              filter[j] = true;
            });
            return result.filter(function(j) {
              return !filter[j];
            });
          }
          return result.concat(array);
        }
      }, []);
    }
    function prepareOpts(opts) {
      if (typeof opts === "undefined")
        opts = {};
      if (typeof opts.path === "undefined") {
        opts.path = path.resolve ? path.resolve(".") : ".";
      }
      return opts;
    }
    function prepareQueries(queries, opts) {
      if (typeof queries === "undefined" || queries === null) {
        var config = browserslist.loadConfig(opts);
        if (config) {
          queries = config;
        } else {
          queries = browserslist.defaults;
        }
      }
      return queries;
    }
    function checkQueries(queries) {
      if (!(typeof queries === "string" || Array.isArray(queries))) {
        throw new BrowserslistError(
          "Browser queries must be an array or string. Got " + typeof queries + "."
        );
      }
    }
    var cache = {};
    function browserslist(queries, opts) {
      opts = prepareOpts(opts);
      queries = prepareQueries(queries, opts);
      checkQueries(queries);
      var context = {
        ignoreUnknownVersions: opts.ignoreUnknownVersions,
        dangerousExtend: opts.dangerousExtend,
        mobileToDesktop: opts.mobileToDesktop,
        path: opts.path,
        env: opts.env
      };
      env.oldDataWarning(browserslist.data);
      var stats = env.getStat(opts, browserslist.data);
      if (stats) {
        context.customUsage = {};
        for (var browser in stats) {
          fillUsage(context.customUsage, browser, stats[browser]);
        }
      }
      var cacheKey = JSON.stringify([queries, context]);
      if (cache[cacheKey])
        return cache[cacheKey];
      var result = uniq(resolve(queries, context)).sort(function(name1, name2) {
        name1 = name1.split(" ");
        name2 = name2.split(" ");
        if (name1[0] === name2[0]) {
          var version1 = name1[1].split("-")[0];
          var version2 = name2[1].split("-")[0];
          return compareSemver(version2.split("."), version1.split("."));
        } else {
          return compare(name1[0], name2[0]);
        }
      });
      if (!env.env.BROWSERSLIST_DISABLE_CACHE) {
        cache[cacheKey] = result;
      }
      return result;
    }
    browserslist.parse = function(queries, opts) {
      opts = prepareOpts(opts);
      queries = prepareQueries(queries, opts);
      checkQueries(queries);
      return parse(QUERIES, queries);
    };
    browserslist.cache = {};
    browserslist.data = {};
    browserslist.usage = {
      global: {},
      custom: null
    };
    browserslist.defaults = ["> 0.5%", "last 2 versions", "Firefox ESR", "not dead"];
    browserslist.aliases = {
      fx: "firefox",
      ff: "firefox",
      ios: "ios_saf",
      explorer: "ie",
      blackberry: "bb",
      explorermobile: "ie_mob",
      operamini: "op_mini",
      operamobile: "op_mob",
      chromeandroid: "and_chr",
      firefoxandroid: "and_ff",
      ucandroid: "and_uc",
      qqandroid: "and_qq"
    };
    browserslist.desktopNames = {
      and_chr: "chrome",
      and_ff: "firefox",
      ie_mob: "ie",
      android: "chrome"
      // has extra processing logic
    };
    browserslist.versionAliases = {};
    browserslist.clearCaches = env.clearCaches;
    browserslist.parseConfig = env.parseConfig;
    browserslist.readConfig = env.readConfig;
    browserslist.findConfig = env.findConfig;
    browserslist.loadConfig = env.loadConfig;
    browserslist.coverage = function(browsers, stats) {
      var data;
      if (typeof stats === "undefined") {
        data = browserslist.usage.global;
      } else if (stats === "my stats") {
        var opts = {};
        opts.path = path.resolve ? path.resolve(".") : ".";
        var customStats = env.getStat(opts);
        if (!customStats) {
          throw new BrowserslistError("Custom usage statistics was not provided");
        }
        data = {};
        for (var browser in customStats) {
          fillUsage(data, browser, customStats[browser]);
        }
      } else if (typeof stats === "string") {
        if (stats.length > 2) {
          stats = stats.toLowerCase();
        } else {
          stats = stats.toUpperCase();
        }
        env.loadCountry(browserslist.usage, stats, browserslist.data);
        data = browserslist.usage[stats];
      } else {
        if ("dataByBrowser" in stats) {
          stats = stats.dataByBrowser;
        }
        data = {};
        for (var name in stats) {
          for (var version in stats[name]) {
            data[name + " " + version] = stats[name][version];
          }
        }
      }
      return browsers.reduce(function(all, i) {
        var usage = data[i];
        if (usage === void 0) {
          usage = data[i.replace(/ \S+$/, " 0")];
        }
        return all + (usage || 0);
      }, 0);
    };
    function nodeQuery(context, node) {
      var matched = browserslist.nodeVersions.filter(function(i) {
        return isVersionsMatch(i, node.version);
      });
      if (matched.length === 0) {
        if (context.ignoreUnknownVersions) {
          return [];
        } else {
          throw new BrowserslistError(
            "Unknown version " + node.version + " of Node.js"
          );
        }
      }
      return ["node " + matched[matched.length - 1]];
    }
    function sinceQuery(context, node) {
      var year = parseInt(node.year);
      var month = parseInt(node.month || "01") - 1;
      var day = parseInt(node.day || "01");
      return filterByYear(Date.UTC(year, month, day, 0, 0, 0), context);
    }
    function coverQuery(context, node) {
      var coverage = parseFloat(node.coverage);
      var usage = browserslist.usage.global;
      if (node.place) {
        if (node.place.match(/^my\s+stats$/i)) {
          if (!context.customUsage) {
            throw new BrowserslistError("Custom usage statistics was not provided");
          }
          usage = context.customUsage;
        } else {
          var place;
          if (node.place.length === 2) {
            place = node.place.toUpperCase();
          } else {
            place = node.place.toLowerCase();
          }
          env.loadCountry(browserslist.usage, place, browserslist.data);
          usage = browserslist.usage[place];
        }
      }
      var versions = Object.keys(usage).sort(function(a, b) {
        return usage[b] - usage[a];
      });
      var coveraged = 0;
      var result = [];
      var version;
      for (var i = 0; i < versions.length; i++) {
        version = versions[i];
        if (usage[version] === 0)
          break;
        coveraged += usage[version];
        result.push(version);
        if (coveraged >= coverage)
          break;
      }
      return result;
    }
    var QUERIES = {
      last_major_versions: {
        matches: ["versions"],
        regexp: /^last\s+(\d+)\s+major\s+versions?$/i,
        select: function(context, node) {
          return Object.keys(agents).reduce(function(selected, name) {
            var data = byName(name, context);
            if (!data)
              return selected;
            var list = getMajorVersions(data.released, node.versions);
            list = list.map(nameMapper(data.name));
            list = filterJumps(list, data.name, node.versions, context);
            return selected.concat(list);
          }, []);
        }
      },
      last_versions: {
        matches: ["versions"],
        regexp: /^last\s+(\d+)\s+versions?$/i,
        select: function(context, node) {
          return Object.keys(agents).reduce(function(selected, name) {
            var data = byName(name, context);
            if (!data)
              return selected;
            var list = data.released.slice(-node.versions);
            list = list.map(nameMapper(data.name));
            list = filterJumps(list, data.name, node.versions, context);
            return selected.concat(list);
          }, []);
        }
      },
      last_electron_major_versions: {
        matches: ["versions"],
        regexp: /^last\s+(\d+)\s+electron\s+major\s+versions?$/i,
        select: function(context, node) {
          var validVersions = getMajorVersions(Object.keys(e2c), node.versions);
          return validVersions.map(function(i) {
            return "chrome " + e2c[i];
          });
        }
      },
      last_node_major_versions: {
        matches: ["versions"],
        regexp: /^last\s+(\d+)\s+node\s+major\s+versions?$/i,
        select: function(context, node) {
          return getMajorVersions(browserslist.nodeVersions, node.versions).map(
            function(version) {
              return "node " + version;
            }
          );
        }
      },
      last_browser_major_versions: {
        matches: ["versions", "browser"],
        regexp: /^last\s+(\d+)\s+(\w+)\s+major\s+versions?$/i,
        select: function(context, node) {
          var data = checkName(node.browser, context);
          var validVersions = getMajorVersions(data.released, node.versions);
          var list = validVersions.map(nameMapper(data.name));
          list = filterJumps(list, data.name, node.versions, context);
          return list;
        }
      },
      last_electron_versions: {
        matches: ["versions"],
        regexp: /^last\s+(\d+)\s+electron\s+versions?$/i,
        select: function(context, node) {
          return Object.keys(e2c).slice(-node.versions).map(function(i) {
            return "chrome " + e2c[i];
          });
        }
      },
      last_node_versions: {
        matches: ["versions"],
        regexp: /^last\s+(\d+)\s+node\s+versions?$/i,
        select: function(context, node) {
          return browserslist.nodeVersions.slice(-node.versions).map(function(version) {
            return "node " + version;
          });
        }
      },
      last_browser_versions: {
        matches: ["versions", "browser"],
        regexp: /^last\s+(\d+)\s+(\w+)\s+versions?$/i,
        select: function(context, node) {
          var data = checkName(node.browser, context);
          var list = data.released.slice(-node.versions).map(nameMapper(data.name));
          list = filterJumps(list, data.name, node.versions, context);
          return list;
        }
      },
      unreleased_versions: {
        matches: [],
        regexp: /^unreleased\s+versions$/i,
        select: function(context) {
          return Object.keys(agents).reduce(function(selected, name) {
            var data = byName(name, context);
            if (!data)
              return selected;
            var list = data.versions.filter(function(v) {
              return data.released.indexOf(v) === -1;
            });
            list = list.map(nameMapper(data.name));
            return selected.concat(list);
          }, []);
        }
      },
      unreleased_electron_versions: {
        matches: [],
        regexp: /^unreleased\s+electron\s+versions?$/i,
        select: function() {
          return [];
        }
      },
      unreleased_browser_versions: {
        matches: ["browser"],
        regexp: /^unreleased\s+(\w+)\s+versions?$/i,
        select: function(context, node) {
          var data = checkName(node.browser, context);
          return data.versions.filter(function(v) {
            return data.released.indexOf(v) === -1;
          }).map(nameMapper(data.name));
        }
      },
      last_years: {
        matches: ["years"],
        regexp: /^last\s+(\d*.?\d+)\s+years?$/i,
        select: function(context, node) {
          return filterByYear(Date.now() - YEAR * node.years, context);
        }
      },
      since_y: {
        matches: ["year"],
        regexp: /^since (\d+)$/i,
        select: sinceQuery
      },
      since_y_m: {
        matches: ["year", "month"],
        regexp: /^since (\d+)-(\d+)$/i,
        select: sinceQuery
      },
      since_y_m_d: {
        matches: ["year", "month", "day"],
        regexp: /^since (\d+)-(\d+)-(\d+)$/i,
        select: sinceQuery
      },
      popularity: {
        matches: ["sign", "popularity"],
        regexp: /^(>=?|<=?)\s*(\d+|\d+\.\d+|\.\d+)%$/,
        select: function(context, node) {
          var popularity = parseFloat(node.popularity);
          var usage = browserslist.usage.global;
          return Object.keys(usage).reduce(function(result, version) {
            if (node.sign === ">") {
              if (usage[version] > popularity) {
                result.push(version);
              }
            } else if (node.sign === "<") {
              if (usage[version] < popularity) {
                result.push(version);
              }
            } else if (node.sign === "<=") {
              if (usage[version] <= popularity) {
                result.push(version);
              }
            } else if (usage[version] >= popularity) {
              result.push(version);
            }
            return result;
          }, []);
        }
      },
      popularity_in_my_stats: {
        matches: ["sign", "popularity"],
        regexp: /^(>=?|<=?)\s*(\d+|\d+\.\d+|\.\d+)%\s+in\s+my\s+stats$/,
        select: function(context, node) {
          var popularity = parseFloat(node.popularity);
          if (!context.customUsage) {
            throw new BrowserslistError("Custom usage statistics was not provided");
          }
          var usage = context.customUsage;
          return Object.keys(usage).reduce(function(result, version) {
            var percentage = usage[version];
            if (percentage == null) {
              return result;
            }
            if (node.sign === ">") {
              if (percentage > popularity) {
                result.push(version);
              }
            } else if (node.sign === "<") {
              if (percentage < popularity) {
                result.push(version);
              }
            } else if (node.sign === "<=") {
              if (percentage <= popularity) {
                result.push(version);
              }
            } else if (percentage >= popularity) {
              result.push(version);
            }
            return result;
          }, []);
        }
      },
      popularity_in_config_stats: {
        matches: ["sign", "popularity", "config"],
        regexp: /^(>=?|<=?)\s*(\d+|\d+\.\d+|\.\d+)%\s+in\s+(\S+)\s+stats$/,
        select: function(context, node) {
          var popularity = parseFloat(node.popularity);
          var stats = env.loadStat(context, node.config, browserslist.data);
          if (stats) {
            context.customUsage = {};
            for (var browser in stats) {
              fillUsage(context.customUsage, browser, stats[browser]);
            }
          }
          if (!context.customUsage) {
            throw new BrowserslistError("Custom usage statistics was not provided");
          }
          var usage = context.customUsage;
          return Object.keys(usage).reduce(function(result, version) {
            var percentage = usage[version];
            if (percentage == null) {
              return result;
            }
            if (node.sign === ">") {
              if (percentage > popularity) {
                result.push(version);
              }
            } else if (node.sign === "<") {
              if (percentage < popularity) {
                result.push(version);
              }
            } else if (node.sign === "<=") {
              if (percentage <= popularity) {
                result.push(version);
              }
            } else if (percentage >= popularity) {
              result.push(version);
            }
            return result;
          }, []);
        }
      },
      popularity_in_place: {
        matches: ["sign", "popularity", "place"],
        regexp: /^(>=?|<=?)\s*(\d+|\d+\.\d+|\.\d+)%\s+in\s+((alt-)?\w\w)$/,
        select: function(context, node) {
          var popularity = parseFloat(node.popularity);
          var place = node.place;
          if (place.length === 2) {
            place = place.toUpperCase();
          } else {
            place = place.toLowerCase();
          }
          env.loadCountry(browserslist.usage, place, browserslist.data);
          var usage = browserslist.usage[place];
          return Object.keys(usage).reduce(function(result, version) {
            var percentage = usage[version];
            if (percentage == null) {
              return result;
            }
            if (node.sign === ">") {
              if (percentage > popularity) {
                result.push(version);
              }
            } else if (node.sign === "<") {
              if (percentage < popularity) {
                result.push(version);
              }
            } else if (node.sign === "<=") {
              if (percentage <= popularity) {
                result.push(version);
              }
            } else if (percentage >= popularity) {
              result.push(version);
            }
            return result;
          }, []);
        }
      },
      cover: {
        matches: ["coverage"],
        regexp: /^cover\s+(\d+|\d+\.\d+|\.\d+)%$/i,
        select: coverQuery
      },
      cover_in: {
        matches: ["coverage", "place"],
        regexp: /^cover\s+(\d+|\d+\.\d+|\.\d+)%\s+in\s+(my\s+stats|(alt-)?\w\w)$/i,
        select: coverQuery
      },
      supports: {
        matches: ["supportType", "feature"],
        regexp: /^(?:(fully|partially) )?supports\s+([\w-]+)$/,
        select: function(context, node) {
          env.loadFeature(browserslist.cache, node.feature);
          var withPartial = node.supportType !== "fully";
          var features = browserslist.cache[node.feature];
          var result = [];
          for (var name in features) {
            var data = byName(name, context);
            var checkDesktop = context.mobileToDesktop && name in browserslist.desktopNames && isSupported(features[name][data.released.slice(-1)[0]], withPartial);
            data.versions.forEach(function(version) {
              var flags = features[name][version];
              if (flags === void 0 && checkDesktop) {
                flags = features[browserslist.desktopNames[name]][version];
              }
              if (isSupported(flags, withPartial)) {
                result.push(name + " " + version);
              }
            });
          }
          return result;
        }
      },
      electron_range: {
        matches: ["from", "to"],
        regexp: /^electron\s+([\d.]+)\s*-\s*([\d.]+)$/i,
        select: function(context, node) {
          var fromToUse = normalizeElectron(node.from);
          var toToUse = normalizeElectron(node.to);
          var from = parseFloat(node.from);
          var to = parseFloat(node.to);
          if (!e2c[fromToUse]) {
            throw new BrowserslistError("Unknown version " + from + " of electron");
          }
          if (!e2c[toToUse]) {
            throw new BrowserslistError("Unknown version " + to + " of electron");
          }
          return Object.keys(e2c).filter(function(i) {
            var parsed = parseFloat(i);
            return parsed >= from && parsed <= to;
          }).map(function(i) {
            return "chrome " + e2c[i];
          });
        }
      },
      node_range: {
        matches: ["from", "to"],
        regexp: /^node\s+([\d.]+)\s*-\s*([\d.]+)$/i,
        select: function(context, node) {
          return browserslist.nodeVersions.filter(semverFilterLoose(">=", node.from)).filter(semverFilterLoose("<=", node.to)).map(function(v) {
            return "node " + v;
          });
        }
      },
      browser_range: {
        matches: ["browser", "from", "to"],
        regexp: /^(\w+)\s+([\d.]+)\s*-\s*([\d.]+)$/i,
        select: function(context, node) {
          var data = checkName(node.browser, context);
          var from = parseFloat(normalizeVersion(data, node.from) || node.from);
          var to = parseFloat(normalizeVersion(data, node.to) || node.to);
          function filter(v) {
            var parsed = parseFloat(v);
            return parsed >= from && parsed <= to;
          }
          return data.released.filter(filter).map(nameMapper(data.name));
        }
      },
      electron_ray: {
        matches: ["sign", "version"],
        regexp: /^electron\s*(>=?|<=?)\s*([\d.]+)$/i,
        select: function(context, node) {
          var versionToUse = normalizeElectron(node.version);
          return Object.keys(e2c).filter(generateFilter(node.sign, versionToUse)).map(function(i) {
            return "chrome " + e2c[i];
          });
        }
      },
      node_ray: {
        matches: ["sign", "version"],
        regexp: /^node\s*(>=?|<=?)\s*([\d.]+)$/i,
        select: function(context, node) {
          return browserslist.nodeVersions.filter(generateSemverFilter(node.sign, node.version)).map(function(v) {
            return "node " + v;
          });
        }
      },
      browser_ray: {
        matches: ["browser", "sign", "version"],
        regexp: /^(\w+)\s*(>=?|<=?)\s*([\d.]+)$/,
        select: function(context, node) {
          var version = node.version;
          var data = checkName(node.browser, context);
          var alias = browserslist.versionAliases[data.name][version];
          if (alias)
            version = alias;
          return data.released.filter(generateFilter(node.sign, version)).map(function(v) {
            return data.name + " " + v;
          });
        }
      },
      firefox_esr: {
        matches: [],
        regexp: /^(firefox|ff|fx)\s+esr$/i,
        select: function() {
          return ["firefox 115"];
        }
      },
      opera_mini_all: {
        matches: [],
        regexp: /(operamini|op_mini)\s+all/i,
        select: function() {
          return ["op_mini all"];
        }
      },
      electron_version: {
        matches: ["version"],
        regexp: /^electron\s+([\d.]+)$/i,
        select: function(context, node) {
          var versionToUse = normalizeElectron(node.version);
          var chrome = e2c[versionToUse];
          if (!chrome) {
            throw new BrowserslistError(
              "Unknown version " + node.version + " of electron"
            );
          }
          return ["chrome " + chrome];
        }
      },
      node_major_version: {
        matches: ["version"],
        regexp: /^node\s+(\d+)$/i,
        select: nodeQuery
      },
      node_minor_version: {
        matches: ["version"],
        regexp: /^node\s+(\d+\.\d+)$/i,
        select: nodeQuery
      },
      node_patch_version: {
        matches: ["version"],
        regexp: /^node\s+(\d+\.\d+\.\d+)$/i,
        select: nodeQuery
      },
      current_node: {
        matches: [],
        regexp: /^current\s+node$/i,
        select: function(context) {
          return [env.currentNode(resolve, context)];
        }
      },
      maintained_node: {
        matches: [],
        regexp: /^maintained\s+node\s+versions$/i,
        select: function(context) {
          var now = Date.now();
          var queries = Object.keys(jsEOL).filter(function(key) {
            return now < Date.parse(jsEOL[key].end) && now > Date.parse(jsEOL[key].start) && isEolReleased(key);
          }).map(function(key) {
            return "node " + key.slice(1);
          });
          return resolve(queries, context);
        }
      },
      phantomjs_1_9: {
        matches: [],
        regexp: /^phantomjs\s+1.9$/i,
        select: function() {
          return ["safari 5"];
        }
      },
      phantomjs_2_1: {
        matches: [],
        regexp: /^phantomjs\s+2.1$/i,
        select: function() {
          return ["safari 6"];
        }
      },
      browser_version: {
        matches: ["browser", "version"],
        regexp: /^(\w+)\s+(tp|[\d.]+)$/i,
        select: function(context, node) {
          var version = node.version;
          if (/^tp$/i.test(version))
            version = "TP";
          var data = checkName(node.browser, context);
          var alias = normalizeVersion(data, version);
          if (alias) {
            version = alias;
          } else {
            if (version.indexOf(".") === -1) {
              alias = version + ".0";
            } else {
              alias = version.replace(/\.0$/, "");
            }
            alias = normalizeVersion(data, alias);
            if (alias) {
              version = alias;
            } else if (context.ignoreUnknownVersions) {
              return [];
            } else {
              throw new BrowserslistError(
                "Unknown version " + version + " of " + node.browser
              );
            }
          }
          return [data.name + " " + version];
        }
      },
      browserslist_config: {
        matches: [],
        regexp: /^browserslist config$/i,
        select: function(context) {
          return browserslist(void 0, context);
        }
      },
      extends: {
        matches: ["config"],
        regexp: /^extends (.+)$/i,
        select: function(context, node) {
          return resolve(env.loadQueries(context, node.config), context);
        }
      },
      defaults: {
        matches: [],
        regexp: /^defaults$/i,
        select: function(context) {
          return resolve(browserslist.defaults, context);
        }
      },
      dead: {
        matches: [],
        regexp: /^dead$/i,
        select: function(context) {
          var dead = [
            "Baidu >= 0",
            "ie <= 11",
            "ie_mob <= 11",
            "bb <= 10",
            "op_mob <= 12.1",
            "samsung 4"
          ];
          return resolve(dead, context);
        }
      },
      unknown: {
        matches: [],
        regexp: /^(\w+)$/i,
        select: function(context, node) {
          if (byName(node.query, context)) {
            throw new BrowserslistError(
              "Specify versions in Browserslist query for browser " + node.query
            );
          } else {
            throw unknownQuery(node.query);
          }
        }
      }
    };
    (function() {
      for (var name in agents) {
        var browser = agents[name];
        browserslist.data[name] = {
          name,
          versions: normalize(agents[name].versions),
          released: normalize(agents[name].versions.slice(0, -3)),
          releaseDate: agents[name].release_date
        };
        fillUsage(browserslist.usage.global, name, browser.usage_global);
        browserslist.versionAliases[name] = {};
        for (var i = 0; i < browser.versions.length; i++) {
          var full = browser.versions[i];
          if (!full)
            continue;
          if (full.indexOf("-") !== -1) {
            var interval = full.split("-");
            for (var j = 0; j < interval.length; j++) {
              browserslist.versionAliases[name][interval[j]] = full;
            }
          }
        }
      }
      browserslist.nodeVersions = jsReleases.map(function(release) {
        return release.version;
      });
    })();
    module2.exports = browserslist;
  }
});

// node_modules/lodash.memoize/index.js
var require_lodash = __commonJS({
  "node_modules/lodash.memoize/index.js"(exports, module2) {
    var FUNC_ERROR_TEXT = "Expected a function";
    var HASH_UNDEFINED = "__lodash_hash_undefined__";
    var funcTag = "[object Function]";
    var genTag = "[object GeneratorFunction]";
    var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
    var reIsHostCtor = /^\[object .+?Constructor\]$/;
    var freeGlobal = typeof global == "object" && global && global.Object === Object && global;
    var freeSelf = typeof self == "object" && self && self.Object === Object && self;
    var root = freeGlobal || freeSelf || Function("return this")();
    function getValue(object, key) {
      return object == null ? void 0 : object[key];
    }
    function isHostObject(value) {
      var result = false;
      if (value != null && typeof value.toString != "function") {
        try {
          result = !!(value + "");
        } catch (e) {
        }
      }
      return result;
    }
    var arrayProto = Array.prototype;
    var funcProto = Function.prototype;
    var objectProto = Object.prototype;
    var coreJsData = root["__core-js_shared__"];
    var maskSrcKey = function() {
      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || "");
      return uid ? "Symbol(src)_1." + uid : "";
    }();
    var funcToString = funcProto.toString;
    var hasOwnProperty2 = objectProto.hasOwnProperty;
    var objectToString = objectProto.toString;
    var reIsNative = RegExp(
      "^" + funcToString.call(hasOwnProperty2).replace(reRegExpChar, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
    );
    var splice = arrayProto.splice;
    var Map2 = getNative(root, "Map");
    var nativeCreate = getNative(Object, "create");
    function Hash(entries) {
      var index = -1, length = entries ? entries.length : 0;
      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }
    function hashClear() {
      this.__data__ = nativeCreate ? nativeCreate(null) : {};
    }
    function hashDelete(key) {
      return this.has(key) && delete this.__data__[key];
    }
    function hashGet(key) {
      var data = this.__data__;
      if (nativeCreate) {
        var result = data[key];
        return result === HASH_UNDEFINED ? void 0 : result;
      }
      return hasOwnProperty2.call(data, key) ? data[key] : void 0;
    }
    function hashHas(key) {
      var data = this.__data__;
      return nativeCreate ? data[key] !== void 0 : hasOwnProperty2.call(data, key);
    }
    function hashSet(key, value) {
      var data = this.__data__;
      data[key] = nativeCreate && value === void 0 ? HASH_UNDEFINED : value;
      return this;
    }
    Hash.prototype.clear = hashClear;
    Hash.prototype["delete"] = hashDelete;
    Hash.prototype.get = hashGet;
    Hash.prototype.has = hashHas;
    Hash.prototype.set = hashSet;
    function ListCache(entries) {
      var index = -1, length = entries ? entries.length : 0;
      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }
    function listCacheClear() {
      this.__data__ = [];
    }
    function listCacheDelete(key) {
      var data = this.__data__, index = assocIndexOf(data, key);
      if (index < 0) {
        return false;
      }
      var lastIndex = data.length - 1;
      if (index == lastIndex) {
        data.pop();
      } else {
        splice.call(data, index, 1);
      }
      return true;
    }
    function listCacheGet(key) {
      var data = this.__data__, index = assocIndexOf(data, key);
      return index < 0 ? void 0 : data[index][1];
    }
    function listCacheHas(key) {
      return assocIndexOf(this.__data__, key) > -1;
    }
    function listCacheSet(key, value) {
      var data = this.__data__, index = assocIndexOf(data, key);
      if (index < 0) {
        data.push([key, value]);
      } else {
        data[index][1] = value;
      }
      return this;
    }
    ListCache.prototype.clear = listCacheClear;
    ListCache.prototype["delete"] = listCacheDelete;
    ListCache.prototype.get = listCacheGet;
    ListCache.prototype.has = listCacheHas;
    ListCache.prototype.set = listCacheSet;
    function MapCache(entries) {
      var index = -1, length = entries ? entries.length : 0;
      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }
    function mapCacheClear() {
      this.__data__ = {
        "hash": new Hash(),
        "map": new (Map2 || ListCache)(),
        "string": new Hash()
      };
    }
    function mapCacheDelete(key) {
      return getMapData(this, key)["delete"](key);
    }
    function mapCacheGet(key) {
      return getMapData(this, key).get(key);
    }
    function mapCacheHas(key) {
      return getMapData(this, key).has(key);
    }
    function mapCacheSet(key, value) {
      getMapData(this, key).set(key, value);
      return this;
    }
    MapCache.prototype.clear = mapCacheClear;
    MapCache.prototype["delete"] = mapCacheDelete;
    MapCache.prototype.get = mapCacheGet;
    MapCache.prototype.has = mapCacheHas;
    MapCache.prototype.set = mapCacheSet;
    function assocIndexOf(array, key) {
      var length = array.length;
      while (length--) {
        if (eq(array[length][0], key)) {
          return length;
        }
      }
      return -1;
    }
    function baseIsNative(value) {
      if (!isObject(value) || isMasked(value)) {
        return false;
      }
      var pattern = isFunction(value) || isHostObject(value) ? reIsNative : reIsHostCtor;
      return pattern.test(toSource(value));
    }
    function getMapData(map, key) {
      var data = map.__data__;
      return isKeyable(key) ? data[typeof key == "string" ? "string" : "hash"] : data.map;
    }
    function getNative(object, key) {
      var value = getValue(object, key);
      return baseIsNative(value) ? value : void 0;
    }
    function isKeyable(value) {
      var type = typeof value;
      return type == "string" || type == "number" || type == "symbol" || type == "boolean" ? value !== "__proto__" : value === null;
    }
    function isMasked(func) {
      return !!maskSrcKey && maskSrcKey in func;
    }
    function toSource(func) {
      if (func != null) {
        try {
          return funcToString.call(func);
        } catch (e) {
        }
        try {
          return func + "";
        } catch (e) {
        }
      }
      return "";
    }
    function memoize(func, resolver) {
      if (typeof func != "function" || resolver && typeof resolver != "function") {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var memoized = function() {
        var args = arguments, key = resolver ? resolver.apply(this, args) : args[0], cache = memoized.cache;
        if (cache.has(key)) {
          return cache.get(key);
        }
        var result = func.apply(this, args);
        memoized.cache = cache.set(key, result);
        return result;
      };
      memoized.cache = new (memoize.Cache || MapCache)();
      return memoized;
    }
    memoize.Cache = MapCache;
    function eq(value, other) {
      return value === other || value !== value && other !== other;
    }
    function isFunction(value) {
      var tag = isObject(value) ? objectToString.call(value) : "";
      return tag == funcTag || tag == genTag;
    }
    function isObject(value) {
      var type = typeof value;
      return !!value && (type == "object" || type == "function");
    }
    module2.exports = memoize;
  }
});

// node_modules/caniuse-lite/data/features/aac.js
var require_aac = __commonJS({
  "node_modules/caniuse-lite/data/features/aac.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "F A B", "2": "J D E OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "2": "5 6 PC 3B I J D E F A B C K L G M N O o p QC RC", "132": "0 1 2 3 4 7 8 9 q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, D: { "1": "0 1 2 3 4 6 7 8 9 C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 I J D E F", "16": "A B" }, E: { "1": "5 I J D E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "SC AC" }, F: { "1": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F B C bC cC dC eC yB MC fC zB" }, G: { "1": "E gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "16": "AC" }, H: { "2": "1C" }, I: { "1": "3B I H 5C NC 6C 7C", "2": "2C 3C 4C" }, J: { "1": "A", "2": "D" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "132": "n" }, N: { "1": "A", "2": "B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "132": "LD MD" } }, B: 6, C: "AAC audio file format", D: true };
  }
});

// node_modules/caniuse-lite/data/features/abortcontroller.js
var require_abortcontroller = __commonJS({
  "node_modules/caniuse-lite/data/features/abortcontroller.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G" }, C: { "1": "0 1 2 3 4 fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB QC RC" }, D: { "1": "0 1 2 3 4 mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB" }, E: { "1": "K L G zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A B SC AC TC UC VC WC BC", "130": "C yB" }, F: { "1": "bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bC cC dC eC yB MC fC zB" }, G: { "1": "qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC pC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I 8C 9C AD BD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "2": "LD" } }, B: 1, C: "AbortController & AbortSignal", D: true };
  }
});

// node_modules/caniuse-lite/data/features/ac3-ec3.js
var require_ac3_ec3 = __commonJS({
  "node_modules/caniuse-lite/data/features/ac3-ec3.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "C K L G M N O", "2": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB" }, G: { "2": "E AC gC NC hC iC jC kC", "132": "lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D", "132": "A" }, K: { "2": "A B C r yB MC", "132": "zB" }, L: { "2": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "2": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "2": "KD" }, S: { "2": "LD MD" } }, B: 6, C: "AC-3 (Dolby Digital) and EC-3 (Dolby Digital Plus) codecs", D: false };
  }
});

// node_modules/caniuse-lite/data/features/accelerometer.js
var require_accelerometer = __commonJS({
  "node_modules/caniuse-lite/data/features/accelerometer.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "1": "0 1 2 3 4 nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB", "194": "gB 4B hB 5B iB jB kB lB mB" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB bC cC dC eC yB MC fC zB" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "2": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "2": "LD MD" } }, B: 4, C: "Accelerometer", D: true };
  }
});

// node_modules/caniuse-lite/data/features/addeventlistener.js
var require_addeventlistener = __commonJS({
  "node_modules/caniuse-lite/data/features/addeventlistener.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "F A B", "130": "J D E OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 6 7 8 9 D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "257": "5 PC 3B I J QC RC" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB" }, G: { "1": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "1": "1C" }, I: { "1": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "1": "D A" }, K: { "1": "A B C r yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "EventTarget.addEventListener()", D: true };
  }
});

// node_modules/caniuse-lite/data/features/alternate-stylesheet.js
var require_alternate_stylesheet = __commonJS({
  "node_modules/caniuse-lite/data/features/alternate-stylesheet.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "E F A B", "2": "J D OC" }, B: { "2": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "F B C bC cC dC eC yB MC fC zB", "16": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "16": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "16": "D A" }, K: { "2": "r", "16": "A B C yB MC zB" }, L: { "16": "H" }, M: { "16": "n" }, N: { "16": "A B" }, O: { "16": "0B" }, P: { "16": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "16": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "Alternate stylesheet", D: false };
  }
});

// node_modules/caniuse-lite/data/features/ambient-light.js
var require_ambient_light = __commonJS({
  "node_modules/caniuse-lite/data/features/ambient-light.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "2": "C K", "132": "L G M N O", "322": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "2": "5 6 PC 3B I J D E F A B C K L G M N O o p QC RC", "132": "7 8 9 q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B", "194": "0 1 2 3 4 hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, D: { "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB", "322": "0 1 2 3 4 gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB bC cC dC eC yB MC fC zB", "322": "r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "2": "A B C r yB MC zB" }, L: { "2": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "2": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "2": "KD" }, S: { "132": "LD MD" } }, B: 4, C: "Ambient Light Sensor", D: true };
  }
});

// node_modules/caniuse-lite/data/features/apng.js
var require_apng = __commonJS({
  "node_modules/caniuse-lite/data/features/apng.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC", "2": "PC" }, D: { "1": "0 1 2 3 4 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB" }, E: { "1": "E F A B C K L G WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D SC AC TC UC VC" }, F: { "1": "B C UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB", "2": "6 7 8 9 F G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB" }, G: { "1": "E kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC hC iC jC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "A B C r yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I 8C 9C" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 5, C: "Animated PNG (APNG)", D: true };
  }
});

// node_modules/caniuse-lite/data/features/array-find-index.js
var require_array_find_index = __commonJS({
  "node_modules/caniuse-lite/data/features/array-find-index.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 PC 3B I J D E F A B C K L G M N O o p q QC RC" }, D: { "1": "0 1 2 3 4 TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB" }, E: { "1": "E F A B C K L G VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D SC AC TC UC" }, F: { "1": "GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB bC cC dC eC yB MC fC zB" }, G: { "1": "E kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC hC iC jC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D", "16": "A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 6, C: "Array.prototype.findIndex", D: true };
  }
});

// node_modules/caniuse-lite/data/features/array-find.js
var require_array_find = __commonJS({
  "node_modules/caniuse-lite/data/features/array-find.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "16": "C K L" }, C: { "1": "0 1 2 3 4 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 PC 3B I J D E F A B C K L G M N O o p q QC RC" }, D: { "1": "0 1 2 3 4 TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB" }, E: { "1": "E F A B C K L G VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D SC AC TC UC" }, F: { "1": "GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB bC cC dC eC yB MC fC zB" }, G: { "1": "E kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC hC iC jC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D", "16": "A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 6, C: "Array.prototype.find", D: true };
  }
});

// node_modules/caniuse-lite/data/features/array-flat.js
var require_array_flat = __commonJS({
  "node_modules/caniuse-lite/data/features/array-flat.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B QC RC" }, D: { "1": "0 1 2 3 4 pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB" }, E: { "1": "C K L G zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A B SC AC TC UC VC WC BC yB" }, F: { "1": "eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB bC cC dC eC yB MC fC zB" }, G: { "1": "rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q BC DD ED FD GD HD 1B 2B ID JD", "2": "I 8C 9C AD BD CD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "2": "LD" } }, B: 6, C: "flat & flatMap array methods", D: true };
  }
});

// node_modules/caniuse-lite/data/features/array-includes.js
var require_array_includes = __commonJS({
  "node_modules/caniuse-lite/data/features/array-includes.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K" }, C: { "1": "0 1 2 3 4 RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB QC RC" }, D: { "1": "0 1 2 3 4 VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB" }, E: { "1": "F A B C K L G WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E SC AC TC UC VC" }, F: { "1": "IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB bC cC dC eC yB MC fC zB" }, G: { "1": "lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 6, C: "Array.prototype.includes", D: true };
  }
});

// node_modules/caniuse-lite/data/features/arrow-functions.js
var require_arrow_functions = __commonJS({
  "node_modules/caniuse-lite/data/features/arrow-functions.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 7 8 9 q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 PC 3B I J D E F A B C K L G M N O o p QC RC" }, D: { "1": "0 1 2 3 4 TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB" }, E: { "1": "A B C K L G BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F SC AC TC UC VC WC" }, F: { "1": "GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB bC cC dC eC yB MC fC zB" }, G: { "1": "nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 6, C: "Arrow functions", D: true };
  }
});

// node_modules/caniuse-lite/data/features/asmjs.js
var require_asmjs = __commonJS({
  "node_modules/caniuse-lite/data/features/asmjs.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "K L G M N O", "132": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "322": "C" }, C: { "1": "0 1 2 3 4 7 8 9 q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 PC 3B I J D E F A B C K L G M N O o p QC RC" }, D: { "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB", "132": "0 1 2 3 4 CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "2": "F B C bC cC dC eC yB MC fC zB", "132": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "2": "3B I 2C 3C 4C 5C NC 6C 7C", "132": "H" }, J: { "2": "D A" }, K: { "2": "A B C yB MC zB", "132": "r" }, L: { "132": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "132": "0B" }, P: { "2": "I", "132": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "132": "CC" }, R: { "132": "KD" }, S: { "1": "LD MD" } }, B: 6, C: "asm.js", D: true };
  }
});

// node_modules/caniuse-lite/data/features/async-clipboard.js
var require_async_clipboard = __commonJS({
  "node_modules/caniuse-lite/data/features/async-clipboard.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB QC RC", "132": "0 1 2 3 4 jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, D: { "1": "0 1 2 3 4 iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB", "66": "gB 4B hB 5B" }, E: { "1": "L G CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A B C K SC AC TC UC VC WC BC yB zB" }, F: { "1": "XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB bC cC dC eC yB MC fC zB" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC", "260": "xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "2": "3B I 2C 3C 4C 5C NC 6C 7C", "260": "H" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "132": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "2": "I 8C 9C AD BD", "260": "o p q CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "2": "LD", "132": "MD" } }, B: 5, C: "Asynchronous Clipboard API", D: true };
  }
});

// node_modules/caniuse-lite/data/features/async-functions.js
var require_async_functions = __commonJS({
  "node_modules/caniuse-lite/data/features/async-functions.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K", "194": "L" }, C: { "1": "0 1 2 3 4 aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB QC RC" }, D: { "1": "0 1 2 3 4 dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB" }, E: { "1": "B C K L G yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A SC AC TC UC VC WC", "258": "BC" }, F: { "1": "QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB bC cC dC eC yB MC fC zB" }, G: { "1": "pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC", "258": "oC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I 8C" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "2": "LD" } }, B: 6, C: "Async functions", D: true };
  }
});

// node_modules/caniuse-lite/data/features/atob-btoa.js
var require_atob_btoa = __commonJS({
  "node_modules/caniuse-lite/data/features/atob-btoa.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "A B", "2": "J D E F OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "6 7 8 9 B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m eC yB MC fC zB", "2": "F bC cC", "16": "dC" }, G: { "1": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "1": "1C" }, I: { "1": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "1": "D A" }, K: { "1": "B C r yB MC zB", "16": "A" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "Base64 encoding and decoding", D: true };
  }
});

// node_modules/caniuse-lite/data/features/audio-api.js
var require_audio_api = __commonJS({
  "node_modules/caniuse-lite/data/features/audio-api.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 PC 3B I J D E F A B C K L G M N O o p q QC RC" }, D: { "1": "0 1 2 3 4 IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 I J D E F A B C K", "33": "6 7 8 9 L G M N O o p q AB BB CB DB EB FB GB HB" }, E: { "1": "G XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I SC AC TC", "33": "J D E F A B C K L UC VC WC BC yB zB CC" }, F: { "1": "7 8 9 q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F B C bC cC dC eC yB MC fC zB", "33": "6 G M N O o p" }, G: { "1": "yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC hC", "33": "E iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 2, C: "Web Audio API", D: true };
  }
});

// node_modules/caniuse-lite/data/features/audio.js
var require_audio = __commonJS({
  "node_modules/caniuse-lite/data/features/audio.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "F A B", "2": "J D E OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 7 8 9 o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "PC 3B", "132": "5 6 I J D E F A B C K L G M N O QC RC" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "5 I J D E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "SC AC" }, F: { "1": "6 7 8 9 B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m dC eC yB MC fC zB", "2": "F", "4": "bC cC" }, G: { "1": "E gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC" }, H: { "2": "1C" }, I: { "1": "3B I H 4C 5C NC 6C 7C", "2": "2C 3C" }, J: { "1": "D A" }, K: { "1": "B C r yB MC zB", "2": "A" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "Audio element", D: true };
  }
});

// node_modules/caniuse-lite/data/features/audiotracks.js
var require_audiotracks = __commonJS({
  "node_modules/caniuse-lite/data/features/audiotracks.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "A B", "2": "J D E F OC" }, B: { "1": "C K L G M N O", "322": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB QC RC", "194": "0 1 2 3 4 HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, D: { "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB", "322": "0 1 2 3 4 TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "D E F A B C K L G UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J SC AC TC" }, F: { "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB bC cC dC eC yB MC fC zB", "322": "GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m" }, G: { "1": "E jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC hC iC" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "2": "A B C yB MC zB", "322": "r" }, L: { "322": "H" }, M: { "2": "n" }, N: { "1": "A B" }, O: { "322": "0B" }, P: { "2": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "322": "CC" }, R: { "322": "KD" }, S: { "194": "LD MD" } }, B: 1, C: "Audio Tracks", D: true };
  }
});

// node_modules/caniuse-lite/data/features/autofocus.js
var require_autofocus = __commonJS({
  "node_modules/caniuse-lite/data/features/autofocus.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "A B", "2": "J D E F OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "PC 3B QC RC" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "I" }, E: { "1": "5 J D E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "I SC AC" }, F: { "1": "6 7 8 9 B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB", "2": "F" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "1": "3B I H 5C NC 6C 7C", "2": "2C 3C 4C" }, J: { "1": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "2": "LD" } }, B: 1, C: "Autofocus attribute", D: true };
  }
});

// node_modules/caniuse-lite/data/features/auxclick.js
var require_auxclick = __commonJS({
  "node_modules/caniuse-lite/data/features/auxclick.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB QC RC", "129": "0 1 2 3 4 bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, D: { "1": "0 1 2 3 4 dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB bC cC dC eC yB MC fC zB" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "2": "LD MD" } }, B: 5, C: "Auxclick", D: true };
  }
});

// node_modules/caniuse-lite/data/features/av1.js
var require_av1 = __commonJS({
  "node_modules/caniuse-lite/data/features/av1.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "2": "4 C K L G M N H n", "194": "0 1 2 3 O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z" }, C: { "1": "0 1 2 3 4 nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB QC RC", "66": "dB eB fB gB 4B hB 5B iB jB kB", "260": "lB", "516": "mB" }, D: { "1": "0 1 2 3 4 qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB", "66": "nB oB pB" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC", "1026": "2B LC aC" }, F: { "1": "fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB bC cC dC eC yB MC fC zB" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC", "1028": "2B LC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q ED FD GD HD 1B 2B ID JD", "2": "I 8C 9C AD BD CD BC DD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "2": "LD MD" } }, B: 6, C: "AV1 video format", D: true };
  }
});

// node_modules/caniuse-lite/data/features/avif.js
var require_avif = __commonJS({
  "node_modules/caniuse-lite/data/features/avif.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "2": "0 1 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z n", "4162": "2 3 4 H" }, C: { "1": "1 2 3 4 H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB QC RC", "194": "wB xB P Q R 6B S T U V W X Y Z a b", "257": "c d e f g h i j k l m s t u v w x y", "2049": "0 z" }, D: { "1": "0 1 2 3 4 U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T" }, E: { "1": "IC JC KC 2B LC aC", "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B", "1796": "FC GC HC" }, F: { "1": "rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB bC cC dC eC yB MC fC zB" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C", "257": "IC JC KC 2B LC", "1281": "1B FC GC HC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q GD HD 1B 2B ID JD", "2": "I 8C 9C AD BD CD BC DD ED FD" }, Q: { "2": "CC" }, R: { "1": "KD" }, S: { "2": "LD MD" } }, B: 6, C: "AVIF image format", D: true };
  }
});

// node_modules/caniuse-lite/data/features/background-attachment.js
var require_background_attachment = __commonJS({
  "node_modules/caniuse-lite/data/features/background-attachment.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "F A B", "132": "J D E OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "132": "5 6 7 8 PC 3B I J D E F A B C K L G M N O o p q QC RC" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "5 J D E F A B C TC UC VC WC BC yB zB EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "132": "I K SC AC CC", "2050": "L G XC YC DC" }, F: { "1": "6 7 8 9 B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m dC eC yB MC fC zB", "132": "F bC cC" }, G: { "2": "AC gC NC", "772": "E hC iC jC kC lC mC nC oC pC qC rC sC", "2050": "tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 6C 7C", "132": "5C NC" }, J: { "260": "D A" }, K: { "1": "B C r yB MC zB", "132": "A" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "2": "I", "1028": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 4, C: "CSS background-attachment", D: true };
  }
});

// node_modules/caniuse-lite/data/features/background-clip-text.js
var require_background_clip_text = __commonJS({
  "node_modules/caniuse-lite/data/features/background-clip-text.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "G M N O", "33": "0 1 2 3 4 C K L P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB QC RC" }, D: { "33": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "L G XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "16": "SC AC", "33": "5 I J D E F A B C K TC UC VC WC BC yB zB CC" }, F: { "2": "F B C bC cC dC eC yB MC fC zB", "33": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m" }, G: { "1": "xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "16": "AC gC NC hC", "33": "E iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC" }, H: { "2": "1C" }, I: { "16": "3B 2C 3C 4C", "33": "I H 5C NC 6C 7C" }, J: { "33": "D A" }, K: { "16": "A B C yB MC zB", "33": "r" }, L: { "33": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "33": "0B" }, P: { "33": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "33": "CC" }, R: { "33": "KD" }, S: { "1": "LD MD" } }, B: 7, C: "Background-clip: text", D: true };
  }
});

// node_modules/caniuse-lite/data/features/background-img-opts.js
var require_background_img_opts = __commonJS({
  "node_modules/caniuse-lite/data/features/background-img-opts.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "F A B", "2": "J D E OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "PC 3B QC", "36": "RC" }, D: { "1": "0 1 2 3 4 6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "516": "5 I J D E F A B C K L" }, E: { "1": "D E F A B C K L G VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "772": "5 I J SC AC TC UC" }, F: { "1": "6 7 8 9 B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m dC eC yB MC fC zB", "2": "F bC", "36": "cC" }, G: { "1": "E jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "4": "AC gC NC iC", "516": "hC" }, H: { "132": "1C" }, I: { "1": "H 6C 7C", "36": "2C", "516": "3B I 5C NC", "548": "3C 4C" }, J: { "1": "D A" }, K: { "1": "A B C r yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 4, C: "CSS3 Background-image options", D: true };
  }
});

// node_modules/caniuse-lite/data/features/background-position-x-y.js
var require_background_position_x_y = __commonJS({
  "node_modules/caniuse-lite/data/features/background-position-x-y.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB QC RC" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F B C bC cC dC eC yB MC fC zB" }, G: { "1": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "1": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "1": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "2": "LD" } }, B: 7, C: "background-position-x & background-position-y", D: true };
  }
});

// node_modules/caniuse-lite/data/features/background-repeat-round-space.js
var require_background_repeat_round_space = __commonJS({
  "node_modules/caniuse-lite/data/features/background-repeat-round-space.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "A B", "2": "J D E OC", "132": "F" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB QC RC" }, D: { "1": "0 1 2 3 4 GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB" }, E: { "1": "D E F A B C K L G VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J SC AC TC UC" }, F: { "1": "6 7 8 9 B C o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m dC eC yB MC fC zB", "2": "F G M N O bC cC" }, G: { "1": "E jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC hC iC" }, H: { "1": "1C" }, I: { "1": "H 6C 7C", "2": "3B I 2C 3C 4C 5C NC" }, J: { "1": "A", "2": "D" }, K: { "1": "B C r yB MC zB", "2": "A" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "2": "LD" } }, B: 4, C: "CSS background-repeat round and space", D: true };
  }
});

// node_modules/caniuse-lite/data/features/background-sync.js
var require_background_sync = __commonJS({
  "node_modules/caniuse-lite/data/features/background-sync.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n QC RC", "16": "7B 8B 9B" }, D: { "1": "0 1 2 3 4 XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB bC cC dC eC yB MC fC zB" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "2": "LD MD" } }, B: 7, C: "Background Sync API", D: true };
  }
});

// node_modules/caniuse-lite/data/features/battery-status.js
var require_battery_status = __commonJS({
  "node_modules/caniuse-lite/data/features/battery-status.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "1": "RB SB TB UB VB WB XB YB ZB", "2": "0 1 2 3 4 5 PC 3B I J D E F aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC", "132": "6 7 8 9 M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB", "164": "A B C K L G" }, D: { "1": "0 1 2 3 4 MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB", "66": "LB" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 F B C G M N O o p q bC cC dC eC yB MC fC zB" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD", "2": "MD" } }, B: 4, C: "Battery Status API", D: true };
  }
});

// node_modules/caniuse-lite/data/features/beacon.js
var require_beacon = __commonJS({
  "node_modules/caniuse-lite/data/features/beacon.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K" }, C: { "1": "0 1 2 3 4 FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB QC RC" }, D: { "1": "0 1 2 3 4 NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB" }, E: { "1": "C K L G yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A B SC AC TC UC VC WC BC" }, F: { "1": "AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q bC cC dC eC yB MC fC zB" }, G: { "1": "qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC pC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 4, C: "Beacon API", D: true };
  }
});

// node_modules/caniuse-lite/data/features/beforeafterprint.js
var require_beforeafterprint = __commonJS({
  "node_modules/caniuse-lite/data/features/beforeafterprint.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "J D E F A B", "16": "OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 6 7 8 9 J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 PC 3B I QC RC" }, D: { "1": "0 1 2 3 4 jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB" }, E: { "1": "K L G CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A B C SC AC TC UC VC WC BC yB zB" }, F: { "1": "YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB bC cC dC eC yB MC fC zB" }, G: { "1": "tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "16": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "16": "A B" }, O: { "1": "0B" }, P: { "2": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "16": "I" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "Printing Events", D: true };
  }
});

// node_modules/caniuse-lite/data/features/bigint.js
var require_bigint = __commonJS({
  "node_modules/caniuse-lite/data/features/bigint.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB QC RC", "194": "lB mB nB" }, D: { "1": "0 1 2 3 4 nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB" }, E: { "1": "L G XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A B C K SC AC TC UC VC WC BC yB zB CC" }, F: { "1": "cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB bC cC dC eC yB MC fC zB" }, G: { "1": "xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I 8C 9C AD BD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "2": "LD" } }, B: 6, C: "BigInt", D: true };
  }
});

// node_modules/caniuse-lite/data/features/blobbuilder.js
var require_blobbuilder = __commonJS({
  "node_modules/caniuse-lite/data/features/blobbuilder.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "A B", "2": "J D E F OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 6 7 8 9 K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 PC 3B I QC RC", "36": "J D E F A B C" }, D: { "1": "0 1 2 3 4 7 8 9 o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 I J D", "36": "6 E F A B C K L G M N O" }, E: { "1": "J D E F A B C K L G UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I SC AC TC" }, F: { "1": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m zB", "2": "F B C bC cC dC eC yB MC fC" }, G: { "1": "E iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC hC" }, H: { "2": "1C" }, I: { "1": "H", "2": "2C 3C 4C", "36": "3B I 5C NC 6C 7C" }, J: { "1": "A", "2": "D" }, K: { "1": "r zB", "2": "A B C yB MC" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 5, C: "Blob constructing", D: true };
  }
});

// node_modules/caniuse-lite/data/features/bloburls.js
var require_bloburls = __commonJS({
  "node_modules/caniuse-lite/data/features/bloburls.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F OC", "129": "A B" }, B: { "1": "0 1 2 3 4 G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "129": "C K L" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "PC 3B QC RC" }, D: { "1": "0 1 2 3 4 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 I J D", "33": "6 E F A B C K L G M N O o p q" }, E: { "1": "D E F A B C K L G UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I SC AC TC", "33": "J" }, F: { "1": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F B C bC cC dC eC yB MC fC zB" }, G: { "1": "E jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC hC", "33": "iC" }, H: { "2": "1C" }, I: { "1": "H 6C 7C", "2": "3B 2C 3C 4C", "33": "I 5C NC" }, J: { "1": "A", "2": "D" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "B", "2": "A" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 5, C: "Blob URLs", D: true };
  }
});

// node_modules/caniuse-lite/data/features/border-image.js
var require_border_image = __commonJS({
  "node_modules/caniuse-lite/data/features/border-image.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "B", "2": "J D E F A OC" }, B: { "1": "0 1 2 3 4 L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "129": "C K" }, C: { "1": "0 1 2 3 4 YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "PC 3B", "260": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB", "804": "5 I J D E F A B C K L QC RC" }, D: { "1": "0 1 2 3 4 eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "260": "ZB aB bB cB dB", "388": "EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB", "1412": "6 7 8 9 G M N O o p q AB BB CB DB", "1956": "5 I J D E F A B C K L" }, E: { "1": "EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "129": "A B C K L G WC BC yB zB CC XC YC DC", "1412": "J D E F UC VC", "1956": "5 I SC AC TC" }, F: { "1": "RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F bC cC", "260": "MB NB OB PB QB", "388": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB", "1796": "dC eC", "1828": "B C yB MC fC zB" }, G: { "1": "EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "129": "mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC", "1412": "E iC jC kC lC", "1956": "AC gC NC hC" }, H: { "1828": "1C" }, I: { "1": "H", "388": "6C 7C", "1956": "3B I 2C 3C 4C 5C NC" }, J: { "1412": "A", "1924": "D" }, K: { "1": "r", "2": "A", "1828": "B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "B", "2": "A" }, O: { "1": "0B" }, P: { "1": "o p q AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "260": "8C 9C", "388": "I" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "260": "LD" } }, B: 4, C: "CSS3 Border images", D: true };
  }
});

// node_modules/caniuse-lite/data/features/border-radius.js
var require_border_radius = __commonJS({
  "node_modules/caniuse-lite/data/features/border-radius.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "F A B", "2": "J D E OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "257": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB", "289": "3B QC RC", "292": "PC" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "33": "I" }, E: { "1": "5 D E F A B C K L G VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "33": "I SC AC", "129": "J TC UC" }, F: { "1": "6 7 8 9 B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m dC eC yB MC fC zB", "2": "F bC cC" }, G: { "1": "E gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "33": "AC" }, H: { "2": "1C" }, I: { "1": "3B I H 3C 4C 5C NC 6C 7C", "33": "2C" }, J: { "1": "D A" }, K: { "1": "B C r yB MC zB", "2": "A" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "257": "LD" } }, B: 4, C: "CSS3 Border-radius (rounded corners)", D: true };
  }
});

// node_modules/caniuse-lite/data/features/broadcastchannel.js
var require_broadcastchannel = __commonJS({
  "node_modules/caniuse-lite/data/features/broadcastchannel.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB QC RC" }, D: { "1": "0 1 2 3 4 cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB" }, E: { "1": "EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC" }, F: { "1": "PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB bC cC dC eC yB MC fC zB" }, G: { "1": "EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I 8C 9C" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "BroadcastChannel", D: true };
  }
});

// node_modules/caniuse-lite/data/features/brotli.js
var require_brotli = __commonJS({
  "node_modules/caniuse-lite/data/features/brotli.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L" }, C: { "1": "0 1 2 3 4 SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB QC RC" }, D: { "1": "0 1 2 3 4 ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB", "194": "XB", "257": "YB" }, E: { "1": "K L G CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A SC AC TC UC VC WC BC", "513": "B C yB zB" }, F: { "1": "MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB bC cC dC eC yB MC fC zB", "194": "KB LB" }, G: { "1": "pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 6, C: "Brotli Accept-Encoding/Content-Encoding", D: true };
  }
});

// node_modules/caniuse-lite/data/features/calc.js
var require_calc = __commonJS({
  "node_modules/caniuse-lite/data/features/calc.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E OC", "260": "F", "516": "A B" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 6 7 8 9 M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "PC 3B QC RC", "33": "5 I J D E F A B C K L G" }, D: { "1": "0 1 2 3 4 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 I J D E F A B C K L G M N O", "33": "6 7 8 9 o p q" }, E: { "1": "D E F A B C K L G UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I SC AC TC", "33": "J" }, F: { "1": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F B C bC cC dC eC yB MC fC zB" }, G: { "1": "E jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC hC", "33": "iC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC", "132": "6C 7C" }, J: { "1": "A", "2": "D" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 4, C: "calc() as CSS unit value", D: true };
  }
});

// node_modules/caniuse-lite/data/features/canvas-blending.js
var require_canvas_blending = __commonJS({
  "node_modules/caniuse-lite/data/features/canvas-blending.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C" }, C: { "1": "0 1 2 3 4 7 8 9 o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 PC 3B I J D E F A B C K L G M N O QC RC" }, D: { "1": "0 1 2 3 4 EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB" }, E: { "1": "D E F A B C K L G UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J SC AC TC" }, F: { "1": "6 7 8 9 N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F B C G M bC cC dC eC yB MC fC zB" }, G: { "1": "E jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC hC iC" }, H: { "2": "1C" }, I: { "1": "H 6C 7C", "2": "3B I 2C 3C 4C 5C NC" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 4, C: "Canvas blend modes", D: true };
  }
});

// node_modules/caniuse-lite/data/features/canvas-text.js
var require_canvas_text = __commonJS({
  "node_modules/caniuse-lite/data/features/canvas-text.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "F A B", "2": "OC", "8": "J D E" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC", "8": "PC 3B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "5 I J D E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "8": "SC AC" }, F: { "1": "6 7 8 9 B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m dC eC yB MC fC zB", "8": "F bC cC" }, G: { "1": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "1": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "1": "D A" }, K: { "1": "B C r yB MC zB", "8": "A" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "Text API for Canvas", D: true };
  }
});

// node_modules/caniuse-lite/data/features/canvas.js
var require_canvas = __commonJS({
  "node_modules/caniuse-lite/data/features/canvas.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "F A B", "2": "OC", "8": "J D E" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B RC", "132": "PC 3B QC" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "5 I J D E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "132": "SC AC" }, F: { "1": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB" }, G: { "1": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "260": "1C" }, I: { "1": "3B I H 5C NC 6C 7C", "132": "2C 3C 4C" }, J: { "1": "D A" }, K: { "1": "A B C r yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "Canvas (basic support)", D: true };
  }
});

// node_modules/caniuse-lite/data/features/ch-unit.js
var require_ch_unit = __commonJS({
  "node_modules/caniuse-lite/data/features/ch-unit.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E OC", "132": "F A B" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "1": "0 1 2 3 4 BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB" }, E: { "1": "D E F A B C K L G VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J SC AC TC UC" }, F: { "1": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F B C bC cC dC eC yB MC fC zB" }, G: { "1": "E jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC hC iC" }, H: { "2": "1C" }, I: { "1": "H 6C 7C", "2": "3B I 2C 3C 4C 5C NC" }, J: { "1": "A", "2": "D" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 4, C: "ch (character) unit", D: true };
  }
});

// node_modules/caniuse-lite/data/features/chacha20-poly1305.js
var require_chacha20_poly1305 = __commonJS({
  "node_modules/caniuse-lite/data/features/chacha20-poly1305.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB QC RC" }, D: { "1": "0 1 2 3 4 XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB", "129": "HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB" }, E: { "1": "C K L G yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A B SC AC TC UC VC WC BC" }, F: { "1": "KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB bC cC dC eC yB MC fC zB" }, G: { "1": "pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C", "16": "7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 6, C: "ChaCha20-Poly1305 cipher suites for TLS", D: true };
  }
});

// node_modules/caniuse-lite/data/features/channel-messaging.js
var require_channel_messaging = __commonJS({
  "node_modules/caniuse-lite/data/features/channel-messaging.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "A B", "2": "J D E F OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q QC RC", "194": "AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "5 J D E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "I SC AC" }, F: { "1": "6 7 8 9 B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m eC yB MC fC zB", "2": "F bC cC", "16": "dC" }, G: { "1": "E hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC" }, H: { "2": "1C" }, I: { "1": "H 6C 7C", "2": "3B I 2C 3C 4C 5C NC" }, J: { "1": "D A" }, K: { "1": "B C r yB MC zB", "2": "A" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "Channel messaging", D: true };
  }
});

// node_modules/caniuse-lite/data/features/childnode-remove.js
var require_childnode_remove = __commonJS({
  "node_modules/caniuse-lite/data/features/childnode-remove.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "16": "C" }, C: { "1": "0 1 2 3 4 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 PC 3B I J D E F A B C K L G M N O o p q QC RC" }, D: { "1": "0 1 2 3 4 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 I J D E F A B C K L G M N O o p q" }, E: { "1": "D E F A B C K L G UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I SC AC TC", "16": "J" }, F: { "1": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F B C bC cC dC eC yB MC fC zB" }, G: { "1": "E jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC hC iC" }, H: { "2": "1C" }, I: { "1": "H 6C 7C", "2": "3B I 2C 3C 4C 5C NC" }, J: { "1": "A", "2": "D" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "ChildNode.remove()", D: true };
  }
});

// node_modules/caniuse-lite/data/features/classlist.js
var require_classlist = __commonJS({
  "node_modules/caniuse-lite/data/features/classlist.js"(exports, module2) {
    module2.exports = { A: { A: { "8": "J D E F OC", "1924": "A B" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "8": "PC 3B QC", "516": "8 9", "772": "5 6 7 I J D E F A B C K L G M N O o p q RC" }, D: { "1": "0 1 2 3 4 CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "8": "5 I J D", "516": "8 9 AB BB", "772": "7", "900": "6 E F A B C K L G M N O o p q" }, E: { "1": "D E F A B C K L G VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "8": "5 I SC AC", "900": "J TC UC" }, F: { "1": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "8": "F B bC cC dC eC yB", "900": "C MC fC zB" }, G: { "1": "E jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "8": "AC gC NC", "900": "hC iC" }, H: { "900": "1C" }, I: { "1": "H 6C 7C", "8": "2C 3C 4C", "900": "3B I 5C NC" }, J: { "1": "A", "900": "D" }, K: { "1": "r", "8": "A B", "900": "C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "900": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "classList (DOMTokenList)", D: true };
  }
});

// node_modules/caniuse-lite/data/features/client-hints-dpr-width-viewport.js
var require_client_hints_dpr_width_viewport = __commonJS({
  "node_modules/caniuse-lite/data/features/client-hints-dpr-width-viewport.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "1": "0 1 2 3 4 UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB bC cC dC eC yB MC fC zB" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "2": "LD MD" } }, B: 6, C: "Client Hints: DPR, Width, Viewport-Width", D: true };
  }
});

// node_modules/caniuse-lite/data/features/clipboard.js
var require_clipboard = __commonJS({
  "node_modules/caniuse-lite/data/features/clipboard.js"(exports, module2) {
    module2.exports = { A: { A: { "2436": "J D E F A B OC" }, B: { "260": "N O", "2436": "C K L G M", "8196": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "2": "5 6 PC 3B I J D E F A B C K L G M N O o p QC RC", "772": "7 8 9 q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB", "4100": "0 1 2 3 4 PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, D: { "2": "5 I J D E F A B C", "2564": "6 7 8 9 K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB", "8196": "0 1 2 3 4 gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "10244": "RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB" }, E: { "1": "C K L G zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "16": "SC AC", "2308": "A B BC yB", "2820": "5 I J D E F TC UC VC WC" }, F: { "2": "F B bC cC dC eC yB MC fC", "16": "C", "516": "zB", "2564": "6 7 8 9 G M N O o p q AB BB CB DB", "8196": "TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "10244": "EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB" }, G: { "1": "rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC", "2820": "E hC iC jC kC lC mC nC oC pC qC" }, H: { "2": "1C" }, I: { "2": "3B I 2C 3C 4C 5C NC", "260": "H", "2308": "6C 7C" }, J: { "2": "D", "2308": "A" }, K: { "2": "A B C yB MC", "16": "zB", "8196": "r" }, L: { "8196": "H" }, M: { "1028": "n" }, N: { "2": "A B" }, O: { "8196": "0B" }, P: { "2052": "8C 9C", "2308": "I", "8196": "o p q AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "8196": "CC" }, R: { "8196": "KD" }, S: { "4100": "LD MD" } }, B: 5, C: "Synchronous Clipboard API", D: true };
  }
});

// node_modules/caniuse-lite/data/features/colr-v1.js
var require_colr_v1 = __commonJS({
  "node_modules/caniuse-lite/data/features/colr-v1.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 h i j k l m s t u v w x y z H n", "2": "C K L G M N O P Q R S T U V W X Y Z a b c d e f g" }, C: { "1": "0 1 2 3 4 v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g QC RC", "258": "h i j k l m s", "578": "t u" }, D: { "1": "0 1 2 3 4 h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y", "194": "Z a b c d e f g" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U bC cC dC eC yB MC fC zB" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "16": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "16": "A B" }, O: { "1": "0B" }, P: { "1": "o p q ID JD", "2": "I 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B" }, Q: { "2": "CC" }, R: { "2": "KD" }, S: { "2": "LD MD" } }, B: 6, C: "COLR/CPAL(v1) Font Formats", D: true };
  }
});

// node_modules/caniuse-lite/data/features/colr.js
var require_colr = __commonJS({
  "node_modules/caniuse-lite/data/features/colr.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E OC", "257": "F A B" }, B: { "1": "0 1 2 3 4 C K L G M N O y z H n", "513": "P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x" }, C: { "1": "0 1 2 3 4 GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB QC RC" }, D: { "1": "0 1 2 3 4 y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB", "513": "rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x" }, E: { "1": "L G XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A SC AC TC UC VC WC BC", "129": "B C K yB zB CC" }, F: { "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB bC cC dC eC yB MC fC zB", "513": "gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m" }, G: { "1": "pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "16": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "16": "A B" }, O: { "1": "0B" }, P: { "1": "o p q BC DD ED FD GD HD 1B 2B ID JD", "2": "I 8C 9C AD BD CD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 6, C: "COLR/CPAL(v0) Font Formats", D: true };
  }
});

// node_modules/caniuse-lite/data/features/comparedocumentposition.js
var require_comparedocumentposition = __commonJS({
  "node_modules/caniuse-lite/data/features/comparedocumentposition.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "F A B", "2": "J D E OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "16": "PC 3B QC RC" }, D: { "1": "0 1 2 3 4 EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "16": "5 I J D E F A B C K L", "132": "6 7 8 9 G M N O o p q AB BB CB DB" }, E: { "1": "A B C K L G BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "16": "5 I J SC AC", "132": "D E F UC VC WC", "260": "TC" }, F: { "1": "6 7 8 9 C N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m fC zB", "16": "F B bC cC dC eC yB MC", "132": "G M" }, G: { "1": "nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "16": "AC", "132": "E gC NC hC iC jC kC lC mC" }, H: { "1": "1C" }, I: { "1": "H 6C 7C", "16": "2C 3C", "132": "3B I 4C 5C NC" }, J: { "132": "D A" }, K: { "1": "C r zB", "16": "A B yB MC" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "Node.compareDocumentPosition()", D: true };
  }
});

// node_modules/caniuse-lite/data/features/console-basic.js
var require_console_basic = __commonJS({
  "node_modules/caniuse-lite/data/features/console-basic.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "A B", "2": "J D OC", "132": "E F" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "PC 3B QC RC" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "6 7 8 9 B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m yB MC fC zB", "2": "F bC cC dC eC" }, G: { "1": "AC gC NC hC", "513": "E iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "4097": "1C" }, I: { "1025": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "258": "D A" }, K: { "2": "A", "258": "B C yB MC zB", "1025": "r" }, L: { "1025": "H" }, M: { "2049": "n" }, N: { "258": "A B" }, O: { "258": "0B" }, P: { "1025": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1025": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "Basic console logging functions", D: true };
  }
});

// node_modules/caniuse-lite/data/features/console-time.js
var require_console_time = __commonJS({
  "node_modules/caniuse-lite/data/features/console-time.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "B", "2": "J D E F A OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 6 7 8 9 A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 PC 3B I J D E F QC RC" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "5 I J D E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "SC AC" }, F: { "1": "6 7 8 9 C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m yB MC fC zB", "2": "F bC cC dC eC", "16": "B" }, G: { "1": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "1": "1C" }, I: { "1": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "1": "D A" }, K: { "1": "r", "16": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "B", "2": "A" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "console.time and console.timeEnd", D: true };
  }
});

// node_modules/caniuse-lite/data/features/const.js
var require_const = __commonJS({
  "node_modules/caniuse-lite/data/features/const.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A OC", "2052": "B" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "132": "5 PC 3B I J D E F A B C QC RC", "260": "6 7 8 9 K L G M N O o p q AB BB CB DB EB FB GB HB IB JB" }, D: { "1": "0 1 2 3 4 XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "260": "5 6 I J D E F A B C K L G M N O o", "772": "7 8 9 p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB", "1028": "PB QB RB SB TB UB VB WB" }, E: { "1": "B C K L G yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "260": "5 I A SC AC BC", "772": "J D E F TC UC VC WC" }, F: { "1": "KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F bC", "132": "B cC dC eC yB MC", "644": "C fC zB", "772": "6 7 8 9 G M N O o p q AB BB", "1028": "CB DB EB FB GB HB IB JB" }, G: { "1": "pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "260": "AC gC NC nC oC", "772": "E hC iC jC kC lC mC" }, H: { "644": "1C" }, I: { "1": "H", "16": "2C 3C", "260": "4C", "772": "3B I 5C NC 6C 7C" }, J: { "772": "D A" }, K: { "1": "r", "132": "A B yB MC", "644": "C zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "B", "2": "A" }, O: { "1": "0B" }, P: { "1": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "1028": "I" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 6, C: "const", D: true };
  }
});

// node_modules/caniuse-lite/data/features/constraint-validation.js
var require_constraint_validation = __commonJS({
  "node_modules/caniuse-lite/data/features/constraint-validation.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F OC", "900": "A B" }, B: { "1": "0 1 2 3 4 N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "388": "L G M", "900": "C K" }, C: { "1": "0 1 2 3 4 ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "PC 3B QC RC", "260": "XB YB", "388": "DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB", "900": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB" }, D: { "1": "0 1 2 3 4 OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "16": "5 I J D E F A B C K L", "388": "9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB", "900": "6 7 8 G M N O o p q" }, E: { "1": "A B C K L G BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "16": "5 I SC AC", "388": "E F VC WC", "900": "J D TC UC" }, F: { "1": "BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "16": "F B bC cC dC eC yB MC", "388": "6 7 8 9 G M N O o p q AB", "900": "C fC zB" }, G: { "1": "nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "16": "AC gC NC", "388": "E jC kC lC mC", "900": "hC iC" }, H: { "2": "1C" }, I: { "1": "H", "16": "3B 2C 3C 4C", "388": "6C 7C", "900": "I 5C NC" }, J: { "16": "D", "388": "A" }, K: { "1": "r", "16": "A B yB MC", "900": "C zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "900": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "388": "LD" } }, B: 1, C: "Constraint Validation API", D: true };
  }
});

// node_modules/caniuse-lite/data/features/contenteditable.js
var require_contenteditable = __commonJS({
  "node_modules/caniuse-lite/data/features/contenteditable.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC", "2": "PC", "4": "3B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB" }, G: { "1": "E hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC" }, H: { "2": "1C" }, I: { "1": "3B I H 5C NC 6C 7C", "2": "2C 3C 4C" }, J: { "1": "D A" }, K: { "1": "r zB", "2": "A B C yB MC" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "contenteditable attribute (basic support)", D: true };
  }
});

// node_modules/caniuse-lite/data/features/contentsecuritypolicy.js
var require_contentsecuritypolicy = __commonJS({
  "node_modules/caniuse-lite/data/features/contentsecuritypolicy.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F OC", "132": "A B" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "PC 3B QC RC", "129": "5 6 I J D E F A B C K L G M N O o p q" }, D: { "1": "0 1 2 3 4 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 I J D E F A B C K", "257": "6 7 8 L G M N O o p q" }, E: { "1": "D E F A B C K L G VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I SC AC", "257": "J UC", "260": "TC" }, F: { "1": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F B C bC cC dC eC yB MC fC zB" }, G: { "1": "E jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC", "257": "iC", "260": "hC" }, H: { "2": "1C" }, I: { "1": "H 6C 7C", "2": "3B I 2C 3C 4C 5C NC" }, J: { "2": "D", "257": "A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "132": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 4, C: "Content Security Policy 1.0", D: true };
  }
});

// node_modules/caniuse-lite/data/features/contentsecuritypolicy2.js
var require_contentsecuritypolicy2 = __commonJS({
  "node_modules/caniuse-lite/data/features/contentsecuritypolicy2.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L", "4100": "G M N O" }, C: { "1": "0 1 2 3 4 TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB QC RC", "132": "FB GB HB IB", "260": "JB", "516": "KB LB MB NB OB PB QB RB SB" }, D: { "1": "0 1 2 3 4 OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB", "1028": "KB LB MB", "2052": "NB" }, E: { "1": "A B C K L G BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F SC AC TC UC VC WC" }, F: { "1": "BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 F B C G M N O o p q bC cC dC eC yB MC fC zB", "1028": "7 8 9", "2052": "AB" }, G: { "1": "nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 2, C: "Content Security Policy Level 2", D: true };
  }
});

// node_modules/caniuse-lite/data/features/cookie-store-api.js
var require_cookie_store_api = __commonJS({
  "node_modules/caniuse-lite/data/features/cookie-store-api.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O", "194": "P Q R S T U V" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "1": "0 1 2 3 4 W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB", "194": "kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB bC cC dC eC yB MC fC zB", "194": "ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q GD HD 1B 2B ID JD", "2": "I 8C 9C AD BD CD BC DD ED FD" }, Q: { "2": "CC" }, R: { "1": "KD" }, S: { "2": "LD MD" } }, B: 7, C: "Cookie Store API", D: true };
  }
});

// node_modules/caniuse-lite/data/features/cors.js
var require_cors = __commonJS({
  "node_modules/caniuse-lite/data/features/cors.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "B", "2": "J D OC", "132": "A", "260": "E F" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC", "2": "PC 3B", "1025": "5B iB jB kB lB mB nB oB pB qB" }, D: { "1": "0 1 2 3 4 6 7 8 9 K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "132": "5 I J D E F A B C" }, E: { "2": "SC AC", "513": "J D E F A B C K L G UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "644": "5 I TC" }, F: { "1": "6 7 8 9 C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m zB", "2": "F B bC cC dC eC yB MC fC" }, G: { "513": "E iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "644": "AC gC NC hC" }, H: { "2": "1C" }, I: { "1": "H 6C 7C", "132": "3B I 2C 3C 4C 5C NC" }, J: { "1": "A", "132": "D" }, K: { "1": "C r zB", "2": "A B yB MC" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "B", "132": "A" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "Cross-Origin Resource Sharing", D: true };
  }
});

// node_modules/caniuse-lite/data/features/createimagebitmap.js
var require_createimagebitmap = __commonJS({
  "node_modules/caniuse-lite/data/features/createimagebitmap.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QC RC", "1028": "c d e f g", "3076": "QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b", "8196": "0 1 2 3 4 h i j k l m s t u v w x y z H n 7B 8B 9B" }, D: { "1": "0 1 2 3 4 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB", "132": "YB ZB", "260": "aB bB", "516": "cB dB eB fB gB" }, E: { "2": "5 I J D E F A B C K L SC AC TC UC VC WC BC yB zB CC XC", "4100": "G YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB bC cC dC eC yB MC fC zB", "132": "LB MB", "260": "NB OB", "516": "PB QB RB SB TB" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC", "4100": "zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "8196": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "16": "I 8C" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "3076": "LD MD" } }, B: 1, C: "createImageBitmap", D: true };
  }
});

// node_modules/caniuse-lite/data/features/credential-management.js
var require_credential_management = __commonJS({
  "node_modules/caniuse-lite/data/features/credential-management.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "1": "0 1 2 3 4 fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB", "66": "WB XB YB", "129": "ZB aB bB cB dB eB" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB bC cC dC eC yB MC fC zB" }, G: { "1": "xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I 8C 9C" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "2": "LD MD" } }, B: 5, C: "Credential Management API", D: true };
  }
});

// node_modules/caniuse-lite/data/features/cryptography.js
var require_cryptography = __commonJS({
  "node_modules/caniuse-lite/data/features/cryptography.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "OC", "8": "J D E F A", "164": "B" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "513": "C K L G M N O" }, C: { "1": "0 1 2 3 4 IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "8": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB QC RC", "66": "GB HB" }, D: { "1": "0 1 2 3 4 LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "8": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB" }, E: { "1": "B C K L G yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "8": "5 I J D SC AC TC UC", "289": "E F A VC WC BC" }, F: { "1": "8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "8": "6 7 F B C G M N O o p q bC cC dC eC yB MC fC zB" }, G: { "1": "pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "8": "AC gC NC hC iC jC", "289": "E kC lC mC nC oC" }, H: { "2": "1C" }, I: { "1": "H", "8": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "8": "D A" }, K: { "1": "r", "8": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "8": "A", "164": "B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 2, C: "Web Cryptography", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-all.js
var require_css_all = __commonJS({
  "node_modules/caniuse-lite/data/features/css-all.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB QC RC" }, D: { "1": "0 1 2 3 4 LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB" }, E: { "1": "A B C K L G WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F SC AC TC UC VC" }, F: { "1": "8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 F B C G M N O o p q bC cC dC eC yB MC fC zB" }, G: { "1": "mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC" }, H: { "2": "1C" }, I: { "1": "H 7C", "2": "3B I 2C 3C 4C 5C NC 6C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 2, C: "CSS all property", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-anchor-positioning.js
var require_css_anchor_positioning = __commonJS({
  "node_modules/caniuse-lite/data/features/css-anchor-positioning.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "2": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z", "194": "H n 7B 8B 9B" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "2": "A B C r yB MC zB" }, L: { "2": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "2": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "2": "KD" }, S: { "2": "LD MD" } }, B: 5, C: "CSS Anchor Positioning", D: false };
  }
});

// node_modules/caniuse-lite/data/features/css-animation.js
var require_css_animation = __commonJS({
  "node_modules/caniuse-lite/data/features/css-animation.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "A B", "2": "J D E F OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 6 7 8 9 M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "PC 3B I QC RC", "33": "5 J D E F A B C K L G" }, D: { "1": "0 1 2 3 4 RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "33": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB" }, E: { "1": "F A B C K L G WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "SC AC", "33": "J D E TC UC VC", "292": "5 I" }, F: { "1": "EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m zB", "2": "F B bC cC dC eC yB MC fC", "33": "6 7 8 9 C G M N O o p q AB BB CB DB" }, G: { "1": "lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "33": "E iC jC kC", "164": "AC gC NC hC" }, H: { "2": "1C" }, I: { "1": "H", "33": "I 5C NC 6C 7C", "164": "3B 2C 3C 4C" }, J: { "33": "D A" }, K: { "1": "r zB", "2": "A B C yB MC" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 5, C: "CSS Animation", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-any-link.js
var require_css_any_link = __commonJS({
  "node_modules/caniuse-lite/data/features/css-any-link.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "16": "PC", "33": "5 6 7 8 9 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB QC RC" }, D: { "1": "0 1 2 3 4 lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "16": "5 I J D E F A B C K L", "33": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB" }, E: { "1": "F A B C K L G WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "16": "5 I J SC AC TC", "33": "D E UC VC" }, F: { "1": "aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F B C bC cC dC eC yB MC fC zB", "33": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB" }, G: { "1": "lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "16": "AC gC NC hC", "33": "E iC jC kC" }, H: { "2": "1C" }, I: { "1": "H", "16": "3B I 2C 3C 4C 5C NC", "33": "6C 7C" }, J: { "16": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q CD BC DD ED FD GD HD 1B 2B ID JD", "16": "I", "33": "8C 9C AD BD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "33": "LD" } }, B: 5, C: "CSS :any-link selector", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-appearance.js
var require_css_appearance = __commonJS({
  "node_modules/caniuse-lite/data/features/css-appearance.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "33": "S", "164": "P Q R", "388": "C K L G M N O" }, C: { "1": "0 1 2 3 4 Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "164": "JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P", "676": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB QC RC" }, D: { "1": "0 1 2 3 4 T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "33": "S", "164": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R" }, E: { "1": "EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "164": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC" }, F: { "1": "r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F B C bC cC dC eC yB MC fC zB", "33": "qB rB sB", "164": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB" }, G: { "1": "EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "164": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC" }, H: { "2": "1C" }, I: { "1": "H", "164": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "164": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A", "388": "B" }, O: { "1": "0B" }, P: { "164": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "164": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "164": "LD" } }, B: 5, C: "CSS Appearance", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-at-counter-style.js
var require_css_at_counter_style = __commonJS({
  "node_modules/caniuse-lite/data/features/css-at-counter-style.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "2": "C K L G M N O P Q R S T U V W X Y Z", "132": "0 1 2 3 4 a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB QC RC", "132": "0 1 2 3 4 HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, D: { "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z", "132": "0 1 2 3 4 a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC", "4": "2B LC aC" }, F: { "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB bC cC dC eC yB MC fC zB", "132": "wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC", "4": "2B LC" }, H: { "2": "1C" }, I: { "2": "3B I 2C 3C 4C 5C NC 6C 7C", "132": "H" }, J: { "2": "D A" }, K: { "2": "A B C yB MC zB", "132": "r" }, L: { "132": "H" }, M: { "132": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "2": "I 8C 9C AD BD CD BC DD ED FD GD HD", "132": "o p q 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "132": "KD" }, S: { "132": "LD MD" } }, B: 4, C: "CSS Counter Styles", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-autofill.js
var require_css_autofill = __commonJS({
  "node_modules/caniuse-lite/data/features/css-autofill.js"(exports, module2) {
    module2.exports = { A: { D: { "33": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, L: { "33": "H" }, B: { "2": "C K L G M N O", "33": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U QC RC" }, M: { "1": "n" }, A: { "2": "J D E F A B OC" }, F: { "2": "F B C bC cC dC eC yB MC fC zB", "33": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m" }, K: { "2": "A B C yB MC zB", "33": "r" }, E: { "1": "G YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC", "2": "aC", "33": "5 I J D E F A B C K L SC AC TC UC VC WC BC yB zB CC XC" }, G: { "1": "zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "33": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC" }, P: { "33": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, I: { "2": "3B I 2C 3C 4C 5C NC", "33": "H 6C 7C" } }, B: 6, C: ":autofill CSS pseudo-class", D: void 0 };
  }
});

// node_modules/caniuse-lite/data/features/css-backdrop-filter.js
var require_css_backdrop_filter = __commonJS({
  "node_modules/caniuse-lite/data/features/css-backdrop-filter.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M", "257": "N O" }, C: { "1": "0 1 2 3 4 m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB QC RC", "578": "qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l" }, D: { "1": "0 1 2 3 4 vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB", "194": "VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB" }, E: { "2": "5 I J D E SC AC TC UC VC", "33": "F A B C K L G WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB bC cC dC eC yB MC fC zB", "194": "IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB" }, G: { "2": "E AC gC NC hC iC jC kC", "33": "lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q ED FD GD HD 1B 2B ID JD", "2": "I", "194": "8C 9C AD BD CD BC DD" }, Q: { "2": "CC" }, R: { "1": "KD" }, S: { "2": "LD MD" } }, B: 7, C: "CSS Backdrop Filter", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-background-offsets.js
var require_css_background_offsets = __commonJS({
  "node_modules/caniuse-lite/data/features/css-background-offsets.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "F A B", "2": "J D E OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 6 7 8 9 K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 PC 3B I J D E F A B C QC RC" }, D: { "1": "0 1 2 3 4 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 I J D E F A B C K L G M N O o p q" }, E: { "1": "D E F A B C K L G VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J SC AC TC UC" }, F: { "1": "6 7 8 9 B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m dC eC yB MC fC zB", "2": "F bC cC" }, G: { "1": "E jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC hC iC" }, H: { "1": "1C" }, I: { "1": "H 6C 7C", "2": "3B I 2C 3C 4C 5C NC" }, J: { "1": "A", "2": "D" }, K: { "1": "B C r yB MC zB", "2": "A" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 4, C: "CSS background-position edge offsets", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-backgroundblendmode.js
var require_css_backgroundblendmode = __commonJS({
  "node_modules/caniuse-lite/data/features/css-backgroundblendmode.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB QC RC" }, D: { "1": "0 1 2 3 4 JB KB LB MB NB OB PB QB RB SB TB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB", "260": "UB" }, E: { "1": "B C K L G BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D SC AC TC UC", "132": "E F A VC WC" }, F: { "1": "7 8 9 q AB BB CB DB EB FB GB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 F B C G M N O o p bC cC dC eC yB MC fC zB", "260": "HB" }, G: { "1": "oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC hC iC jC", "132": "E kC lC mC nC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 4, C: "CSS background-blend-mode", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-boxdecorationbreak.js
var require_css_boxdecorationbreak = __commonJS({
  "node_modules/caniuse-lite/data/features/css-boxdecorationbreak.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "2": "C K L G M N O", "164": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB QC RC" }, D: { "2": "5 6 I J D E F A B C K L G M N O o p", "164": "0 1 2 3 4 7 8 9 q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "2": "5 I J SC AC TC", "164": "D E F A B C K L G UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "2": "F bC cC dC eC", "129": "B C yB MC fC zB", "164": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m" }, G: { "2": "AC gC NC hC iC", "164": "E jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "132": "1C" }, I: { "2": "3B I 2C 3C 4C 5C NC", "164": "H 6C 7C" }, J: { "2": "D", "164": "A" }, K: { "2": "A", "129": "B C yB MC zB", "164": "r" }, L: { "164": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "164": "0B" }, P: { "164": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "164": "CC" }, R: { "164": "KD" }, S: { "1": "LD MD" } }, B: 4, C: "CSS box-decoration-break", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-boxshadow.js
var require_css_boxshadow = __commonJS({
  "node_modules/caniuse-lite/data/features/css-boxshadow.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "F A B", "2": "J D E OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "PC 3B", "33": "QC RC" }, D: { "1": "0 1 2 3 4 6 7 8 9 A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "33": "5 I J D E F" }, E: { "1": "J D E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "33": "5", "164": "I SC AC" }, F: { "1": "6 7 8 9 B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m dC eC yB MC fC zB", "2": "F bC cC" }, G: { "1": "E hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "33": "gC NC", "164": "AC" }, H: { "2": "1C" }, I: { "1": "I H 5C NC 6C 7C", "164": "3B 2C 3C 4C" }, J: { "1": "A", "33": "D" }, K: { "1": "B C r yB MC zB", "2": "A" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 4, C: "CSS3 Box-shadow", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-canvas.js
var require_css_canvas = __commonJS({
  "node_modules/caniuse-lite/data/features/css-canvas.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "2": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "2": "0 1 2 3 4 WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "33": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB" }, E: { "2": "SC AC", "33": "5 I J D E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "2": "F B C JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB", "33": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB" }, G: { "33": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "2": "H", "33": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "33": "D A" }, K: { "2": "A B C r yB MC zB" }, L: { "2": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "2": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "33": "I" }, Q: { "2": "CC" }, R: { "2": "KD" }, S: { "2": "LD MD" } }, B: 7, C: "CSS Canvas Drawings", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-caret-color.js
var require_css_caret_color = __commonJS({
  "node_modules/caniuse-lite/data/features/css-caret-color.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB QC RC" }, D: { "1": "0 1 2 3 4 fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB" }, E: { "1": "C K L G yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A B SC AC TC UC VC WC BC" }, F: { "1": "SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB bC cC dC eC yB MC fC zB" }, G: { "1": "qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC pC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I 8C 9C" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "2": "LD" } }, B: 2, C: "CSS caret-color", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-cascade-layers.js
var require_css_cascade_layers = __commonJS({
  "node_modules/caniuse-lite/data/features/css-cascade-layers.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 i j k l m s t u v w x y z H n", "2": "C K L G M N O P Q R S T U V W X Y Z a b c d e", "322": "f g h" }, C: { "1": "0 1 2 3 4 g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c QC RC", "194": "d e f" }, D: { "1": "0 1 2 3 4 i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e", "322": "f g h" }, E: { "1": "EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC" }, F: { "1": "V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U bC cC dC eC yB MC fC zB" }, G: { "1": "EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q ID JD", "2": "I 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B" }, Q: { "2": "CC" }, R: { "2": "KD" }, S: { "2": "LD MD" } }, B: 4, C: "CSS Cascade Layers", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-cascade-scope.js
var require_css_cascade_scope = __commonJS({
  "node_modules/caniuse-lite/data/features/css-cascade-scope.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "n", "2": "C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m", "194": "0 1 2 3 4 s t u v w x y z H" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "1": "n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m", "194": "0 1 2 3 4 s t u v w x y z H" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y bC cC dC eC yB MC fC zB", "194": "Z a b c d e f g h i j k l m" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "2": "A B C r yB MC zB" }, L: { "194": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "2": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "2": "KD" }, S: { "2": "LD MD" } }, B: 7, C: "Scoped Styles: the @scope rule", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-case-insensitive.js
var require_css_case_insensitive = __commonJS({
  "node_modules/caniuse-lite/data/features/css-case-insensitive.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB QC RC" }, D: { "1": "0 1 2 3 4 XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB" }, E: { "1": "F A B C K L G WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E SC AC TC UC VC" }, F: { "1": "KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB bC cC dC eC yB MC fC zB" }, G: { "1": "lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 5, C: "Case-insensitive CSS attribute selectors", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-clip-path.js
var require_css_clip_path = __commonJS({
  "node_modules/caniuse-lite/data/features/css-clip-path.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "2": "C K L G M N", "260": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "3138": "O" }, C: { "1": "0 1 2 3 4 cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "PC 3B", "132": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB QC RC", "644": "VB WB XB YB ZB aB bB" }, D: { "2": "5 6 7 I J D E F A B C K L G M N O o p q", "260": "0 1 2 3 4 dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "292": "8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB" }, E: { "2": "5 I J SC AC TC UC", "260": "L G CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "292": "D E F A B C K VC WC BC yB zB" }, F: { "2": "F B C bC cC dC eC yB MC fC zB", "260": "QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "292": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB" }, G: { "2": "AC gC NC hC iC", "260": "tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "292": "E jC kC lC mC nC oC pC qC rC sC" }, H: { "2": "1C" }, I: { "2": "3B I 2C 3C 4C 5C NC", "260": "H", "292": "6C 7C" }, J: { "2": "D A" }, K: { "2": "A B C yB MC zB", "260": "r" }, L: { "260": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "260": "0B" }, P: { "292": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "260": "CC" }, R: { "260": "KD" }, S: { "1": "MD", "644": "LD" } }, B: 4, C: "CSS clip-path property (for HTML)", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-color-adjust.js
var require_css_color_adjust = __commonJS({
  "node_modules/caniuse-lite/data/features/css-color-adjust.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "2": "C K L G M N O", "33": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB QC RC" }, D: { "16": "5 I J D E F A B C K L G M N O", "33": "0 1 2 3 4 6 7 8 9 o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I SC AC TC", "33": "J D E F A B C K L G UC VC WC BC yB zB CC XC YC DC" }, F: { "2": "F B C bC cC dC eC yB MC fC zB", "33": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m" }, G: { "1": "EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "16": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC" }, H: { "2": "1C" }, I: { "16": "3B I 2C 3C 4C 5C NC 6C 7C", "33": "H" }, J: { "16": "D A" }, K: { "2": "A B C yB MC zB", "33": "r" }, L: { "16": "H" }, M: { "1": "n" }, N: { "16": "A B" }, O: { "16": "0B" }, P: { "16": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "33": "CC" }, R: { "16": "KD" }, S: { "1": "LD MD" } }, B: 4, C: "CSS print-color-adjust", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-color-function.js
var require_css_color_function = __commonJS({
  "node_modules/caniuse-lite/data/features/css-color-function.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 z H n", "2": "C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v", "322": "w x y" }, C: { "1": "1 2 3 4 H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y QC RC", "578": "0 z" }, D: { "1": "0 1 2 3 4 z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v", "322": "w x y" }, E: { "1": "G YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A SC AC TC UC VC WC", "132": "B C K L BC yB zB CC XC" }, F: { "1": "h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d bC cC dC eC yB MC fC zB", "322": "e f g" }, G: { "1": "zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC", "132": "oC pC qC rC sC tC uC vC wC xC yC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "2": "A B C r yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "1": "q", "2": "I o p 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "2": "KD" }, S: { "2": "LD MD" } }, B: 4, C: "CSS color() function", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-conic-gradients.js
var require_css_conic_gradients = __commonJS({
  "node_modules/caniuse-lite/data/features/css-conic-gradients.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB QC RC", "578": "uB vB wB xB P Q R 6B" }, D: { "1": "0 1 2 3 4 rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB", "257": "pB qB", "450": "4B hB 5B iB jB kB lB mB nB oB" }, E: { "1": "K L G zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A B C SC AC TC UC VC WC BC yB" }, F: { "1": "gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB bC cC dC eC yB MC fC zB", "257": "eB fB", "450": "UB VB WB XB YB ZB aB bB cB dB" }, G: { "1": "sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q BC DD ED FD GD HD 1B 2B ID JD", "2": "I 8C 9C AD BD CD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "2": "LD" } }, B: 5, C: "CSS Conical Gradients", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-container-queries-style.js
var require_css_container_queries_style = __commonJS({
  "node_modules/caniuse-lite/data/features/css-container-queries-style.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "2": "C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u", "194": "v w x y", "260": "0 1 2 3 4 z H n" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u", "194": "v w x y", "260": "0 1 2 3 4 z H n 7B 8B 9B" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b bC cC dC eC yB MC fC zB", "194": "c d e f g", "260": "h i j k l m" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "2": "3B I 2C 3C 4C 5C NC 6C 7C", "260": "H" }, J: { "2": "D A" }, K: { "2": "A B C yB MC zB", "194": "r" }, L: { "260": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "2": "I o p 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "260": "q" }, Q: { "2": "CC" }, R: { "2": "KD" }, S: { "2": "LD MD" } }, B: 5, C: "CSS Container Style Queries", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-container-queries.js
var require_css_container_queries = __commonJS({
  "node_modules/caniuse-lite/data/features/css-container-queries.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 u v w x y z H n", "2": "C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s", "516": "t" }, C: { "1": "0 1 2 3 4 y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x QC RC" }, D: { "1": "0 1 2 3 4 u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a", "194": "c d e f g h i j k l m s", "450": "b", "516": "t" }, E: { "1": "1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC" }, F: { "1": "d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB bC cC dC eC yB MC fC zB", "194": "P Q R 6B S T U V W X Y Z", "516": "a b c" }, G: { "1": "1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "1": "o p q", "2": "I 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "2": "KD" }, S: { "2": "LD MD" } }, B: 5, C: "CSS Container Queries (Size)", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-container-query-units.js
var require_css_container_query_units = __commonJS({
  "node_modules/caniuse-lite/data/features/css-container-query-units.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 t u v w x y z H n", "2": "C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s" }, C: { "1": "0 1 2 3 4 y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x QC RC" }, D: { "1": "0 1 2 3 4 t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b", "194": "k l m s", "450": "c d e f g h i j" }, E: { "1": "1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC" }, F: { "1": "a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB bC cC dC eC yB MC fC zB", "194": "P Q R 6B S T U V W X Y Z" }, G: { "1": "1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "1": "o p q", "2": "I 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "2": "KD" }, S: { "2": "LD MD" } }, B: 5, C: "CSS Container Query Units", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-containment.js
var require_css_containment = __commonJS({
  "node_modules/caniuse-lite/data/features/css-containment.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB QC RC", "194": "PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB" }, D: { "1": "0 1 2 3 4 aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB", "66": "ZB" }, E: { "1": "EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC" }, F: { "1": "OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB bC cC dC eC yB MC fC zB", "66": "MB NB" }, G: { "1": "EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I 8C" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "194": "LD" } }, B: 2, C: "CSS Containment", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-content-visibility.js
var require_css_content_visibility = __commonJS({
  "node_modules/caniuse-lite/data/features/css-content-visibility.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O P Q R S T" }, C: { "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w QC RC", "194": "0 1 2 3 4 x y z H n 7B 8B 9B" }, D: { "1": "0 1 2 3 4 U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T" }, E: { "1": "aC", "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC" }, F: { "1": "rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB bC cC dC eC yB MC fC zB" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q GD HD 1B 2B ID JD", "2": "I 8C 9C AD BD CD BC DD ED FD" }, Q: { "2": "CC" }, R: { "1": "KD" }, S: { "2": "LD MD" } }, B: 5, C: "CSS content-visibility", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-counters.js
var require_css_counters = __commonJS({
  "node_modules/caniuse-lite/data/features/css-counters.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "E F A B", "2": "J D OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB" }, G: { "1": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "1": "1C" }, I: { "1": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "1": "D A" }, K: { "1": "A B C r yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 2, C: "CSS Counters", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-crisp-edges.js
var require_css_crisp_edges = __commonJS({
  "node_modules/caniuse-lite/data/features/css-crisp-edges.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J OC", "2340": "D E F A B" }, B: { "2": "C K L G M N O", "1025": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "PC 3B QC", "513": "lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b", "545": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB RC" }, D: { "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB", "1025": "0 1 2 3 4 PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "A B C K L G BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I SC AC TC", "164": "J", "4644": "D E F UC VC WC" }, F: { "2": "6 7 8 9 F B G M N O o p q AB BB bC cC dC eC yB MC", "545": "C fC zB", "1025": "CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m" }, G: { "1": "nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC", "4260": "hC iC", "4644": "E jC kC lC mC" }, H: { "2": "1C" }, I: { "2": "3B I 2C 3C 4C 5C NC 6C 7C", "1025": "H" }, J: { "2": "D", "4260": "A" }, K: { "2": "A B yB MC", "545": "C zB", "1025": "r" }, L: { "1025": "H" }, M: { "1": "n" }, N: { "2340": "A B" }, O: { "1025": "0B" }, P: { "1025": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1025": "CC" }, R: { "1025": "KD" }, S: { "1": "MD", "4097": "LD" } }, B: 4, C: "Crisp edges/pixelated images", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-cross-fade.js
var require_css_cross_fade = __commonJS({
  "node_modules/caniuse-lite/data/features/css-cross-fade.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "2": "C K L G M N O", "33": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "2": "5 I J D E F A B C K L G M", "33": "0 1 2 3 4 6 7 8 9 N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "A B C K L G BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I SC AC", "33": "J D E F TC UC VC WC" }, F: { "2": "F B C bC cC dC eC yB MC fC zB", "33": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m" }, G: { "1": "nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC", "33": "E hC iC jC kC lC mC" }, H: { "2": "1C" }, I: { "2": "3B I 2C 3C 4C 5C NC", "33": "H 6C 7C" }, J: { "2": "D A" }, K: { "2": "A B C yB MC zB", "33": "r" }, L: { "33": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "33": "0B" }, P: { "33": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "33": "CC" }, R: { "33": "KD" }, S: { "2": "LD MD" } }, B: 4, C: "CSS Cross-Fade Function", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-default-pseudo.js
var require_css_default_pseudo = __commonJS({
  "node_modules/caniuse-lite/data/features/css-default-pseudo.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "16": "PC 3B QC RC" }, D: { "1": "0 1 2 3 4 ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "16": "5 I J D E F A B C K L", "132": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB" }, E: { "1": "B C K L G BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "16": "5 I SC AC", "132": "J D E F A TC UC VC WC" }, F: { "1": "MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "16": "F B bC cC dC eC yB MC", "132": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB", "260": "C fC zB" }, G: { "1": "oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "16": "AC gC NC hC iC", "132": "E jC kC lC mC nC" }, H: { "260": "1C" }, I: { "1": "H", "16": "3B 2C 3C 4C", "132": "I 5C NC 6C 7C" }, J: { "16": "D", "132": "A" }, K: { "1": "r", "16": "A B C yB MC", "260": "zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "132": "I" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 5, C: ":default CSS pseudo-class", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-descendant-gtgt.js
var require_css_descendant_gtgt = __commonJS({
  "node_modules/caniuse-lite/data/features/css-descendant-gtgt.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "2": "0 1 2 3 4 C K L G M N O Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "16": "P" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "B", "2": "5 I J D E F A C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "2": "A B C r yB MC zB" }, L: { "2": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "2": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "2": "KD" }, S: { "2": "LD MD" } }, B: 7, C: "Explicit descendant combinator >>", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-deviceadaptation.js
var require_css_deviceadaptation = __commonJS({
  "node_modules/caniuse-lite/data/features/css-deviceadaptation.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F OC", "164": "A B" }, B: { "66": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "164": "C K L G M N O" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB", "66": "0 1 2 3 4 DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB bC cC dC eC yB MC fC zB", "66": "OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "292": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "2": "A r", "292": "B C yB MC zB" }, L: { "2": "H" }, M: { "2": "n" }, N: { "164": "A B" }, O: { "2": "0B" }, P: { "2": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "66": "CC" }, R: { "2": "KD" }, S: { "2": "LD MD" } }, B: 5, C: "CSS Device Adaptation", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-dir-pseudo.js
var require_css_dir_pseudo = __commonJS({
  "node_modules/caniuse-lite/data/features/css-dir-pseudo.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "2": "C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s", "194": "0 1 2 3 4 t u v w x y z H n" }, C: { "1": "0 1 2 3 4 XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 PC 3B I J D E F A B C K L G M QC RC", "33": "6 7 8 9 N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB" }, D: { "1": "8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z", "194": "0 1 2 3 4 a b c d e f g h i j k l m s t u v w x y z H n 7B" }, E: { "1": "IC JC KC 2B LC aC", "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC" }, F: { "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z bC cC dC eC yB MC fC zB", "194": "a b c d e f g h i j k l m" }, G: { "1": "IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "2": "A B C r yB MC zB" }, L: { "2": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "2": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "2": "KD" }, S: { "1": "MD", "33": "LD" } }, B: 5, C: ":dir() CSS pseudo-class", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-display-contents.js
var require_css_display_contents = __commonJS({
  "node_modules/caniuse-lite/data/features/css-display-contents.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "2": "C K L G M N O", "132": "P Q R S T U V W X", "260": "0 1 2 3 4 Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB QC RC", "132": "LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B", "260": "0 1 2 3 4 iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, D: { "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB", "132": "lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X", "194": "gB 4B hB 5B iB jB kB", "260": "0 1 2 3 4 Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "2": "5 I J D E F A B SC AC TC UC VC WC BC", "132": "C K L G yB zB CC XC YC DC EC 0B ZC", "260": "2B LC aC", "772": "1B FC GC HC IC JC KC" }, F: { "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB bC cC dC eC yB MC fC zB", "132": "aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB", "260": "vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m" }, G: { "1": "2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC pC", "132": "qC rC sC tC uC vC", "260": "wC xC yC zC DC EC 0B 0C", "516": "FC GC HC IC JC KC", "772": "1B" }, H: { "2": "1C" }, I: { "2": "3B I 2C 3C 4C 5C NC 6C 7C", "260": "H" }, J: { "2": "D A" }, K: { "2": "A B C yB MC zB", "260": "r" }, L: { "260": "H" }, M: { "260": "n" }, N: { "2": "A B" }, O: { "132": "0B" }, P: { "2": "I 8C 9C AD BD", "132": "CD BC DD ED FD GD", "260": "o p q HD 1B 2B ID JD" }, Q: { "132": "CC" }, R: { "260": "KD" }, S: { "132": "LD", "260": "MD" } }, B: 4, C: "CSS display: contents", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-element-function.js
var require_css_element_function = __commonJS({
  "node_modules/caniuse-lite/data/features/css-element-function.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "2": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "33": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "164": "PC 3B QC RC" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "2": "A B C r yB MC zB" }, L: { "2": "H" }, M: { "33": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "2": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "2": "KD" }, S: { "33": "LD MD" } }, B: 5, C: "CSS element() function", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-env-function.js
var require_css_env_function = __commonJS({
  "node_modules/caniuse-lite/data/features/css-env-function.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB QC RC" }, D: { "1": "0 1 2 3 4 pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB" }, E: { "1": "C K L G yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A SC AC TC UC VC WC BC", "132": "B" }, F: { "1": "eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB bC cC dC eC yB MC fC zB" }, G: { "1": "qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC", "132": "pC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q BC DD ED FD GD HD 1B 2B ID JD", "2": "I 8C 9C AD BD CD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "2": "LD" } }, B: 7, C: "CSS Environment Variables env()", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-exclusions.js
var require_css_exclusions = __commonJS({
  "node_modules/caniuse-lite/data/features/css-exclusions.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F OC", "33": "A B" }, B: { "2": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "33": "C K L G M N O" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "2": "A B C r yB MC zB" }, L: { "2": "H" }, M: { "2": "n" }, N: { "33": "A B" }, O: { "2": "0B" }, P: { "2": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "2": "KD" }, S: { "2": "LD MD" } }, B: 5, C: "CSS Exclusions Level 1", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-featurequeries.js
var require_css_featurequeries = __commonJS({
  "node_modules/caniuse-lite/data/features/css-featurequeries.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 7 8 9 q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 PC 3B I J D E F A B C K L G M N O o p QC RC" }, D: { "1": "0 1 2 3 4 CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB" }, E: { "1": "F A B C K L G WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E SC AC TC UC VC" }, F: { "1": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m zB", "2": "F B C bC cC dC eC yB MC fC" }, G: { "1": "lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC" }, H: { "1": "1C" }, I: { "1": "H 6C 7C", "2": "3B I 2C 3C 4C 5C NC" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 4, C: "CSS Feature Queries", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-file-selector-button.js
var require_css_file_selector_button = __commonJS({
  "node_modules/caniuse-lite/data/features/css-file-selector-button.js"(exports, module2) {
    module2.exports = { A: { D: { "1": "0 1 2 3 4 Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "33": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X" }, L: { "1": "H" }, B: { "1": "0 1 2 3 4 Y Z a b c d e f g h i j k l m s t u v w x y z H n", "33": "C K L G M N O P Q R S T U V W X" }, C: { "1": "0 1 2 3 4 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R QC RC" }, M: { "1": "n" }, A: { "2": "J D E F OC", "33": "A B" }, F: { "1": "uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F B C bC cC dC eC yB MC fC zB", "33": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB" }, K: { "1": "r", "2": "A B C yB MC zB" }, E: { "1": "G XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC", "2": "aC", "33": "5 I J D E F A B C K L SC AC TC UC VC WC BC yB zB CC" }, G: { "1": "yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "33": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC" }, P: { "1": "o p q HD 1B 2B ID JD", "33": "I 8C 9C AD BD CD BC DD ED FD GD" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC", "33": "6C 7C" } }, B: 6, C: "::file-selector-button CSS pseudo-element", D: void 0 };
  }
});

// node_modules/caniuse-lite/data/features/css-filter-function.js
var require_css_filter_function = __commonJS({
  "node_modules/caniuse-lite/data/features/css-filter-function.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "2": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "A B C K L G WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E SC AC TC UC VC", "33": "F" }, F: { "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB" }, G: { "1": "nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC", "33": "lC mC" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "2": "A B C r yB MC zB" }, L: { "2": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "2": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "2": "KD" }, S: { "2": "LD MD" } }, B: 5, C: "CSS filter() function", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-filters.js
var require_css_filters = __commonJS({
  "node_modules/caniuse-lite/data/features/css-filters.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "1028": "K L G M N O", "1346": "C" }, C: { "1": "0 1 2 3 4 JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "PC 3B QC", "196": "IB", "516": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB RC" }, D: { "1": "0 1 2 3 4 bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 I J D E F A B C K L G M N", "33": "6 7 8 9 O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB" }, E: { "1": "A B C K L G WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I SC AC TC", "33": "J D E F UC VC" }, F: { "1": "OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F B C bC cC dC eC yB MC fC zB", "33": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB" }, G: { "1": "mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC hC", "33": "E iC jC kC lC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC", "33": "6C 7C" }, J: { "2": "D", "33": "A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "33": "I 8C 9C" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 5, C: "CSS Filter Effects", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-first-letter.js
var require_css_first_letter = __commonJS({
  "node_modules/caniuse-lite/data/features/css-first-letter.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "F A B", "16": "OC", "516": "E", "1540": "J D" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC", "132": "3B", "260": "PC" }, D: { "1": "0 1 2 3 4 6 7 8 9 F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "16": "5 J D E", "132": "I" }, E: { "1": "J D E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "16": "5 SC", "132": "I AC" }, F: { "1": "6 7 8 9 C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m fC zB", "16": "F bC", "260": "B cC dC eC yB MC" }, G: { "1": "E hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "16": "AC gC NC" }, H: { "1": "1C" }, I: { "1": "3B I H 5C NC 6C 7C", "16": "2C 3C", "132": "4C" }, J: { "1": "D A" }, K: { "1": "C r zB", "260": "A B yB MC" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 2, C: "::first-letter CSS pseudo-element selector", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-first-line.js
var require_css_first_line = __commonJS({
  "node_modules/caniuse-lite/data/features/css-first-line.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "F A B", "132": "J D E OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB" }, G: { "1": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "1": "1C" }, I: { "1": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "1": "D A" }, K: { "1": "A B C r yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 2, C: "CSS first-line pseudo-element", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-fixed.js
var require_css_fixed = __commonJS({
  "node_modules/caniuse-lite/data/features/css-fixed.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "D E F A B", "2": "OC", "8": "J" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "5 I J D E F A B C K L G SC AC TC UC VC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "1025": "WC" }, F: { "1": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB" }, G: { "1": "E kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC", "132": "hC iC jC" }, H: { "2": "1C" }, I: { "1": "3B H 6C 7C", "260": "2C 3C 4C", "513": "I 5C NC" }, J: { "1": "D A" }, K: { "1": "A B C r yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 2, C: "CSS position:fixed", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-focus-visible.js
var require_css_focus_visible = __commonJS({
  "node_modules/caniuse-lite/data/features/css-focus-visible.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O", "328": "P Q R S T U" }, C: { "1": "0 1 2 3 4 U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "PC 3B QC RC", "161": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T" }, D: { "1": "0 1 2 3 4 V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB", "328": "nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U" }, E: { "1": "EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A B C K L SC AC TC UC VC WC BC yB zB CC XC", "578": "G YC DC" }, F: { "1": "sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB bC cC dC eC yB MC fC zB", "328": "mB nB oB pB qB rB" }, G: { "1": "EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC", "578": "zC DC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "1": "o p q GD HD 1B 2B ID JD", "2": "I 8C 9C AD BD CD BC DD ED FD" }, Q: { "2": "CC" }, R: { "1": "KD" }, S: { "161": "LD MD" } }, B: 5, C: ":focus-visible CSS pseudo-class", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-focus-within.js
var require_css_focus_within = __commonJS({
  "node_modules/caniuse-lite/data/features/css-focus-within.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB QC RC" }, D: { "1": "0 1 2 3 4 hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB", "194": "4B" }, E: { "1": "B C K L G BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A SC AC TC UC VC WC" }, F: { "1": "VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB bC cC dC eC yB MC fC zB", "194": "UB" }, G: { "1": "oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I 8C 9C AD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "2": "LD" } }, B: 7, C: ":focus-within CSS pseudo-class", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-font-palette.js
var require_css_font_palette = __commonJS({
  "node_modules/caniuse-lite/data/features/css-font-palette.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 t u v w x y z H n", "2": "C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s" }, C: { "1": "0 1 2 3 4 v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u QC RC" }, D: { "1": "0 1 2 3 4 k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j" }, E: { "1": "EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC" }, F: { "1": "W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V bC cC dC eC yB MC fC zB" }, G: { "1": "EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "1": "o p q JD", "2": "I 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID" }, Q: { "2": "CC" }, R: { "2": "KD" }, S: { "2": "LD MD" } }, B: 5, C: "CSS font-palette", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-font-rendering-controls.js
var require_css_font_rendering_controls = __commonJS({
  "node_modules/caniuse-lite/data/features/css-font-rendering-controls.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB QC RC", "194": "UB VB WB XB YB ZB aB bB cB dB eB fB" }, D: { "1": "0 1 2 3 4 hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB", "66": "XB YB ZB aB bB cB dB eB fB gB 4B" }, E: { "1": "C K L G yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A B SC AC TC UC VC WC BC" }, F: { "1": "VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB bC cC dC eC yB MC fC zB", "66": "KB LB MB NB OB PB QB RB SB TB UB" }, G: { "1": "qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC pC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I", "66": "8C 9C AD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "194": "LD" } }, B: 5, C: "CSS font-display", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-font-stretch.js
var require_css_font_stretch = __commonJS({
  "node_modules/caniuse-lite/data/features/css-font-stretch.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "F A B", "2": "J D E OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 6 7 8 9 F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 PC 3B I J D E QC RC" }, D: { "1": "0 1 2 3 4 WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB" }, E: { "1": "B C K L G yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A SC AC TC UC VC WC BC" }, F: { "1": "JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB bC cC dC eC yB MC fC zB" }, G: { "1": "oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 2, C: "CSS font-stretch", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-gencontent.js
var require_css_gencontent = __commonJS({
  "node_modules/caniuse-lite/data/features/css-gencontent.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "F A B", "2": "J D OC", "132": "E" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB" }, G: { "1": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "1": "1C" }, I: { "1": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "1": "D A" }, K: { "1": "A B C r yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 2, C: "CSS Generated content for pseudo-elements", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-gradients.js
var require_css_gradients = __commonJS({
  "node_modules/caniuse-lite/data/features/css-gradients.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "A B", "2": "J D E F OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "PC 3B QC", "260": "6 7 8 9 M N O o p q AB BB CB DB EB FB GB HB IB JB", "292": "5 I J D E F A B C K L G RC" }, D: { "1": "0 1 2 3 4 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "33": "6 7 8 9 A B C K L G M N O o p q", "548": "5 I J D E F" }, E: { "1": "EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "SC AC", "260": "D E F A B C K L G UC VC WC BC yB zB CC XC YC DC", "292": "J TC", "804": "5 I" }, F: { "1": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m zB", "2": "F B bC cC dC eC", "33": "C fC", "164": "yB MC" }, G: { "1": "EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "260": "E jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC", "292": "hC iC", "804": "AC gC NC" }, H: { "2": "1C" }, I: { "1": "H 6C 7C", "33": "I 5C NC", "548": "3B 2C 3C 4C" }, J: { "1": "A", "548": "D" }, K: { "1": "r zB", "2": "A B", "33": "C", "164": "yB MC" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 4, C: "CSS Gradients", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-grid-animation.js
var require_css_grid_animation = __commonJS({
  "node_modules/caniuse-lite/data/features/css-grid-animation.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "2": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB QC RC" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC" }, F: { "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB" }, G: { "1": "1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "2": "A B C r yB MC zB" }, L: { "2": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "2": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "2": "KD" }, S: { "1": "MD", "2": "LD" } }, B: 4, C: "CSS Grid animation", D: false };
  }
});

// node_modules/caniuse-lite/data/features/css-grid.js
var require_css_grid = __commonJS({
  "node_modules/caniuse-lite/data/features/css-grid.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E OC", "8": "F", "292": "A B" }, B: { "1": "0 1 2 3 4 M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "292": "C K L G" }, C: { "1": "0 1 2 3 4 cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 PC 3B I J D E F A B C K L G M N O QC RC", "8": "6 7 8 9 o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB", "584": "OB PB QB RB SB TB UB VB WB XB YB ZB", "1025": "aB bB" }, D: { "1": "0 1 2 3 4 gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 I J D E F A B C K L G M N O o p q", "8": "9 AB BB CB", "200": "DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB", "1025": "fB" }, E: { "1": "B C K L G BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I SC AC TC", "8": "J D E F A UC VC WC" }, F: { "1": "SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB bC cC dC eC yB MC fC zB", "200": "CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB" }, G: { "1": "oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC hC", "8": "E iC jC kC lC mC nC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C", "8": "NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "292": "A B" }, O: { "1": "0B" }, P: { "1": "o p q 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "8C", "8": "I" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 4, C: "CSS Grid Layout (level 1)", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-hanging-punctuation.js
var require_css_hanging_punctuation = __commonJS({
  "node_modules/caniuse-lite/data/features/css-hanging-punctuation.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "2": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "A B C K L G BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F SC AC TC UC VC WC" }, F: { "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB" }, G: { "1": "nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "2": "A B C r yB MC zB" }, L: { "2": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "2": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "2": "KD" }, S: { "2": "LD MD" } }, B: 4, C: "CSS hanging-punctuation", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-has.js
var require_css_has = __commonJS({
  "node_modules/caniuse-lite/data/features/css-has.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 t u v w x y z H n", "2": "C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s" }, C: { "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l QC RC", "322": "0 1 2 3 4 m s t u v w x y z H n 7B 8B 9B" }, D: { "1": "0 1 2 3 4 t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j", "194": "k l m s" }, E: { "1": "EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC" }, F: { "1": "a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z bC cC dC eC yB MC fC zB" }, G: { "1": "EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "1": "o p q", "2": "I 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "2": "KD" }, S: { "2": "LD MD" } }, B: 5, C: ":has() CSS relational pseudo-class", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-hyphens.js
var require_css_hyphens = __commonJS({
  "node_modules/caniuse-lite/data/features/css-hyphens.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F OC", "33": "A B" }, B: { "1": "0 1 2 3 4 t u v w x y z H n", "33": "C K L G M N O", "132": "P Q R S T U V W", "260": "X Y Z a b c d e f g h i j k l m s" }, C: { "1": "0 1 2 3 4 RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 PC 3B I QC RC", "33": "6 7 8 9 J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB" }, D: { "1": "0 1 2 3 4 X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB", "132": "dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W" }, E: { "1": "2B LC aC", "2": "5 I SC AC", "33": "J D E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC" }, F: { "1": "a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB bC cC dC eC yB MC fC zB", "132": "QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z" }, G: { "1": "2B LC", "2": "AC gC", "33": "E NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I", "132": "8C" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 4, C: "CSS Hyphenation", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-image-orientation.js
var require_css_image_orientation = __commonJS({
  "node_modules/caniuse-lite/data/features/css-image-orientation.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O P Q", "257": "R S T U V W X" }, C: { "1": "0 1 2 3 4 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q QC RC" }, D: { "1": "0 1 2 3 4 Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q", "257": "R S T U V W X" }, E: { "1": "L G CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A B C K SC AC TC UC VC WC BC yB zB" }, F: { "1": "wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB bC cC dC eC yB MC fC zB", "257": "oB pB qB rB sB r tB uB vB" }, G: { "1": "xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "132": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q HD 1B 2B ID JD", "2": "I 8C 9C AD BD CD BC DD ED", "257": "FD GD" }, Q: { "2": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 4, C: "CSS3 image-orientation", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-image-set.js
var require_css_image_set = __commonJS({
  "node_modules/caniuse-lite/data/features/css-image-set.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "2 3 4 H n", "2": "C K L G M N O", "164": "0 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z", "2049": "1" }, C: { "1": "1 2 3 4 H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U QC RC", "66": "V W", "2305": "0 Y Z a b c d e f g h i j k l m s t u v w x y z", "2820": "X" }, D: { "1": "2 3 4 H n 7B 8B 9B", "2": "5 6 I J D E F A B C K L G M N O o", "164": "0 7 8 9 p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z", "2049": "1" }, E: { "1": "2B LC aC", "2": "5 I SC AC TC", "132": "A B C K BC yB zB CC", "164": "J D E F UC VC WC", "1540": "L G XC YC DC EC 0B ZC 1B FC GC HC IC JC KC" }, F: { "1": "j k l m", "2": "F B C bC cC dC eC yB MC fC zB", "164": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h", "2049": "i" }, G: { "1": "2B LC", "2": "AC gC NC hC", "132": "nC oC pC qC rC sC tC uC vC wC", "164": "E iC jC kC lC mC", "1540": "xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC", "164": "6C 7C" }, J: { "2": "D", "164": "A" }, K: { "2": "A B C yB MC zB", "164": "r" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "164": "0B" }, P: { "164": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "164": "CC" }, R: { "164": "KD" }, S: { "2": "LD MD" } }, B: 5, C: "CSS image-set", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-in-out-of-range.js
var require_css_in_out_of_range = __commonJS({
  "node_modules/caniuse-lite/data/features/css-in-out-of-range.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C", "260": "K L G M N O" }, C: { "1": "0 1 2 3 4 YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB QC RC", "516": "DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB" }, D: { "1": "0 1 2 3 4 bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "I", "16": "5 J D E F A B C K L", "260": "aB", "772": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB" }, E: { "1": "B C K L G BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "I SC AC", "16": "5", "772": "J D E F A TC UC VC WC" }, F: { "1": "OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "16": "F bC", "260": "B C NB cC dC eC yB MC fC zB", "772": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB" }, G: { "1": "oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC", "772": "E hC iC jC kC lC mC nC" }, H: { "132": "1C" }, I: { "1": "H", "2": "3B 2C 3C 4C", "260": "I 5C NC 6C 7C" }, J: { "2": "D", "260": "A" }, K: { "1": "r", "260": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "260": "I" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "516": "LD" } }, B: 5, C: ":in-range and :out-of-range CSS pseudo-classes", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-indeterminate-pseudo.js
var require_css_indeterminate_pseudo = __commonJS({
  "node_modules/caniuse-lite/data/features/css-indeterminate-pseudo.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E OC", "132": "A B", "388": "F" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "132": "C K L G M N O" }, C: { "1": "0 1 2 3 4 ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "16": "PC 3B QC RC", "132": "6 7 8 9 J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB", "388": "5 I" }, D: { "1": "0 1 2 3 4 NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "16": "5 I J D E F A B C K L", "132": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB" }, E: { "1": "B C K L G BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "16": "5 I J SC AC", "132": "D E F A UC VC WC", "388": "TC" }, F: { "1": "AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "16": "F B bC cC dC eC yB MC", "132": "6 7 8 9 G M N O o p q", "516": "C fC zB" }, G: { "1": "oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "16": "AC gC NC hC iC", "132": "E jC kC lC mC nC" }, H: { "516": "1C" }, I: { "1": "H", "16": "3B 2C 3C 4C 7C", "132": "6C", "388": "I 5C NC" }, J: { "16": "D", "132": "A" }, K: { "1": "r", "16": "A B C yB MC", "516": "zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "132": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "132": "LD" } }, B: 5, C: ":indeterminate CSS pseudo-class", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-initial-letter.js
var require_css_initial_letter = __commonJS({
  "node_modules/caniuse-lite/data/features/css-initial-letter.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "2": "C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x", "260": "0 1 2 3 4 y z H n" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x", "260": "0 1 2 3 4 y z H n 7B 8B 9B" }, E: { "2": "5 I J D E SC AC TC UC VC", "4": "F", "164": "A B C K L G WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g bC cC dC eC yB MC fC zB", "260": "h i j k l m" }, G: { "2": "E AC gC NC hC iC jC kC", "164": "lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "2": "A B C r yB MC zB" }, L: { "260": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "1": "p q", "2": "I o 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "2": "KD" }, S: { "2": "LD MD" } }, B: 5, C: "CSS Initial Letter", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-initial-value.js
var require_css_initial_value = __commonJS({
  "node_modules/caniuse-lite/data/features/css-initial-value.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 6 7 8 9 o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "33": "5 I J D E F A B C K L G M N O QC RC", "164": "PC 3B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "5 I J D E F A B C K L G AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "16": "SC" }, F: { "1": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F B C bC cC dC eC yB MC fC zB" }, G: { "1": "E gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "16": "AC" }, H: { "2": "1C" }, I: { "1": "3B I H 4C 5C NC 6C 7C", "16": "2C 3C" }, J: { "1": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 4, C: "CSS initial value", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-lch-lab.js
var require_css_lch_lab = __commonJS({
  "node_modules/caniuse-lite/data/features/css-lch-lab.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 z H n", "2": "C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x", "322": "y" }, C: { "1": "1 2 3 4 H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y QC RC", "194": "0 z" }, D: { "1": "0 1 2 3 4 z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x", "322": "y" }, E: { "1": "G YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A B C K L SC AC TC UC VC WC BC yB zB CC XC" }, F: { "1": "h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g bC cC dC eC yB MC fC zB" }, G: { "1": "zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "2": "A B C r yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "1": "q", "2": "I o p 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "2": "KD" }, S: { "2": "LD MD" } }, B: 4, C: "LCH and Lab color values", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-letter-spacing.js
var require_css_letter_spacing = __commonJS({
  "node_modules/caniuse-lite/data/features/css-letter-spacing.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "F A B", "16": "OC", "132": "J D E" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "1": "0 1 2 3 4 EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "132": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB" }, E: { "1": "D E F A B C K L G UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "16": "SC", "132": "5 I J AC TC" }, F: { "1": "6 7 8 9 N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "16": "F bC", "132": "B C G M cC dC eC yB MC fC zB" }, G: { "1": "E gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "16": "AC" }, H: { "2": "1C" }, I: { "1": "H 6C 7C", "16": "2C 3C", "132": "3B I 4C 5C NC" }, J: { "132": "D A" }, K: { "1": "r", "132": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 2, C: "letter-spacing CSS property", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-line-clamp.js
var require_css_line_clamp = __commonJS({
  "node_modules/caniuse-lite/data/features/css-line-clamp.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "2": "C K L G M", "33": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "129": "N O" }, C: { "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB QC RC", "33": "0 1 2 3 4 oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, D: { "16": "5 I J D E F A B C K", "33": "0 1 2 3 4 6 7 8 9 L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "2": "I SC AC", "33": "5 J D E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "2": "F B C bC cC dC eC yB MC fC zB", "33": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m" }, G: { "2": "AC gC NC", "33": "E hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "16": "2C 3C", "33": "3B I H 4C 5C NC 6C 7C" }, J: { "33": "D A" }, K: { "2": "A B C yB MC zB", "33": "r" }, L: { "33": "H" }, M: { "33": "n" }, N: { "2": "A B" }, O: { "33": "0B" }, P: { "33": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "33": "CC" }, R: { "33": "KD" }, S: { "2": "LD", "33": "MD" } }, B: 5, C: "CSS line-clamp", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-logical-props.js
var require_css_logical_props = __commonJS({
  "node_modules/caniuse-lite/data/features/css-logical-props.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O", "1028": "W X", "1540": "P Q R S T U V" }, C: { "1": "0 1 2 3 4 mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "PC", "164": "5 6 7 8 9 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB QC RC", "1540": "PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB" }, D: { "1": "0 1 2 3 4 Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "292": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB", "1028": "W X", "1540": "pB qB rB sB r tB uB vB wB xB P Q R S T U V" }, E: { "1": "G YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "292": "5 I J D E F A B C SC AC TC UC VC WC BC yB", "1540": "K L zB CC", "3076": "XC" }, F: { "1": "vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F B C bC cC dC eC yB MC fC zB", "292": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB", "1028": "tB uB", "1540": "eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r" }, G: { "1": "zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "292": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC", "1540": "sC tC uC vC wC xC", "3076": "yC" }, H: { "2": "1C" }, I: { "1": "H", "292": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "292": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q HD 1B 2B ID JD", "292": "I 8C 9C AD BD CD", "1540": "BC DD ED FD GD" }, Q: { "1540": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "1540": "LD" } }, B: 5, C: "CSS Logical Properties", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-marker-pseudo.js
var require_css_marker_pseudo = __commonJS({
  "node_modules/caniuse-lite/data/features/css-marker-pseudo.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O P Q R S T U" }, C: { "1": "0 1 2 3 4 oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB QC RC" }, D: { "1": "0 1 2 3 4 V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U" }, E: { "1": "aC", "2": "5 I J D E F A B SC AC TC UC VC WC BC", "129": "C K L G yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC" }, F: { "1": "sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB bC cC dC eC yB MC fC zB" }, G: { "1": "qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC pC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q GD HD 1B 2B ID JD", "2": "I 8C 9C AD BD CD BC DD ED FD" }, Q: { "2": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "2": "LD" } }, B: 5, C: "CSS ::marker pseudo-element", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-masks.js
var require_css_masks = __commonJS({
  "node_modules/caniuse-lite/data/features/css-masks.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "2": "C K L G M", "164": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "3138": "N", "12292": "O" }, C: { "1": "0 1 2 3 4 bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "PC 3B", "260": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB QC RC" }, D: { "164": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "SC AC", "164": "5 I J D E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC" }, F: { "2": "F B C bC cC dC eC yB MC fC zB", "164": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m" }, G: { "1": "EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "164": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC" }, H: { "2": "1C" }, I: { "164": "H 6C 7C", "676": "3B I 2C 3C 4C 5C NC" }, J: { "164": "D A" }, K: { "2": "A B C yB MC zB", "164": "r" }, L: { "164": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "164": "0B" }, P: { "164": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "164": "CC" }, R: { "164": "KD" }, S: { "1": "MD", "260": "LD" } }, B: 4, C: "CSS Masks", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-matches-pseudo.js
var require_css_matches_pseudo = __commonJS({
  "node_modules/caniuse-lite/data/features/css-matches-pseudo.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O", "1220": "P Q R S T U V W" }, C: { "1": "0 1 2 3 4 xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "16": "PC 3B QC RC", "548": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB" }, D: { "1": "0 1 2 3 4 X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "16": "5 I J D E F A B C K L", "164": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB", "196": "lB mB nB", "1220": "oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W" }, E: { "1": "L G XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "I SC AC", "16": "5", "164": "J D E TC UC VC", "260": "F A B C K WC BC yB zB CC" }, F: { "1": "uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F B C bC cC dC eC yB MC fC zB", "164": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB", "196": "aB bB cB", "1220": "dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB" }, G: { "1": "xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "16": "AC gC NC hC iC", "164": "E jC kC", "260": "lC mC nC oC pC qC rC sC tC uC vC wC" }, H: { "2": "1C" }, I: { "1": "H", "16": "3B 2C 3C 4C", "164": "I 5C NC 6C 7C" }, J: { "16": "D", "164": "A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q HD 1B 2B ID JD", "164": "I 8C 9C AD BD CD BC DD ED FD GD" }, Q: { "1220": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "548": "LD" } }, B: 5, C: ":is() CSS pseudo-class", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-math-functions.js
var require_css_math_functions = __commonJS({
  "node_modules/caniuse-lite/data/features/css-math-functions.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB QC RC" }, D: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB" }, E: { "1": "L G CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A B SC AC TC UC VC WC BC", "132": "C K yB zB" }, F: { "1": "mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB bC cC dC eC yB MC fC zB" }, G: { "1": "wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC pC", "132": "qC rC sC tC uC vC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q ED FD GD HD 1B 2B ID JD", "2": "I 8C 9C AD BD CD BC DD" }, Q: { "2": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "2": "LD" } }, B: 5, C: "CSS math functions min(), max() and clamp()", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-media-interaction.js
var require_css_media_interaction = __commonJS({
  "node_modules/caniuse-lite/data/features/css-media-interaction.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB QC RC" }, D: { "1": "0 1 2 3 4 PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB" }, E: { "1": "F A B C K L G WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E SC AC TC UC VC" }, F: { "1": "CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB bC cC dC eC yB MC fC zB" }, G: { "1": "lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "2": "LD" } }, B: 4, C: "Media Queries: interaction media features", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-media-range-syntax.js
var require_css_media_range_syntax = __commonJS({
  "node_modules/caniuse-lite/data/features/css-media-range-syntax.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 s t u v w x y z H n", "2": "C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m" }, C: { "1": "0 1 2 3 4 jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB QC RC" }, D: { "1": "0 1 2 3 4 s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m" }, E: { "1": "IC JC KC 2B LC aC", "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC" }, F: { "1": "a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z bC cC dC eC yB MC fC zB" }, G: { "1": "IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "1": "o p q", "2": "I 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "2": "KD" }, S: { "1": "MD", "2": "LD" } }, B: 4, C: "Media Queries: Range Syntax", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-media-resolution.js
var require_css_media_resolution = __commonJS({
  "node_modules/caniuse-lite/data/features/css-media-resolution.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E OC", "132": "F A B" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "1028": "C K L G M N O" }, C: { "1": "0 1 2 3 4 iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "PC 3B", "260": "5 I J D E F A B C K L G QC RC", "1028": "6 7 8 9 M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B" }, D: { "1": "0 1 2 3 4 oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "548": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB", "1028": "DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB" }, E: { "1": "1B FC GC HC IC JC KC 2B LC aC", "2": "SC AC", "548": "5 I J D E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC" }, F: { "1": "dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m zB", "2": "F", "548": "B C bC cC dC eC yB MC fC", "1028": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB" }, G: { "1": "1B FC GC HC IC JC KC 2B LC", "16": "AC", "548": "E gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C" }, H: { "132": "1C" }, I: { "1": "H", "16": "2C 3C", "548": "3B I 4C 5C NC", "1028": "6C 7C" }, J: { "548": "D A" }, K: { "1": "r zB", "548": "A B C yB MC" }, L: { "1": "H" }, M: { "1": "n" }, N: { "132": "A B" }, O: { "1": "0B" }, P: { "1": "o p q BC DD ED FD GD HD 1B 2B ID JD", "1028": "I 8C 9C AD BD CD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 4, C: "Media Queries: resolution feature", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-media-scripting.js
var require_css_media_scripting = __commonJS({
  "node_modules/caniuse-lite/data/features/css-media-scripting.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "2": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "2": "A B C r yB MC zB" }, L: { "2": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "2": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "2": "KD" }, S: { "2": "LD MD" } }, B: 5, C: "Media Queries: scripting media feature", D: false };
  }
});

// node_modules/caniuse-lite/data/features/css-mediaqueries.js
var require_css_mediaqueries = __commonJS({
  "node_modules/caniuse-lite/data/features/css-mediaqueries.js"(exports, module2) {
    module2.exports = { A: { A: { "8": "J D E OC", "129": "F A B" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC", "2": "PC 3B" }, D: { "1": "0 1 2 3 4 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "129": "5 6 7 8 9 I J D E F A B C K L G M N O o p q" }, E: { "1": "D E F A B C K L G UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "129": "5 I J TC", "388": "SC AC" }, F: { "1": "6 7 8 9 B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB", "2": "F" }, G: { "1": "E jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "129": "AC gC NC hC iC" }, H: { "1": "1C" }, I: { "1": "H 6C 7C", "129": "3B I 2C 3C 4C 5C NC" }, J: { "1": "D A" }, K: { "1": "A B C r yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "129": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 2, C: "CSS3 Media Queries", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-mixblendmode.js
var require_css_mixblendmode = __commonJS({
  "node_modules/caniuse-lite/data/features/css-mixblendmode.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB QC RC" }, D: { "1": "0 1 2 3 4 PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB", "194": "DB EB FB GB HB IB JB KB LB MB NB OB" }, E: { "2": "5 I J D SC AC TC UC", "260": "E F A B C K L G VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB bC cC dC eC yB MC fC zB" }, G: { "2": "AC gC NC hC iC jC", "260": "E kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 4, C: "Blending of HTML/SVG elements", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-motion-paths.js
var require_css_motion_paths = __commonJS({
  "node_modules/caniuse-lite/data/features/css-motion-paths.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB QC RC" }, D: { "1": "0 1 2 3 4 UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB", "194": "RB SB TB" }, E: { "1": "1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC" }, F: { "1": "HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB bC cC dC eC yB MC fC zB", "194": "EB FB GB" }, G: { "1": "1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "2": "LD" } }, B: 5, C: "CSS Motion Path", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-namespaces.js
var require_css_namespaces = __commonJS({
  "node_modules/caniuse-lite/data/features/css-namespaces.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "F A B", "2": "J D E OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "5 I J D E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "16": "SC AC" }, F: { "1": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB" }, G: { "1": "E NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "16": "AC gC" }, H: { "1": "1C" }, I: { "1": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "1": "D A" }, K: { "1": "A B C r yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 2, C: "CSS namespaces", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-nesting.js
var require_css_nesting = __commonJS({
  "node_modules/caniuse-lite/data/features/css-nesting.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "2": "C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w", "194": "x y z", "516": "0 1 2 3 4 H n" }, C: { "1": "H n 7B 8B 9B", "2": "0 1 2 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z QC RC", "322": "3 4" }, D: { "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w", "194": "x y z", "516": "0 1 2 3 4 H n 7B 8B 9B" }, E: { "1": "aC", "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC", "516": "JC KC 2B LC" }, F: { "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d bC cC dC eC yB MC fC zB", "194": "e f g", "516": "h i j k l m" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC", "516": "JC KC 2B LC" }, H: { "2": "1C" }, I: { "2": "3B I 2C 3C 4C 5C NC 6C 7C", "516": "H" }, J: { "2": "D A" }, K: { "2": "A B C r yB MC zB" }, L: { "516": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "2": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "2": "KD" }, S: { "2": "LD MD" } }, B: 5, C: "CSS Nesting", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-not-sel-list.js
var require_css_not_sel_list = __commonJS({
  "node_modules/caniuse-lite/data/features/css-not-sel-list.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O Q R S T U V W", "16": "P" }, C: { "1": "0 1 2 3 4 T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S QC RC" }, D: { "1": "0 1 2 3 4 X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W" }, E: { "1": "F A B C K L G WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E SC AC TC UC VC" }, F: { "1": "uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB bC cC dC eC yB MC fC zB" }, G: { "1": "lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q HD 1B 2B ID JD", "2": "I 8C 9C AD BD CD BC DD ED FD GD" }, Q: { "2": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "2": "LD" } }, B: 5, C: "selector list argument of :not()", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-nth-child-of.js
var require_css_nth_child_of = __commonJS({
  "node_modules/caniuse-lite/data/features/css-nth-child-of.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 z H n", "2": "C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y" }, C: { "1": "1 2 3 4 H n 7B 8B 9B", "2": "0 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z QC RC" }, D: { "1": "0 1 2 3 4 z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y" }, E: { "1": "F A B C K L G WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E SC AC TC UC VC" }, F: { "1": "h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g bC cC dC eC yB MC fC zB" }, G: { "1": "lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "2": "A B C r yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "1": "q", "2": "I o p 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "2": "KD" }, S: { "2": "LD MD" } }, B: 5, C: "selector list argument of :nth-child and :nth-last-child CSS pseudo-classes", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-opacity.js
var require_css_opacity = __commonJS({
  "node_modules/caniuse-lite/data/features/css-opacity.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "F A B", "4": "J D E OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB" }, G: { "1": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "1": "1C" }, I: { "1": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "1": "D A" }, K: { "1": "A B C r yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 2, C: "CSS3 Opacity", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-optional-pseudo.js
var require_css_optional_pseudo = __commonJS({
  "node_modules/caniuse-lite/data/features/css-optional-pseudo.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "A B", "2": "J D E F OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "PC 3B QC RC" }, D: { "1": "0 1 2 3 4 6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "16": "5 I J D E F A B C K L" }, E: { "1": "5 J D E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "I SC AC" }, F: { "1": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "16": "F bC", "132": "B C cC dC eC yB MC fC zB" }, G: { "1": "E hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC" }, H: { "132": "1C" }, I: { "1": "3B I H 4C 5C NC 6C 7C", "16": "2C 3C" }, J: { "1": "D A" }, K: { "1": "r", "132": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 5, C: ":optional CSS pseudo-class", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-overflow-anchor.js
var require_css_overflow_anchor = __commonJS({
  "node_modules/caniuse-lite/data/features/css-overflow-anchor.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB QC RC" }, D: { "1": "0 1 2 3 4 eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB bC cC dC eC yB MC fC zB" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "2": "LD" } }, B: 5, C: "CSS overflow-anchor (Scroll Anchoring)", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-overflow-overlay.js
var require_css_overflow_overlay = __commonJS({
  "node_modules/caniuse-lite/data/features/css-overflow-overlay.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z", "2": "C K L G M N O", "130": "2 3 4 H n" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "1": "0 1 6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z", "16": "5 I J D E F A B C K L", "130": "2 3 4 H n 7B 8B 9B" }, E: { "1": "5 I J D E F A B TC UC VC WC BC yB", "16": "SC AC", "130": "C K L G zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i", "2": "F B C bC cC dC eC yB MC fC zB", "130": "j k l m" }, G: { "1": "E gC NC hC iC jC kC lC mC nC oC pC qC", "16": "AC", "130": "rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "1": "3B I 2C 3C 4C 5C NC 6C 7C", "130": "H" }, J: { "16": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "130": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "2": "LD MD" } }, B: 7, C: "CSS overflow: overlay", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-overflow.js
var require_css_overflow = __commonJS({
  "node_modules/caniuse-lite/data/features/css-overflow.js"(exports, module2) {
    module2.exports = { A: { A: { "388": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 Z a b c d e f g h i j k l m s t u v w x y z H n", "260": "P Q R S T U V W X Y", "388": "C K L G M N O" }, C: { "1": "0 1 2 3 4 R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "260": "5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q", "388": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB QC RC" }, D: { "1": "0 1 2 3 4 Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "260": "oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y", "388": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB" }, E: { "1": "1B FC GC HC IC JC KC 2B LC aC", "260": "L G CC XC YC DC EC 0B ZC", "388": "5 I J D E F A B C K SC AC TC UC VC WC BC yB zB" }, F: { "1": "vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "260": "dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB", "388": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB bC cC dC eC yB MC fC zB" }, G: { "1": "1B FC GC HC IC JC KC 2B LC", "260": "wC xC yC zC DC EC 0B 0C", "388": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC" }, H: { "388": "1C" }, I: { "1": "H", "388": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "388": "D A" }, K: { "1": "r", "388": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "388": "A B" }, O: { "388": "0B" }, P: { "1": "o p q HD 1B 2B ID JD", "388": "I 8C 9C AD BD CD BC DD ED FD GD" }, Q: { "388": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "388": "LD" } }, B: 5, C: "CSS overflow property", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-overscroll-behavior.js
var require_css_overscroll_behavior = __commonJS({
  "node_modules/caniuse-lite/data/features/css-overscroll-behavior.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F OC", "132": "A B" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "132": "C K L G M N", "516": "O" }, C: { "1": "0 1 2 3 4 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB QC RC" }, D: { "1": "0 1 2 3 4 lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB", "260": "jB kB" }, E: { "1": "1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A B C K L SC AC TC UC VC WC BC yB zB CC", "1090": "G XC YC DC EC 0B ZC" }, F: { "1": "aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB bC cC dC eC yB MC fC zB", "260": "YB ZB" }, G: { "1": "1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC", "1090": "yC zC DC EC 0B 0C" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "132": "A B" }, O: { "1": "0B" }, P: { "1": "o p q BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I 8C 9C AD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "2": "LD" } }, B: 5, C: "CSS overscroll-behavior", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-page-break.js
var require_css_page_break = __commonJS({
  "node_modules/caniuse-lite/data/features/css-page-break.js"(exports, module2) {
    module2.exports = { A: { A: { "388": "A B", "900": "J D E F OC" }, B: { "388": "C K L G M N O", "900": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "772": "0 1 2 3 4 lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "900": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB QC RC" }, D: { "900": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "772": "A", "900": "5 I J D E F B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "16": "F bC", "129": "B C cC dC eC yB MC fC zB", "900": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m" }, G: { "900": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "129": "1C" }, I: { "900": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "900": "D A" }, K: { "129": "A B C yB MC zB", "900": "r" }, L: { "900": "H" }, M: { "772": "n" }, N: { "388": "A B" }, O: { "900": "0B" }, P: { "900": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "900": "CC" }, R: { "900": "KD" }, S: { "772": "MD", "900": "LD" } }, B: 2, C: "CSS page-break properties", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-paged-media.js
var require_css_paged_media = __commonJS({
  "node_modules/caniuse-lite/data/features/css-paged-media.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D OC", "132": "E F A B" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "132": "C K L G M N O" }, C: { "2": "5 PC 3B I J D E F A B C K L G M N O QC RC", "132": "0 1 2 3 4 6 7 8 9 o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, D: { "1": "0 1 2 3 4 6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "16": "5 I J D E F A B C K L" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "132": "F B C bC cC dC eC yB MC fC zB" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "16": "1C" }, I: { "16": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "16": "D A" }, K: { "1": "r", "16": "A B C yB MC zB" }, L: { "1": "H" }, M: { "132": "n" }, N: { "258": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "132": "LD MD" } }, B: 5, C: "CSS Paged Media (@page)", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-paint-api.js
var require_css_paint_api = __commonJS({
  "node_modules/caniuse-lite/data/features/css-paint-api.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "1": "0 1 2 3 4 lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB" }, E: { "2": "5 I J D E F A B C SC AC TC UC VC WC BC yB", "194": "K L G zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB bC cC dC eC yB MC fC zB" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "2": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "2": "LD MD" } }, B: 4, C: "CSS Painting API", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-placeholder-shown.js
var require_css_placeholder_shown = __commonJS({
  "node_modules/caniuse-lite/data/features/css-placeholder-shown.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F OC", "292": "A B" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "PC 3B QC RC", "164": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB" }, D: { "1": "0 1 2 3 4 VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB" }, E: { "1": "F A B C K L G WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E SC AC TC UC VC" }, F: { "1": "IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB bC cC dC eC yB MC fC zB" }, G: { "1": "lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "164": "LD" } }, B: 5, C: ":placeholder-shown CSS pseudo-class", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-placeholder.js
var require_css_placeholder = __commonJS({
  "node_modules/caniuse-lite/data/features/css-placeholder.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "36": "C K L G M N O" }, C: { "1": "0 1 2 3 4 ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "33": "6 7 8 9 o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB", "130": "5 PC 3B I J D E F A B C K L G M N O QC RC" }, D: { "1": "0 1 2 3 4 fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "36": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB" }, E: { "1": "B C K L G BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "I SC AC", "36": "5 J D E F A TC UC VC WC" }, F: { "1": "SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F B C bC cC dC eC yB MC fC zB", "36": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB" }, G: { "1": "oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC", "36": "E NC hC iC jC kC lC mC nC" }, H: { "2": "1C" }, I: { "1": "H", "36": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "36": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "36": "A B" }, O: { "1": "0B" }, P: { "1": "o p q AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "36": "I 8C 9C" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "33": "LD" } }, B: 5, C: "::placeholder CSS pseudo-element", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-print-color-adjust.js
var require_css_print_color_adjust = __commonJS({
  "node_modules/caniuse-lite/data/features/css-print-color-adjust.js"(exports, module2) {
    module2.exports = { A: { D: { "2": "5 I J D E F A B C K L G M", "33": "0 1 2 3 4 6 7 8 9 N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, L: { "33": "H" }, B: { "2": "C K L G M N O", "33": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB QC RC", "33": "WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f" }, M: { "1": "n" }, A: { "2": "J D E F A B OC" }, F: { "2": "F B C bC cC dC eC yB MC fC zB", "33": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m" }, K: { "2": "A B C yB MC zB", "33": "r" }, E: { "1": "EC 0B ZC 1B FC GC HC IC JC KC 2B LC", "2": "5 I SC AC TC aC", "33": "J D E F A B C K L G UC VC WC BC yB zB CC XC YC DC" }, G: { "1": "EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC hC", "33": "E iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC" }, P: { "33": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, I: { "2": "3B I 2C 3C 4C 5C NC", "33": "H 6C 7C" } }, B: 6, C: "print-color-adjust property", D: void 0 };
  }
});

// node_modules/caniuse-lite/data/features/css-read-only-write.js
var require_css_read_only_write = __commonJS({
  "node_modules/caniuse-lite/data/features/css-read-only-write.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C" }, C: { "1": "0 1 2 3 4 xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "16": "PC", "33": "5 6 7 8 9 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB QC RC" }, D: { "1": "0 1 2 3 4 KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "16": "5 I J D E F A B C K L", "132": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB" }, E: { "1": "F A B C K L G WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "16": "SC AC", "132": "5 I J D E TC UC VC" }, F: { "1": "7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "16": "F B bC cC dC eC yB", "132": "6 C G M N O o p q MC fC zB" }, G: { "1": "lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "16": "AC gC", "132": "E NC hC iC jC kC" }, H: { "2": "1C" }, I: { "1": "H", "16": "2C 3C", "132": "3B I 4C 5C NC 6C 7C" }, J: { "1": "A", "132": "D" }, K: { "1": "r", "2": "A B yB", "132": "C MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "33": "LD" } }, B: 1, C: "CSS :read-only and :read-write selectors", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-rebeccapurple.js
var require_css_rebeccapurple = __commonJS({
  "node_modules/caniuse-lite/data/features/css-rebeccapurple.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A OC", "132": "B" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB QC RC" }, D: { "1": "0 1 2 3 4 MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB" }, E: { "1": "D E F A B C K L G VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J SC AC TC", "16": "UC" }, F: { "1": "9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 F B C G M N O o p q bC cC dC eC yB MC fC zB" }, G: { "1": "E kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC hC iC jC" }, H: { "2": "1C" }, I: { "1": "H 6C 7C", "2": "3B I 2C 3C 4C 5C NC" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 4, C: "Rebeccapurple color", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-reflections.js
var require_css_reflections = __commonJS({
  "node_modules/caniuse-lite/data/features/css-reflections.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "2": "C K L G M N O", "33": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "33": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "2": "SC AC", "33": "5 I J D E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "2": "F B C bC cC dC eC yB MC fC zB", "33": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m" }, G: { "33": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "33": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "33": "D A" }, K: { "2": "A B C yB MC zB", "33": "r" }, L: { "33": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "33": "0B" }, P: { "33": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "33": "CC" }, R: { "33": "KD" }, S: { "2": "LD MD" } }, B: 7, C: "CSS Reflections", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-regions.js
var require_css_regions = __commonJS({
  "node_modules/caniuse-lite/data/features/css-regions.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F OC", "420": "A B" }, B: { "2": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "420": "C K L G M N O" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "2": "0 1 2 3 4 5 I J D E F A B C K L JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "36": "G M N O", "66": "6 7 8 9 o p q AB BB CB DB EB FB GB HB IB" }, E: { "2": "5 I J C K L G SC AC TC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "33": "D E F A B UC VC WC BC" }, F: { "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB" }, G: { "2": "AC gC NC hC iC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "33": "E jC kC lC mC nC oC pC" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "2": "A B C r yB MC zB" }, L: { "2": "H" }, M: { "2": "n" }, N: { "420": "A B" }, O: { "2": "0B" }, P: { "2": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "2": "KD" }, S: { "2": "LD MD" } }, B: 5, C: "CSS Regions", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-relative-colors.js
var require_css_relative_colors = __commonJS({
  "node_modules/caniuse-lite/data/features/css-relative-colors.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "2": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H", "194": "n" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "1": "7B 8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H", "194": "n" }, E: { "1": "IC JC KC 2B LC aC", "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC" }, F: { "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB" }, G: { "1": "IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "2": "A B C r yB MC zB" }, L: { "2": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "2": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "2": "KD" }, S: { "2": "LD MD" } }, B: 5, C: "CSS Relative colors", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-repeating-gradients.js
var require_css_repeating_gradients = __commonJS({
  "node_modules/caniuse-lite/data/features/css-repeating-gradients.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "A B", "2": "J D E F OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 6 7 8 9 M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "PC 3B QC", "33": "5 I J D E F A B C K L G RC" }, D: { "1": "0 1 2 3 4 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 I J D E F", "33": "6 7 8 9 A B C K L G M N O o p q" }, E: { "1": "D E F A B C K L G UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I SC AC", "33": "J TC" }, F: { "1": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m zB", "2": "F B bC cC dC eC", "33": "C fC", "36": "yB MC" }, G: { "1": "E jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC", "33": "hC iC" }, H: { "2": "1C" }, I: { "1": "H 6C 7C", "2": "3B 2C 3C 4C", "33": "I 5C NC" }, J: { "1": "A", "2": "D" }, K: { "1": "r zB", "2": "A B", "33": "C", "36": "yB MC" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 4, C: "CSS Repeating Gradients", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-resize.js
var require_css_resize = __commonJS({
  "node_modules/caniuse-lite/data/features/css-resize.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "PC 3B QC RC", "33": "I" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "5 I J D E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "SC AC" }, F: { "1": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F B C bC cC dC eC yB MC fC", "132": "zB" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "2": "LD" } }, B: 2, C: "CSS resize property", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-revert-value.js
var require_css_revert_value = __commonJS({
  "node_modules/caniuse-lite/data/features/css-revert-value.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O P Q R S" }, C: { "1": "0 1 2 3 4 nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB QC RC" }, D: { "1": "0 1 2 3 4 T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S" }, E: { "1": "A B C K L G WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F SC AC TC UC VC" }, F: { "1": "r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB bC cC dC eC yB MC fC zB" }, G: { "1": "mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q GD HD 1B 2B ID JD", "2": "I 8C 9C AD BD CD BC DD ED FD" }, Q: { "2": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "2": "LD" } }, B: 4, C: "CSS revert value", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-rrggbbaa.js
var require_css_rrggbbaa = __commonJS({
  "node_modules/caniuse-lite/data/features/css-rrggbbaa.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB QC RC" }, D: { "1": "0 1 2 3 4 iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB", "194": "aB bB cB dB eB fB gB 4B hB 5B" }, E: { "1": "A B C K L G BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F SC AC TC UC VC WC" }, F: { "1": "aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB bC cC dC eC yB MC fC zB", "194": "NB OB PB QB RB SB TB UB VB WB XB YB ZB" }, G: { "1": "nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I", "194": "8C 9C AD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "2": "LD" } }, B: 4, C: "#rrggbbaa hex color notation", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-scroll-behavior.js
var require_css_scroll_behavior = __commonJS({
  "node_modules/caniuse-lite/data/features/css-scroll-behavior.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "2": "C K L G M N O", "129": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB QC RC" }, D: { "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB", "129": "0 1 2 3 4 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "450": "PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB" }, E: { "1": "EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A B C K SC AC TC UC VC WC BC yB zB CC", "578": "L G XC YC DC" }, F: { "2": "6 7 8 9 F B C G M N O o p q AB BB bC cC dC eC yB MC fC zB", "129": "WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "450": "CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB" }, G: { "1": "EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC", "578": "yC zC DC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "129": "0B" }, P: { "1": "o p q BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I 8C 9C AD" }, Q: { "129": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "2": "LD" } }, B: 5, C: "CSS Scroll-behavior", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-scroll-timeline.js
var require_css_scroll_timeline = __commonJS({
  "node_modules/caniuse-lite/data/features/css-scroll-timeline.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "2": "C K L G M N O P Q R S T U V W X Y", "194": "0 1 2 3 4 Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T", "194": "0 1 2 3 4 X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "322": "U V W" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB bC cC dC eC yB MC fC zB", "194": "uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "322": "r tB" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "2": "A B C r yB MC zB" }, L: { "2": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "2": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "2": "KD" }, S: { "2": "LD MD" } }, B: 7, C: "CSS @scroll-timeline", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-scrollbar.js
var require_css_scrollbar = __commonJS({
  "node_modules/caniuse-lite/data/features/css-scrollbar.js"(exports, module2) {
    module2.exports = { A: { A: { "132": "J D E F A B OC" }, B: { "2": "C K L G M N O", "292": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB QC RC", "3138": "jB", "4097": "0 1 2 3 4 kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, D: { "292": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "16": "5 I SC AC", "292": "J D E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "2": "F B C bC cC dC eC yB MC fC zB", "292": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m" }, G: { "2": "xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "16": "AC gC NC hC iC", "292": "jC", "804": "E kC lC mC nC oC pC qC rC sC tC uC vC wC" }, H: { "2": "1C" }, I: { "16": "2C 3C", "292": "3B I H 4C 5C NC 6C 7C" }, J: { "292": "D A" }, K: { "2": "A B C yB MC zB", "292": "r" }, L: { "292": "H" }, M: { "4097": "n" }, N: { "2": "A B" }, O: { "292": "0B" }, P: { "292": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "292": "CC" }, R: { "292": "KD" }, S: { "2": "LD MD" } }, B: 7, C: "CSS scrollbar styling", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-sel2.js
var require_css_sel2 = __commonJS({
  "node_modules/caniuse-lite/data/features/css-sel2.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "D E F A B", "2": "OC", "8": "J" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB" }, G: { "1": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "1": "1C" }, I: { "1": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "1": "D A" }, K: { "1": "A B C r yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 2, C: "CSS 2.1 selectors", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-sel3.js
var require_css_sel3 = __commonJS({
  "node_modules/caniuse-lite/data/features/css-sel3.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "F A B", "2": "OC", "8": "J", "132": "D E" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC", "2": "PC 3B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "5 I J D E F A B C K L G AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "SC" }, F: { "1": "6 7 8 9 B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB", "2": "F" }, G: { "1": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "1": "1C" }, I: { "1": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "1": "D A" }, K: { "1": "A B C r yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 2, C: "CSS3 selectors", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-selection.js
var require_css_selection = __commonJS({
  "node_modules/caniuse-lite/data/features/css-selection.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "F A B", "2": "J D E OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "33": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B QC RC" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "6 7 8 9 B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB", "2": "F" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "1": "H 6C 7C", "2": "3B I 2C 3C 4C 5C NC" }, J: { "1": "A", "2": "D" }, K: { "1": "C r MC zB", "16": "A B yB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "33": "LD" } }, B: 5, C: "::selection CSS pseudo-element", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-shapes.js
var require_css_shapes = __commonJS({
  "node_modules/caniuse-lite/data/features/css-shapes.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB QC RC", "322": "ZB aB bB cB dB eB fB gB 4B hB 5B" }, D: { "1": "0 1 2 3 4 LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB", "194": "IB JB KB" }, E: { "1": "B C K L G BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D SC AC TC UC", "33": "E F A VC WC" }, F: { "1": "8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 F B C G M N O o p q bC cC dC eC yB MC fC zB" }, G: { "1": "oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC hC iC jC", "33": "E kC lC mC nC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "2": "LD" } }, B: 4, C: "CSS Shapes Level 1", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-snappoints.js
var require_css_snappoints = __commonJS({
  "node_modules/caniuse-lite/data/features/css-snappoints.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F OC", "6308": "A", "6436": "B" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "6436": "C K L G M N O" }, C: { "1": "0 1 2 3 4 oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB QC RC", "2052": "NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB" }, D: { "1": "0 1 2 3 4 pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB", "8258": "mB nB oB" }, E: { "1": "B C K L G yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E SC AC TC UC VC", "3108": "F A WC BC" }, F: { "1": "kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB bC cC dC eC yB MC fC zB", "8258": "cB dB eB fB gB hB iB jB" }, G: { "1": "pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC", "3108": "lC mC nC oC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q BC DD ED FD GD HD 1B 2B ID JD", "2": "I 8C 9C AD BD CD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "2052": "LD" } }, B: 4, C: "CSS Scroll Snap", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-sticky.js
var require_css_sticky = __commonJS({
  "node_modules/caniuse-lite/data/features/css-sticky.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G", "1028": "P Q R S T U V W X Y Z", "4100": "M N O" }, C: { "1": "0 1 2 3 4 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q QC RC", "194": "AB BB CB DB EB FB", "516": "GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB" }, D: { "1": "0 1 2 3 4 a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 I J D E F A B C K L G M N O o p q LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB", "322": "7 8 9 AB BB CB DB EB FB GB HB IB JB KB aB bB cB dB", "1028": "eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z" }, E: { "1": "K L G CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J SC AC TC", "33": "E F A B C VC WC BC yB zB", "2084": "D UC" }, F: { "1": "xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB bC cC dC eC yB MC fC zB", "322": "NB OB PB", "1028": "QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB" }, G: { "1": "tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC hC", "33": "E kC lC mC nC oC pC qC rC sC", "2084": "iC jC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I 8C" }, Q: { "1028": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "516": "LD" } }, B: 5, C: "CSS position:sticky", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-subgrid.js
var require_css_subgrid = __commonJS({
  "node_modules/caniuse-lite/data/features/css-subgrid.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "H n", "2": "0 1 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z", "194": "2 3 4" }, C: { "1": "0 1 2 3 4 rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB QC RC" }, D: { "1": "H n 7B 8B 9B", "2": "0 1 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z", "194": "2 3 4" }, E: { "1": "1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC" }, F: { "1": "m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i bC cC dC eC yB MC fC zB", "194": "j k l" }, G: { "1": "1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "2": "A B C r yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "2": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "2": "KD" }, S: { "1": "MD", "2": "LD" } }, B: 4, C: "CSS Subgrid", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-supports-api.js
var require_css_supports_api = __commonJS({
  "node_modules/caniuse-lite/data/features/css-supports-api.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "260": "C K L G M N O" }, C: { "1": "0 1 2 3 4 dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 PC 3B I J D E F A B C K L G M N O QC RC", "66": "o p", "260": "7 8 9 q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB" }, D: { "1": "0 1 2 3 4 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB", "260": "CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB" }, E: { "1": "F A B C K L G WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E SC AC TC UC VC" }, F: { "1": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F B C bC cC dC eC yB MC fC", "132": "zB" }, G: { "1": "lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC" }, H: { "132": "1C" }, I: { "1": "H 6C 7C", "2": "3B I 2C 3C 4C 5C NC" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC", "132": "zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 4, C: "CSS.supports() API", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-table.js
var require_css_table = __commonJS({
  "node_modules/caniuse-lite/data/features/css-table.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "E F A B", "2": "J D OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC", "132": "PC" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB" }, G: { "1": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "1": "1C" }, I: { "1": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "1": "D A" }, K: { "1": "A B C r yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 2, C: "CSS Table display", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-text-align-last.js
var require_css_text_align_last = __commonJS({
  "node_modules/caniuse-lite/data/features/css-text-align-last.js"(exports, module2) {
    module2.exports = { A: { A: { "132": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "4": "C K L G M N O" }, C: { "1": "0 1 2 3 4 XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 PC 3B I J D E F A B QC RC", "33": "6 7 8 9 C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB" }, D: { "1": "0 1 2 3 4 VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB", "322": "JB KB LB MB NB OB PB QB RB SB TB UB" }, E: { "1": "1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC" }, F: { "1": "IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 F B C G M N O o p bC cC dC eC yB MC fC zB", "578": "7 8 9 q AB BB CB DB EB FB GB HB" }, G: { "1": "1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "132": "A B" }, O: { "1": "0B" }, P: { "1": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "33": "LD" } }, B: 4, C: "CSS3 text-align-last", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-text-box-trim.js
var require_css_text_box_trim = __commonJS({
  "node_modules/caniuse-lite/data/features/css-text-box-trim.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "2": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "aC", "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC", "194": "IC JC KC 2B LC" }, F: { "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC", "194": "IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "2": "A B C r yB MC zB" }, L: { "2": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "2": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "2": "KD" }, S: { "2": "LD MD" } }, B: 5, C: "CSS text-box-trim & text-box-edge", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-text-indent.js
var require_css_text_indent = __commonJS({
  "node_modules/caniuse-lite/data/features/css-text-indent.js"(exports, module2) {
    module2.exports = { A: { A: { "132": "J D E F A B OC" }, B: { "132": "C K L G M N O", "388": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "132": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "132": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB", "388": "0 1 2 3 4 MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "1B FC GC HC IC JC KC 2B LC aC", "132": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC" }, F: { "132": "6 7 8 F B C G M N O o p q bC cC dC eC yB MC fC zB", "388": "9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m" }, G: { "1": "1B FC GC HC IC JC KC 2B LC", "132": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C" }, H: { "132": "1C" }, I: { "132": "3B I 2C 3C 4C 5C NC 6C 7C", "388": "H" }, J: { "132": "D A" }, K: { "132": "A B C yB MC zB", "388": "r" }, L: { "388": "H" }, M: { "132": "n" }, N: { "132": "A B" }, O: { "388": "0B" }, P: { "132": "I", "388": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "388": "CC" }, R: { "388": "KD" }, S: { "132": "LD MD" } }, B: 4, C: "CSS text-indent", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-text-justify.js
var require_css_text_justify = __commonJS({
  "node_modules/caniuse-lite/data/features/css-text-justify.js"(exports, module2) {
    module2.exports = { A: { A: { "16": "J D OC", "132": "E F A B" }, B: { "132": "C K L G M N O", "322": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB QC RC", "1025": "0 1 2 3 4 dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "1602": "cB" }, D: { "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB", "322": "0 1 2 3 4 RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB bC cC dC eC yB MC fC zB", "322": "EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "2": "3B I 2C 3C 4C 5C NC 6C 7C", "322": "H" }, J: { "2": "D A" }, K: { "2": "A B C yB MC zB", "322": "r" }, L: { "322": "H" }, M: { "1025": "n" }, N: { "132": "A B" }, O: { "322": "0B" }, P: { "2": "I", "322": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "322": "CC" }, R: { "322": "KD" }, S: { "2": "LD", "1025": "MD" } }, B: 4, C: "CSS text-justify", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-text-orientation.js
var require_css_text_orientation = __commonJS({
  "node_modules/caniuse-lite/data/features/css-text-orientation.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB QC RC", "194": "MB NB OB" }, D: { "1": "0 1 2 3 4 WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB" }, E: { "1": "L G XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F SC AC TC UC VC WC", "16": "A", "33": "B C K BC yB zB CC" }, F: { "1": "JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB bC cC dC eC yB MC fC zB" }, G: { "1": "nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 2, C: "CSS text-orientation", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-text-spacing.js
var require_css_text_spacing = __commonJS({
  "node_modules/caniuse-lite/data/features/css-text-spacing.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D OC", "161": "E F A B" }, B: { "2": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "161": "C K L G M N O" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "2": "A B C r yB MC zB" }, L: { "2": "H" }, M: { "2": "n" }, N: { "16": "A B" }, O: { "2": "0B" }, P: { "2": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "2": "KD" }, S: { "2": "LD MD" } }, B: 5, C: "CSS Text 4 text-spacing", D: false };
  }
});

// node_modules/caniuse-lite/data/features/css-text-wrap-balance.js
var require_css_text_wrap_balance = __commonJS({
  "node_modules/caniuse-lite/data/features/css-text-wrap-balance.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "2 3 4 H n", "2": "0 1 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z" }, C: { "1": "8B 9B", "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B QC RC" }, D: { "1": "2 3 4 H n 7B 8B 9B", "2": "0 1 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h bC cC dC eC yB MC fC zB" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "2": "A B C r yB MC zB" }, L: { "1": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "2": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "2": "KD" }, S: { "2": "LD MD" } }, B: 5, C: "CSS text-wrap: balance", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-textshadow.js
var require_css_textshadow = __commonJS({
  "node_modules/caniuse-lite/data/features/css-textshadow.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F OC", "129": "A B" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "129": "C K L G M N O" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC", "2": "PC 3B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "5 I J D E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "260": "SC AC" }, F: { "1": "6 7 8 9 B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB", "2": "F" }, G: { "1": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "4": "1C" }, I: { "1": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "1": "A", "4": "D" }, K: { "1": "A B C r yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "129": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 4, C: "CSS3 Text-shadow", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-touch-action.js
var require_css_touch_action = __commonJS({
  "node_modules/caniuse-lite/data/features/css-touch-action.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "B", "2": "J D E F OC", "289": "A" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB QC RC", "194": "DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB", "1025": "aB bB cB dB eB" }, D: { "1": "0 1 2 3 4 KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 F B C G M N O o p q bC cC dC eC yB MC fC zB" }, G: { "1": "tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC", "516": "mC nC oC pC qC rC sC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "B", "289": "A" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "194": "LD" } }, B: 2, C: "CSS touch-action property", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-transitions.js
var require_css_transitions = __commonJS({
  "node_modules/caniuse-lite/data/features/css-transitions.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "A B", "2": "J D E F OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 6 7 8 9 M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "PC 3B QC RC", "33": "5 J D E F A B C K L G", "164": "I" }, D: { "1": "0 1 2 3 4 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "33": "5 6 7 8 9 I J D E F A B C K L G M N O o p q" }, E: { "1": "D E F A B C K L G UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "33": "J TC", "164": "5 I SC AC" }, F: { "1": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m zB", "2": "F bC cC", "33": "C", "164": "B dC eC yB MC fC" }, G: { "1": "E jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "33": "iC", "164": "AC gC NC hC" }, H: { "2": "1C" }, I: { "1": "H 6C 7C", "33": "3B I 2C 3C 4C 5C NC" }, J: { "1": "A", "33": "D" }, K: { "1": "r zB", "33": "C", "164": "A B yB MC" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 5, C: "CSS3 Transitions", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-unicode-bidi.js
var require_css_unicode_bidi = __commonJS({
  "node_modules/caniuse-lite/data/features/css-unicode-bidi.js"(exports, module2) {
    module2.exports = { A: { A: { "132": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "132": "C K L G M N O" }, C: { "1": "0 1 2 3 4 YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "33": "6 7 8 9 N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB", "132": "5 PC 3B I J D E F QC RC", "292": "A B C K L G M" }, D: { "1": "0 1 2 3 4 WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "132": "5 I J D E F A B C K L G M", "548": "6 7 8 9 N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB" }, E: { "132": "5 I J D E SC AC TC UC VC", "548": "F A B C K L G WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "132": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB" }, G: { "132": "E AC gC NC hC iC jC kC", "548": "lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "16": "1C" }, I: { "1": "H", "16": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "16": "D A" }, K: { "1": "r", "16": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "132": "A B" }, O: { "1": "0B" }, P: { "1": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "16": "I" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "33": "LD" } }, B: 4, C: "CSS unicode-bidi property", D: false };
  }
});

// node_modules/caniuse-lite/data/features/css-unset-value.js
var require_css_unset_value = __commonJS({
  "node_modules/caniuse-lite/data/features/css-unset-value.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C" }, C: { "1": "0 1 2 3 4 BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB QC RC" }, D: { "1": "0 1 2 3 4 PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB" }, E: { "1": "A B C K L G WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F SC AC TC UC VC" }, F: { "1": "CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB bC cC dC eC yB MC fC zB" }, G: { "1": "mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 2, C: "CSS unset value", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-variables.js
var require_css_variables = __commonJS({
  "node_modules/caniuse-lite/data/features/css-variables.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L", "260": "G" }, C: { "1": "0 1 2 3 4 FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB QC RC" }, D: { "1": "0 1 2 3 4 XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB", "194": "WB" }, E: { "1": "A B C K L G BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F SC AC TC UC VC", "260": "WC" }, F: { "1": "KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB bC cC dC eC yB MC fC zB", "194": "JB" }, G: { "1": "nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC", "260": "mC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 4, C: "CSS Variables (Custom Properties)", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-when-else.js
var require_css_when_else = __commonJS({
  "node_modules/caniuse-lite/data/features/css-when-else.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "2": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "2": "A B C r yB MC zB" }, L: { "2": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "2": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "2": "KD" }, S: { "2": "LD MD" } }, B: 5, C: "CSS @when / @else conditional rules", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-widows-orphans.js
var require_css_widows_orphans = __commonJS({
  "node_modules/caniuse-lite/data/features/css-widows-orphans.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "A B", "2": "J D OC", "129": "E F" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "1": "0 1 2 3 4 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 I J D E F A B C K L G M N O o p q" }, E: { "1": "D E F A B C K L G VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J SC AC TC UC" }, F: { "1": "6 7 8 9 C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m zB", "129": "F B bC cC dC eC yB MC fC" }, G: { "1": "E jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC hC iC" }, H: { "1": "1C" }, I: { "1": "H 6C 7C", "2": "3B I 2C 3C 4C 5C NC" }, J: { "2": "D A" }, K: { "1": "r zB", "2": "A B C yB MC" }, L: { "1": "H" }, M: { "2": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "2": "LD MD" } }, B: 2, C: "CSS widows & orphans", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-width-stretch.js
var require_css_width_stretch = __commonJS({
  "node_modules/caniuse-lite/data/features/css-width-stretch.js"(exports, module2) {
    module2.exports = { A: { D: { "2": "5 6 I J D E F A B C K L G M N O o p", "33": "0 1 2 3 4 7 8 9 q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, L: { "33": "H" }, B: { "2": "C K L G M N O", "33": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "2": "PC", "33": "0 1 2 3 4 5 6 7 8 9 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, M: { "33": "n" }, A: { "2": "J D E F A B OC" }, F: { "2": "F B C bC cC dC eC yB MC fC zB", "33": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m" }, K: { "2": "A B C yB MC zB", "33": "r" }, E: { "2": "5 I J SC AC TC UC aC", "33": "D E F A B C K L G VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC" }, G: { "2": "AC gC NC hC iC", "33": "E jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, P: { "2": "I", "33": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, I: { "2": "3B I 2C 3C 4C 5C NC", "33": "H 6C 7C" } }, B: 6, C: "width: stretch property", D: void 0 };
  }
});

// node_modules/caniuse-lite/data/features/css-writing-mode.js
var require_css_writing_mode = __commonJS({
  "node_modules/caniuse-lite/data/features/css-writing-mode.js"(exports, module2) {
    module2.exports = { A: { A: { "132": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB QC RC", "322": "KB LB MB NB OB" }, D: { "1": "0 1 2 3 4 WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 I J", "16": "D", "33": "6 7 8 9 E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB" }, E: { "1": "B C K L G yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "I SC AC", "16": "5", "33": "J D E F A TC UC VC WC BC" }, F: { "1": "JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F B C bC cC dC eC yB MC fC zB", "33": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB" }, G: { "1": "pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "16": "AC gC NC", "33": "E hC iC jC kC lC mC nC oC" }, H: { "2": "1C" }, I: { "1": "H", "2": "2C 3C 4C", "33": "3B I 5C NC 6C 7C" }, J: { "33": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "36": "A B" }, O: { "1": "0B" }, P: { "1": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "33": "I" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 2, C: "CSS writing-mode property", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css-zoom.js
var require_css_zoom = __commonJS({
  "node_modules/caniuse-lite/data/features/css-zoom.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "J D OC", "129": "E F A B" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "5 I J D E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "SC AC" }, F: { "1": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F B C bC cC dC eC yB MC fC zB" }, G: { "1": "E gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC" }, H: { "2": "1C" }, I: { "1": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "1": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "2": "n" }, N: { "129": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "2": "LD MD" } }, B: 7, C: "CSS zoom", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css3-attr.js
var require_css3_attr = __commonJS({
  "node_modules/caniuse-lite/data/features/css3-attr.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "2": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "2": "A B C r yB MC zB" }, L: { "2": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "2": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "2": "KD" }, S: { "2": "LD MD" } }, B: 7, C: "CSS3 attr() function for all properties", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css3-boxsizing.js
var require_css3_boxsizing = __commonJS({
  "node_modules/caniuse-lite/data/features/css3-boxsizing.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "E F A B", "8": "J D OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "33": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB QC RC" }, D: { "1": "0 1 2 3 4 6 7 8 9 A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "33": "5 I J D E F" }, E: { "1": "J D E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "33": "5 I SC AC" }, F: { "1": "6 7 8 9 B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB", "2": "F" }, G: { "1": "E hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "33": "AC gC NC" }, H: { "1": "1C" }, I: { "1": "I H 5C NC 6C 7C", "33": "3B 2C 3C 4C" }, J: { "1": "A", "33": "D" }, K: { "1": "A B C r yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 5, C: "CSS3 Box-sizing", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css3-colors.js
var require_css3_colors = __commonJS({
  "node_modules/caniuse-lite/data/features/css3-colors.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "F A B", "2": "J D E OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC", "4": "PC" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "6 7 8 9 B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m cC dC eC yB MC fC zB", "2": "F", "4": "bC" }, G: { "1": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "1": "1C" }, I: { "1": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "1": "D A" }, K: { "1": "A B C r yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 2, C: "CSS3 Colors", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css3-cursors-grab.js
var require_css3_cursors_grab = __commonJS({
  "node_modules/caniuse-lite/data/features/css3-cursors-grab.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L" }, C: { "1": "0 1 2 3 4 BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "33": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB QC RC" }, D: { "1": "0 1 2 3 4 oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "33": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB" }, E: { "1": "B C K L G yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "33": "5 I J D E F A SC AC TC UC VC WC BC" }, F: { "1": "C dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m fC zB", "2": "F B bC cC dC eC yB MC", "33": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "33": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "2": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "2": "LD MD" } }, B: 2, C: "CSS grab & grabbing cursors", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css3-cursors-newer.js
var require_css3_cursors_newer = __commonJS({
  "node_modules/caniuse-lite/data/features/css3-cursors-newer.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "33": "5 6 7 PC 3B I J D E F A B C K L G M N O o p q QC RC" }, D: { "1": "0 1 2 3 4 LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "33": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB" }, E: { "1": "F A B C K L G WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "33": "5 I J D E SC AC TC UC VC" }, F: { "1": "8 9 C AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m fC zB", "2": "F B bC cC dC eC yB MC", "33": "6 7 G M N O o p q" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "33": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "2": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "2": "LD MD" } }, B: 2, C: "CSS3 Cursors: zoom-in & zoom-out", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css3-cursors.js
var require_css3_cursors = __commonJS({
  "node_modules/caniuse-lite/data/features/css3-cursors.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "F A B", "132": "J D E OC" }, B: { "1": "0 1 2 3 4 L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "260": "C K" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "4": "PC 3B QC RC" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "4": "I" }, E: { "1": "5 J D E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "4": "I SC AC" }, F: { "1": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "260": "F B C bC cC dC eC yB MC fC zB" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D", "16": "A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "2": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "2": "LD MD" } }, B: 2, C: "CSS3 Cursors (original values)", D: true };
  }
});

// node_modules/caniuse-lite/data/features/css3-tabsize.js
var require_css3_tabsize = __commonJS({
  "node_modules/caniuse-lite/data/features/css3-tabsize.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "PC 3B QC RC", "33": "bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z", "164": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB" }, D: { "1": "0 1 2 3 4 QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 I J D E F A B C K L G M N O o", "132": "7 8 9 p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB" }, E: { "1": "L G CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J SC AC TC", "132": "D E F A B C K UC VC WC BC yB zB" }, F: { "1": "DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F bC cC dC", "132": "6 7 8 9 G M N O o p q AB BB CB", "164": "B C eC yB MC fC zB" }, G: { "1": "wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC hC iC", "132": "E jC kC lC mC nC oC pC qC rC sC tC uC vC" }, H: { "164": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC", "132": "6C 7C" }, J: { "132": "D A" }, K: { "1": "r", "2": "A", "164": "B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "164": "LD MD" } }, B: 4, C: "CSS3 tab-size", D: true };
  }
});

// node_modules/caniuse-lite/data/features/currentcolor.js
var require_currentcolor = __commonJS({
  "node_modules/caniuse-lite/data/features/currentcolor.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "F A B", "2": "J D E OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "5 I J D E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "SC AC" }, F: { "1": "6 7 8 9 B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB", "2": "F" }, G: { "1": "E gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "16": "AC" }, H: { "1": "1C" }, I: { "1": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "1": "D A" }, K: { "1": "A B C r yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 2, C: "CSS currentColor value", D: true };
  }
});

// node_modules/caniuse-lite/data/features/custom-elements.js
var require_custom_elements = __commonJS({
  "node_modules/caniuse-lite/data/features/custom-elements.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F OC", "8": "A B" }, B: { "1": "P", "2": "0 1 2 3 4 Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "8": "C K L G M N O" }, C: { "2": "0 1 2 3 4 5 6 PC 3B I J D E F A B C K L G M N O o p q 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC", "66": "7 8 9 AB BB CB DB", "72": "EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB" }, D: { "1": "HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P", "2": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "66": "BB CB DB EB FB GB" }, E: { "2": "5 I SC AC TC", "8": "J D E F A B C K L G UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "7 8 9 o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB", "2": "F B C nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB", "66": "6 G M N O" }, G: { "2": "AC gC NC hC iC", "8": "E jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "1": "7C", "2": "3B I H 2C 3C 4C 5C NC 6C" }, J: { "2": "D A" }, K: { "2": "A B C r yB MC zB" }, L: { "2": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "I 8C 9C AD BD CD BC DD ED", "2": "o p q FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "2": "KD" }, S: { "2": "MD", "72": "LD" } }, B: 7, C: "Custom Elements (deprecated V0 spec)", D: true };
  }
});

// node_modules/caniuse-lite/data/features/custom-elementsv1.js
var require_custom_elementsv1 = __commonJS({
  "node_modules/caniuse-lite/data/features/custom-elementsv1.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F OC", "8": "A B" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "8": "C K L G M N O" }, C: { "1": "0 1 2 3 4 jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB QC RC", "8": "EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB", "456": "YB ZB aB bB cB dB eB fB gB", "712": "4B hB 5B iB" }, D: { "1": "0 1 2 3 4 nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB", "8": "aB bB", "132": "cB dB eB fB gB 4B hB 5B iB jB kB lB mB" }, E: { "2": "5 I J D SC AC TC UC VC", "8": "E F A WC", "132": "B C K L G BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB bC cC dC eC yB MC fC zB", "132": "PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC", "132": "oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I", "132": "8C" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "8": "LD" } }, B: 1, C: "Custom Elements (V1)", D: true };
  }
});

// node_modules/caniuse-lite/data/features/customevent.js
var require_customevent = __commonJS({
  "node_modules/caniuse-lite/data/features/customevent.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E OC", "132": "F A B" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 6 7 8 9 B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 PC 3B I QC RC", "132": "J D E F A" }, D: { "1": "0 1 2 3 4 6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "I", "16": "5 J D E K L", "388": "F A B C" }, E: { "1": "D E F A B C K L G UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "I SC AC", "16": "5 J", "388": "TC" }, F: { "1": "6 7 8 9 C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m fC zB", "2": "F bC cC dC eC", "132": "B yB MC" }, G: { "1": "E iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "gC", "16": "AC NC", "388": "hC" }, H: { "1": "1C" }, I: { "1": "H 6C 7C", "2": "2C 3C 4C", "388": "3B I 5C NC" }, J: { "1": "A", "388": "D" }, K: { "1": "C r zB", "2": "A", "132": "B yB MC" }, L: { "1": "H" }, M: { "1": "n" }, N: { "132": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "CustomEvent", D: true };
  }
});

// node_modules/caniuse-lite/data/features/datalist.js
var require_datalist = __commonJS({
  "node_modules/caniuse-lite/data/features/datalist.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "OC", "8": "J D E F", "260": "A B" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "260": "C K L G", "1284": "M N O" }, C: { "1": "0 1 2 3 4 y z H n 7B 8B 9B", "8": "PC 3B QC RC", "516": "l m s t u v w x", "4612": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k" }, D: { "1": "0 1 2 3 4 pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "8": "5 6 I J D E F A B C K L G M N O", "132": "7 8 9 o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB" }, E: { "1": "K L G zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "8": "5 I J D E F A B C SC AC TC UC VC WC BC yB" }, F: { "1": "F B C kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB", "132": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB" }, G: { "8": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC", "2049": "sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "1": "H 7C", "8": "3B I 2C 3C 4C 5C NC 6C" }, J: { "1": "A", "8": "D" }, K: { "1": "A B C r yB MC zB" }, L: { "1": "H" }, M: { "2": "n" }, N: { "8": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "2": "LD MD" } }, B: 1, C: "Datalist element", D: true };
  }
});

// node_modules/caniuse-lite/data/features/dataset.js
var require_dataset = __commonJS({
  "node_modules/caniuse-lite/data/features/dataset.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "B", "4": "J D E F A OC" }, B: { "1": "C K L G M", "129": "0 1 2 3 4 N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "6 7 8 9 J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB", "4": "5 PC 3B I QC RC", "129": "0 1 2 3 4 ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, D: { "1": "TB UB VB WB XB YB ZB aB bB cB", "4": "5 I J", "129": "0 1 2 3 4 6 7 8 9 D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "4": "5 I SC AC", "129": "J D E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "C GB HB IB JB KB LB MB NB OB PB yB MC fC zB", "4": "F B bC cC dC eC", "129": "6 7 8 9 G M N O o p q AB BB CB DB EB FB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m" }, G: { "4": "AC gC NC", "129": "E hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "4": "1C" }, I: { "4": "2C 3C 4C", "129": "3B I H 5C NC 6C 7C" }, J: { "129": "D A" }, K: { "1": "C yB MC zB", "4": "A B", "129": "r" }, L: { "129": "H" }, M: { "129": "n" }, N: { "1": "B", "4": "A" }, O: { "129": "0B" }, P: { "129": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "129": "CC" }, R: { "129": "KD" }, S: { "1": "LD", "129": "MD" } }, B: 1, C: "dataset & data-* attributes", D: true };
  }
});

// node_modules/caniuse-lite/data/features/datauri.js
var require_datauri = __commonJS({
  "node_modules/caniuse-lite/data/features/datauri.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D OC", "132": "E", "260": "F A B" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "260": "C K G M N O", "772": "L" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB" }, G: { "1": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "1": "1C" }, I: { "1": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "1": "D A" }, K: { "1": "A B C r yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "260": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 6, C: "Data URIs", D: true };
  }
});

// node_modules/caniuse-lite/data/features/date-tolocaledatestring.js
var require_date_tolocaledatestring = __commonJS({
  "node_modules/caniuse-lite/data/features/date-tolocaledatestring.js"(exports, module2) {
    module2.exports = { A: { A: { "16": "OC", "132": "J D E F A B" }, B: { "1": "0 1 2 3 4 O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "132": "C K L G M N" }, C: { "1": "0 1 2 3 4 eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "132": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB QC RC", "260": "aB bB cB dB", "772": "DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB" }, D: { "1": "0 1 2 3 4 qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "132": "5 6 7 I J D E F A B C K L G M N O o p q", "260": "MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB", "772": "8 9 AB BB CB DB EB FB GB HB IB JB KB LB" }, E: { "1": "C K L G zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "16": "5 I SC AC", "132": "J D E F A TC UC VC WC", "260": "B BC yB" }, F: { "1": "fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "16": "F B C bC cC dC eC yB MC fC", "132": "zB", "260": "9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB", "772": "6 7 8 G M N O o p q" }, G: { "1": "oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "16": "AC gC NC hC", "132": "E iC jC kC lC mC nC" }, H: { "132": "1C" }, I: { "1": "H", "16": "3B 2C 3C 4C", "132": "I 5C NC", "772": "6C 7C" }, J: { "132": "D A" }, K: { "1": "r", "16": "A B C yB MC", "132": "zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "132": "A B" }, O: { "1": "0B" }, P: { "1": "o p q CD BC DD ED FD GD HD 1B 2B ID JD", "260": "I 8C 9C AD BD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "132": "LD" } }, B: 6, C: "Date.prototype.toLocaleDateString", D: true };
  }
});

// node_modules/caniuse-lite/data/features/declarative-shadow-dom.js
var require_declarative_shadow_dom = __commonJS({
  "node_modules/caniuse-lite/data/features/declarative-shadow-dom.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O P Q R S T U V W X Y" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "1": "0 1 2 3 4 Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T", "66": "U V W X Y" }, E: { "1": "IC JC KC 2B LC aC", "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC" }, F: { "1": "wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB bC cC dC eC yB MC fC zB" }, G: { "1": "IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q HD 1B 2B ID JD", "2": "I 8C 9C AD BD CD BC DD ED FD GD" }, Q: { "2": "CC" }, R: { "1": "KD" }, S: { "2": "LD MD" } }, B: 7, C: "Declarative Shadow DOM", D: true };
  }
});

// node_modules/caniuse-lite/data/features/decorators.js
var require_decorators = __commonJS({
  "node_modules/caniuse-lite/data/features/decorators.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "2": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "2": "A B C r yB MC zB" }, L: { "2": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "2": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "2": "KD" }, S: { "2": "LD MD" } }, B: 7, C: "Decorators", D: true };
  }
});

// node_modules/caniuse-lite/data/features/details.js
var require_details = __commonJS({
  "node_modules/caniuse-lite/data/features/details.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "F A B OC", "8": "J D E" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "PC", "8": "5 6 7 8 9 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB QC RC", "194": "VB WB" }, D: { "1": "0 1 2 3 4 KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "8": "5 I J D E F A B", "257": "6 7 8 9 o p q AB BB CB DB EB FB GB HB IB JB", "769": "C K L G M N O" }, E: { "1": "C K L G zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "8": "5 I SC AC TC", "257": "J D E F A UC VC WC", "1025": "B BC yB" }, F: { "1": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "C yB MC fC zB", "8": "F B bC cC dC eC" }, G: { "1": "E iC jC kC lC mC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "8": "AC gC NC hC", "1025": "nC oC pC" }, H: { "8": "1C" }, I: { "1": "I H 5C NC 6C 7C", "8": "3B 2C 3C 4C" }, J: { "1": "A", "8": "D" }, K: { "1": "r", "8": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "Details & Summary elements", D: true };
  }
});

// node_modules/caniuse-lite/data/features/deviceorientation.js
var require_deviceorientation = __commonJS({
  "node_modules/caniuse-lite/data/features/deviceorientation.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A OC", "132": "B" }, B: { "1": "C K L G M N O", "4": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "2": "PC 3B QC", "4": "0 1 2 3 4 6 7 8 9 J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "8": "5 I RC" }, D: { "2": "5 I J", "4": "0 1 2 3 4 6 7 8 9 D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "2": "F B C bC cC dC eC yB MC fC zB", "4": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m" }, G: { "2": "AC gC", "4": "E NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "2": "2C 3C 4C", "4": "3B I H 5C NC 6C 7C" }, J: { "2": "D", "4": "A" }, K: { "1": "C zB", "2": "A B yB MC", "4": "r" }, L: { "4": "H" }, M: { "4": "n" }, N: { "1": "B", "2": "A" }, O: { "4": "0B" }, P: { "4": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "4": "CC" }, R: { "4": "KD" }, S: { "4": "LD MD" } }, B: 4, C: "DeviceOrientation & DeviceMotion events", D: true };
  }
});

// node_modules/caniuse-lite/data/features/devicepixelratio.js
var require_devicepixelratio = __commonJS({
  "node_modules/caniuse-lite/data/features/devicepixelratio.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "B", "2": "J D E F A OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 6 7 8 9 O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 PC 3B I J D E F A B C K L G M N QC RC" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "6 7 8 9 C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m fC zB", "2": "F B bC cC dC eC yB MC" }, G: { "1": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "1": "1C" }, I: { "1": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "1": "D A" }, K: { "1": "C r zB", "2": "A B yB MC" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "B", "2": "A" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 5, C: "Window.devicePixelRatio", D: true };
  }
});

// node_modules/caniuse-lite/data/features/dialog.js
var require_dialog = __commonJS({
  "node_modules/caniuse-lite/data/features/dialog.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB QC RC", "194": "bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P", "1218": "Q R 6B S T U V W X Y Z a b c d e f g" }, D: { "1": "0 1 2 3 4 LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB", "322": "GB HB IB JB KB" }, E: { "1": "EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC" }, F: { "1": "8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F B C G M N O bC cC dC eC yB MC fC zB", "578": "6 7 o p q" }, G: { "1": "EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "2": "LD MD" } }, B: 1, C: "Dialog element", D: true };
  }
});

// node_modules/caniuse-lite/data/features/dispatchevent.js
var require_dispatchevent = __commonJS({
  "node_modules/caniuse-lite/data/features/dispatchevent.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "B", "16": "OC", "129": "F A", "130": "J D E" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "5 I J D E F A B C K L G AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "16": "SC" }, F: { "1": "6 7 8 9 B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB", "16": "F" }, G: { "1": "E gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "16": "AC" }, H: { "1": "1C" }, I: { "1": "3B I H 4C 5C NC 6C 7C", "16": "2C 3C" }, J: { "1": "D A" }, K: { "1": "A B C r yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "B", "129": "A" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "EventTarget.dispatchEvent", D: true };
  }
});

// node_modules/caniuse-lite/data/features/dnssec.js
var require_dnssec = __commonJS({
  "node_modules/caniuse-lite/data/features/dnssec.js"(exports, module2) {
    module2.exports = { A: { A: { "132": "J D E F A B OC" }, B: { "132": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "132": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "132": "0 1 2 3 4 5 I FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "388": "6 7 8 9 J D E F A B C K L G M N O o p q AB BB CB DB EB" }, E: { "132": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "132": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB" }, G: { "132": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "132": "1C" }, I: { "132": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "132": "D A" }, K: { "132": "A B C r yB MC zB" }, L: { "132": "H" }, M: { "132": "n" }, N: { "132": "A B" }, O: { "132": "0B" }, P: { "132": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "132": "CC" }, R: { "132": "KD" }, S: { "132": "LD MD" } }, B: 6, C: "DNSSEC and DANE", D: true };
  }
});

// node_modules/caniuse-lite/data/features/do-not-track.js
var require_do_not_track = __commonJS({
  "node_modules/caniuse-lite/data/features/do-not-track.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E OC", "164": "F A", "260": "B" }, B: { "1": "0 1 2 3 4 N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "260": "C K L G M" }, C: { "1": "0 1 2 3 4 GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 PC 3B I J D E QC RC", "516": "6 7 8 9 F A B C K L G M N O o p q AB BB CB DB EB FB" }, D: { "1": "0 1 2 3 4 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 I J D E F A B C K L G M N O o p q" }, E: { "1": "J A B C TC WC BC yB", "2": "5 I K L G SC AC zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "1028": "D E F UC VC" }, F: { "1": "6 7 8 9 C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m zB", "2": "F B bC cC dC eC yB MC fC" }, G: { "1": "lC mC nC oC pC qC rC", "2": "AC gC NC hC iC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "1028": "E jC kC" }, H: { "1": "1C" }, I: { "1": "H 6C 7C", "2": "3B I 2C 3C 4C 5C NC" }, J: { "16": "D", "1028": "A" }, K: { "1": "r zB", "16": "A B C yB MC" }, L: { "1": "H" }, M: { "1": "n" }, N: { "164": "A", "260": "B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 7, C: "Do Not Track API", D: true };
  }
});

// node_modules/caniuse-lite/data/features/document-currentscript.js
var require_document_currentscript = __commonJS({
  "node_modules/caniuse-lite/data/features/document-currentscript.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "PC 3B QC RC" }, D: { "1": "0 1 2 3 4 DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB" }, E: { "1": "E F A B C K L G WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D SC AC TC UC VC" }, F: { "1": "6 7 8 9 M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F B C G bC cC dC eC yB MC fC zB" }, G: { "1": "E kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC hC iC jC" }, H: { "2": "1C" }, I: { "1": "H 6C 7C", "2": "3B I 2C 3C 4C 5C NC" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "document.currentScript", D: true };
  }
});

// node_modules/caniuse-lite/data/features/document-evaluate-xpath.js
var require_document_evaluate_xpath = __commonJS({
  "node_modules/caniuse-lite/data/features/document-evaluate-xpath.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC", "16": "PC" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "6 7 8 9 B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB", "16": "F" }, G: { "1": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "1": "1C" }, I: { "1": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "1": "D A" }, K: { "1": "A B C r yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 7, C: "document.evaluate & XPath", D: true };
  }
});

// node_modules/caniuse-lite/data/features/document-execcommand.js
var require_document_execcommand = __commonJS({
  "node_modules/caniuse-lite/data/features/document-execcommand.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 6 7 8 9 F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 PC 3B I J D E QC RC" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "J D E F A B C K L G UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "16": "5 I SC AC TC" }, F: { "1": "6 7 8 9 B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m cC dC eC yB MC fC zB", "16": "F bC" }, G: { "1": "E jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC", "16": "NC hC iC" }, H: { "2": "1C" }, I: { "1": "H 5C NC 6C 7C", "2": "3B I 2C 3C 4C" }, J: { "1": "A", "2": "D" }, K: { "1": "A B C r yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "B", "2": "A" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 7, C: "Document.execCommand()", D: true };
  }
});

// node_modules/caniuse-lite/data/features/document-policy.js
var require_document_policy = __commonJS({
  "node_modules/caniuse-lite/data/features/document-policy.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "2": "C K L G M N O P Q R S T", "132": "0 1 2 3 4 U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T", "132": "0 1 2 3 4 U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB bC cC dC eC yB MC fC zB", "132": "rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "2": "3B I 2C 3C 4C 5C NC 6C 7C", "132": "H" }, J: { "2": "D A" }, K: { "2": "A B C yB MC zB", "132": "r" }, L: { "132": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "2": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "132": "KD" }, S: { "2": "LD MD" } }, B: 7, C: "Document Policy", D: true };
  }
});

// node_modules/caniuse-lite/data/features/document-scrollingelement.js
var require_document_scrollingelement = __commonJS({
  "node_modules/caniuse-lite/data/features/document-scrollingelement.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "16": "C K" }, C: { "1": "0 1 2 3 4 WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB QC RC" }, D: { "1": "0 1 2 3 4 SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB" }, E: { "1": "F A B C K L G WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E SC AC TC UC VC" }, F: { "1": "FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB bC cC dC eC yB MC fC zB" }, G: { "1": "lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 5, C: "document.scrollingElement", D: true };
  }
});

// node_modules/caniuse-lite/data/features/documenthead.js
var require_documenthead = __commonJS({
  "node_modules/caniuse-lite/data/features/documenthead.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "F A B", "2": "J D E OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "PC 3B QC RC" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "J D E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "I SC AC", "16": "5" }, F: { "1": "6 7 8 9 B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m yB MC fC zB", "2": "F bC cC dC eC" }, G: { "1": "E gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "16": "AC" }, H: { "1": "1C" }, I: { "1": "3B I H 4C 5C NC 6C 7C", "16": "2C 3C" }, J: { "1": "D A" }, K: { "1": "B C r yB MC zB", "2": "A" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "document.head", D: true };
  }
});

// node_modules/caniuse-lite/data/features/dom-manip-convenience.js
var require_dom_manip_convenience = __commonJS({
  "node_modules/caniuse-lite/data/features/dom-manip-convenience.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M" }, C: { "1": "0 1 2 3 4 XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB QC RC" }, D: { "1": "0 1 2 3 4 cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB", "194": "aB bB" }, E: { "1": "A B C K L G BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F SC AC TC UC VC WC" }, F: { "1": "PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB bC cC dC eC yB MC fC zB", "194": "OB" }, G: { "1": "nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I 8C" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "2": "LD" } }, B: 1, C: "DOM manipulation convenience methods", D: true };
  }
});

// node_modules/caniuse-lite/data/features/dom-range.js
var require_dom_range = __commonJS({
  "node_modules/caniuse-lite/data/features/dom-range.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "F A B", "2": "OC", "8": "J D E" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB" }, G: { "1": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "1": "1C" }, I: { "1": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "1": "D A" }, K: { "1": "A B C r yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "Document Object Model Range", D: true };
  }
});

// node_modules/caniuse-lite/data/features/domcontentloaded.js
var require_domcontentloaded = __commonJS({
  "node_modules/caniuse-lite/data/features/domcontentloaded.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "F A B", "2": "J D E OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB" }, G: { "1": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "1": "1C" }, I: { "1": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "1": "D A" }, K: { "1": "A B C r yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "DOMContentLoaded", D: true };
  }
});

// node_modules/caniuse-lite/data/features/dommatrix.js
var require_dommatrix = __commonJS({
  "node_modules/caniuse-lite/data/features/dommatrix.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F OC", "132": "A B" }, B: { "132": "C K L G M N O", "1028": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB QC RC", "1028": "0 1 2 3 4 pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2564": "HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB", "3076": "XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB" }, D: { "16": "5 I J D", "132": "6 7 8 9 F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB", "388": "E", "1028": "0 1 2 3 4 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "16": "I SC AC", "132": "5 J D E F A TC UC VC WC BC", "1028": "B C K L G yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "2": "F B C bC cC dC eC yB MC fC zB", "132": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB", "1028": "WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m" }, G: { "16": "AC gC NC", "132": "E hC iC jC kC lC mC nC oC", "1028": "pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "132": "I 5C NC 6C 7C", "292": "3B 2C 3C 4C", "1028": "H" }, J: { "16": "D", "132": "A" }, K: { "2": "A B C yB MC zB", "1028": "r" }, L: { "1028": "H" }, M: { "1028": "n" }, N: { "132": "A B" }, O: { "1028": "0B" }, P: { "132": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1028": "CC" }, R: { "1028": "KD" }, S: { "1028": "MD", "2564": "LD" } }, B: 4, C: "DOMMatrix", D: true };
  }
});

// node_modules/caniuse-lite/data/features/download.js
var require_download = __commonJS({
  "node_modules/caniuse-lite/data/features/download.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C" }, C: { "1": "0 1 2 3 4 7 8 9 o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 PC 3B I J D E F A B C K L G M N O QC RC" }, D: { "1": "0 1 2 3 4 6 7 8 9 L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 I J D E F A B C K" }, E: { "1": "B C K L G BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A SC AC TC UC VC WC" }, F: { "1": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F B C bC cC dC eC yB MC fC zB" }, G: { "1": "tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC" }, H: { "2": "1C" }, I: { "1": "H 6C 7C", "2": "3B I 2C 3C 4C 5C NC" }, J: { "1": "A", "2": "D" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "Download attribute", D: true };
  }
});

// node_modules/caniuse-lite/data/features/dragndrop.js
var require_dragndrop = __commonJS({
  "node_modules/caniuse-lite/data/features/dragndrop.js"(exports, module2) {
    module2.exports = { A: { A: { "644": "J D E F OC", "772": "A B" }, B: { "1": "0 1 2 3 4 O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "260": "C K L G M N" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC", "8": "PC 3B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "6 7 8 9 C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m zB", "8": "F B bC cC dC eC yB MC fC" }, G: { "1": "zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC" }, H: { "2": "1C" }, I: { "2": "3B I 2C 3C 4C 5C NC 6C 7C", "1025": "H" }, J: { "2": "D A" }, K: { "1": "zB", "8": "A B C yB MC", "1025": "r" }, L: { "1025": "H" }, M: { "2": "n" }, N: { "1": "A B" }, O: { "1025": "0B" }, P: { "2": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "2": "KD" }, S: { "2": "LD MD" } }, B: 1, C: "Drag and Drop", D: true };
  }
});

// node_modules/caniuse-lite/data/features/element-closest.js
var require_element_closest = __commonJS({
  "node_modules/caniuse-lite/data/features/element-closest.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L" }, C: { "1": "0 1 2 3 4 JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB QC RC" }, D: { "1": "0 1 2 3 4 PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB" }, E: { "1": "F A B C K L G WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E SC AC TC UC VC" }, F: { "1": "CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB bC cC dC eC yB MC fC zB" }, G: { "1": "lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "Element.closest()", D: true };
  }
});

// node_modules/caniuse-lite/data/features/element-from-point.js
var require_element_from_point = __commonJS({
  "node_modules/caniuse-lite/data/features/element-from-point.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "J D E F A B", "16": "OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC", "16": "PC" }, D: { "1": "0 1 2 3 4 6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "16": "5 I J D E F A B C K L" }, E: { "1": "5 J D E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "16": "I SC AC" }, F: { "1": "6 7 8 9 B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m yB MC fC zB", "16": "F bC cC dC eC" }, G: { "1": "E gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "16": "AC" }, H: { "1": "1C" }, I: { "1": "3B I H 4C 5C NC 6C 7C", "16": "2C 3C" }, J: { "1": "D A" }, K: { "1": "C r zB", "16": "A B yB MC" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 5, C: "document.elementFromPoint()", D: true };
  }
});

// node_modules/caniuse-lite/data/features/element-scroll-methods.js
var require_element_scroll_methods = __commonJS({
  "node_modules/caniuse-lite/data/features/element-scroll-methods.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB QC RC" }, D: { "1": "0 1 2 3 4 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB" }, E: { "1": "L G XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F SC AC TC UC VC WC", "132": "A B C K BC yB zB CC" }, F: { "1": "WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB bC cC dC eC yB MC fC zB" }, G: { "1": "yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC", "132": "nC oC pC qC rC sC tC uC vC wC xC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I 8C 9C AD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 5, C: "Scroll methods on elements (scroll, scrollTo, scrollBy)", D: true };
  }
});

// node_modules/caniuse-lite/data/features/eme.js
var require_eme = __commonJS({
  "node_modules/caniuse-lite/data/features/eme.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A OC", "164": "B" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB QC RC" }, D: { "1": "0 1 2 3 4 QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB", "132": "JB KB LB MB NB OB PB" }, E: { "1": "C K L G zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J SC AC TC UC", "164": "D E F A B VC WC BC yB" }, F: { "1": "DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 F B C G M N O o p bC cC dC eC yB MC fC zB", "132": "7 8 9 q AB BB CB" }, G: { "1": "qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC pC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 2, C: "Encrypted Media Extensions", D: true };
  }
});

// node_modules/caniuse-lite/data/features/eot.js
var require_eot = __commonJS({
  "node_modules/caniuse-lite/data/features/eot.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "J D E F A B", "2": "OC" }, B: { "2": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "2": "A B C r yB MC zB" }, L: { "2": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "2": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "2": "KD" }, S: { "2": "LD MD" } }, B: 7, C: "EOT - Embedded OpenType fonts", D: true };
  }
});

// node_modules/caniuse-lite/data/features/es5.js
var require_es5 = __commonJS({
  "node_modules/caniuse-lite/data/features/es5.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "A B", "2": "J D OC", "260": "F", "1026": "E" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 7 8 9 p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "4": "PC 3B QC RC", "132": "5 6 I J D E F A B C K L G M N O o" }, D: { "1": "0 1 2 3 4 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "4": "5 I J D E F A B C K L G M N O", "132": "6 o p q" }, E: { "1": "J D E F A B C K L G UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "4": "5 I SC AC TC" }, F: { "1": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "4": "F B C bC cC dC eC yB MC fC", "132": "zB" }, G: { "1": "E iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "4": "AC gC NC hC" }, H: { "132": "1C" }, I: { "1": "H 6C 7C", "4": "3B 2C 3C 4C", "132": "5C NC", "900": "I" }, J: { "1": "A", "4": "D" }, K: { "1": "r", "4": "A B C yB MC", "132": "zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 6, C: "ECMAScript 5", D: true };
  }
});

// node_modules/caniuse-lite/data/features/es6-class.js
var require_es6_class = __commonJS({
  "node_modules/caniuse-lite/data/features/es6-class.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C" }, C: { "1": "0 1 2 3 4 TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB QC RC" }, D: { "1": "0 1 2 3 4 XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB", "132": "QB RB SB TB UB VB WB" }, E: { "1": "F A B C K L G WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E SC AC TC UC VC" }, F: { "1": "KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB bC cC dC eC yB MC fC zB", "132": "DB EB FB GB HB IB JB" }, G: { "1": "lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 6, C: "ES6 classes", D: true };
  }
});

// node_modules/caniuse-lite/data/features/es6-generators.js
var require_es6_generators = __commonJS({
  "node_modules/caniuse-lite/data/features/es6-generators.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C" }, C: { "1": "0 1 2 3 4 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q QC RC" }, D: { "1": "0 1 2 3 4 NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB" }, E: { "1": "A B C K L G BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F SC AC TC UC VC WC" }, F: { "1": "AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q bC cC dC eC yB MC fC zB" }, G: { "1": "nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 6, C: "ES6 Generators", D: true };
  }
});

// node_modules/caniuse-lite/data/features/es6-module-dynamic-import.js
var require_es6_module_dynamic_import = __commonJS({
  "node_modules/caniuse-lite/data/features/es6-module-dynamic-import.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB QC RC", "194": "mB" }, D: { "1": "0 1 2 3 4 jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB" }, E: { "1": "C K L G yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A B SC AC TC UC VC WC BC" }, F: { "1": "YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB bC cC dC eC yB MC fC zB" }, G: { "1": "pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I 8C 9C AD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "2": "LD" } }, B: 6, C: "JavaScript modules: dynamic import()", D: true };
  }
});

// node_modules/caniuse-lite/data/features/es6-module.js
var require_es6_module = __commonJS({
  "node_modules/caniuse-lite/data/features/es6-module.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L", "2049": "M N O", "2242": "G" }, C: { "1": "0 1 2 3 4 hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB QC RC", "322": "cB dB eB fB gB 4B" }, D: { "1": "0 1 2 3 4 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B", "194": "hB" }, E: { "1": "B C K L G yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A SC AC TC UC VC WC", "1540": "BC" }, F: { "1": "WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB bC cC dC eC yB MC fC zB", "194": "VB" }, G: { "1": "pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC", "1540": "oC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I 8C 9C AD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "2": "LD" } }, B: 1, C: "JavaScript modules via script tag", D: true };
  }
});

// node_modules/caniuse-lite/data/features/es6-number.js
var require_es6_number = __commonJS({
  "node_modules/caniuse-lite/data/features/es6-number.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 PC 3B I J D E F A B C K L G QC RC", "132": "6 7 8 M N O o p q", "260": "9 AB BB CB DB EB", "516": "FB" }, D: { "1": "0 1 2 3 4 IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 I J D E F A B C K L G M N O", "1028": "6 7 8 9 o p q AB BB CB DB EB FB GB HB" }, E: { "1": "F A B C K L G WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E SC AC TC UC VC" }, F: { "1": "7 8 9 p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F B C bC cC dC eC yB MC fC zB", "1028": "6 G M N O o" }, G: { "1": "lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C", "1028": "5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 6, C: "ES6 Number", D: true };
  }
});

// node_modules/caniuse-lite/data/features/es6-string-includes.js
var require_es6_string_includes = __commonJS({
  "node_modules/caniuse-lite/data/features/es6-string-includes.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB QC RC" }, D: { "1": "0 1 2 3 4 PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB" }, E: { "1": "F A B C K L G WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E SC AC TC UC VC" }, F: { "1": "CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB bC cC dC eC yB MC fC zB" }, G: { "1": "lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 6, C: "String.prototype.includes", D: true };
  }
});

// node_modules/caniuse-lite/data/features/es6.js
var require_es6 = __commonJS({
  "node_modules/caniuse-lite/data/features/es6.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A OC", "388": "B" }, B: { "257": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "260": "C K L", "769": "G M N O" }, C: { "2": "5 PC 3B I QC RC", "4": "6 7 8 9 J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB", "257": "0 1 2 3 4 cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, D: { "2": "5 6 I J D E F A B C K L G M N O o", "4": "7 8 9 p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB", "257": "0 1 2 3 4 ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "A B C K L G BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D SC AC TC UC", "4": "E F VC WC" }, F: { "2": "F B C bC cC dC eC yB MC fC zB", "4": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB", "257": "MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m" }, G: { "1": "nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC hC iC", "4": "E jC kC lC mC" }, H: { "2": "1C" }, I: { "2": "3B I 2C 3C 4C 5C NC", "4": "6C 7C", "257": "H" }, J: { "2": "D", "4": "A" }, K: { "2": "A B C yB MC zB", "257": "r" }, L: { "257": "H" }, M: { "257": "n" }, N: { "2": "A", "388": "B" }, O: { "257": "0B" }, P: { "4": "I", "257": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "257": "CC" }, R: { "257": "KD" }, S: { "4": "LD", "257": "MD" } }, B: 6, C: "ECMAScript 2015 (ES6)", D: true };
  }
});

// node_modules/caniuse-lite/data/features/eventsource.js
var require_eventsource = __commonJS({
  "node_modules/caniuse-lite/data/features/eventsource.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 6 7 8 9 J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 PC 3B I QC RC" }, D: { "1": "0 1 2 3 4 6 7 8 9 J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 I" }, E: { "1": "5 J D E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "I SC AC" }, F: { "1": "6 7 8 9 B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m yB MC fC zB", "4": "F bC cC dC eC" }, G: { "1": "E gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC" }, H: { "2": "1C" }, I: { "1": "H 6C 7C", "2": "3B I 2C 3C 4C 5C NC" }, J: { "1": "D A" }, K: { "1": "C r yB MC zB", "4": "A B" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "Server-sent events", D: true };
  }
});

// node_modules/caniuse-lite/data/features/extended-system-fonts.js
var require_extended_system_fonts = __commonJS({
  "node_modules/caniuse-lite/data/features/extended-system-fonts.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "2": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "L G CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A B C K SC AC TC UC VC WC BC yB zB" }, F: { "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB" }, G: { "1": "wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "2": "A B C r yB MC zB" }, L: { "2": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "2": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "2": "KD" }, S: { "2": "LD MD" } }, B: 5, C: "ui-serif, ui-sans-serif, ui-monospace and ui-rounded values for font-family", D: true };
  }
});

// node_modules/caniuse-lite/data/features/feature-policy.js
var require_feature_policy = __commonJS({
  "node_modules/caniuse-lite/data/features/feature-policy.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "P Q R S T U V W", "2": "C K L G M N O", "1025": "0 1 2 3 4 X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r QC RC", "260": "0 1 2 3 4 tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, D: { "1": "tB uB vB wB xB P Q R S T U V W", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B", "132": "hB 5B iB jB kB lB mB nB oB pB qB rB sB r", "1025": "0 1 2 3 4 X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "2": "5 I J D E F A B SC AC TC UC VC WC BC", "772": "C K L G yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "iB jB kB lB mB nB oB pB qB rB sB r tB", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB bC cC dC eC yB MC fC zB", "132": "VB WB XB YB ZB aB bB cB dB eB fB gB hB", "1025": "uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC", "772": "qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "2": "A B C yB MC zB", "1025": "r" }, L: { "1025": "H" }, M: { "260": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q DD ED FD GD HD 1B 2B ID JD", "2": "I 8C 9C AD", "132": "BD CD BC" }, Q: { "132": "CC" }, R: { "1025": "KD" }, S: { "2": "LD", "260": "MD" } }, B: 7, C: "Feature Policy", D: true };
  }
});

// node_modules/caniuse-lite/data/features/fetch.js
var require_fetch = __commonJS({
  "node_modules/caniuse-lite/data/features/fetch.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K" }, C: { "1": "0 1 2 3 4 OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB QC RC", "1025": "NB", "1218": "IB JB KB LB MB" }, D: { "1": "0 1 2 3 4 QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB", "260": "OB", "772": "PB" }, E: { "1": "B C K L G BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A SC AC TC UC VC WC" }, F: { "1": "DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB bC cC dC eC yB MC fC zB", "260": "BB", "772": "CB" }, G: { "1": "oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "Fetch", D: true };
  }
});

// node_modules/caniuse-lite/data/features/fieldset-disabled.js
var require_fieldset_disabled = __commonJS({
  "node_modules/caniuse-lite/data/features/fieldset-disabled.js"(exports, module2) {
    module2.exports = { A: { A: { "16": "OC", "132": "E F", "388": "J D A B" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "PC 3B QC RC" }, D: { "1": "0 1 2 3 4 7 8 9 o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 I J D E F A B C K L G", "16": "6 M N O" }, E: { "1": "J D E F A B C K L G UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I SC AC TC" }, F: { "1": "6 7 8 9 B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m cC dC eC yB MC fC zB", "16": "F bC" }, G: { "1": "E iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC hC" }, H: { "388": "1C" }, I: { "1": "H 6C 7C", "2": "3B I 2C 3C 4C 5C NC" }, J: { "1": "A", "2": "D" }, K: { "1": "A B C r yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A", "260": "B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "disabled attribute of the fieldset element", D: true };
  }
});

// node_modules/caniuse-lite/data/features/fileapi.js
var require_fileapi = __commonJS({
  "node_modules/caniuse-lite/data/features/fileapi.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F OC", "260": "A B" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "260": "C K L G M N O" }, C: { "1": "0 1 2 3 4 CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "PC 3B QC", "260": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB RC" }, D: { "1": "0 1 2 3 4 MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 I", "260": "6 7 8 9 K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB", "388": "J D E F A B C" }, E: { "1": "A B C K L G BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I SC AC", "260": "J D E F UC VC WC", "388": "TC" }, F: { "1": "9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F B bC cC dC eC", "260": "6 7 8 C G M N O o p q yB MC fC zB" }, G: { "1": "nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC hC", "260": "E iC jC kC lC mC" }, H: { "2": "1C" }, I: { "1": "H 7C", "2": "2C 3C 4C", "260": "6C", "388": "3B I 5C NC" }, J: { "260": "A", "388": "D" }, K: { "1": "r", "2": "A B", "260": "C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A", "260": "B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 5, C: "File API", D: true };
  }
});

// node_modules/caniuse-lite/data/features/filereader.js
var require_filereader = __commonJS({
  "node_modules/caniuse-lite/data/features/filereader.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F OC", "132": "A B" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B RC", "2": "PC 3B QC" }, D: { "1": "0 1 2 3 4 6 7 8 9 J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 I" }, E: { "1": "J D E F A B C K L G UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I SC AC TC" }, F: { "1": "6 7 8 9 C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m yB MC fC zB", "2": "F B bC cC dC eC" }, G: { "1": "E iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC hC" }, H: { "2": "1C" }, I: { "1": "3B I H 5C NC 6C 7C", "2": "2C 3C 4C" }, J: { "1": "A", "2": "D" }, K: { "1": "C r yB MC zB", "2": "A B" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 5, C: "FileReader API", D: true };
  }
});

// node_modules/caniuse-lite/data/features/filereadersync.js
var require_filereadersync = __commonJS({
  "node_modules/caniuse-lite/data/features/filereadersync.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "A B", "2": "J D E F OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 6 7 8 9 E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 PC 3B I J D QC RC" }, D: { "1": "0 1 2 3 4 6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "16": "5 I J D E F A B C K L" }, E: { "1": "J D E F A B C K L G UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I SC AC TC" }, F: { "1": "6 7 8 9 C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m fC zB", "2": "F bC cC", "16": "B dC eC yB MC" }, G: { "1": "E iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC hC" }, H: { "2": "1C" }, I: { "1": "H 6C 7C", "2": "3B I 2C 3C 4C 5C NC" }, J: { "1": "A", "2": "D" }, K: { "1": "C r MC zB", "2": "A", "16": "B yB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 5, C: "FileReaderSync", D: true };
  }
});

// node_modules/caniuse-lite/data/features/filesystem.js
var require_filesystem = __commonJS({
  "node_modules/caniuse-lite/data/features/filesystem.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "2": "C K L G M N O", "33": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "2": "5 I J D", "33": "0 1 2 3 4 6 7 8 9 K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "36": "E F A B C" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "2": "F B C bC cC dC eC yB MC fC zB", "33": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D", "33": "A" }, K: { "2": "A B C yB MC zB", "33": "r" }, L: { "33": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "33": "0B" }, P: { "2": "I", "33": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "33": "KD" }, S: { "2": "LD MD" } }, B: 7, C: "Filesystem & FileWriter API", D: true };
  }
});

// node_modules/caniuse-lite/data/features/flac.js
var require_flac = __commonJS({
  "node_modules/caniuse-lite/data/features/flac.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G" }, C: { "1": "0 1 2 3 4 ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB QC RC" }, D: { "1": "0 1 2 3 4 eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB", "16": "SB TB UB", "388": "VB WB XB YB ZB aB bB cB dB" }, E: { "1": "K L G CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A SC AC TC UC VC WC BC", "516": "B C yB zB" }, F: { "1": "QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB bC cC dC eC yB MC fC zB" }, G: { "1": "pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC" }, H: { "2": "1C" }, I: { "1": "H", "2": "2C 3C 4C", "16": "3B I 5C NC 6C 7C" }, J: { "1": "A", "2": "D" }, K: { "1": "r zB", "16": "A B C yB MC" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "129": "I" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "2": "LD" } }, B: 6, C: "FLAC audio format", D: true };
  }
});

// node_modules/caniuse-lite/data/features/flexbox-gap.js
var require_flexbox_gap = __commonJS({
  "node_modules/caniuse-lite/data/features/flexbox-gap.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O P Q R S" }, C: { "1": "0 1 2 3 4 jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB QC RC" }, D: { "1": "0 1 2 3 4 T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S" }, E: { "1": "G XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A B C K L SC AC TC UC VC WC BC yB zB CC" }, F: { "1": "qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB bC cC dC eC yB MC fC zB" }, G: { "1": "yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q GD HD 1B 2B ID JD", "2": "I 8C 9C AD BD CD BC DD ED FD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "2": "LD" } }, B: 5, C: "gap property for Flexbox", D: true };
  }
});

// node_modules/caniuse-lite/data/features/flexbox.js
var require_flexbox = __commonJS({
  "node_modules/caniuse-lite/data/features/flexbox.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F OC", "1028": "B", "1316": "A" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "164": "5 6 PC 3B I J D E F A B C K L G M N O o p QC RC", "516": "7 8 9 q AB BB" }, D: { "1": "0 1 2 3 4 DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "33": "7 8 9 p q AB BB CB", "164": "5 6 I J D E F A B C K L G M N O o" }, E: { "1": "F A B C K L G WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "33": "D E UC VC", "164": "5 I J SC AC TC" }, F: { "1": "6 7 8 9 N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m zB", "2": "F B C bC cC dC eC yB MC fC", "33": "G M" }, G: { "1": "lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "33": "E jC kC", "164": "AC gC NC hC iC" }, H: { "1": "1C" }, I: { "1": "H 6C 7C", "164": "3B I 2C 3C 4C 5C NC" }, J: { "1": "A", "164": "D" }, K: { "1": "r zB", "2": "A B C yB MC" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "B", "292": "A" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 4, C: "CSS Flexible Box Layout Module", D: true };
  }
});

// node_modules/caniuse-lite/data/features/flow-root.js
var require_flow_root = __commonJS({
  "node_modules/caniuse-lite/data/features/flow-root.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB QC RC" }, D: { "1": "0 1 2 3 4 gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB" }, E: { "1": "K L G CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A B C SC AC TC UC VC WC BC yB zB" }, F: { "1": "TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB bC cC dC eC yB MC fC zB" }, G: { "1": "tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I 8C 9C" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "2": "LD" } }, B: 4, C: "display: flow-root", D: true };
  }
});

// node_modules/caniuse-lite/data/features/focusin-focusout-events.js
var require_focusin_focusout_events = __commonJS({
  "node_modules/caniuse-lite/data/features/focusin-focusout-events.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "J D E F A B", "2": "OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB QC RC" }, D: { "1": "0 1 2 3 4 6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "16": "5 I J D E F A B C K L" }, E: { "1": "J D E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "16": "5 I SC AC" }, F: { "1": "6 7 8 9 C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m fC zB", "2": "F bC cC dC eC", "16": "B yB MC" }, G: { "1": "E hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC" }, H: { "2": "1C" }, I: { "1": "I H 5C NC 6C 7C", "2": "2C 3C 4C", "16": "3B" }, J: { "1": "D A" }, K: { "1": "C r zB", "2": "A", "16": "B yB MC" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "2": "LD" } }, B: 5, C: "focusin & focusout events", D: true };
  }
});

// node_modules/caniuse-lite/data/features/font-family-system-ui.js
var require_font_family_system_ui = __commonJS({
  "node_modules/caniuse-lite/data/features/font-family-system-ui.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB QC RC", "132": "RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a" }, D: { "1": "0 1 2 3 4 eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB", "260": "bB cB dB" }, E: { "1": "B C K L G yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E SC AC TC UC VC", "16": "F", "132": "A WC BC" }, F: { "1": "RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB bC cC dC eC yB MC fC zB" }, G: { "1": "pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC", "132": "lC mC nC oC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I 8C" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "132": "LD MD" } }, B: 5, C: "system-ui value for font-family", D: true };
  }
});

// node_modules/caniuse-lite/data/features/font-feature.js
var require_font_feature = __commonJS({
  "node_modules/caniuse-lite/data/features/font-feature.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "A B", "2": "J D E F OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "PC 3B QC RC", "33": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB", "164": "5 I J D E F A B C K L" }, D: { "1": "0 1 2 3 4 WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 I J D E F A B C K L G", "33": "7 8 9 p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB", "292": "6 M N O o" }, E: { "1": "A B C K L G WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "D E F SC AC UC VC", "4": "5 I J TC" }, F: { "1": "JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F B C bC cC dC eC yB MC fC zB", "33": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB" }, G: { "1": "mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E jC kC lC", "4": "AC gC NC hC iC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC", "33": "6C 7C" }, J: { "2": "D", "33": "A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "33": "I" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 2, C: "CSS font-feature-settings", D: true };
  }
});

// node_modules/caniuse-lite/data/features/font-kerning.js
var require_font_kerning = __commonJS({
  "node_modules/caniuse-lite/data/features/font-kerning.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 PC 3B I J D E F A B C K L G M N O o p q QC RC", "194": "8 9 AB BB CB DB EB FB GB HB" }, D: { "1": "0 1 2 3 4 HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB", "33": "DB EB FB GB" }, E: { "1": "A B C K L G WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J SC AC TC UC", "33": "D E F VC" }, F: { "1": "7 8 9 o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F B C G bC cC dC eC yB MC fC zB", "33": "6 M N O" }, G: { "1": "rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC hC iC jC", "33": "E kC lC mC nC oC pC qC" }, H: { "2": "1C" }, I: { "1": "H 7C", "2": "3B I 2C 3C 4C 5C NC", "33": "6C" }, J: { "2": "D", "33": "A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 4, C: "CSS3 font-kerning", D: true };
  }
});

// node_modules/caniuse-lite/data/features/font-loading.js
var require_font_loading = __commonJS({
  "node_modules/caniuse-lite/data/features/font-loading.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB QC RC", "194": "JB KB LB MB NB OB" }, D: { "1": "0 1 2 3 4 JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB" }, E: { "1": "A B C K L G BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F SC AC TC UC VC WC" }, F: { "1": "7 8 9 q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 F B C G M N O o p bC cC dC eC yB MC fC zB" }, G: { "1": "nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 5, C: "CSS Font Loading", D: true };
  }
});

// node_modules/caniuse-lite/data/features/font-size-adjust.js
var require_font_size_adjust = __commonJS({
  "node_modules/caniuse-lite/data/features/font-size-adjust.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "2": "C K L G M N O", "194": "H n", "962": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z" }, C: { "1": "n 7B 8B 9B", "2": "PC", "516": "0 1 2 3 4 b c d e f g h i j k l m s t u v w x y z H", "772": "5 6 7 8 9 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a QC RC" }, D: { "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB", "194": "8B 9B", "962": "0 1 2 3 4 RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B" }, E: { "1": "2B LC aC", "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC", "772": "IC JC KC" }, F: { "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB bC cC dC eC yB MC fC zB", "194": "l m", "962": "EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k" }, G: { "1": "2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC", "772": "IC JC KC" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "2": "A B C r yB MC zB" }, L: { "2": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "2": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "194": "CC" }, R: { "2": "KD" }, S: { "2": "LD", "516": "MD" } }, B: 2, C: "CSS font-size-adjust", D: true };
  }
});

// node_modules/caniuse-lite/data/features/font-smooth.js
var require_font_smooth = __commonJS({
  "node_modules/caniuse-lite/data/features/font-smooth.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "2": "C K L G M N O", "676": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "2": "5 6 7 8 PC 3B I J D E F A B C K L G M N O o p q QC RC", "804": "0 1 2 3 4 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, D: { "2": "I", "676": "0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "2": "SC AC", "676": "5 I J D E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "2": "F B C bC cC dC eC yB MC fC zB", "676": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "2": "A B C r yB MC zB" }, L: { "2": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "2": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "2": "KD" }, S: { "804": "LD MD" } }, B: 7, C: "CSS font-smooth", D: true };
  }
});

// node_modules/caniuse-lite/data/features/font-unicode-range.js
var require_font_unicode_range = __commonJS({
  "node_modules/caniuse-lite/data/features/font-unicode-range.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E OC", "4": "F A B" }, B: { "1": "0 1 2 3 4 N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "4": "C K L G M" }, C: { "1": "0 1 2 3 4 SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB QC RC", "194": "KB LB MB NB OB PB QB RB" }, D: { "1": "0 1 2 3 4 KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "4": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB" }, E: { "1": "A B C K L G BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "4": "5 I J D E F SC AC TC UC VC WC" }, F: { "1": "7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F B C bC cC dC eC yB MC fC zB", "4": "6 G M N O o p q" }, G: { "1": "nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "4": "E AC gC NC hC iC jC kC lC mC" }, H: { "2": "1C" }, I: { "1": "H", "4": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D", "4": "A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "4": "A B" }, O: { "1": "0B" }, P: { "1": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "4": "I" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 4, C: "Font unicode-range subsetting", D: true };
  }
});

// node_modules/caniuse-lite/data/features/font-variant-alternates.js
var require_font_variant_alternates = __commonJS({
  "node_modules/caniuse-lite/data/features/font-variant-alternates.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F OC", "130": "A B" }, B: { "1": "0 1 2 3 4 z H n", "130": "C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y" }, C: { "1": "0 1 2 3 4 IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "PC 3B QC RC", "130": "5 6 7 I J D E F A B C K L G M N O o p q", "322": "8 9 AB BB CB DB EB FB GB HB" }, D: { "1": "0 1 2 3 4 z H n 7B 8B 9B", "2": "5 I J D E F A B C K L G", "130": "6 7 8 9 M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y" }, E: { "1": "A B C K L G WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "D E F SC AC UC VC", "130": "5 I J TC" }, F: { "1": "h i j k l m", "2": "F B C bC cC dC eC yB MC fC zB", "130": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g" }, G: { "1": "mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC jC kC lC", "130": "gC NC hC iC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC", "130": "6C 7C" }, J: { "2": "D", "130": "A" }, K: { "2": "A B C yB MC zB", "130": "r" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "130": "0B" }, P: { "1": "q", "130": "I o p 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "130": "CC" }, R: { "130": "KD" }, S: { "1": "LD MD" } }, B: 5, C: "CSS font-variant-alternates", D: true };
  }
});

// node_modules/caniuse-lite/data/features/font-variant-numeric.js
var require_font_variant_numeric = __commonJS({
  "node_modules/caniuse-lite/data/features/font-variant-numeric.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB QC RC" }, D: { "1": "0 1 2 3 4 aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB" }, E: { "1": "A B C K L G WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F SC AC TC UC VC" }, F: { "1": "NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB bC cC dC eC yB MC fC zB" }, G: { "1": "mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D", "16": "A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I 8C" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 2, C: "CSS font-variant-numeric", D: true };
  }
});

// node_modules/caniuse-lite/data/features/fontface.js
var require_fontface = __commonJS({
  "node_modules/caniuse-lite/data/features/fontface.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "F A B", "132": "J D E OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC", "2": "PC 3B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "5 I J D E F A B C K L G AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "SC" }, F: { "1": "6 7 8 9 B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m cC dC eC yB MC fC zB", "2": "F bC" }, G: { "1": "E NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "260": "AC gC" }, H: { "2": "1C" }, I: { "1": "I H 5C NC 6C 7C", "2": "2C", "4": "3B 3C 4C" }, J: { "1": "A", "4": "D" }, K: { "1": "A B C r yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 2, C: "@font-face Web fonts", D: true };
  }
});

// node_modules/caniuse-lite/data/features/form-attribute.js
var require_form_attribute = __commonJS({
  "node_modules/caniuse-lite/data/features/form-attribute.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "PC 3B QC RC" }, D: { "1": "0 1 2 3 4 6 7 8 9 A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 I J D E F" }, E: { "1": "J D E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "I SC AC", "16": "5" }, F: { "1": "6 7 8 9 B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB", "2": "F" }, G: { "1": "E hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC" }, H: { "1": "1C" }, I: { "1": "3B I H 5C NC 6C 7C", "2": "2C 3C 4C" }, J: { "1": "D A" }, K: { "1": "A B C r yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "Form attribute", D: true };
  }
});

// node_modules/caniuse-lite/data/features/form-submit-attributes.js
var require_form_submit_attributes = __commonJS({
  "node_modules/caniuse-lite/data/features/form-submit-attributes.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "A B", "2": "J D E F OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "PC 3B QC RC" }, D: { "1": "0 1 2 3 4 6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "16": "5 I J D E F A B C K L" }, E: { "1": "J D E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I SC AC" }, F: { "1": "6 7 8 9 B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m eC yB MC fC zB", "2": "F bC", "16": "cC dC" }, G: { "1": "E hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC" }, H: { "1": "1C" }, I: { "1": "I H 5C NC 6C 7C", "2": "2C 3C 4C", "16": "3B" }, J: { "1": "A", "2": "D" }, K: { "1": "B C r yB MC zB", "16": "A" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "Attributes for form submission", D: true };
  }
});

// node_modules/caniuse-lite/data/features/form-validation.js
var require_form_validation = __commonJS({
  "node_modules/caniuse-lite/data/features/form-validation.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "A B", "2": "J D E F OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "PC 3B QC RC" }, D: { "1": "0 1 2 3 4 6 7 8 9 A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 I J D E F" }, E: { "1": "B C K L G BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "I SC AC", "132": "5 J D E F A TC UC VC WC" }, F: { "1": "6 7 8 9 B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m cC dC eC yB MC fC zB", "2": "F bC" }, G: { "1": "oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC", "132": "E gC NC hC iC jC kC lC mC nC" }, H: { "516": "1C" }, I: { "1": "H 7C", "2": "3B 2C 3C 4C", "132": "I 5C NC 6C" }, J: { "1": "A", "132": "D" }, K: { "1": "A B C r yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "260": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "132": "LD" } }, B: 1, C: "Form validation", D: true };
  }
});

// node_modules/caniuse-lite/data/features/forms.js
var require_forms = __commonJS({
  "node_modules/caniuse-lite/data/features/forms.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "OC", "4": "A B", "8": "J D E F" }, B: { "1": "0 1 2 3 4 M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "4": "C K L G" }, C: { "4": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "8": "PC 3B QC RC" }, D: { "1": "0 1 2 3 4 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "4": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB" }, E: { "4": "5 I J D E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "8": "SC AC" }, F: { "1": "F B C aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB", "4": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB" }, G: { "2": "AC", "4": "E gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC", "4": "6C 7C" }, J: { "2": "D", "4": "A" }, K: { "1": "A B C r yB MC zB" }, L: { "1": "H" }, M: { "4": "n" }, N: { "4": "A B" }, O: { "1": "0B" }, P: { "1": "o p q BD CD BC DD ED FD GD HD 1B 2B ID JD", "4": "I 8C 9C AD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "4": "LD MD" } }, B: 1, C: "HTML5 form features", D: false };
  }
});

// node_modules/caniuse-lite/data/features/fullscreen.js
var require_fullscreen = __commonJS({
  "node_modules/caniuse-lite/data/features/fullscreen.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A OC", "548": "B" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "516": "C K L G M N O" }, C: { "1": "0 1 2 3 4 kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 PC 3B I J D E F QC RC", "676": "6 7 8 9 A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB", "1700": "VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB" }, D: { "1": "0 1 2 3 4 rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 I J D E F A B C K L", "676": "6 G M N O", "804": "7 8 9 o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB" }, E: { "1": "IC JC KC 2B LC aC", "2": "5 I SC AC", "548": "EC 0B ZC 1B FC GC HC", "676": "TC", "804": "J D E F A B C K L G UC VC WC BC yB zB CC XC YC DC" }, F: { "1": "kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m zB", "2": "F B C bC cC dC eC yB MC fC", "804": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC", "2052": "rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D", "292": "A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A", "548": "B" }, O: { "1": "0B" }, P: { "1": "o p q BC DD ED FD GD HD 1B 2B ID JD", "804": "I 8C 9C AD BD CD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "Full Screen API", D: true };
  }
});

// node_modules/caniuse-lite/data/features/gamepad.js
var require_gamepad = __commonJS({
  "node_modules/caniuse-lite/data/features/gamepad.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB QC RC" }, D: { "1": "0 1 2 3 4 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 I J D E F A B C K L G M N O o", "33": "7 8 p q" }, E: { "1": "B C K L G BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A SC AC TC UC VC WC" }, F: { "1": "8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 F B C G M N O o p q bC cC dC eC yB MC fC zB" }, G: { "1": "oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "2": "LD" } }, B: 5, C: "Gamepad API", D: true };
  }
});

// node_modules/caniuse-lite/data/features/geolocation.js
var require_geolocation = __commonJS({
  "node_modules/caniuse-lite/data/features/geolocation.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "F A B", "2": "OC", "8": "J D E" }, B: { "1": "C K L G M N O", "129": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB QC RC", "8": "PC 3B", "129": "0 1 2 3 4 dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, D: { "1": "5 6 7 8 9 J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB", "4": "I", "129": "0 1 2 3 4 YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "5 J D E F B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "8": "I SC AC", "129": "A" }, F: { "1": "6 7 8 9 B C M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB eC yB MC fC zB", "2": "F G bC", "8": "cC dC", "129": "NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m" }, G: { "1": "E AC gC NC hC iC jC kC lC mC", "129": "nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "1": "3B I 2C 3C 4C 5C NC 6C 7C", "129": "H" }, J: { "1": "D A" }, K: { "1": "B C yB MC zB", "8": "A", "129": "r" }, L: { "129": "H" }, M: { "129": "n" }, N: { "1": "A B" }, O: { "129": "0B" }, P: { "1": "I", "129": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "129": "CC" }, R: { "129": "KD" }, S: { "1": "LD", "129": "MD" } }, B: 2, C: "Geolocation", D: true };
  }
});

// node_modules/caniuse-lite/data/features/getboundingclientrect.js
var require_getboundingclientrect = __commonJS({
  "node_modules/caniuse-lite/data/features/getboundingclientrect.js"(exports, module2) {
    module2.exports = { A: { A: { "644": "J D OC", "2049": "F A B", "2692": "E" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2049": "C K L G M N O" }, C: { "1": "0 1 2 3 4 6 7 8 9 C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "PC", "260": "5 I J D E F A B", "1156": "3B", "1284": "QC", "1796": "RC" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "5 I J D E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "16": "SC AC" }, F: { "1": "6 7 8 9 B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m eC yB MC fC zB", "16": "F bC", "132": "cC dC" }, G: { "1": "E gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "16": "AC" }, H: { "1": "1C" }, I: { "1": "3B I H 4C 5C NC 6C 7C", "16": "2C 3C" }, J: { "1": "D A" }, K: { "1": "B C r yB MC zB", "132": "A" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2049": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 5, C: "Element.getBoundingClientRect()", D: true };
  }
});

// node_modules/caniuse-lite/data/features/getcomputedstyle.js
var require_getcomputedstyle = __commonJS({
  "node_modules/caniuse-lite/data/features/getcomputedstyle.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "F A B", "2": "J D E OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "PC", "132": "3B QC RC" }, D: { "1": "0 1 2 3 4 6 7 8 9 B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "260": "5 I J D E F A" }, E: { "1": "5 J D E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "260": "I SC AC" }, F: { "1": "6 7 8 9 B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m eC yB MC fC zB", "260": "F bC cC dC" }, G: { "1": "E hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "260": "AC gC NC" }, H: { "260": "1C" }, I: { "1": "I H 5C NC 6C 7C", "260": "3B 2C 3C 4C" }, J: { "1": "A", "260": "D" }, K: { "1": "B C r yB MC zB", "260": "A" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 2, C: "getComputedStyle", D: true };
  }
});

// node_modules/caniuse-lite/data/features/getelementsbyclassname.js
var require_getelementsbyclassname = __commonJS({
  "node_modules/caniuse-lite/data/features/getelementsbyclassname.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "F A B", "2": "OC", "8": "J D E" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC", "8": "PC" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "6 7 8 9 B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB", "2": "F" }, G: { "1": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "1": "1C" }, I: { "1": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "1": "D A" }, K: { "1": "A B C r yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "getElementsByClassName", D: true };
  }
});

// node_modules/caniuse-lite/data/features/getrandomvalues.js
var require_getrandomvalues = __commonJS({
  "node_modules/caniuse-lite/data/features/getrandomvalues.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A OC", "33": "B" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 7 8 9 p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 PC 3B I J D E F A B C K L G M N O o QC RC" }, D: { "1": "0 1 2 3 4 6 7 8 9 B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 I J D E F A" }, E: { "1": "D E F A B C K L G UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J SC AC TC" }, F: { "1": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F B C bC cC dC eC yB MC fC zB" }, G: { "1": "E jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC hC iC" }, H: { "2": "1C" }, I: { "1": "H 6C 7C", "2": "3B I 2C 3C 4C 5C NC" }, J: { "1": "A", "2": "D" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A", "33": "B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 2, C: "crypto.getRandomValues()", D: true };
  }
});

// node_modules/caniuse-lite/data/features/gyroscope.js
var require_gyroscope = __commonJS({
  "node_modules/caniuse-lite/data/features/gyroscope.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "1": "0 1 2 3 4 nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB", "194": "gB 4B hB 5B iB jB kB lB mB" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB bC cC dC eC yB MC fC zB" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "2": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "2": "LD MD" } }, B: 4, C: "Gyroscope", D: true };
  }
});

// node_modules/caniuse-lite/data/features/hardwareconcurrency.js
var require_hardwareconcurrency = __commonJS({
  "node_modules/caniuse-lite/data/features/hardwareconcurrency.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L" }, C: { "1": "0 1 2 3 4 WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB QC RC" }, D: { "1": "0 1 2 3 4 LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB" }, E: { "2": "5 I J D SC AC TC UC VC", "129": "B C K L G BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "194": "E F A WC" }, F: { "1": "8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 F B C G M N O o p q bC cC dC eC yB MC fC zB" }, G: { "2": "AC gC NC hC iC jC", "129": "oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "194": "E kC lC mC nC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "navigator.hardwareConcurrency", D: true };
  }
});

// node_modules/caniuse-lite/data/features/hashchange.js
var require_hashchange = __commonJS({
  "node_modules/caniuse-lite/data/features/hashchange.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "E F A B", "8": "J D OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B RC", "8": "PC 3B QC" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "8": "I" }, E: { "1": "5 J D E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "8": "I SC AC" }, F: { "1": "6 7 8 9 B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m eC yB MC fC zB", "8": "F bC cC dC" }, G: { "1": "E gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC" }, H: { "2": "1C" }, I: { "1": "3B I H 3C 4C 5C NC 6C 7C", "2": "2C" }, J: { "1": "D A" }, K: { "1": "B C r yB MC zB", "8": "A" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "Hashchange event", D: true };
  }
});

// node_modules/caniuse-lite/data/features/heif.js
var require_heif = __commonJS({
  "node_modules/caniuse-lite/data/features/heif.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "2": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "2B LC aC", "2": "5 I J D E F A SC AC TC UC VC WC BC", "130": "B C K L G yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC" }, F: { "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB" }, G: { "1": "2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC KC", "130": "pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "2": "A B C r yB MC zB" }, L: { "2": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "2": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "2": "KD" }, S: { "2": "LD MD" } }, B: 6, C: "HEIF/HEIC image format", D: true };
  }
});

// node_modules/caniuse-lite/data/features/hevc.js
var require_hevc = __commonJS({
  "node_modules/caniuse-lite/data/features/hevc.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A OC", "132": "B" }, B: { "132": "C K L G M N O", "1028": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B QC RC", "4162": "8B 9B" }, D: { "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u", "2052": "0 1 2 3 4 v w x y z H n 7B 8B 9B" }, E: { "1": "K L G CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A SC AC TC UC VC WC BC", "516": "B C yB zB" }, F: { "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c bC cC dC eC yB MC fC zB", "2052": "d e f g h i j k l m" }, G: { "1": "pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC" }, H: { "2": "1C" }, I: { "2": "3B I 2C 3C 4C 5C NC 6C 7C", "2052": "H" }, J: { "2": "D A" }, K: { "2": "A B C yB MC zB", "258": "r" }, L: { "2052": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "1": "p q", "2": "I", "258": "o 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "1": "KD" }, S: { "2": "LD MD" } }, B: 6, C: "HEVC/H.265 video format", D: true };
  }
});

// node_modules/caniuse-lite/data/features/hidden.js
var require_hidden = __commonJS({
  "node_modules/caniuse-lite/data/features/hidden.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "B", "2": "J D E F A OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "PC 3B QC RC" }, D: { "1": "0 1 2 3 4 6 7 8 9 J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 I" }, E: { "1": "J D E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I SC AC" }, F: { "1": "6 7 8 9 C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m yB MC fC zB", "2": "F B bC cC dC eC" }, G: { "1": "E hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC" }, H: { "1": "1C" }, I: { "1": "I H 5C NC 6C 7C", "2": "3B 2C 3C 4C" }, J: { "1": "A", "2": "D" }, K: { "1": "C r yB MC zB", "2": "A B" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "B", "2": "A" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "hidden attribute", D: true };
  }
});

// node_modules/caniuse-lite/data/features/high-resolution-time.js
var require_high_resolution_time = __commonJS({
  "node_modules/caniuse-lite/data/features/high-resolution-time.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "A B", "2": "J D E F OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB", "2": "5 PC 3B I J D E F A B C K L QC RC", "129": "dB eB fB", "769": "gB 4B", "1281": "0 1 2 3 4 hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, D: { "1": "0 1 2 3 4 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 I J D E F A B C K L G M N O", "33": "7 o p q" }, E: { "1": "E F A B C K L G WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D SC AC TC UC VC" }, F: { "1": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F B C bC cC dC eC yB MC fC zB" }, G: { "1": "E lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC hC iC jC kC" }, H: { "2": "1C" }, I: { "1": "H 6C 7C", "2": "3B I 2C 3C 4C 5C NC" }, J: { "1": "A", "2": "D" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 2, C: "High Resolution Time API", D: true };
  }
});

// node_modules/caniuse-lite/data/features/history.js
var require_history = __commonJS({
  "node_modules/caniuse-lite/data/features/history.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "A B", "2": "J D E F OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "PC 3B QC RC" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "I" }, E: { "1": "J D E F A B C K L G UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "I SC AC", "4": "5 TC" }, F: { "1": "6 7 8 9 C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m MC fC zB", "2": "F B bC cC dC eC yB" }, G: { "1": "E hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC", "4": "NC" }, H: { "2": "1C" }, I: { "1": "H 3C 4C NC 6C 7C", "2": "3B I 2C 5C" }, J: { "1": "D A" }, K: { "1": "C r yB MC zB", "2": "A B" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "Session history management", D: true };
  }
});

// node_modules/caniuse-lite/data/features/html-media-capture.js
var require_html_media_capture = __commonJS({
  "node_modules/caniuse-lite/data/features/html-media-capture.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "2": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB" }, G: { "2": "AC gC NC hC", "129": "E iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "1": "3B I H 5C NC 6C 7C", "2": "2C", "257": "3C 4C" }, J: { "1": "A", "16": "D" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "516": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "16": "CC" }, R: { "1": "KD" }, S: { "2": "LD MD" } }, B: 2, C: "HTML Media Capture", D: true };
  }
});

// node_modules/caniuse-lite/data/features/html5semantic.js
var require_html5semantic = __commonJS({
  "node_modules/caniuse-lite/data/features/html5semantic.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "OC", "8": "J D E", "260": "F A B" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 7 8 9 p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "PC", "132": "3B QC RC", "260": "5 6 I J D E F A B C K L G M N O o" }, D: { "1": "0 1 2 3 4 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "132": "5 I", "260": "6 7 8 9 J D E F A B C K L G M N O o p q" }, E: { "1": "D E F A B C K L G UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "132": "I SC AC", "260": "5 J TC" }, F: { "1": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "132": "F B bC cC dC eC", "260": "C yB MC fC zB" }, G: { "1": "E jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "132": "AC", "260": "gC NC hC iC" }, H: { "132": "1C" }, I: { "1": "H 6C 7C", "132": "2C", "260": "3B I 3C 4C 5C NC" }, J: { "260": "D A" }, K: { "1": "r", "132": "A", "260": "B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "260": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "HTML5 semantic elements", D: true };
  }
});

// node_modules/caniuse-lite/data/features/http-live-streaming.js
var require_http_live_streaming = __commonJS({
  "node_modules/caniuse-lite/data/features/http-live-streaming.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "C K L G M N O", "2": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "J D E F A B C K L G UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I SC AC TC" }, F: { "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB" }, G: { "1": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "1": "3B I H 5C NC 6C 7C", "2": "2C 3C 4C" }, J: { "1": "A", "2": "D" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "2": "LD MD" } }, B: 7, C: "HTTP Live Streaming (HLS)", D: true };
  }
});

// node_modules/caniuse-lite/data/features/http2.js
var require_http2 = __commonJS({
  "node_modules/caniuse-lite/data/features/http2.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A OC", "132": "B" }, B: { "1": "C K L G M N O", "513": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB QC RC", "513": "0 1 2 3 4 bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, D: { "1": "PB QB RB SB TB UB VB WB XB YB", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB", "513": "0 1 2 3 4 ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "B C K L G yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E SC AC TC UC VC", "260": "F A WC BC" }, F: { "1": "CB DB EB FB GB HB IB JB KB LB", "2": "6 7 8 9 F B C G M N O o p q AB BB bC cC dC eC yB MC fC zB", "513": "MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m" }, G: { "1": "lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC" }, H: { "2": "1C" }, I: { "2": "3B I 2C 3C 4C 5C NC 6C 7C", "513": "H" }, J: { "2": "D A" }, K: { "2": "A B C yB MC zB", "513": "r" }, L: { "513": "H" }, M: { "513": "n" }, N: { "2": "A B" }, O: { "513": "0B" }, P: { "1": "I", "513": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "513": "CC" }, R: { "513": "KD" }, S: { "1": "LD", "513": "MD" } }, B: 6, C: "HTTP/2 protocol", D: true };
  }
});

// node_modules/caniuse-lite/data/features/http3.js
var require_http3 = __commonJS({
  "node_modules/caniuse-lite/data/features/http3.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O", "322": "P Q R S T", "578": "U V" }, C: { "1": "0 1 2 3 4 X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB QC RC", "194": "sB r tB uB vB wB xB P Q R 6B S T U V W" }, D: { "1": "0 1 2 3 4 W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB", "322": "P Q R S T", "578": "U V" }, E: { "2": "5 I J D E F A B C K SC AC TC UC VC WC BC yB zB CC", "2052": "IC JC KC 2B LC aC", "2116": "1B FC GC HC", "3140": "L G XC YC DC EC 0B ZC" }, F: { "1": "tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB bC cC dC eC yB MC fC zB", "578": "r" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC", "2052": "IC JC KC 2B LC", "2116": "xC yC zC DC EC 0B 0C 1B FC GC HC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q GD HD 1B 2B ID JD", "2": "I 8C 9C AD BD CD BC DD ED FD" }, Q: { "2": "CC" }, R: { "1": "KD" }, S: { "2": "LD MD" } }, B: 6, C: "HTTP/3 protocol", D: true };
  }
});

// node_modules/caniuse-lite/data/features/iframe-sandbox.js
var require_iframe_sandbox = __commonJS({
  "node_modules/caniuse-lite/data/features/iframe-sandbox.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "A B", "2": "J D E F OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 PC 3B I J D E F A B C K L G M QC RC", "4": "6 7 8 9 N O o p q AB BB" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "5 J D E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "I SC AC" }, F: { "1": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F B C bC cC dC eC yB MC fC zB" }, G: { "1": "E NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC" }, H: { "2": "1C" }, I: { "1": "3B I H 3C 4C 5C NC 6C 7C", "2": "2C" }, J: { "1": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "sandbox attribute for iframes", D: true };
  }
});

// node_modules/caniuse-lite/data/features/iframe-seamless.js
var require_iframe_seamless = __commonJS({
  "node_modules/caniuse-lite/data/features/iframe-seamless.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "2": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "2": "0 1 2 3 4 5 6 I J D E F A B C K L G M N O BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "66": "7 8 9 o p q AB" }, E: { "2": "5 I J E F A B C K L G SC AC TC UC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "130": "D VC" }, F: { "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB" }, G: { "2": "E AC gC NC hC iC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "130": "jC" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "2": "A B C r yB MC zB" }, L: { "2": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "2": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "2": "KD" }, S: { "2": "LD MD" } }, B: 7, C: "seamless attribute for iframes", D: true };
  }
});

// node_modules/caniuse-lite/data/features/iframe-srcdoc.js
var require_iframe_srcdoc = __commonJS({
  "node_modules/caniuse-lite/data/features/iframe-srcdoc.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "OC", "8": "J D E F A B" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "8": "C K L G M N O" }, C: { "1": "0 1 2 3 4 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "PC", "8": "5 6 7 8 3B I J D E F A B C K L G M N O o p q QC RC" }, D: { "1": "0 1 2 3 4 7 8 9 o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 I J D E F A B C K", "8": "6 L G M N O" }, E: { "1": "J D E F A B C K L G UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "SC AC", "8": "5 I TC" }, F: { "1": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F B bC cC dC eC", "8": "C yB MC fC zB" }, G: { "1": "E iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC", "8": "gC NC hC" }, H: { "2": "1C" }, I: { "1": "H 6C 7C", "8": "3B I 2C 3C 4C 5C NC" }, J: { "1": "A", "8": "D" }, K: { "1": "r", "2": "A B", "8": "C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "8": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "srcdoc attribute for iframes", D: true };
  }
});

// node_modules/caniuse-lite/data/features/imagecapture.js
var require_imagecapture = __commonJS({
  "node_modules/caniuse-lite/data/features/imagecapture.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB QC RC", "194": "0 1 2 3 4 JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, D: { "1": "0 1 2 3 4 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB", "322": "bB cB dB eB fB gB" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB bC cC dC eC yB MC fC zB", "322": "OB PB QB RB SB TB" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "194": "LD MD" } }, B: 5, C: "ImageCapture API", D: true };
  }
});

// node_modules/caniuse-lite/data/features/ime.js
var require_ime = __commonJS({
  "node_modules/caniuse-lite/data/features/ime.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A OC", "161": "B" }, B: { "2": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "161": "C K L G M N O" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "2": "A B C r yB MC zB" }, L: { "2": "H" }, M: { "2": "n" }, N: { "2": "A", "161": "B" }, O: { "2": "0B" }, P: { "2": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "2": "KD" }, S: { "2": "LD MD" } }, B: 7, C: "Input Method Editor API", D: true };
  }
});

// node_modules/caniuse-lite/data/features/img-naturalwidth-naturalheight.js
var require_img_naturalwidth_naturalheight = __commonJS({
  "node_modules/caniuse-lite/data/features/img-naturalwidth-naturalheight.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "F A B", "2": "J D E OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB" }, G: { "1": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "1": "1C" }, I: { "1": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "1": "D A" }, K: { "1": "A B C r yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "naturalWidth & naturalHeight image properties", D: true };
  }
});

// node_modules/caniuse-lite/data/features/import-maps.js
var require_import_maps = __commonJS({
  "node_modules/caniuse-lite/data/features/import-maps.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O", "194": "P Q R S T U V W X" }, C: { "1": "0 1 2 3 4 w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k QC RC", "322": "l m s t u v" }, D: { "1": "0 1 2 3 4 Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r", "194": "tB uB vB wB xB P Q R S T U V W X" }, E: { "1": "IC JC KC 2B LC aC", "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC" }, F: { "1": "vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB bC cC dC eC yB MC fC zB", "194": "iB jB kB lB mB nB oB pB qB rB sB r tB uB" }, G: { "1": "IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q HD 1B 2B ID JD", "2": "I 8C 9C AD BD CD BC DD ED FD GD" }, Q: { "2": "CC" }, R: { "1": "KD" }, S: { "2": "LD MD" } }, B: 7, C: "Import maps", D: true };
  }
});

// node_modules/caniuse-lite/data/features/imports.js
var require_imports = __commonJS({
  "node_modules/caniuse-lite/data/features/imports.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F OC", "8": "A B" }, B: { "1": "P", "2": "0 1 2 3 4 Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "8": "C K L G M N O" }, C: { "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB QC RC", "8": "0 1 2 3 4 EB FB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "72": "GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB" }, D: { "1": "KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P", "2": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "66": "EB FB GB HB IB", "72": "JB" }, E: { "2": "5 I SC AC TC", "8": "J D E F A B C K L G UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB", "2": "F B C G M nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB", "66": "6 N O o p", "72": "q" }, G: { "2": "AC gC NC hC iC", "8": "E jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "2": "A B C r yB MC zB" }, L: { "2": "H" }, M: { "8": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "I 8C 9C AD BD CD BC DD ED", "2": "o p q FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "2": "KD" }, S: { "1": "LD", "8": "MD" } }, B: 5, C: "HTML Imports", D: true };
  }
});

// node_modules/caniuse-lite/data/features/indeterminate-checkbox.js
var require_indeterminate_checkbox = __commonJS({
  "node_modules/caniuse-lite/data/features/indeterminate-checkbox.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "J D E F A B", "16": "OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B RC", "2": "PC 3B", "16": "QC" }, D: { "1": "0 1 2 3 4 CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB" }, E: { "1": "J D E F A B C K L G UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I SC AC TC" }, F: { "1": "6 7 8 9 C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m fC zB", "2": "F B bC cC dC eC yB MC" }, G: { "1": "sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC" }, H: { "2": "1C" }, I: { "1": "H 6C 7C", "2": "3B I 2C 3C 4C 5C NC" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "indeterminate checkbox", D: true };
  }
});

// node_modules/caniuse-lite/data/features/indexeddb.js
var require_indexeddb = __commonJS({
  "node_modules/caniuse-lite/data/features/indexeddb.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F OC", "132": "A B" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "132": "C K L G M N O" }, C: { "1": "0 1 2 3 4 6 7 8 9 M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "PC 3B QC RC", "33": "A B C K L G", "36": "5 I J D E F" }, D: { "1": "0 1 2 3 4 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "A", "8": "5 I J D E F", "33": "7", "36": "6 B C K L G M N O o p q" }, E: { "1": "A B C K L G BC yB zB CC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "8": "5 I J D SC AC TC UC", "260": "E F VC WC", "516": "XC" }, F: { "1": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F bC cC", "8": "B C dC eC yB MC fC zB" }, G: { "1": "nC oC pC qC rC sC tC uC vC wC xC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "8": "AC gC NC hC iC jC", "260": "E kC lC mC", "516": "yC" }, H: { "2": "1C" }, I: { "1": "H 6C 7C", "8": "3B I 2C 3C 4C 5C NC" }, J: { "1": "A", "8": "D" }, K: { "1": "r", "2": "A", "8": "B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "132": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 2, C: "IndexedDB", D: true };
  }
});

// node_modules/caniuse-lite/data/features/indexeddb2.js
var require_indexeddb2 = __commonJS({
  "node_modules/caniuse-lite/data/features/indexeddb2.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB QC RC", "132": "SB TB UB", "260": "VB WB XB YB" }, D: { "1": "0 1 2 3 4 gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB", "132": "WB XB YB ZB", "260": "aB bB cB dB eB fB" }, E: { "1": "B C K L G BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A SC AC TC UC VC WC" }, F: { "1": "TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB bC cC dC eC yB MC fC zB", "132": "JB KB LB MB", "260": "NB OB PB QB RB SB" }, G: { "1": "oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC", "16": "nC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I", "260": "8C 9C" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "260": "LD" } }, B: 2, C: "IndexedDB 2.0", D: true };
  }
});

// node_modules/caniuse-lite/data/features/inline-block.js
var require_inline_block = __commonJS({
  "node_modules/caniuse-lite/data/features/inline-block.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "E F A B", "4": "OC", "132": "J D" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC", "36": "PC" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB" }, G: { "1": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "1": "1C" }, I: { "1": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "1": "D A" }, K: { "1": "A B C r yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 2, C: "CSS inline-block", D: true };
  }
});

// node_modules/caniuse-lite/data/features/innertext.js
var require_innertext = __commonJS({
  "node_modules/caniuse-lite/data/features/innertext.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "J D E F A B", "16": "OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB QC RC" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "5 I J D E F A B C K L G AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "16": "SC" }, F: { "1": "6 7 8 9 B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB", "16": "F" }, G: { "1": "E gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "16": "AC" }, H: { "1": "1C" }, I: { "1": "3B I H 4C 5C NC 6C 7C", "16": "2C 3C" }, J: { "1": "D A" }, K: { "1": "A B C r yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "HTMLElement.innerText", D: true };
  }
});

// node_modules/caniuse-lite/data/features/input-autocomplete-onoff.js
var require_input_autocomplete_onoff = __commonJS({
  "node_modules/caniuse-lite/data/features/input-autocomplete-onoff.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "J D E F A OC", "132": "B" }, B: { "132": "C K L G M N O", "260": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB QC RC", "516": "0 1 2 3 4 EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, D: { "1": "6 7 8 9 N O o p q AB", "2": "5 I J D E F A B C K L G M", "132": "BB CB DB EB FB GB HB IB JB KB LB MB NB OB", "260": "0 1 2 3 4 PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "J TC UC", "2": "5 I SC AC", "2052": "D E F A B C K L G VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB" }, G: { "2": "AC gC NC", "1025": "E hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "1025": "1C" }, I: { "1": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "1": "D A" }, K: { "1": "A B C r yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2052": "A B" }, O: { "1025": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "260": "CC" }, R: { "1": "KD" }, S: { "516": "LD MD" } }, B: 1, C: "autocomplete attribute: on & off values", D: true };
  }
});

// node_modules/caniuse-lite/data/features/input-color.js
var require_input_color = __commonJS({
  "node_modules/caniuse-lite/data/features/input-color.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K" }, C: { "1": "0 1 2 3 4 DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB QC RC" }, D: { "1": "0 1 2 3 4 7 8 9 o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 I J D E F A B C K L G M N O" }, E: { "1": "K L G zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A B C SC AC TC UC VC WC BC yB" }, F: { "1": "6 7 8 9 B C N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m yB MC fC zB", "2": "F G M bC cC dC eC" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC", "129": "sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "1": "H 6C 7C", "2": "3B I 2C 3C 4C 5C NC" }, J: { "1": "D A" }, K: { "1": "A B C r yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "2": "LD" } }, B: 1, C: "Color input type", D: true };
  }
});

// node_modules/caniuse-lite/data/features/input-datetime.js
var require_input_datetime = __commonJS({
  "node_modules/caniuse-lite/data/features/input-datetime.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "132": "C" }, C: { "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB QC RC", "1090": "bB cB dB eB", "2052": "fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b", "4100": "0 1 2 3 4 c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, D: { "1": "0 1 2 3 4 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 I J D E F A B C K L G M N O", "2052": "7 8 o p q" }, E: { "2": "5 I J D E F A B C K L SC AC TC UC VC WC BC yB zB CC", "4100": "G XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB" }, G: { "2": "AC gC NC", "260": "E hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "1": "H 6C 7C", "2": "3B 2C 3C 4C", "514": "I 5C NC" }, J: { "1": "A", "2": "D" }, K: { "1": "A B C r yB MC zB" }, L: { "1": "H" }, M: { "4100": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "2052": "LD MD" } }, B: 1, C: "Date and time input types", D: true };
  }
});

// node_modules/caniuse-lite/data/features/input-email-tel-url.js
var require_input_email_tel_url = __commonJS({
  "node_modules/caniuse-lite/data/features/input-email-tel-url.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "A B", "2": "J D E F OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "PC 3B QC RC" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "I" }, E: { "1": "5 J D E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "I SC AC" }, F: { "1": "6 7 8 9 B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB", "2": "F" }, G: { "1": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "1": "3B I H 5C NC 6C 7C", "132": "2C 3C 4C" }, J: { "1": "A", "132": "D" }, K: { "1": "A B C r yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "Email, telephone & URL input types", D: true };
  }
});

// node_modules/caniuse-lite/data/features/input-event.js
var require_input_event = __commonJS({
  "node_modules/caniuse-lite/data/features/input-event.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E OC", "2561": "A B", "2692": "F" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2561": "C K L G M N O" }, C: { "1": "0 1 2 3 4 XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "16": "PC", "1537": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB RC", "1796": "3B QC" }, D: { "1": "0 1 2 3 4 mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "16": "5 I J D E F A B C K L", "1025": "JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB", "1537": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB" }, E: { "1": "L G CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "16": "5 I J SC AC", "1025": "D E F A B C UC VC WC BC yB", "1537": "TC", "4097": "K zB" }, F: { "1": "aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m zB", "16": "F B C bC cC dC eC yB MC", "260": "fC", "1025": "7 8 9 q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB", "1537": "6 G M N O o p" }, G: { "1": "uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "16": "AC gC NC", "1025": "E kC lC mC nC oC pC qC rC", "1537": "hC iC jC", "4097": "sC tC" }, H: { "2": "1C" }, I: { "16": "2C 3C", "1025": "H 7C", "1537": "3B I 4C 5C NC 6C" }, J: { "1025": "A", "1537": "D" }, K: { "1": "A B C r yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2561": "A B" }, O: { "1": "0B" }, P: { "1025": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "1537": "LD" } }, B: 1, C: "input event", D: true };
  }
});

// node_modules/caniuse-lite/data/features/input-file-accept.js
var require_input_file_accept = __commonJS({
  "node_modules/caniuse-lite/data/features/input-file-accept.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "A B", "2": "J D E F OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "PC 3B QC RC", "132": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB" }, D: { "1": "0 1 2 3 4 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "I", "16": "5 7 8 9 J D E p q", "132": "6 F A B C K L G M N O o" }, E: { "1": "C K L G yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I SC AC TC", "132": "J D E F A B UC VC WC BC" }, F: { "1": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F B C bC cC dC eC yB MC fC zB" }, G: { "2": "iC jC", "132": "E kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "514": "AC gC NC hC" }, H: { "2": "1C" }, I: { "2": "2C 3C 4C", "260": "3B I 5C NC", "514": "H 6C 7C" }, J: { "132": "A", "260": "D" }, K: { "2": "A B C yB MC zB", "514": "r" }, L: { "260": "H" }, M: { "2": "n" }, N: { "514": "A", "1028": "B" }, O: { "2": "0B" }, P: { "260": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "260": "CC" }, R: { "260": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "accept attribute for file input", D: true };
  }
});

// node_modules/caniuse-lite/data/features/input-file-directory.js
var require_input_file_directory = __commonJS({
  "node_modules/caniuse-lite/data/features/input-file-directory.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K" }, C: { "1": "0 1 2 3 4 YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB QC RC" }, D: { "1": "0 1 2 3 4 EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB" }, E: { "1": "C K L G yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A B SC AC TC UC VC WC BC" }, F: { "1": "6 7 8 9 N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F B C G M bC cC dC eC yB MC fC zB" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "2": "A B C r yB MC zB" }, L: { "2": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "2": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "2": "KD" }, S: { "2": "LD MD" } }, B: 7, C: "Directory selection from file input", D: true };
  }
});

// node_modules/caniuse-lite/data/features/input-file-multiple.js
var require_input_file_multiple = __commonJS({
  "node_modules/caniuse-lite/data/features/input-file-multiple.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "A B", "2": "J D E F OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B RC", "2": "PC 3B QC" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "I" }, E: { "1": "5 I J D E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "SC AC" }, F: { "1": "6 7 8 9 B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m eC yB MC fC zB", "2": "F bC cC dC" }, G: { "1": "E iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC hC" }, H: { "130": "1C" }, I: { "130": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "130": "A B C r yB MC zB" }, L: { "132": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "130": "0B" }, P: { "130": "I", "132": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "132": "CC" }, R: { "132": "KD" }, S: { "1": "MD", "2": "LD" } }, B: 1, C: "Multiple file selection", D: true };
  }
});

// node_modules/caniuse-lite/data/features/input-inputmode.js
var require_input_inputmode = __commonJS({
  "node_modules/caniuse-lite/data/features/input-inputmode.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 PC 3B I J D E F A B C K L G M QC RC", "4": "6 N O o", "194": "7 8 9 p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d" }, D: { "1": "0 1 2 3 4 mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB", "66": "eB fB gB 4B hB 5B iB jB kB lB" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB bC cC dC eC yB MC fC zB", "66": "RB SB TB UB VB WB XB YB ZB aB" }, G: { "1": "sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I 8C 9C AD BD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "194": "LD MD" } }, B: 1, C: "inputmode attribute", D: true };
  }
});

// node_modules/caniuse-lite/data/features/input-minlength.js
var require_input_minlength = __commonJS({
  "node_modules/caniuse-lite/data/features/input-minlength.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M" }, C: { "1": "0 1 2 3 4 ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB QC RC" }, D: { "1": "0 1 2 3 4 OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB" }, E: { "1": "B C K L G BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A SC AC TC UC VC WC" }, F: { "1": "BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB bC cC dC eC yB MC fC zB" }, G: { "1": "oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "2": "LD" } }, B: 1, C: "Minimum length attribute for input fields", D: true };
  }
});

// node_modules/caniuse-lite/data/features/input-number.js
var require_input_number = __commonJS({
  "node_modules/caniuse-lite/data/features/input-number.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F OC", "129": "A B" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "129": "C K", "1025": "L G M N O" }, C: { "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB QC RC", "513": "0 1 2 3 4 DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, D: { "1": "0 1 2 3 4 6 7 8 9 J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 I" }, E: { "1": "5 J D E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "I SC AC" }, F: { "1": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB" }, G: { "388": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "2": "3B 2C 3C 4C", "388": "I H 5C NC 6C 7C" }, J: { "2": "D", "388": "A" }, K: { "1": "A B C yB MC zB", "388": "r" }, L: { "388": "H" }, M: { "641": "n" }, N: { "388": "A B" }, O: { "388": "0B" }, P: { "388": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "388": "CC" }, R: { "388": "KD" }, S: { "513": "LD MD" } }, B: 1, C: "Number input type", D: true };
  }
});

// node_modules/caniuse-lite/data/features/input-pattern.js
var require_input_pattern = __commonJS({
  "node_modules/caniuse-lite/data/features/input-pattern.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "A B", "2": "J D E F OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "PC 3B QC RC" }, D: { "1": "0 1 2 3 4 6 7 8 9 A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 I J D E F" }, E: { "1": "B C K L G BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "I SC AC", "16": "5", "388": "J D E F A TC UC VC WC" }, F: { "1": "6 7 8 9 B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB", "2": "F" }, G: { "1": "oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "16": "AC gC NC", "388": "E hC iC jC kC lC mC nC" }, H: { "2": "1C" }, I: { "1": "H 7C", "2": "3B I 2C 3C 4C 5C NC 6C" }, J: { "1": "A", "2": "D" }, K: { "1": "A B C r yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "132": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "Pattern attribute for input fields", D: true };
  }
});

// node_modules/caniuse-lite/data/features/input-placeholder.js
var require_input_placeholder = __commonJS({
  "node_modules/caniuse-lite/data/features/input-placeholder.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "A B", "2": "J D E F OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "PC 3B QC RC" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "5 J D E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "132": "I SC AC" }, F: { "1": "6 7 8 9 C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m MC fC zB", "2": "F bC cC dC eC", "132": "B yB" }, G: { "1": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "1": "1C" }, I: { "1": "3B H 2C 3C 4C NC 6C 7C", "4": "I 5C" }, J: { "1": "D A" }, K: { "1": "B C r yB MC zB", "2": "A" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "input placeholder attribute", D: true };
  }
});

// node_modules/caniuse-lite/data/features/input-range.js
var require_input_range = __commonJS({
  "node_modules/caniuse-lite/data/features/input-range.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "A B", "2": "J D E F OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 PC 3B I J D E F A B C K L G M N O o p q QC RC" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB" }, G: { "1": "E hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC" }, H: { "2": "1C" }, I: { "1": "H NC 6C 7C", "4": "3B I 2C 3C 4C 5C" }, J: { "1": "D A" }, K: { "1": "A B C r yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "Range input type", D: true };
  }
});

// node_modules/caniuse-lite/data/features/input-search.js
var require_input_search = __commonJS({
  "node_modules/caniuse-lite/data/features/input-search.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F OC", "129": "A B" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "129": "C K L G M N O" }, C: { "2": "PC 3B QC RC", "129": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, D: { "1": "0 1 2 3 4 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "16": "5 7 8 9 I J D E F A B C K L p q", "129": "6 G M N O o" }, E: { "1": "J D E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "16": "5 I SC AC" }, F: { "1": "6 7 8 9 C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m fC zB", "2": "F bC cC dC eC", "16": "B yB MC" }, G: { "1": "E hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "16": "AC gC NC" }, H: { "129": "1C" }, I: { "1": "H 6C 7C", "16": "2C 3C", "129": "3B I 4C 5C NC" }, J: { "1": "D", "129": "A" }, K: { "1": "C r", "2": "A", "16": "B yB MC", "129": "zB" }, L: { "1": "H" }, M: { "129": "n" }, N: { "129": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "129": "LD MD" } }, B: 1, C: "Search input type", D: true };
  }
});

// node_modules/caniuse-lite/data/features/input-selection.js
var require_input_selection = __commonJS({
  "node_modules/caniuse-lite/data/features/input-selection.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "F A B", "2": "J D E OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "5 I J D E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "16": "SC AC" }, F: { "1": "6 7 8 9 B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m eC yB MC fC zB", "16": "F bC cC dC" }, G: { "1": "E gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "16": "AC" }, H: { "2": "1C" }, I: { "1": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "1": "D A" }, K: { "1": "A B C r yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "Selection controls for input & textarea", D: true };
  }
});

// node_modules/caniuse-lite/data/features/insert-adjacent.js
var require_insert_adjacent = __commonJS({
  "node_modules/caniuse-lite/data/features/insert-adjacent.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "J D E F A B", "16": "OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB QC RC" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "6 7 8 9 B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB", "16": "F" }, G: { "1": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "1": "1C" }, I: { "1": "3B I H 4C 5C NC 6C 7C", "16": "2C 3C" }, J: { "1": "D A" }, K: { "1": "A B C r yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "Element.insertAdjacentElement() & Element.insertAdjacentText()", D: true };
  }
});

// node_modules/caniuse-lite/data/features/insertadjacenthtml.js
var require_insertadjacenthtml = __commonJS({
  "node_modules/caniuse-lite/data/features/insertadjacenthtml.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "A B", "16": "OC", "132": "J D E F" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 6 7 8 9 E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 PC 3B I J D QC RC" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "5 I J D E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "SC AC" }, F: { "1": "6 7 8 9 B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m cC dC eC yB MC fC zB", "16": "F bC" }, G: { "1": "E gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "16": "AC" }, H: { "1": "1C" }, I: { "1": "3B I H 4C 5C NC 6C 7C", "16": "2C 3C" }, J: { "1": "D A" }, K: { "1": "A B C r yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 4, C: "Element.insertAdjacentHTML()", D: true };
  }
});

// node_modules/caniuse-lite/data/features/internationalization.js
var require_internationalization = __commonJS({
  "node_modules/caniuse-lite/data/features/internationalization.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "B", "2": "J D E F A OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB QC RC" }, D: { "1": "0 1 2 3 4 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 I J D E F A B C K L G M N O o p q" }, E: { "1": "A B C K L G BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F SC AC TC UC VC WC" }, F: { "1": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F B C bC cC dC eC yB MC fC zB" }, G: { "1": "nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC" }, H: { "2": "1C" }, I: { "1": "H 6C 7C", "2": "3B I 2C 3C 4C 5C NC" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "B", "2": "A" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "2": "LD" } }, B: 6, C: "Internationalization API", D: true };
  }
});

// node_modules/caniuse-lite/data/features/intersectionobserver-v2.js
var require_intersectionobserver_v2 = __commonJS({
  "node_modules/caniuse-lite/data/features/intersectionobserver-v2.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "1": "0 1 2 3 4 tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB bC cC dC eC yB MC fC zB" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q DD ED FD GD HD 1B 2B ID JD", "2": "I 8C 9C AD BD CD BC" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "2": "LD MD" } }, B: 7, C: "IntersectionObserver V2", D: true };
  }
});

// node_modules/caniuse-lite/data/features/intersectionobserver.js
var require_intersectionobserver = __commonJS({
  "node_modules/caniuse-lite/data/features/intersectionobserver.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "M N O", "2": "C K L", "260": "G", "513": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB QC RC", "194": "aB bB cB" }, D: { "1": "gB 4B hB 5B iB jB kB", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB", "260": "ZB aB bB cB dB eB fB", "513": "0 1 2 3 4 lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "K L G zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A B C SC AC TC UC VC WC BC yB" }, F: { "1": "TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB bC cC dC eC yB MC fC zB", "260": "MB NB OB PB QB RB SB", "513": "kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m" }, G: { "1": "sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC" }, H: { "2": "1C" }, I: { "2": "3B I 2C 3C 4C 5C NC 6C 7C", "513": "H" }, J: { "2": "D A" }, K: { "2": "A B C yB MC zB", "513": "r" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I", "260": "8C 9C" }, Q: { "513": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "2": "LD" } }, B: 5, C: "IntersectionObserver", D: true };
  }
});

// node_modules/caniuse-lite/data/features/intl-pluralrules.js
var require_intl_pluralrules = __commonJS({
  "node_modules/caniuse-lite/data/features/intl-pluralrules.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N", "130": "O" }, C: { "1": "0 1 2 3 4 gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB QC RC" }, D: { "1": "0 1 2 3 4 jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB" }, E: { "1": "K L G CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A B C SC AC TC UC VC WC BC yB zB" }, F: { "1": "YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB bC cC dC eC yB MC fC zB" }, G: { "1": "tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I 8C 9C AD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "2": "LD" } }, B: 6, C: "Intl.PluralRules API", D: true };
  }
});

// node_modules/caniuse-lite/data/features/intrinsic-width.js
var require_intrinsic_width = __commonJS({
  "node_modules/caniuse-lite/data/features/intrinsic-width.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "2": "C K L G M N O", "1025": "0 1 2 3 4 d e f g h i j k l m s t u v w x y z H n", "1537": "P Q R S T U V W X Y Z a b c" }, C: { "2": "PC", "932": "5 6 7 8 9 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB QC RC", "2308": "0 1 2 3 4 mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, D: { "2": "5 6 I J D E F A B C K L G M N O o p", "545": "7 8 9 q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB", "1025": "0 1 2 3 4 d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "1537": "UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c" }, E: { "1": "1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J SC AC TC", "516": "B C K L G yB zB CC XC YC DC EC 0B ZC", "548": "F A WC BC", "676": "D E UC VC" }, F: { "2": "F B C bC cC dC eC yB MC fC zB", "513": "IB", "545": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB", "1025": "e f g h i j k l m", "1537": "HB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d" }, G: { "1": "1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC hC iC", "516": "xC yC zC DC EC 0B 0C", "548": "lC mC nC oC pC qC rC sC tC uC vC wC", "676": "E jC kC" }, H: { "2": "1C" }, I: { "2": "3B I 2C 3C 4C 5C NC", "545": "6C 7C", "1025": "H" }, J: { "2": "D", "545": "A" }, K: { "2": "A B C yB MC zB", "1025": "r" }, L: { "1025": "H" }, M: { "2308": "n" }, N: { "2": "A B" }, O: { "1537": "0B" }, P: { "545": "I", "1025": "o p q 2B ID JD", "1537": "8C 9C AD BD CD BC DD ED FD GD HD 1B" }, Q: { "1537": "CC" }, R: { "1537": "KD" }, S: { "932": "LD", "2308": "MD" } }, B: 5, C: "Intrinsic & Extrinsic Sizing", D: true };
  }
});

// node_modules/caniuse-lite/data/features/jpeg2000.js
var require_jpeg2000 = __commonJS({
  "node_modules/caniuse-lite/data/features/jpeg2000.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "2": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "J D E F A B C K L G UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "I SC AC", "129": "5 TC" }, F: { "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB" }, G: { "1": "E hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "2": "A B C r yB MC zB" }, L: { "2": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "2": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "2": "KD" }, S: { "2": "LD MD" } }, B: 6, C: "JPEG 2000 image format", D: true };
  }
});

// node_modules/caniuse-lite/data/features/jpegxl.js
var require_jpegxl = __commonJS({
  "node_modules/caniuse-lite/data/features/jpegxl.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "2": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z y z H n", "578": "a b c d e f g h i j k l m s t u v w x" }, C: { "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y QC RC", "322": "0 1 2 3 4 Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z y z H n 7B 8B 9B", "194": "a b c d e f g h i j k l m s t u v w x" }, E: { "1": "2B LC aC", "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC" }, F: { "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB bC cC dC eC yB MC fC zB", "194": "wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m" }, G: { "1": "2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "2": "A B C r yB MC zB" }, L: { "2": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "2": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "2": "KD" }, S: { "2": "LD MD" } }, B: 6, C: "JPEG XL image format", D: true };
  }
});

// node_modules/caniuse-lite/data/features/jpegxr.js
var require_jpegxr = __commonJS({
  "node_modules/caniuse-lite/data/features/jpegxr.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "F A B", "2": "J D E OC" }, B: { "1": "C K L G M N O", "2": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "2": "A B C r yB MC zB" }, L: { "2": "H" }, M: { "2": "n" }, N: { "1": "A B" }, O: { "2": "0B" }, P: { "2": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "2": "KD" }, S: { "2": "LD MD" } }, B: 6, C: "JPEG XR image format", D: true };
  }
});

// node_modules/caniuse-lite/data/features/js-regexp-lookbehind.js
var require_js_regexp_lookbehind = __commonJS({
  "node_modules/caniuse-lite/data/features/js-regexp-lookbehind.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB QC RC" }, D: { "1": "0 1 2 3 4 iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B" }, E: { "1": "IC JC KC 2B LC aC", "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC" }, F: { "1": "XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB bC cC dC eC yB MC fC zB" }, G: { "1": "IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I 8C 9C AD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "2": "LD" } }, B: 6, C: "Lookbehind in JS regular expressions", D: true };
  }
});

// node_modules/caniuse-lite/data/features/json.js
var require_json = __commonJS({
  "node_modules/caniuse-lite/data/features/json.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "F A B", "2": "J D OC", "129": "E" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC", "2": "PC 3B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "5 I J D E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "SC AC" }, F: { "1": "6 7 8 9 B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m dC eC yB MC fC zB", "2": "F bC cC" }, G: { "1": "E gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC" }, H: { "1": "1C" }, I: { "1": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "1": "D A" }, K: { "1": "A B C r yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 6, C: "JSON parsing", D: true };
  }
});

// node_modules/caniuse-lite/data/features/justify-content-space-evenly.js
var require_justify_content_space_evenly = __commonJS({
  "node_modules/caniuse-lite/data/features/justify-content-space-evenly.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G", "132": "M N O" }, C: { "1": "0 1 2 3 4 aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB QC RC" }, D: { "1": "0 1 2 3 4 hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB", "132": "fB gB 4B" }, E: { "1": "B C K L G yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A SC AC TC UC VC WC", "132": "BC" }, F: { "1": "VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB bC cC dC eC yB MC fC zB", "132": "SB TB UB" }, G: { "1": "pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC", "132": "oC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I 8C 9C", "132": "AD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "132": "LD" } }, B: 5, C: "CSS justify-content: space-evenly", D: true };
  }
});

// node_modules/caniuse-lite/data/features/kerning-pairs-ligatures.js
var require_kerning_pairs_ligatures = __commonJS({
  "node_modules/caniuse-lite/data/features/kerning-pairs-ligatures.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC", "2": "PC" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "5 J D E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "I SC AC" }, F: { "1": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F B C bC cC dC eC yB MC fC zB" }, G: { "1": "E NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "16": "AC gC" }, H: { "2": "1C" }, I: { "1": "H 6C 7C", "2": "2C 3C 4C", "132": "3B I 5C NC" }, J: { "1": "A", "2": "D" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 7, C: "High-quality kerning pairs & ligatures", D: true };
  }
});

// node_modules/caniuse-lite/data/features/keyboardevent-charcode.js
var require_keyboardevent_charcode = __commonJS({
  "node_modules/caniuse-lite/data/features/keyboardevent-charcode.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "F A B", "2": "J D E OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC", "16": "PC" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "5 I J D E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "16": "SC AC" }, F: { "1": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m zB", "2": "F B bC cC dC eC yB MC fC", "16": "C" }, G: { "1": "E hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "16": "AC gC NC" }, H: { "2": "1C" }, I: { "1": "3B I H 4C 5C NC 6C 7C", "16": "2C 3C" }, J: { "1": "D A" }, K: { "1": "r zB", "2": "A B yB MC", "16": "C" }, L: { "1": "H" }, M: { "130": "n" }, N: { "130": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 7, C: "KeyboardEvent.charCode", D: true };
  }
});

// node_modules/caniuse-lite/data/features/keyboardevent-code.js
var require_keyboardevent_code = __commonJS({
  "node_modules/caniuse-lite/data/features/keyboardevent-code.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB QC RC" }, D: { "1": "0 1 2 3 4 WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB", "194": "QB RB SB TB UB VB" }, E: { "1": "B C K L G BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A SC AC TC UC VC WC" }, F: { "1": "JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB bC cC dC eC yB MC fC zB", "194": "DB EB FB GB HB IB" }, G: { "1": "oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "2": "A B C r yB MC zB" }, L: { "194": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "2": "I", "194": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "194": "KD" }, S: { "1": "LD MD" } }, B: 5, C: "KeyboardEvent.code", D: true };
  }
});

// node_modules/caniuse-lite/data/features/keyboardevent-getmodifierstate.js
var require_keyboardevent_getmodifierstate = __commonJS({
  "node_modules/caniuse-lite/data/features/keyboardevent-getmodifierstate.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "F A B", "2": "J D E OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 PC 3B I J D E F A B C K L QC RC" }, D: { "1": "0 1 2 3 4 EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB" }, E: { "1": "B C K L G BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A SC AC TC UC VC WC" }, F: { "1": "6 7 8 9 N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m zB", "2": "F B G M bC cC dC eC yB MC fC", "16": "C" }, G: { "1": "oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC" }, H: { "2": "1C" }, I: { "1": "H 6C 7C", "2": "3B I 2C 3C 4C 5C NC" }, J: { "2": "D A" }, K: { "1": "r zB", "2": "A B yB MC", "16": "C" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 5, C: "KeyboardEvent.getModifierState()", D: true };
  }
});

// node_modules/caniuse-lite/data/features/keyboardevent-key.js
var require_keyboardevent_key = __commonJS({
  "node_modules/caniuse-lite/data/features/keyboardevent-key.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E OC", "260": "F A B" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "260": "C K L G M N O" }, C: { "1": "0 1 2 3 4 DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 PC 3B I J D E F A B C K L G M N O o p q QC RC", "132": "7 8 9 AB BB CB" }, D: { "1": "0 1 2 3 4 ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB" }, E: { "1": "B C K L G BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A SC AC TC UC VC WC" }, F: { "1": "MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m zB", "2": "6 7 8 9 F B G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB bC cC dC eC yB MC fC", "16": "C" }, G: { "1": "oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC" }, H: { "1": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r zB", "2": "A B yB MC", "16": "C" }, L: { "1": "H" }, M: { "1": "n" }, N: { "260": "A B" }, O: { "1": "0B" }, P: { "1": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 5, C: "KeyboardEvent.key", D: true };
  }
});

// node_modules/caniuse-lite/data/features/keyboardevent-location.js
var require_keyboardevent_location = __commonJS({
  "node_modules/caniuse-lite/data/features/keyboardevent-location.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "F A B", "2": "J D E OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 PC 3B I J D E F A B C K L QC RC" }, D: { "1": "0 1 2 3 4 EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "132": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB" }, E: { "1": "D E F A B C K L G UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "16": "J SC AC", "132": "5 I TC" }, F: { "1": "6 7 8 9 N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m zB", "2": "F B bC cC dC eC yB MC fC", "16": "C", "132": "G M" }, G: { "1": "E kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "16": "AC gC NC", "132": "hC iC jC" }, H: { "2": "1C" }, I: { "1": "H 6C 7C", "16": "2C 3C", "132": "3B I 4C 5C NC" }, J: { "132": "D A" }, K: { "1": "r zB", "2": "A B yB MC", "16": "C" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 5, C: "KeyboardEvent.location", D: true };
  }
});

// node_modules/caniuse-lite/data/features/keyboardevent-which.js
var require_keyboardevent_which = __commonJS({
  "node_modules/caniuse-lite/data/features/keyboardevent-which.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "F A B", "2": "J D E OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "J D E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "I SC AC", "16": "5" }, F: { "1": "6 7 8 9 B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m cC dC eC yB MC fC zB", "16": "F bC" }, G: { "1": "E hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "16": "AC gC NC" }, H: { "2": "1C" }, I: { "1": "3B I H 4C 5C NC", "16": "2C 3C", "132": "6C 7C" }, J: { "1": "D A" }, K: { "1": "A B C r yB MC zB" }, L: { "132": "H" }, M: { "132": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "2": "I", "132": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "132": "KD" }, S: { "1": "LD MD" } }, B: 7, C: "KeyboardEvent.which", D: true };
  }
});

// node_modules/caniuse-lite/data/features/lazyload.js
var require_lazyload = __commonJS({
  "node_modules/caniuse-lite/data/features/lazyload.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "B", "2": "J D E F A OC" }, B: { "1": "C K L G M N O", "2": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "2": "A B C r yB MC zB" }, L: { "2": "H" }, M: { "2": "n" }, N: { "1": "B", "2": "A" }, O: { "2": "0B" }, P: { "2": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "2": "KD" }, S: { "2": "LD MD" } }, B: 7, C: "Resource Hints: Lazyload", D: true };
  }
});

// node_modules/caniuse-lite/data/features/let.js
var require_let = __commonJS({
  "node_modules/caniuse-lite/data/features/let.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A OC", "2052": "B" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "194": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB QC RC" }, D: { "1": "0 1 2 3 4 XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 I J D E F A B C K L G M N O", "322": "6 7 8 9 o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB", "516": "PB QB RB SB TB UB VB WB" }, E: { "1": "B C K L G yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F SC AC TC UC VC WC", "1028": "A BC" }, F: { "1": "KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F B C bC cC dC eC yB MC fC zB", "322": "6 7 8 9 G M N O o p q AB BB", "516": "CB DB EB FB GB HB IB JB" }, G: { "1": "pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC", "1028": "nC oC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "B", "2": "A" }, O: { "1": "0B" }, P: { "1": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "516": "I" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 6, C: "let", D: true };
  }
});

// node_modules/caniuse-lite/data/features/link-icon-png.js
var require_link_icon_png = __commonJS({
  "node_modules/caniuse-lite/data/features/link-icon-png.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "B", "2": "J D E F A OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB" }, G: { "1": "rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "130": "E AC gC NC hC iC jC kC lC mC nC oC pC qC" }, H: { "130": "1C" }, I: { "1": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "1": "D", "130": "A" }, K: { "1": "r", "130": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "130": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "PNG favicons", D: true };
  }
});

// node_modules/caniuse-lite/data/features/link-icon-svg.js
var require_link_icon_svg = __commonJS({
  "node_modules/caniuse-lite/data/features/link-icon-svg.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "2": "C K L G M N O P", "1537": "0 1 2 3 4 Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "2": "PC 3B QC RC", "260": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB", "513": "0 1 2 3 4 PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, D: { "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P", "1537": "0 1 2 3 4 Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "SB TB UB VB WB XB YB ZB aB bB", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB cB dB eB fB gB hB iB jB kB lB mB bC cC dC eC yB MC fC zB", "1537": "nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m" }, G: { "2": "rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "130": "E AC gC NC hC iC jC kC lC mC nC oC pC qC" }, H: { "130": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D", "130": "A" }, K: { "130": "A B C yB MC zB", "1537": "r" }, L: { "1537": "H" }, M: { "2": "n" }, N: { "130": "A B" }, O: { "2": "0B" }, P: { "2": "I 8C 9C AD BD CD BC DD ED", "1537": "o p q FD GD HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "1537": "KD" }, S: { "513": "LD MD" } }, B: 1, C: "SVG favicons", D: true };
  }
});

// node_modules/caniuse-lite/data/features/link-rel-dns-prefetch.js
var require_link_rel_dns_prefetch = __commonJS({
  "node_modules/caniuse-lite/data/features/link-rel-dns-prefetch.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "A B", "2": "J D E OC", "132": "F" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "2": "PC 3B", "260": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "5 J D E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "I SC AC" }, F: { "1": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F B C bC cC dC eC yB MC fC zB" }, G: { "16": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "16": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "16": "D A" }, K: { "1": "r", "16": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "B", "2": "A" }, O: { "1": "0B" }, P: { "1": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "16": "I" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 5, C: "Resource Hints: dns-prefetch", D: true };
  }
});

// node_modules/caniuse-lite/data/features/link-rel-modulepreload.js
var require_link_rel_modulepreload = __commonJS({
  "node_modules/caniuse-lite/data/features/link-rel-modulepreload.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "1": "3 4 H n 7B 8B 9B", "2": "0 1 2 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z QC RC" }, D: { "1": "0 1 2 3 4 mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB" }, E: { "1": "2B LC aC", "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC" }, F: { "1": "bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bC cC dC eC yB MC fC zB" }, G: { "1": "2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I 8C 9C AD BD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "2": "LD MD" } }, B: 1, C: "Resource Hints: modulepreload", D: true };
  }
});

// node_modules/caniuse-lite/data/features/link-rel-preconnect.js
var require_link_rel_preconnect = __commonJS({
  "node_modules/caniuse-lite/data/features/link-rel-preconnect.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L", "260": "G M N O" }, C: { "1": "3 4 OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB QC RC", "129": "NB", "514": "0 1 2 rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z" }, D: { "1": "0 1 2 3 4 UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB" }, E: { "1": "C K L G yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A B SC AC TC UC VC WC BC" }, F: { "1": "HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB bC cC dC eC yB MC fC zB" }, G: { "1": "qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC pC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 5, C: "Resource Hints: preconnect", D: true };
  }
});

// node_modules/caniuse-lite/data/features/link-rel-prefetch.js
var require_link_rel_prefetch = __commonJS({
  "node_modules/caniuse-lite/data/features/link-rel-prefetch.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "B", "2": "J D E F A OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "1": "0 1 2 3 4 6 7 8 9 E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 I J D" }, E: { "2": "5 I J D E F A B C K SC AC TC UC VC WC BC yB zB", "194": "L G CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F B C bC cC dC eC yB MC fC zB" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC", "194": "wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "1": "I H 6C 7C", "2": "3B 2C 3C 4C 5C NC" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "B", "2": "A" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 5, C: "Resource Hints: prefetch", D: true };
  }
});

// node_modules/caniuse-lite/data/features/link-rel-preload.js
var require_link_rel_preload = __commonJS({
  "node_modules/caniuse-lite/data/features/link-rel-preload.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M", "1028": "N O" }, C: { "1": "0 1 2 3 4 U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB QC RC", "132": "eB", "578": "fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T" }, D: { "1": "0 1 2 3 4 YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB" }, E: { "1": "C K L G yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A SC AC TC UC VC WC BC", "322": "B" }, F: { "1": "LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB bC cC dC eC yB MC fC zB" }, G: { "1": "qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC", "322": "pC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "2": "LD MD" } }, B: 4, C: "Resource Hints: preload", D: true };
  }
});

// node_modules/caniuse-lite/data/features/link-rel-prerender.js
var require_link_rel_prerender = __commonJS({
  "node_modules/caniuse-lite/data/features/link-rel-prerender.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "B", "2": "J D E F A OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "1": "0 1 2 3 4 6 7 8 9 K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 I J D E F A B C" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F B C bC cC dC eC yB MC fC zB" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "2": "n" }, N: { "1": "B", "2": "A" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "2": "LD MD" } }, B: 5, C: "Resource Hints: prerender", D: true };
  }
});

// node_modules/caniuse-lite/data/features/loading-lazy-attr.js
var require_loading_lazy_attr = __commonJS({
  "node_modules/caniuse-lite/data/features/loading-lazy-attr.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "1": "8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB QC RC", "132": "0 1 2 3 4 uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B" }, D: { "1": "0 1 2 3 4 wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB", "66": "uB vB" }, E: { "1": "IC JC KC 2B LC aC", "2": "5 I J D E F A B C K SC AC TC UC VC WC BC yB zB", "322": "L G CC XC YC DC", "580": "EC 0B ZC 1B FC GC HC" }, F: { "1": "kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB bC cC dC eC yB MC fC zB", "66": "iB jB" }, G: { "1": "IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC", "322": "wC xC yC zC DC", "580": "EC 0B 0C 1B FC GC HC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "132": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q ED FD GD HD 1B 2B ID JD", "2": "I 8C 9C AD BD CD BC DD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "2": "LD", "132": "MD" } }, B: 1, C: "Lazy loading via attribute for images & iframes", D: true };
  }
});

// node_modules/caniuse-lite/data/features/localecompare.js
var require_localecompare = __commonJS({
  "node_modules/caniuse-lite/data/features/localecompare.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "B", "16": "OC", "132": "J D E F A" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "132": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB QC RC" }, D: { "1": "0 1 2 3 4 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "132": "5 6 7 I J D E F A B C K L G M N O o p q" }, E: { "1": "A B C K L G BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "132": "5 I J D E F SC AC TC UC VC WC" }, F: { "1": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "16": "F B C bC cC dC eC yB MC fC", "132": "zB" }, G: { "1": "nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "132": "E AC gC NC hC iC jC kC lC mC" }, H: { "132": "1C" }, I: { "1": "H 6C 7C", "132": "3B I 2C 3C 4C 5C NC" }, J: { "132": "D A" }, K: { "1": "r", "16": "A B C yB MC", "132": "zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "B", "132": "A" }, O: { "1": "0B" }, P: { "1": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "132": "I" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "4": "LD" } }, B: 6, C: "localeCompare()", D: true };
  }
});

// node_modules/caniuse-lite/data/features/magnetometer.js
var require_magnetometer = __commonJS({
  "node_modules/caniuse-lite/data/features/magnetometer.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "1": "0 1 2 3 4 nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB", "194": "gB 4B hB 5B iB jB kB lB mB" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB bC cC dC eC yB MC fC zB" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "2": "A B C r yB MC zB" }, L: { "194": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "2": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "2": "KD" }, S: { "2": "LD MD" } }, B: 4, C: "Magnetometer", D: true };
  }
});

// node_modules/caniuse-lite/data/features/matchesselector.js
var require_matchesselector = __commonJS({
  "node_modules/caniuse-lite/data/features/matchesselector.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E OC", "36": "F A B" }, B: { "1": "0 1 2 3 4 G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "36": "C K L" }, C: { "1": "0 1 2 3 4 IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "PC 3B QC", "36": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB RC" }, D: { "1": "0 1 2 3 4 IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "36": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB" }, E: { "1": "E F A B C K L G VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "I SC AC", "36": "5 J D TC UC" }, F: { "1": "7 8 9 p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F B bC cC dC eC yB", "36": "6 C G M N O o MC fC zB" }, G: { "1": "E kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC", "36": "gC NC hC iC jC" }, H: { "2": "1C" }, I: { "1": "H", "2": "2C", "36": "3B I 3C 4C 5C NC 6C 7C" }, J: { "36": "D A" }, K: { "1": "r", "2": "A B", "36": "C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "36": "A B" }, O: { "1": "0B" }, P: { "1": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "36": "I" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "matches() DOM method", D: true };
  }
});

// node_modules/caniuse-lite/data/features/matchmedia.js
var require_matchmedia = __commonJS({
  "node_modules/caniuse-lite/data/features/matchmedia.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "A B", "2": "J D E F OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 6 7 8 9 J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 PC 3B I QC RC" }, D: { "1": "0 1 2 3 4 6 7 8 9 F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 I J D E" }, E: { "1": "J D E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I SC AC" }, F: { "1": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m zB", "2": "F B C bC cC dC eC yB MC fC" }, G: { "1": "E hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC" }, H: { "1": "1C" }, I: { "1": "3B I H 5C NC 6C 7C", "2": "2C 3C 4C" }, J: { "1": "A", "2": "D" }, K: { "1": "r zB", "2": "A B C yB MC" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 5, C: "matchMedia", D: true };
  }
});

// node_modules/caniuse-lite/data/features/mathml.js
var require_mathml = __commonJS({
  "node_modules/caniuse-lite/data/features/mathml.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "F A B OC", "8": "J D E" }, B: { "2": "C K L G M N O", "8": "P Q R S T U V W X Y Z a b c d e f", "584": "g h i j k l m s t u v w", "1025": "0 1 2 3 4 x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "129": "PC 3B QC RC" }, D: { "1": "8", "8": "5 6 7 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f", "584": "g h i j k l m s t u v w", "1025": "0 1 2 3 4 x y z H n 7B 8B 9B" }, E: { "1": "A B C K L G BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "260": "5 I J D E F SC AC TC UC VC WC" }, F: { "2": "F", "8": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B", "584": "S T U V W X Y Z a b c d", "1025": "e f g h i j k l m", "2052": "B C bC cC dC eC yB MC fC zB" }, G: { "1": "E hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "8": "AC gC NC" }, H: { "8": "1C" }, I: { "8": "3B I 2C 3C 4C 5C NC 6C 7C", "1025": "H" }, J: { "1": "A", "8": "D" }, K: { "8": "A B C r yB MC zB" }, L: { "1025": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "8": "0B" }, P: { "1": "p q", "8": "I o 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "8": "CC" }, R: { "8": "KD" }, S: { "1": "LD MD" } }, B: 2, C: "MathML", D: true };
  }
});

// node_modules/caniuse-lite/data/features/maxlength.js
var require_maxlength = __commonJS({
  "node_modules/caniuse-lite/data/features/maxlength.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "A B", "16": "OC", "900": "J D E F" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "1025": "C K L G M N O" }, C: { "1": "0 1 2 3 4 ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "900": "PC 3B QC RC", "1025": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "J D E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "16": "5 SC", "900": "I AC" }, F: { "1": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "16": "F", "132": "B C bC cC dC eC yB MC fC zB" }, G: { "1": "gC NC hC iC jC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "16": "AC", "2052": "E kC" }, H: { "132": "1C" }, I: { "1": "3B I 4C 5C NC 6C 7C", "16": "2C 3C", "4097": "H" }, J: { "1": "D A" }, K: { "132": "A B C yB MC zB", "4097": "r" }, L: { "4097": "H" }, M: { "4097": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "4097": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1025": "LD MD" } }, B: 1, C: "maxlength attribute for input and textarea elements", D: true };
  }
});

// node_modules/caniuse-lite/data/features/mdn-css-backdrop-pseudo-element.js
var require_mdn_css_backdrop_pseudo_element = __commonJS({
  "node_modules/caniuse-lite/data/features/mdn-css-backdrop-pseudo-element.js"(exports, module2) {
    module2.exports = { A: { D: { "1": "0 1 2 3 4 LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB", "33": "GB HB IB JB KB" }, L: { "1": "H" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "33": "C K L G M N O" }, C: { "1": "0 1 2 3 4 VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB QC RC" }, M: { "1": "n" }, A: { "2": "J D E F A OC", "33": "B" }, F: { "1": "8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F B C G M N O bC cC dC eC yB MC fC zB", "33": "6 7 o p q" }, K: { "1": "r", "2": "A B C yB MC zB" }, E: { "1": "EC 0B ZC 1B FC GC HC IC JC KC 2B LC", "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC aC" }, G: { "1": "EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC", "33": "6C 7C" } }, B: 6, C: "CSS ::backdrop pseudo-element", D: void 0 };
  }
});

// node_modules/caniuse-lite/data/features/mdn-css-unicode-bidi-isolate-override.js
var require_mdn_css_unicode_bidi_isolate_override = __commonJS({
  "node_modules/caniuse-lite/data/features/mdn-css-unicode-bidi-isolate-override.js"(exports, module2) {
    module2.exports = { A: { D: { "1": "0 1 2 3 4 WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB" }, L: { "1": "H" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 PC 3B I J D E F A B C K L G M QC RC", "33": "6 7 8 9 N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB" }, M: { "1": "n" }, A: { "2": "J D E F A B OC" }, F: { "1": "JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB bC cC dC eC yB MC fC zB" }, K: { "1": "r", "2": "A B C yB MC zB" }, E: { "1": "B C K L G yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC", "2": "5 I J SC AC TC UC aC", "33": "D E F A VC WC BC" }, G: { "1": "pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC hC iC", "33": "E jC kC lC mC nC oC" }, P: { "1": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" } }, B: 6, C: "isolate-override from unicode-bidi", D: void 0 };
  }
});

// node_modules/caniuse-lite/data/features/mdn-css-unicode-bidi-isolate.js
var require_mdn_css_unicode_bidi_isolate = __commonJS({
  "node_modules/caniuse-lite/data/features/mdn-css-unicode-bidi-isolate.js"(exports, module2) {
    module2.exports = { A: { D: { "1": "0 1 2 3 4 WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 I J D E F A B C K L G", "33": "6 7 8 9 M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB" }, L: { "1": "H" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 PC 3B I J D E F QC RC", "33": "6 7 8 9 A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB" }, M: { "1": "n" }, A: { "2": "J D E F A B OC" }, F: { "1": "JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F B C bC cC dC eC yB MC fC zB", "33": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB" }, K: { "1": "r", "2": "A B C yB MC zB" }, E: { "1": "B C K L G yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC", "2": "5 I SC AC TC aC", "33": "J D E F A UC VC WC BC" }, G: { "1": "pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC hC", "33": "E iC jC kC lC mC nC oC" }, P: { "1": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" } }, B: 6, C: "isolate from unicode-bidi", D: void 0 };
  }
});

// node_modules/caniuse-lite/data/features/mdn-css-unicode-bidi-plaintext.js
var require_mdn_css_unicode_bidi_plaintext = __commonJS({
  "node_modules/caniuse-lite/data/features/mdn-css-unicode-bidi-plaintext.js"(exports, module2) {
    module2.exports = { A: { D: { "1": "0 1 2 3 4 WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB" }, L: { "1": "H" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 PC 3B I J D E F QC RC", "33": "6 7 8 9 A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB" }, M: { "1": "n" }, A: { "2": "J D E F A B OC" }, F: { "1": "JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB bC cC dC eC yB MC fC zB" }, K: { "1": "r", "2": "A B C yB MC zB" }, E: { "1": "B C K L G yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC", "2": "5 I SC AC TC aC", "33": "J D E F A UC VC WC BC" }, G: { "1": "pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC hC", "33": "E iC jC kC lC mC nC oC" }, P: { "1": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" } }, B: 6, C: "plaintext from unicode-bidi", D: void 0 };
  }
});

// node_modules/caniuse-lite/data/features/mdn-text-decoration-color.js
var require_mdn_text_decoration_color = __commonJS({
  "node_modules/caniuse-lite/data/features/mdn-text-decoration-color.js"(exports, module2) {
    module2.exports = { A: { D: { "1": "0 1 2 3 4 fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB" }, L: { "1": "H" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 PC 3B I QC RC", "33": "6 7 8 9 J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB" }, M: { "1": "n" }, A: { "2": "J D E F A B OC" }, F: { "1": "SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB bC cC dC eC yB MC fC zB" }, K: { "1": "r", "2": "A B C yB MC zB" }, E: { "1": "K L G zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC", "2": "5 I J D SC AC TC UC VC aC", "33": "E F A B C WC BC yB" }, G: { "1": "sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC hC iC jC", "33": "E kC lC mC nC oC pC qC rC" }, P: { "1": "o p q AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I 8C 9C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" } }, B: 6, C: "text-decoration-color property", D: void 0 };
  }
});

// node_modules/caniuse-lite/data/features/mdn-text-decoration-line.js
var require_mdn_text_decoration_line = __commonJS({
  "node_modules/caniuse-lite/data/features/mdn-text-decoration-line.js"(exports, module2) {
    module2.exports = { A: { D: { "1": "0 1 2 3 4 fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB" }, L: { "1": "H" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 PC 3B I QC RC", "33": "6 7 8 9 J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB" }, M: { "1": "n" }, A: { "2": "J D E F A B OC" }, F: { "1": "SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB bC cC dC eC yB MC fC zB" }, K: { "1": "r", "2": "A B C yB MC zB" }, E: { "1": "K L G zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC", "2": "5 I J D SC AC TC UC VC aC", "33": "E F A B C WC BC yB" }, G: { "1": "sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC hC iC jC", "33": "E kC lC mC nC oC pC qC rC" }, P: { "1": "o p q AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I 8C 9C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" } }, B: 6, C: "text-decoration-line property", D: void 0 };
  }
});

// node_modules/caniuse-lite/data/features/mdn-text-decoration-shorthand.js
var require_mdn_text_decoration_shorthand = __commonJS({
  "node_modules/caniuse-lite/data/features/mdn-text-decoration-shorthand.js"(exports, module2) {
    module2.exports = { A: { D: { "1": "0 1 2 3 4 fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB" }, L: { "1": "H" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 6 7 8 9 J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 PC 3B I QC RC" }, M: { "1": "n" }, A: { "2": "J D E F A B OC" }, F: { "1": "SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB bC cC dC eC yB MC fC zB" }, K: { "1": "r", "2": "A B C yB MC zB" }, E: { "2": "5 I J D SC AC TC UC VC aC", "33": "E F A B C K L G WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC" }, G: { "2": "AC gC NC hC iC jC", "33": "E kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, P: { "1": "o p q AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I 8C 9C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" } }, B: 6, C: "text-decoration shorthand property", D: void 0 };
  }
});

// node_modules/caniuse-lite/data/features/mdn-text-decoration-style.js
var require_mdn_text_decoration_style = __commonJS({
  "node_modules/caniuse-lite/data/features/mdn-text-decoration-style.js"(exports, module2) {
    module2.exports = { A: { D: { "1": "0 1 2 3 4 fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB" }, L: { "1": "H" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 PC 3B I QC RC", "33": "6 7 8 9 J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB" }, M: { "1": "n" }, A: { "2": "J D E F A B OC" }, F: { "1": "SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB bC cC dC eC yB MC fC zB" }, K: { "1": "r", "2": "A B C yB MC zB" }, E: { "1": "K L G zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC", "2": "5 I J D SC AC TC UC VC aC", "33": "E F A B C WC BC yB" }, G: { "1": "sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC hC iC jC", "33": "E kC lC mC nC oC pC qC rC" }, P: { "1": "o p q AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I 8C 9C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" } }, B: 6, C: "text-decoration-style property", D: void 0 };
  }
});

// node_modules/caniuse-lite/data/features/media-fragments.js
var require_media_fragments = __commonJS({
  "node_modules/caniuse-lite/data/features/media-fragments.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "2": "C K L G M N O", "132": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB QC RC", "132": "0 1 2 3 4 IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, D: { "2": "5 I J D E F A B C K L G M N", "132": "0 1 2 3 4 6 7 8 9 O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "2": "5 I SC AC TC", "132": "J D E F A B C K L G UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "2": "F B C bC cC dC eC yB MC fC zB", "132": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m" }, G: { "2": "AC gC NC hC iC jC", "132": "E kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "2": "3B I 2C 3C 4C 5C NC", "132": "H 6C 7C" }, J: { "2": "D A" }, K: { "2": "A B C yB MC zB", "132": "r" }, L: { "132": "H" }, M: { "132": "n" }, N: { "132": "A B" }, O: { "132": "0B" }, P: { "2": "I 8C", "132": "o p q 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "132": "CC" }, R: { "132": "KD" }, S: { "132": "LD MD" } }, B: 2, C: "Media Fragments", D: true };
  }
});

// node_modules/caniuse-lite/data/features/mediacapture-fromelement.js
var require_mediacapture_fromelement = __commonJS({
  "node_modules/caniuse-lite/data/features/mediacapture-fromelement.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB QC RC", "260": "0 1 2 3 4 RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, D: { "1": "0 1 2 3 4 iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB", "324": "ZB aB bB cB dB eB fB gB 4B hB 5B" }, E: { "2": "5 I J D E F A SC AC TC UC VC WC BC", "132": "B C K L G yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB bC cC dC eC yB MC fC zB", "324": "KB LB MB NB OB PB QB RB SB TB UB VB" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "260": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I", "132": "8C 9C AD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "260": "LD MD" } }, B: 5, C: "Media Capture from DOM Elements API", D: true };
  }
});

// node_modules/caniuse-lite/data/features/mediarecorder.js
var require_mediarecorder = __commonJS({
  "node_modules/caniuse-lite/data/features/mediarecorder.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB QC RC" }, D: { "1": "0 1 2 3 4 XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB", "194": "VB WB" }, E: { "1": "G XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A B C SC AC TC UC VC WC BC yB", "322": "K L zB CC" }, F: { "1": "KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB bC cC dC eC yB MC fC zB", "194": "IB JB" }, G: { "1": "yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC", "578": "rC sC tC uC vC wC xC" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 5, C: "MediaRecorder API", D: true };
  }
});

// node_modules/caniuse-lite/data/features/mediasource.js
var require_mediasource = __commonJS({
  "node_modules/caniuse-lite/data/features/mediasource.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A OC", "132": "B" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 PC 3B I J D E F A B C K L G M N O o p q QC RC", "66": "9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB" }, D: { "1": "0 1 2 3 4 FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 I J D E F A B C K L G M", "33": "7 8 9 AB BB CB DB EB", "66": "6 N O o p q" }, E: { "1": "E F A B C K L G WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D SC AC TC UC VC" }, F: { "1": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F B C bC cC dC eC yB MC fC zB" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC", "260": "tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "1": "H 7C", "2": "3B I 2C 3C 4C 5C NC 6C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "B", "2": "A" }, O: { "1": "0B" }, P: { "1": "o p q CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I 8C 9C AD BD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 2, C: "Media Source Extensions", D: true };
  }
});

// node_modules/caniuse-lite/data/features/menu.js
var require_menu = __commonJS({
  "node_modules/caniuse-lite/data/features/menu.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "2": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "2": "5 PC 3B I J D QC RC", "132": "6 7 8 9 E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T", "450": "0 1 2 3 4 U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "66": "PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB", "66": "JB KB LB MB NB OB PB QB RB SB TB UB" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "2": "A B C r yB MC zB" }, L: { "2": "H" }, M: { "450": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "2": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "2": "KD" }, S: { "2": "LD MD" } }, B: 7, C: "Context menu item (menuitem element)", D: true };
  }
});

// node_modules/caniuse-lite/data/features/meta-theme-color.js
var require_meta_theme_color = __commonJS({
  "node_modules/caniuse-lite/data/features/meta-theme-color.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "2": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB", "132": "0 1 2 3 4 r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "258": "NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB" }, E: { "1": "G YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A B C K L SC AC TC UC VC WC BC yB zB CC XC" }, F: { "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB" }, G: { "1": "zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "2": "A B C r yB MC zB" }, L: { "513": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "1": "o p q 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I", "16": "8C" }, Q: { "2": "CC" }, R: { "2": "KD" }, S: { "2": "LD MD" } }, B: 1, C: "theme-color Meta Tag", D: true };
  }
});

// node_modules/caniuse-lite/data/features/meter.js
var require_meter = __commonJS({
  "node_modules/caniuse-lite/data/features/meter.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C" }, C: { "1": "0 1 2 3 4 6 7 8 9 M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 PC 3B I J D E F A B C K L G QC RC" }, D: { "1": "0 1 2 3 4 6 7 8 9 E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 I J D" }, E: { "1": "J D E F A B C K L G UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I SC AC TC" }, F: { "1": "6 7 8 9 B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m yB MC fC zB", "2": "F bC cC dC eC" }, G: { "1": "oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC" }, H: { "1": "1C" }, I: { "1": "H 6C 7C", "2": "3B I 2C 3C 4C 5C NC" }, J: { "1": "D A" }, K: { "1": "B C r yB MC zB", "2": "A" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "meter element", D: true };
  }
});

// node_modules/caniuse-lite/data/features/midi.js
var require_midi = __commonJS({
  "node_modules/caniuse-lite/data/features/midi.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v QC RC" }, D: { "1": "0 1 2 3 4 RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB bC cC dC eC yB MC fC zB" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "2": "LD MD" } }, B: 5, C: "Web MIDI API", D: true };
  }
});

// node_modules/caniuse-lite/data/features/minmaxwh.js
var require_minmaxwh = __commonJS({
  "node_modules/caniuse-lite/data/features/minmaxwh.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "F A B", "8": "J OC", "129": "D", "257": "E" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB" }, G: { "1": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "1": "1C" }, I: { "1": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "1": "D A" }, K: { "1": "A B C r yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 2, C: "CSS min/max-width/height", D: true };
  }
});

// node_modules/caniuse-lite/data/features/mp3.js
var require_mp3 = __commonJS({
  "node_modules/caniuse-lite/data/features/mp3.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "F A B", "2": "J D E OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 7 8 9 q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "PC 3B", "132": "5 6 I J D E F A B C K L G M N O o p QC RC" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "5 I J D E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "SC AC" }, F: { "1": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F B C bC cC dC eC yB MC fC zB" }, G: { "1": "E gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC" }, H: { "2": "1C" }, I: { "1": "3B I H 4C 5C NC 6C 7C", "2": "2C 3C" }, J: { "1": "D A" }, K: { "1": "B C r yB MC zB", "2": "A" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 6, C: "MP3 audio format", D: true };
  }
});

// node_modules/caniuse-lite/data/features/mpeg-dash.js
var require_mpeg_dash = __commonJS({
  "node_modules/caniuse-lite/data/features/mpeg-dash.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "C K L G M N O", "2": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC", "386": "p q" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "2": "A B C r yB MC zB" }, L: { "2": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "2": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "2": "KD" }, S: { "2": "LD MD" } }, B: 6, C: "Dynamic Adaptive Streaming over HTTP (MPEG-DASH)", D: true };
  }
});

// node_modules/caniuse-lite/data/features/mpeg4.js
var require_mpeg4 = __commonJS({
  "node_modules/caniuse-lite/data/features/mpeg4.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "F A B", "2": "J D E OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 PC 3B I J D E F A B C K L G M N O o QC RC", "4": "7 8 9 p q AB BB CB DB EB FB GB HB IB" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "5 I J D E F A B C K L G AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "SC" }, F: { "1": "9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 F B C G M N O o p q bC cC dC eC yB MC fC zB" }, G: { "1": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "1": "H 6C 7C", "4": "3B I 2C 3C 5C NC", "132": "4C" }, J: { "1": "D A" }, K: { "1": "B C r yB MC zB", "2": "A" }, L: { "1": "H" }, M: { "260": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 6, C: "MPEG-4/H.264 video format", D: true };
  }
});

// node_modules/caniuse-lite/data/features/multibackgrounds.js
var require_multibackgrounds = __commonJS({
  "node_modules/caniuse-lite/data/features/multibackgrounds.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "F A B", "2": "J D E OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B RC", "2": "PC 3B QC" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "6 7 8 9 B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m dC eC yB MC fC zB", "2": "F bC cC" }, G: { "1": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "1": "1C" }, I: { "1": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "1": "D A" }, K: { "1": "A B C r yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 4, C: "CSS3 Multiple backgrounds", D: true };
  }
});

// node_modules/caniuse-lite/data/features/multicolumn.js
var require_multicolumn = __commonJS({
  "node_modules/caniuse-lite/data/features/multicolumn.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "A B", "2": "J D E F OC" }, B: { "1": "C K L G M N O", "516": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "132": "aB bB cB dB eB fB gB 4B hB 5B iB jB kB", "164": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB QC RC", "516": "lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a", "1028": "0 1 2 3 4 b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, D: { "420": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB", "516": "0 1 2 3 4 YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "A B C K L G BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "132": "F WC", "164": "D E VC", "420": "5 I J SC AC TC UC" }, F: { "1": "C yB MC fC zB", "2": "F B bC cC dC eC", "420": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB", "516": "LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m" }, G: { "1": "nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "132": "lC mC", "164": "E jC kC", "420": "AC gC NC hC iC" }, H: { "1": "1C" }, I: { "420": "3B I 2C 3C 4C 5C NC 6C 7C", "516": "H" }, J: { "420": "D A" }, K: { "1": "C yB MC zB", "2": "A B", "516": "r" }, L: { "516": "H" }, M: { "1028": "n" }, N: { "1": "A B" }, O: { "516": "0B" }, P: { "1": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "420": "I" }, Q: { "516": "CC" }, R: { "516": "KD" }, S: { "164": "LD MD" } }, B: 4, C: "CSS3 Multiple column layout", D: true };
  }
});

// node_modules/caniuse-lite/data/features/mutation-events.js
var require_mutation_events = __commonJS({
  "node_modules/caniuse-lite/data/features/mutation-events.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E OC", "260": "F A B" }, B: { "132": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "260": "C K L G M N O" }, C: { "2": "5 PC 3B I QC RC", "260": "0 1 2 3 4 6 7 8 9 J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, D: { "16": "5 I J D E F A B C K L", "132": "0 1 2 3 4 6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "16": "SC AC", "132": "5 I J D E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "C fC zB", "2": "F bC cC dC eC", "16": "B yB MC", "132": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m" }, G: { "16": "AC gC", "132": "E NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "16": "2C 3C", "132": "3B I H 4C 5C NC 6C 7C" }, J: { "132": "D A" }, K: { "1": "C zB", "2": "A", "16": "B yB MC", "132": "r" }, L: { "132": "H" }, M: { "260": "n" }, N: { "260": "A B" }, O: { "132": "0B" }, P: { "132": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "132": "CC" }, R: { "132": "KD" }, S: { "260": "LD MD" } }, B: 5, C: "Mutation events", D: true };
  }
});

// node_modules/caniuse-lite/data/features/mutationobserver.js
var require_mutationobserver = __commonJS({
  "node_modules/caniuse-lite/data/features/mutationobserver.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "B", "2": "J D E OC", "8": "F A" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 6 7 8 9 L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 PC 3B I J D E F A B C K QC RC" }, D: { "1": "0 1 2 3 4 BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 I J D E F A B C K L G M N", "33": "6 7 8 9 O o p q AB" }, E: { "1": "D E F A B C K L G UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I SC AC TC", "33": "J" }, F: { "1": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F B C bC cC dC eC yB MC fC zB" }, G: { "1": "E jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC hC", "33": "iC" }, H: { "2": "1C" }, I: { "1": "H 6C 7C", "2": "3B 2C 3C 4C", "8": "I 5C NC" }, J: { "1": "A", "2": "D" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "B", "8": "A" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "Mutation Observer", D: true };
  }
});

// node_modules/caniuse-lite/data/features/namevalue-storage.js
var require_namevalue_storage = __commonJS({
  "node_modules/caniuse-lite/data/features/namevalue-storage.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "E F A B", "2": "OC", "8": "J D" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC", "4": "PC 3B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "5 I J D E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "SC AC" }, F: { "1": "6 7 8 9 B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m dC eC yB MC fC zB", "2": "F bC cC" }, G: { "1": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "1": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "1": "D A" }, K: { "1": "B C r yB MC zB", "2": "A" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "Web Storage - name/value pairs", D: true };
  }
});

// node_modules/caniuse-lite/data/features/native-filesystem-api.js
var require_native_filesystem_api = __commonJS({
  "node_modules/caniuse-lite/data/features/native-filesystem-api.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "2": "C K L G M N O", "194": "P Q R S T U", "260": "0 1 2 3 4 V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y QC RC", "516": "0 1 2 3 4 z H n 7B 8B 9B" }, D: { "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r", "194": "tB uB vB wB xB P Q R S T U", "260": "0 1 2 3 4 V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC", "516": "DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB bC cC dC eC yB MC fC zB", "194": "iB jB kB lB mB nB oB pB qB rB", "260": "sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC", "516": "DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "2": "3B I 2C 3C 4C 5C NC 6C 7C", "516": "H" }, J: { "2": "D A" }, K: { "2": "A B C r yB MC zB" }, L: { "516": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "2": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "2": "KD" }, S: { "2": "LD MD" } }, B: 7, C: "File System Access API", D: true };
  }
});

// node_modules/caniuse-lite/data/features/nav-timing.js
var require_nav_timing = __commonJS({
  "node_modules/caniuse-lite/data/features/nav-timing.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "F A B", "2": "J D E OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 6 7 8 9 D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 PC 3B I J QC RC" }, D: { "1": "0 1 2 3 4 6 7 8 9 K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 I", "33": "J D E F A B C" }, E: { "1": "E F A B C K L G WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D SC AC TC UC VC" }, F: { "1": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F B C bC cC dC eC yB MC fC zB" }, G: { "1": "E lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC hC iC jC kC" }, H: { "2": "1C" }, I: { "1": "I H 5C NC 6C 7C", "2": "3B 2C 3C 4C" }, J: { "1": "A", "2": "D" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 2, C: "Navigation Timing API", D: true };
  }
});

// node_modules/caniuse-lite/data/features/netinfo.js
var require_netinfo = __commonJS({
  "node_modules/caniuse-lite/data/features/netinfo.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "2": "C K L G M N O", "1028": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB", "1028": "0 1 2 3 4 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB bC cC dC eC yB MC fC zB", "1028": "WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "1": "H", "2": "2C 6C 7C", "132": "3B I 3C 4C 5C NC" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q BD CD BC DD ED FD GD HD 1B 2B ID JD", "132": "I", "516": "8C 9C AD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "2": "MD", "260": "LD" } }, B: 7, C: "Network Information API", D: true };
  }
});

// node_modules/caniuse-lite/data/features/notifications.js
var require_notifications = __commonJS({
  "node_modules/caniuse-lite/data/features/notifications.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K" }, C: { "1": "0 1 2 3 4 7 8 9 q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 PC 3B I J D E F A B C K L G M N O o p QC RC" }, D: { "1": "0 1 2 3 4 7 8 9 q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "I", "36": "5 6 J D E F A B C K L G M N O o p" }, E: { "1": "J D E F A B C K L G UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I SC AC TC" }, F: { "1": "9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 F B C G M N O o p q bC cC dC eC yB MC fC zB" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC", "516": "IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "2": "3B I 2C 3C 4C 5C NC", "36": "H 6C 7C" }, J: { "1": "A", "2": "D" }, K: { "2": "A B C yB MC zB", "36": "r" }, L: { "257": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "36": "I", "130": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "130": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "Web Notifications", D: true };
  }
});

// node_modules/caniuse-lite/data/features/object-entries.js
var require_object_entries = __commonJS({
  "node_modules/caniuse-lite/data/features/object-entries.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K" }, C: { "1": "0 1 2 3 4 VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB QC RC" }, D: { "1": "0 1 2 3 4 cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB" }, E: { "1": "B C K L G BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A SC AC TC UC VC WC" }, F: { "1": "PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB bC cC dC eC yB MC fC zB" }, G: { "1": "oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D", "16": "A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I 8C" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 6, C: "Object.entries", D: true };
  }
});

// node_modules/caniuse-lite/data/features/object-fit.js
var require_object_fit = __commonJS({
  "node_modules/caniuse-lite/data/features/object-fit.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G", "260": "M N O" }, C: { "1": "0 1 2 3 4 KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB QC RC" }, D: { "1": "0 1 2 3 4 GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB" }, E: { "1": "A B C K L G BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D SC AC TC UC", "132": "E F VC WC" }, F: { "1": "6 7 8 9 o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F G M N O bC cC dC", "33": "B C eC yB MC fC zB" }, G: { "1": "nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC hC iC jC", "132": "E kC lC mC" }, H: { "33": "1C" }, I: { "1": "H 7C", "2": "3B I 2C 3C 4C 5C NC 6C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A", "33": "B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 4, C: "CSS3 object-fit/object-position", D: true };
  }
});

// node_modules/caniuse-lite/data/features/object-observe.js
var require_object_observe = __commonJS({
  "node_modules/caniuse-lite/data/features/object-observe.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "2": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "1": "KB LB MB NB OB PB QB RB SB TB UB VB WB XB", "2": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "7 8 9 AB BB CB DB EB FB GB HB IB JB KB", "2": "6 F B C G M N O o p q LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "2": "A B C r yB MC zB" }, L: { "2": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "1": "I", "2": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "2": "KD" }, S: { "2": "LD MD" } }, B: 7, C: "Object.observe data binding", D: true };
  }
});

// node_modules/caniuse-lite/data/features/object-values.js
var require_object_values = __commonJS({
  "node_modules/caniuse-lite/data/features/object-values.js"(exports, module2) {
    module2.exports = { A: { A: { "8": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K" }, C: { "1": "0 1 2 3 4 VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "8": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB QC RC" }, D: { "1": "0 1 2 3 4 cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "8": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB" }, E: { "1": "B C K L G BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "8": "5 I J D E F A SC AC TC UC VC WC" }, F: { "1": "PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "8": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB bC cC dC eC yB MC fC zB" }, G: { "1": "oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "8": "E AC gC NC hC iC jC kC lC mC nC" }, H: { "8": "1C" }, I: { "1": "H", "8": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "8": "D A" }, K: { "1": "r", "8": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "8": "A B" }, O: { "1": "0B" }, P: { "1": "o p q 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "8": "I 8C" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 6, C: "Object.values method", D: true };
  }
});

// node_modules/caniuse-lite/data/features/objectrtc.js
var require_objectrtc = __commonJS({
  "node_modules/caniuse-lite/data/features/objectrtc.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "K L G M N O", "2": "0 1 2 3 4 C P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "2": "A B C r yB MC zB" }, L: { "2": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "2": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "2": "KD" }, S: { "2": "LD MD" } }, B: 6, C: "Object RTC (ORTC) API for WebRTC", D: true };
  }
});

// node_modules/caniuse-lite/data/features/offline-apps.js
var require_offline_apps = __commonJS({
  "node_modules/caniuse-lite/data/features/offline-apps.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "A B", "2": "F OC", "8": "J D E" }, B: { "1": "C K L G M N O P Q R S T", "2": "0 1 2 3 4 U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S QC RC", "2": "0 1 2 3 4 T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "4": "3B", "8": "PC" }, D: { "1": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T", "2": "0 1 2 3 4 U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "5 I J D E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "8": "SC AC" }, F: { "1": "6 7 8 9 B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB eC yB MC fC zB", "2": "F r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC", "8": "cC dC" }, G: { "1": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "1": "3B I 2C 3C 4C 5C NC 6C 7C", "2": "H" }, J: { "1": "D A" }, K: { "1": "B C yB MC zB", "2": "A r" }, L: { "2": "H" }, M: { "2": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "2": "KD" }, S: { "1": "LD", "2": "MD" } }, B: 7, C: "Offline web applications", D: true };
  }
});

// node_modules/caniuse-lite/data/features/offscreencanvas.js
var require_offscreencanvas = __commonJS({
  "node_modules/caniuse-lite/data/features/offscreencanvas.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB QC RC", "194": "SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s" }, D: { "1": "0 1 2 3 4 pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB", "322": "gB 4B hB 5B iB jB kB lB mB nB oB" }, E: { "1": "2B LC aC", "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC", "516": "GC HC IC JC KC" }, F: { "1": "kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB bC cC dC eC yB MC fC zB", "322": "TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB" }, G: { "1": "2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC", "516": "GC HC IC JC KC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q BC DD ED FD GD HD 1B 2B ID JD", "2": "I 8C 9C AD BD CD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "194": "LD MD" } }, B: 1, C: "OffscreenCanvas", D: true };
  }
});

// node_modules/caniuse-lite/data/features/ogg-vorbis.js
var require_ogg_vorbis = __commonJS({
  "node_modules/caniuse-lite/data/features/ogg-vorbis.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC", "2": "PC 3B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "2": "5 I J D E F A B C K L SC AC TC UC VC WC BC yB zB CC", "132": "G XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "6 7 8 9 B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m dC eC yB MC fC zB", "2": "F bC cC" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "1": "3B I H 4C 5C NC 6C 7C", "16": "2C 3C" }, J: { "1": "A", "2": "D" }, K: { "1": "B C r yB MC zB", "2": "A" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 6, C: "Ogg Vorbis audio format", D: true };
  }
});

// node_modules/caniuse-lite/data/features/ogv.js
var require_ogv = __commonJS({
  "node_modules/caniuse-lite/data/features/ogv.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E OC", "8": "F A B" }, B: { "1": "0 1 2 3 4 N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "8": "C K L G M" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC", "2": "PC 3B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "6 7 8 9 B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m dC eC yB MC fC zB", "2": "F bC cC" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "2": "A B C r yB MC zB" }, L: { "2": "H" }, M: { "1": "n" }, N: { "8": "A B" }, O: { "1": "0B" }, P: { "2": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "2": "KD" }, S: { "1": "LD MD" } }, B: 6, C: "Ogg/Theora video format", D: true };
  }
});

// node_modules/caniuse-lite/data/features/ol-reversed.js
var require_ol_reversed = __commonJS({
  "node_modules/caniuse-lite/data/features/ol-reversed.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 6 7 8 9 O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 PC 3B I J D E F A B C K L G M N QC RC" }, D: { "1": "0 1 2 3 4 7 8 9 o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 I J D E F A B C K L G", "16": "6 M N O" }, E: { "1": "D E F A B C K L G UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I SC AC TC", "16": "J" }, F: { "1": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m zB", "2": "F B bC cC dC eC yB MC fC", "16": "C" }, G: { "1": "E iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC hC" }, H: { "1": "1C" }, I: { "1": "H 6C 7C", "2": "3B I 2C 3C 4C 5C NC" }, J: { "1": "A", "2": "D" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "Reversed attribute of ordered lists", D: true };
  }
});

// node_modules/caniuse-lite/data/features/once-event-listener.js
var require_once_event_listener = __commonJS({
  "node_modules/caniuse-lite/data/features/once-event-listener.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G" }, C: { "1": "0 1 2 3 4 YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB QC RC" }, D: { "1": "0 1 2 3 4 dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB" }, E: { "1": "A B C K L G BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F SC AC TC UC VC WC" }, F: { "1": "QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB bC cC dC eC yB MC fC zB" }, G: { "1": "nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I 8C" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "2": "LD" } }, B: 1, C: '"once" event listener option', D: true };
  }
});

// node_modules/caniuse-lite/data/features/online-status.js
var require_online_status = __commonJS({
  "node_modules/caniuse-lite/data/features/online-status.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "F A B", "2": "J D OC", "260": "E" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC", "2": "PC 3B", "516": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB" }, D: { "1": "0 1 2 3 4 6 7 8 9 L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 I J D E F A B C K" }, E: { "1": "5 J E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "I SC AC", "1025": "D" }, F: { "1": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F B C bC cC dC eC yB MC fC", "4": "zB" }, G: { "1": "E NC hC iC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "16": "AC gC", "1025": "jC" }, H: { "2": "1C" }, I: { "1": "3B I H 4C 5C NC 6C 7C", "16": "2C 3C" }, J: { "1": "A", "132": "D" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "Online/offline status", D: true };
  }
});

// node_modules/caniuse-lite/data/features/opus.js
var require_opus = __commonJS({
  "node_modules/caniuse-lite/data/features/opus.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K" }, C: { "1": "0 1 2 3 4 6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 PC 3B I J D E F A B C K L QC RC" }, D: { "1": "0 1 2 3 4 HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB" }, E: { "2": "5 I J D E F A SC AC TC UC VC WC BC", "132": "B C K L G yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "7 8 9 o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 F B C G M N O bC cC dC eC yB MC fC zB" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC", "132": "pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 6, C: "Opus audio format", D: true };
  }
});

// node_modules/caniuse-lite/data/features/orientation-sensor.js
var require_orientation_sensor = __commonJS({
  "node_modules/caniuse-lite/data/features/orientation-sensor.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "1": "0 1 2 3 4 nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB", "194": "gB 4B hB 5B iB jB kB lB mB" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB bC cC dC eC yB MC fC zB" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "2": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "2": "LD MD" } }, B: 4, C: "Orientation Sensor", D: true };
  }
});

// node_modules/caniuse-lite/data/features/outline.js
var require_outline = __commonJS({
  "node_modules/caniuse-lite/data/features/outline.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D OC", "260": "E", "388": "F A B" }, B: { "1": "0 1 2 3 4 G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "388": "C K L" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "6 7 8 9 C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m fC", "129": "zB", "260": "F B bC cC dC eC yB MC" }, G: { "1": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "1": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "1": "D A" }, K: { "1": "C r zB", "260": "A B yB MC" }, L: { "1": "H" }, M: { "1": "n" }, N: { "388": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 4, C: "CSS outline properties", D: true };
  }
});

// node_modules/caniuse-lite/data/features/pad-start-end.js
var require_pad_start_end = __commonJS({
  "node_modules/caniuse-lite/data/features/pad-start-end.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L" }, C: { "1": "0 1 2 3 4 WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB QC RC" }, D: { "1": "0 1 2 3 4 fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB" }, E: { "1": "A B C K L G BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F SC AC TC UC VC WC" }, F: { "1": "SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB bC cC dC eC yB MC fC zB" }, G: { "1": "nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I 8C 9C" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 6, C: "String.prototype.padStart(), String.prototype.padEnd()", D: true };
  }
});

// node_modules/caniuse-lite/data/features/page-transition-events.js
var require_page_transition_events = __commonJS({
  "node_modules/caniuse-lite/data/features/page-transition-events.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "B", "2": "J D E F A OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "5 J D E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "I SC AC" }, F: { "1": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F B C bC cC dC eC yB MC fC zB" }, G: { "1": "E hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "16": "AC gC NC" }, H: { "2": "1C" }, I: { "1": "3B I H 4C 5C NC 6C 7C", "16": "2C 3C" }, J: { "1": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "B", "2": "A" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "PageTransitionEvent", D: true };
  }
});

// node_modules/caniuse-lite/data/features/pagevisibility.js
var require_pagevisibility = __commonJS({
  "node_modules/caniuse-lite/data/features/pagevisibility.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "A B", "2": "J D E F OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 6 7 8 9 O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 PC 3B I J D E F QC RC", "33": "A B C K L G M N" }, D: { "1": "0 1 2 3 4 HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 I J D E F A B C K", "33": "6 7 8 9 L G M N O o p q AB BB CB DB EB FB GB" }, E: { "1": "D E F A B C K L G UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J SC AC TC" }, F: { "1": "7 8 9 o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m zB", "2": "F B C bC cC dC eC yB MC fC", "33": "6 G M N O" }, G: { "1": "E jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC hC iC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC", "33": "6C 7C" }, J: { "1": "A", "2": "D" }, K: { "1": "r zB", "2": "A B C yB MC" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "33": "I" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 2, C: "Page Visibility", D: true };
  }
});

// node_modules/caniuse-lite/data/features/passive-event-listener.js
var require_passive_event_listener = __commonJS({
  "node_modules/caniuse-lite/data/features/passive-event-listener.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G" }, C: { "1": "0 1 2 3 4 XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB QC RC" }, D: { "1": "0 1 2 3 4 ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB" }, E: { "1": "A B C K L G BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F SC AC TC UC VC WC" }, F: { "1": "MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB bC cC dC eC yB MC fC zB" }, G: { "1": "nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "2": "LD" } }, B: 1, C: "Passive event listeners", D: true };
  }
});

// node_modules/caniuse-lite/data/features/passkeys.js
var require_passkeys = __commonJS({
  "node_modules/caniuse-lite/data/features/passkeys.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 w x y z H n", "2": "C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "1": "0 1 2 3 4 w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v" }, E: { "1": "FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B" }, F: { "1": "g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f bC cC dC eC yB MC fC zB" }, G: { "1": "1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "2": "A B C r yB MC zB" }, L: { "1": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "1": "p q", "2": "I 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "16": "o" }, Q: { "2": "CC" }, R: { "2": "KD" }, S: { "2": "LD MD" } }, B: 6, C: "Passkeys", D: true };
  }
});

// node_modules/caniuse-lite/data/features/passwordrules.js
var require_passwordrules = __commonJS({
  "node_modules/caniuse-lite/data/features/passwordrules.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "2": "C K L G M N O", "16": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n QC RC", "16": "7B 8B 9B" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "16": "7B 8B 9B" }, E: { "1": "C K zB", "2": "5 I J D E F A B SC AC TC UC VC WC BC yB", "16": "L G CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bC cC dC eC yB MC fC zB", "16": "bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "16": "1C" }, I: { "2": "3B I 2C 3C 4C 5C NC 6C 7C", "16": "H" }, J: { "2": "D", "16": "A" }, K: { "2": "A B C yB MC zB", "16": "r" }, L: { "16": "H" }, M: { "16": "n" }, N: { "2": "A", "16": "B" }, O: { "16": "0B" }, P: { "2": "I 8C 9C", "16": "o p q AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "16": "CC" }, R: { "16": "KD" }, S: { "2": "LD MD" } }, B: 1, C: "Password Rules", D: false };
  }
});

// node_modules/caniuse-lite/data/features/path2d.js
var require_path2d = __commonJS({
  "node_modules/caniuse-lite/data/features/path2d.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K", "132": "L G M N O" }, C: { "1": "0 1 2 3 4 WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB QC RC", "132": "FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB" }, D: { "1": "0 1 2 3 4 oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB", "132": "KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB" }, E: { "1": "A B C K L G WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D SC AC TC UC", "132": "E F VC" }, F: { "1": "dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 F B C G M N O o p q bC cC dC eC yB MC fC zB", "132": "7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB" }, G: { "1": "lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC hC iC jC", "16": "E", "132": "kC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "1": "A", "2": "D" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q BC DD ED FD GD HD 1B 2B ID JD", "132": "I 8C 9C AD BD CD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "Path2D", D: true };
  }
});

// node_modules/caniuse-lite/data/features/payment-request.js
var require_payment_request = __commonJS({
  "node_modules/caniuse-lite/data/features/payment-request.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K", "322": "L", "8196": "G M N O" }, C: { "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB QC RC", "4162": "dB eB fB gB 4B hB 5B iB jB kB lB", "16452": "0 1 2 3 4 mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, D: { "1": "0 1 2 3 4 xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB", "194": "bB cB dB eB fB gB", "1090": "4B hB", "8196": "5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB" }, E: { "1": "K L G zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F SC AC TC UC VC WC", "514": "A B BC", "8196": "C yB" }, F: { "1": "mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB bC cC dC eC yB MC fC zB", "194": "OB PB QB RB SB TB UB VB", "8196": "WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB" }, G: { "1": "sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC", "514": "nC oC pC", "8196": "qC rC" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "2049": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "1": "o p q ED FD GD HD 1B 2B ID JD", "2": "I", "8196": "8C 9C AD BD CD BC DD" }, Q: { "8196": "CC" }, R: { "2": "KD" }, S: { "2": "LD MD" } }, B: 2, C: "Payment Request API", D: true };
  }
});

// node_modules/caniuse-lite/data/features/pdf-viewer.js
var require_pdf_viewer = __commonJS({
  "node_modules/caniuse-lite/data/features/pdf-viewer.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A OC", "132": "B" }, B: { "1": "0 1 2 3 4 G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "16": "C K L" }, C: { "1": "0 1 2 3 4 6 7 8 9 o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 PC 3B I J D E F A B C K L G M N O QC RC" }, D: { "1": "0 1 2 3 4 6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "16": "5 I J D E F A B C K L" }, E: { "1": "5 I J D E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "16": "SC AC" }, F: { "1": "6 7 8 9 C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m zB", "2": "F B bC cC dC eC yB MC fC" }, G: { "1": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "16": "D A" }, K: { "2": "A B C r yB MC zB" }, L: { "2": "H" }, M: { "2": "n" }, N: { "16": "A B" }, O: { "2": "0B" }, P: { "2": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "2": "KD" }, S: { "2": "LD MD" } }, B: 6, C: "Built-in PDF viewer", D: true };
  }
});

// node_modules/caniuse-lite/data/features/permissions-api.js
var require_permissions_api = __commonJS({
  "node_modules/caniuse-lite/data/features/permissions-api.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB QC RC" }, D: { "1": "0 1 2 3 4 RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB" }, E: { "1": "1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC" }, F: { "1": "EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB bC cC dC eC yB MC fC zB" }, G: { "1": "1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 5, C: "Permissions API", D: true };
  }
});

// node_modules/caniuse-lite/data/features/permissions-policy.js
var require_permissions_policy = __commonJS({
  "node_modules/caniuse-lite/data/features/permissions-policy.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "2": "C K L G M N O", "258": "P Q R S T U", "322": "V W", "388": "0 1 2 3 4 X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r QC RC", "258": "0 1 2 3 4 tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, D: { "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B", "258": "hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U", "322": "V W", "388": "0 1 2 3 4 X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "2": "5 I J D E F A B SC AC TC UC VC WC BC", "258": "C K L G yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB bC cC dC eC yB MC fC zB", "258": "VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB", "322": "sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d", "388": "e f g h i j k l m" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC", "258": "qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "2": "3B I 2C 3C 4C 5C NC 6C 7C", "258": "H" }, J: { "2": "D A" }, K: { "2": "A B C yB MC zB", "388": "r" }, L: { "388": "H" }, M: { "258": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "2": "I 8C 9C AD", "258": "o p q BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "258": "CC" }, R: { "388": "KD" }, S: { "2": "LD", "258": "MD" } }, B: 5, C: "Permissions Policy", D: true };
  }
});

// node_modules/caniuse-lite/data/features/picture-in-picture.js
var require_picture_in_picture = __commonJS({
  "node_modules/caniuse-lite/data/features/picture-in-picture.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB QC RC", "132": "0 1 2 3 4 sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "1090": "nB", "1412": "rB", "1668": "oB pB qB" }, D: { "1": "0 1 2 3 4 qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB", "2114": "pB" }, E: { "1": "L G CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F SC AC TC UC VC WC", "4100": "A B C K BC yB zB" }, F: { "1": "r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB bC cC dC eC yB MC fC zB", "8196": "LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB" }, G: { "1": "xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC", "4100": "lC mC nC oC pC qC rC sC tC uC vC wC" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "2": "A B C r yB MC zB" }, L: { "16388": "H" }, M: { "16388": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "2": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "2": "KD" }, S: { "2": "LD MD" } }, B: 5, C: "Picture-in-Picture", D: true };
  }
});

// node_modules/caniuse-lite/data/features/picture.js
var require_picture = __commonJS({
  "node_modules/caniuse-lite/data/features/picture.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C" }, C: { "1": "0 1 2 3 4 MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB QC RC", "578": "IB JB KB LB" }, D: { "1": "0 1 2 3 4 MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB", "194": "LB" }, E: { "1": "A B C K L G WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F SC AC TC UC VC" }, F: { "1": "9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 F B C G M N O o p q bC cC dC eC yB MC fC zB", "322": "8" }, G: { "1": "mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "Picture element", D: true };
  }
});

// node_modules/caniuse-lite/data/features/ping.js
var require_ping = __commonJS({
  "node_modules/caniuse-lite/data/features/ping.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M" }, C: { "2": "PC", "194": "0 1 2 3 4 5 6 7 8 9 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "1": "0 1 2 3 4 6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "16": "5 I J D E F A B C K L" }, E: { "1": "J D E F A B C K L G UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I SC AC TC" }, F: { "1": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F B C bC cC dC eC yB MC fC zB" }, G: { "1": "E hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC" }, H: { "2": "1C" }, I: { "1": "H 6C 7C", "2": "3B I 2C 3C 4C 5C NC" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "194": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "194": "LD MD" } }, B: 1, C: "Ping attribute", D: true };
  }
});

// node_modules/caniuse-lite/data/features/png-alpha.js
var require_png_alpha = __commonJS({
  "node_modules/caniuse-lite/data/features/png-alpha.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "D E F A B", "2": "OC", "8": "J" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB" }, G: { "1": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "1": "1C" }, I: { "1": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "1": "D A" }, K: { "1": "A B C r yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 2, C: "PNG alpha transparency", D: true };
  }
});

// node_modules/caniuse-lite/data/features/pointer-events.js
var require_pointer_events = __commonJS({
  "node_modules/caniuse-lite/data/features/pointer-events.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "B", "2": "J D E F A OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B RC", "2": "PC 3B QC" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "5 I J D E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "SC AC" }, F: { "1": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F B C bC cC dC eC yB MC fC zB" }, G: { "1": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "1": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "1": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "B", "2": "A" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 7, C: "CSS pointer-events (for HTML)", D: true };
  }
});

// node_modules/caniuse-lite/data/features/pointer.js
var require_pointer = __commonJS({
  "node_modules/caniuse-lite/data/features/pointer.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "B", "2": "J D E F OC", "164": "A" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 PC 3B I QC RC", "8": "6 7 8 9 J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB", "328": "PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB" }, D: { "1": "0 1 2 3 4 dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 I J D E F A B C K L G M N O o p", "8": "7 8 9 q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB", "584": "aB bB cB" }, E: { "1": "K L G CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J SC AC TC", "8": "D E F A B C UC VC WC BC yB", "1096": "zB" }, F: { "1": "QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F B C bC cC dC eC yB MC fC zB", "8": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB", "584": "NB OB PB" }, G: { "1": "uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "8": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC", "6148": "tC" }, H: { "2": "1C" }, I: { "1": "H", "8": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "8": "D A" }, K: { "1": "r", "2": "A", "8": "B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "B", "36": "A" }, O: { "1": "0B" }, P: { "1": "o p q 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "8C", "8": "I" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "328": "LD" } }, B: 2, C: "Pointer events", D: true };
  }
});

// node_modules/caniuse-lite/data/features/pointerlock.js
var require_pointerlock = __commonJS({
  "node_modules/caniuse-lite/data/features/pointerlock.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C" }, C: { "1": "0 1 2 3 4 PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 PC 3B I J D E F A B C K QC RC", "33": "6 7 8 9 L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB" }, D: { "1": "0 1 2 3 4 LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 I J D E F A B C K L G", "33": "7 8 9 q AB BB CB DB EB FB GB HB IB JB KB", "66": "6 M N O o p" }, E: { "1": "B C K L G BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A SC AC TC UC VC WC" }, F: { "1": "8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F B C bC cC dC eC yB MC fC zB", "33": "6 7 G M N O o p q" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "2": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 2, C: "Pointer Lock API", D: true };
  }
});

// node_modules/caniuse-lite/data/features/portals.js
var require_portals = __commonJS({
  "node_modules/caniuse-lite/data/features/portals.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "2": "C K L G M N O P Q R S T", "322": "0 1 2 3 4 Z a b c d e f g h i j k l m s t u v w x y z H n", "450": "U V W X Y" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB", "194": "uB vB wB xB P Q R S T", "322": "0 1 2 3 4 V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "450": "U" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB bC cC dC eC yB MC fC zB", "194": "iB jB kB lB mB nB oB pB qB rB sB", "322": "r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "2": "A B C r yB MC zB" }, L: { "450": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "2": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "2": "KD" }, S: { "2": "LD MD" } }, B: 7, C: "Portals", D: true };
  }
});

// node_modules/caniuse-lite/data/features/prefers-color-scheme.js
var require_prefers_color_scheme = __commonJS({
  "node_modules/caniuse-lite/data/features/prefers-color-scheme.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB QC RC" }, D: { "1": "0 1 2 3 4 vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB" }, E: { "1": "K L G zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A B C SC AC TC UC VC WC BC yB" }, F: { "1": "iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB bC cC dC eC yB MC fC zB" }, G: { "1": "tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q ED FD GD HD 1B 2B ID JD", "2": "I 8C 9C AD BD CD BC DD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "2": "LD" } }, B: 5, C: "prefers-color-scheme media query", D: true };
  }
});

// node_modules/caniuse-lite/data/features/prefers-reduced-motion.js
var require_prefers_reduced_motion = __commonJS({
  "node_modules/caniuse-lite/data/features/prefers-reduced-motion.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB QC RC" }, D: { "1": "0 1 2 3 4 tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r" }, E: { "1": "B C K L G BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A SC AC TC UC VC WC" }, F: { "1": "kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB bC cC dC eC yB MC fC zB" }, G: { "1": "oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q DD ED FD GD HD 1B 2B ID JD", "2": "I 8C 9C AD BD CD BC" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "2": "LD" } }, B: 5, C: "prefers-reduced-motion media query", D: true };
  }
});

// node_modules/caniuse-lite/data/features/progress.js
var require_progress = __commonJS({
  "node_modules/caniuse-lite/data/features/progress.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "A B", "2": "J D E F OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 6 7 8 9 J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 PC 3B I QC RC" }, D: { "1": "0 1 2 3 4 6 7 8 9 E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 I J D" }, E: { "1": "J D E F A B C K L G UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I SC AC TC" }, F: { "1": "6 7 8 9 B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m yB MC fC zB", "2": "F bC cC dC eC" }, G: { "1": "E kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC hC iC", "132": "jC" }, H: { "1": "1C" }, I: { "1": "H 6C 7C", "2": "3B I 2C 3C 4C 5C NC" }, J: { "1": "D A" }, K: { "1": "B C r yB MC zB", "2": "A" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "progress element", D: true };
  }
});

// node_modules/caniuse-lite/data/features/promise-finally.js
var require_promise_finally = __commonJS({
  "node_modules/caniuse-lite/data/features/promise-finally.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N" }, C: { "1": "0 1 2 3 4 gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB QC RC" }, D: { "1": "0 1 2 3 4 jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB" }, E: { "1": "C K L G yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A B SC AC TC UC VC WC BC" }, F: { "1": "YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB bC cC dC eC yB MC fC zB" }, G: { "1": "qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC pC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I 8C 9C AD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "2": "LD" } }, B: 6, C: "Promise.prototype.finally", D: true };
  }
});

// node_modules/caniuse-lite/data/features/promises.js
var require_promises = __commonJS({
  "node_modules/caniuse-lite/data/features/promises.js"(exports, module2) {
    module2.exports = { A: { A: { "8": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "4": "BB CB", "8": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB QC RC" }, D: { "1": "0 1 2 3 4 HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "4": "GB", "8": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB" }, E: { "1": "E F A B C K L G VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "8": "5 I J D SC AC TC UC" }, F: { "1": "7 8 9 o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "4": "6", "8": "F B C G M N O bC cC dC eC yB MC fC zB" }, G: { "1": "E kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "8": "AC gC NC hC iC jC" }, H: { "8": "1C" }, I: { "1": "H 7C", "8": "3B I 2C 3C 4C 5C NC 6C" }, J: { "8": "D A" }, K: { "1": "r", "8": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "8": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 6, C: "Promises", D: true };
  }
});

// node_modules/caniuse-lite/data/features/proximity.js
var require_proximity = __commonJS({
  "node_modules/caniuse-lite/data/features/proximity.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "2": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 PC 3B I J D E F A B C K L QC RC" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "2": "A B C r yB MC zB" }, L: { "2": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "2": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "2": "KD" }, S: { "1": "LD MD" } }, B: 4, C: "Proximity API", D: true };
  }
});

// node_modules/caniuse-lite/data/features/proxy.js
var require_proxy = __commonJS({
  "node_modules/caniuse-lite/data/features/proxy.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 6 7 8 9 O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 PC 3B I J D E F A B C K L G M N QC RC" }, D: { "1": "0 1 2 3 4 XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 I J D E F A B C K L G M N O MB NB OB PB QB RB SB TB UB VB WB", "66": "6 7 8 9 o p q AB BB CB DB EB FB GB HB IB JB KB LB" }, E: { "1": "A B C K L G BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F SC AC TC UC VC WC" }, F: { "1": "KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "9 F B C AB BB CB DB EB FB GB HB IB JB bC cC dC eC yB MC fC zB", "66": "6 7 8 G M N O o p q" }, G: { "1": "nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 6, C: "Proxy object", D: true };
  }
});

// node_modules/caniuse-lite/data/features/publickeypinning.js
var require_publickeypinning = __commonJS({
  "node_modules/caniuse-lite/data/features/publickeypinning.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "2": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB", "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "1": "MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB", "2": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB", "2": "6 F B C G M N O mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB", "4": "7", "16": "8 o p q" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "2": "A B C r yB MC zB" }, L: { "2": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "1": "I 8C 9C AD BD CD BC", "2": "o p q DD ED FD GD HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "2": "KD" }, S: { "1": "LD", "2": "MD" } }, B: 6, C: "HTTP Public Key Pinning", D: true };
  }
});

// node_modules/caniuse-lite/data/features/push-api.js
var require_push_api = __commonJS({
  "node_modules/caniuse-lite/data/features/push-api.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "N O", "2": "C K L G M", "257": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB QC RC", "257": "0 1 2 3 4 SB UB VB WB XB YB ZB bB cB dB eB fB gB 4B 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "1281": "TB aB hB" }, D: { "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB", "257": "0 1 2 3 4 YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "388": "SB TB UB VB WB XB" }, E: { "2": "5 I J SC AC TC UC", "514": "D E F A B C K L G VC WC BC yB zB CC XC YC DC EC 0B ZC 1B", "2564": "FC GC HC IC JC KC 2B LC aC" }, F: { "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB bC cC dC eC yB MC fC zB", "16": "LB MB NB OB PB", "257": "QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC", "4100": "IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "2": "KD" }, S: { "257": "LD MD" } }, B: 5, C: "Push API", D: true };
  }
});

// node_modules/caniuse-lite/data/features/queryselector.js
var require_queryselector = __commonJS({
  "node_modules/caniuse-lite/data/features/queryselector.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "F A B", "2": "OC", "8": "J D", "132": "E" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC", "8": "PC 3B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "6 7 8 9 B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m cC dC eC yB MC fC zB", "8": "F bC" }, G: { "1": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "1": "1C" }, I: { "1": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "1": "D A" }, K: { "1": "A B C r yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "querySelector/querySelectorAll", D: true };
  }
});

// node_modules/caniuse-lite/data/features/readonly-attr.js
var require_readonly_attr = __commonJS({
  "node_modules/caniuse-lite/data/features/readonly-attr.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "J D E F A B", "16": "OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "16": "PC 3B QC RC" }, D: { "1": "0 1 2 3 4 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "16": "5 6 7 8 9 I J D E F A B C K L G M N O o p q" }, E: { "1": "J D E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "16": "5 I SC AC" }, F: { "1": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "16": "F bC", "132": "B C cC dC eC yB MC fC zB" }, G: { "1": "E jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "16": "AC gC NC hC iC" }, H: { "1": "1C" }, I: { "1": "3B I H 4C 5C NC 6C 7C", "16": "2C 3C" }, J: { "1": "D A" }, K: { "1": "r", "132": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "257": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "readonly attribute of input and textarea elements", D: true };
  }
});

// node_modules/caniuse-lite/data/features/referrer-policy.js
var require_referrer_policy = __commonJS({
  "node_modules/caniuse-lite/data/features/referrer-policy.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A OC", "132": "B" }, B: { "1": "0 1 2 3 4 U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "132": "C K L G M N O", "516": "P Q R S T" }, C: { "1": "W X Y Z a", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB QC RC", "516": "KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V", "2049": "0 1 2 3 4 b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, D: { "1": "0 1 2 3 4 U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 I J D E F A B C K L G M N O o", "260": "7 8 9 p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB", "516": "5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T" }, E: { "2": "5 I J D SC AC TC UC", "132": "E F A B VC WC BC", "516": "C yB zB", "1025": "G YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "1540": "K L CC XC" }, F: { "1": "r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F B C bC cC dC eC yB MC fC zB", "516": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB" }, G: { "2": "AC gC NC hC iC jC", "132": "E kC lC mC nC oC pC qC", "516": "rC sC tC uC", "1025": "zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "1540": "vC wC xC yC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "2049": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q GD HD 1B 2B ID JD", "2": "I", "516": "8C 9C AD BD CD BC DD ED FD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "516": "LD MD" } }, B: 4, C: "Referrer Policy", D: true };
  }
});

// node_modules/caniuse-lite/data/features/registerprotocolhandler.js
var require_registerprotocolhandler = __commonJS({
  "node_modules/caniuse-lite/data/features/registerprotocolhandler.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "2": "C K L G M N O", "129": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC", "2": "PC" }, D: { "2": "5 I J D E F A B C", "129": "0 1 2 3 4 6 7 8 9 K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "2": "F B bC cC dC eC yB MC", "129": "6 7 8 9 C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m fC zB" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D", "129": "A" }, K: { "2": "A B C r yB MC zB" }, L: { "2": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "2": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "2": "KD" }, S: { "2": "LD MD" } }, B: 1, C: "Custom protocol handling", D: true };
  }
});

// node_modules/caniuse-lite/data/features/rel-noopener.js
var require_rel_noopener = __commonJS({
  "node_modules/caniuse-lite/data/features/rel-noopener.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB QC RC" }, D: { "1": "0 1 2 3 4 XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB" }, E: { "1": "B C K L G BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A SC AC TC UC VC WC" }, F: { "1": "KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB bC cC dC eC yB MC fC zB" }, G: { "1": "oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "2": "LD" } }, B: 1, C: "rel=noopener", D: true };
  }
});

// node_modules/caniuse-lite/data/features/rel-noreferrer.js
var require_rel_noreferrer = __commonJS({
  "node_modules/caniuse-lite/data/features/rel-noreferrer.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A OC", "132": "B" }, B: { "1": "0 1 2 3 4 K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "16": "C" }, C: { "1": "0 1 2 3 4 HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB QC RC" }, D: { "1": "0 1 2 3 4 6 7 8 9 M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "16": "5 I J D E F A B C K L G" }, E: { "1": "5 J D E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "I SC AC" }, F: { "1": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F B C bC cC dC eC yB MC fC zB" }, G: { "1": "E gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC" }, H: { "2": "1C" }, I: { "1": "3B I H 4C 5C NC 6C 7C", "16": "2C 3C" }, J: { "1": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 1, C: 'Link type "noreferrer"', D: true };
  }
});

// node_modules/caniuse-lite/data/features/rellist.js
var require_rellist = __commonJS({
  "node_modules/caniuse-lite/data/features/rellist.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M", "132": "N" }, C: { "1": "0 1 2 3 4 EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB QC RC" }, D: { "1": "0 1 2 3 4 lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB", "132": "YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB" }, E: { "1": "F A B C K L G WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E SC AC TC UC VC" }, F: { "1": "aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB bC cC dC eC yB MC fC zB", "132": "LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB" }, G: { "1": "lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I", "132": "8C 9C AD BD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "relList (DOMTokenList)", D: true };
  }
});

// node_modules/caniuse-lite/data/features/rem.js
var require_rem = __commonJS({
  "node_modules/caniuse-lite/data/features/rem.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "B", "2": "J D E OC", "132": "F A" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B RC", "2": "PC 3B QC" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "5 J D E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "I SC AC" }, F: { "1": "6 7 8 9 C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m fC zB", "2": "F B bC cC dC eC yB MC" }, G: { "1": "E gC NC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC", "260": "hC" }, H: { "1": "1C" }, I: { "1": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "1": "D A" }, K: { "1": "C r zB", "2": "A B yB MC" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 4, C: "rem (root em) units", D: true };
  }
});

// node_modules/caniuse-lite/data/features/requestanimationframe.js
var require_requestanimationframe = __commonJS({
  "node_modules/caniuse-lite/data/features/requestanimationframe.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "A B", "2": "J D E F OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "PC 3B QC RC", "33": "6 B C K L G M N O o p q", "164": "5 I J D E F A" }, D: { "1": "0 1 2 3 4 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 I J D E F", "33": "7 q", "164": "6 O o p", "420": "A B C K L G M N" }, E: { "1": "D E F A B C K L G UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I SC AC TC", "33": "J" }, F: { "1": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F B C bC cC dC eC yB MC fC zB" }, G: { "1": "E jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC hC", "33": "iC" }, H: { "2": "1C" }, I: { "1": "H 6C 7C", "2": "3B I 2C 3C 4C 5C NC" }, J: { "1": "A", "2": "D" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "requestAnimationFrame", D: true };
  }
});

// node_modules/caniuse-lite/data/features/requestidlecallback.js
var require_requestidlecallback = __commonJS({
  "node_modules/caniuse-lite/data/features/requestidlecallback.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB QC RC", "194": "bB cB" }, D: { "1": "0 1 2 3 4 VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB" }, E: { "1": "aC", "2": "5 I J D E F A B C K SC AC TC UC VC WC BC yB zB", "322": "L G CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC" }, F: { "1": "IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB bC cC dC eC yB MC fC zB" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC", "322": "wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "2": "LD" } }, B: 5, C: "requestIdleCallback", D: true };
  }
});

// node_modules/caniuse-lite/data/features/resizeobserver.js
var require_resizeobserver = __commonJS({
  "node_modules/caniuse-lite/data/features/resizeobserver.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB QC RC" }, D: { "1": "0 1 2 3 4 kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB", "194": "cB dB eB fB gB 4B hB 5B iB jB" }, E: { "1": "L G CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A B C SC AC TC UC VC WC BC yB zB", "66": "K" }, F: { "1": "aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB bC cC dC eC yB MC fC zB", "194": "PB QB RB SB TB UB VB WB XB YB ZB" }, G: { "1": "wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I 8C 9C AD BD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "2": "LD" } }, B: 5, C: "Resize Observer", D: true };
  }
});

// node_modules/caniuse-lite/data/features/resource-timing.js
var require_resource_timing = __commonJS({
  "node_modules/caniuse-lite/data/features/resource-timing.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "A B", "2": "J D E F OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB QC RC", "194": "FB GB HB IB" }, D: { "1": "0 1 2 3 4 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 I J D E F A B C K L G M N O o p q" }, E: { "1": "C K L G yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A SC AC TC UC VC WC BC", "260": "B" }, F: { "1": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F B C bC cC dC eC yB MC fC zB" }, G: { "1": "pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC" }, H: { "2": "1C" }, I: { "1": "H 6C 7C", "2": "3B I 2C 3C 4C 5C NC" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 4, C: "Resource Timing", D: true };
  }
});

// node_modules/caniuse-lite/data/features/rest-parameters.js
var require_rest_parameters = __commonJS({
  "node_modules/caniuse-lite/data/features/rest-parameters.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 PC 3B I J D E F A B C K L QC RC" }, D: { "1": "0 1 2 3 4 VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB", "194": "SB TB UB" }, E: { "1": "A B C K L G BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F SC AC TC UC VC WC" }, F: { "1": "IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB bC cC dC eC yB MC fC zB", "194": "FB GB HB" }, G: { "1": "nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 6, C: "Rest parameters", D: true };
  }
});

// node_modules/caniuse-lite/data/features/rtcpeerconnection.js
var require_rtcpeerconnection = __commonJS({
  "node_modules/caniuse-lite/data/features/rtcpeerconnection.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L", "260": "G M N O" }, C: { "1": "0 1 2 3 4 SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 PC 3B I J D E F A B C K L G M N O o p QC RC", "33": "7 8 9 q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB" }, D: { "1": "0 1 2 3 4 eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 I J D E F A B C K L G M N O o p q", "33": "7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB" }, E: { "1": "B C K L G yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A SC AC TC UC VC WC BC" }, F: { "1": "RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F B C G M N bC cC dC eC yB MC fC zB", "33": "6 7 8 9 O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB" }, G: { "1": "pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D", "130": "A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "33": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 5, C: "WebRTC Peer-to-peer connections", D: true };
  }
});

// node_modules/caniuse-lite/data/features/ruby.js
var require_ruby = __commonJS({
  "node_modules/caniuse-lite/data/features/ruby.js"(exports, module2) {
    module2.exports = { A: { A: { "4": "J D E OC", "132": "F A B" }, B: { "4": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "8": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB QC RC" }, D: { "4": "0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "8": "I" }, E: { "4": "5 J D E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "8": "I SC AC" }, F: { "4": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "8": "F B C bC cC dC eC yB MC fC zB" }, G: { "4": "E hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "8": "AC gC NC" }, H: { "8": "1C" }, I: { "4": "3B I H 5C NC 6C 7C", "8": "2C 3C 4C" }, J: { "4": "A", "8": "D" }, K: { "4": "r", "8": "A B C yB MC zB" }, L: { "4": "H" }, M: { "1": "n" }, N: { "132": "A B" }, O: { "4": "0B" }, P: { "4": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "4": "CC" }, R: { "4": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "Ruby annotation", D: true };
  }
});

// node_modules/caniuse-lite/data/features/run-in.js
var require_run_in = __commonJS({
  "node_modules/caniuse-lite/data/features/run-in.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "E F A B", "2": "J D OC" }, B: { "2": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "1": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB", "2": "0 1 2 3 4 GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "5 J TC", "2": "D E F A B C K L G VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "16": "UC", "129": "I SC AC" }, F: { "1": "F B C G M N O bC cC dC eC yB MC fC zB", "2": "6 7 8 9 o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m" }, G: { "1": "gC NC hC iC jC", "2": "E kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "129": "AC" }, H: { "1": "1C" }, I: { "1": "3B I 2C 3C 4C 5C NC 6C", "2": "H 7C" }, J: { "1": "D A" }, K: { "1": "A B C yB MC zB", "2": "r" }, L: { "2": "H" }, M: { "2": "n" }, N: { "1": "A B" }, O: { "2": "0B" }, P: { "2": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "2": "KD" }, S: { "2": "LD MD" } }, B: 4, C: "display: run-in", D: true };
  }
});

// node_modules/caniuse-lite/data/features/same-site-cookie-attribute.js
var require_same_site_cookie_attribute = __commonJS({
  "node_modules/caniuse-lite/data/features/same-site-cookie-attribute.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A OC", "388": "B" }, B: { "1": "O P Q R S T U", "2": "C K L G", "129": "M N", "513": "0 1 2 3 4 V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B QC RC" }, D: { "1": "ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB", "513": "0 1 2 3 4 Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "G YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A B SC AC TC UC VC WC BC yB", "2052": "L XC", "3076": "C K zB CC" }, F: { "1": "NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB bC cC dC eC yB MC fC zB", "513": "rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m" }, G: { "1": "tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC", "2052": "rC sC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "2": "A B C yB MC zB", "513": "r" }, L: { "513": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "1": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I" }, Q: { "16": "CC" }, R: { "513": "KD" }, S: { "1": "MD", "2": "LD" } }, B: 6, C: "'SameSite' cookie attribute", D: true };
  }
});

// node_modules/caniuse-lite/data/features/screen-orientation.js
var require_screen_orientation = __commonJS({
  "node_modules/caniuse-lite/data/features/screen-orientation.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A OC", "164": "B" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "36": "C K L G M N O" }, C: { "1": "0 1 2 3 4 SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 PC 3B I J D E F A B C K L G M N QC RC", "36": "6 7 8 9 O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB" }, D: { "1": "0 1 2 3 4 MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB" }, E: { "1": "IC JC KC 2B LC aC", "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC" }, F: { "1": "9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 F B C G M N O o p q bC cC dC eC yB MC fC zB" }, G: { "1": "IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A", "36": "B" }, O: { "1": "0B" }, P: { "1": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "16": "I" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 5, C: "Screen Orientation", D: true };
  }
});

// node_modules/caniuse-lite/data/features/script-async.js
var require_script_async = __commonJS({
  "node_modules/caniuse-lite/data/features/script-async.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "A B", "2": "J D E F OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B RC", "2": "PC 3B QC" }, D: { "1": "0 1 2 3 4 6 7 8 9 E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 I J D" }, E: { "1": "J D E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "I SC AC", "132": "5" }, F: { "1": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F B C bC cC dC eC yB MC fC zB" }, G: { "1": "E hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC" }, H: { "2": "1C" }, I: { "1": "3B I H 5C NC 6C 7C", "2": "2C 3C 4C" }, J: { "1": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "async attribute for external scripts", D: true };
  }
});

// node_modules/caniuse-lite/data/features/script-defer.js
var require_script_defer = __commonJS({
  "node_modules/caniuse-lite/data/features/script-defer.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "A B", "132": "J D E F OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "PC 3B", "257": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB QC RC" }, D: { "1": "0 1 2 3 4 6 7 8 9 E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 I J D" }, E: { "1": "5 J D E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "I SC AC" }, F: { "1": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F B C bC cC dC eC yB MC fC zB" }, G: { "1": "E hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC" }, H: { "2": "1C" }, I: { "1": "3B I H 5C NC 6C 7C", "2": "2C 3C 4C" }, J: { "1": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "defer attribute for external scripts", D: true };
  }
});

// node_modules/caniuse-lite/data/features/scrollintoview.js
var require_scrollintoview = __commonJS({
  "node_modules/caniuse-lite/data/features/scrollintoview.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D OC", "132": "E F A B" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "132": "C K L G M N O" }, C: { "1": "0 1 2 3 4 KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "132": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB QC RC" }, D: { "1": "0 1 2 3 4 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "132": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB" }, E: { "1": "1B FC GC HC IC JC KC 2B LC aC", "2": "5 I SC AC", "132": "J D E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC" }, F: { "1": "WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F bC cC dC eC", "16": "B yB MC", "132": "6 7 8 9 C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB fC zB" }, G: { "1": "1B FC GC HC IC JC KC 2B LC", "16": "AC gC NC", "132": "E hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C" }, H: { "2": "1C" }, I: { "1": "H", "16": "2C 3C", "132": "3B I 4C 5C NC 6C 7C" }, J: { "132": "D A" }, K: { "1": "r", "132": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "132": "A B" }, O: { "1": "0B" }, P: { "132": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 5, C: "scrollIntoView", D: true };
  }
});

// node_modules/caniuse-lite/data/features/scrollintoviewifneeded.js
var require_scrollintoviewifneeded = __commonJS({
  "node_modules/caniuse-lite/data/features/scrollintoviewifneeded.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "1": "0 1 2 3 4 6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "16": "5 I J D E F A B C K L" }, E: { "1": "J D E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "16": "5 I SC AC" }, F: { "1": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F B C bC cC dC eC yB MC fC zB" }, G: { "1": "E hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "16": "AC gC NC" }, H: { "2": "1C" }, I: { "1": "3B I H 4C 5C NC 6C 7C", "16": "2C 3C" }, J: { "1": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "2": "LD MD" } }, B: 7, C: "Element.scrollIntoViewIfNeeded()", D: true };
  }
});

// node_modules/caniuse-lite/data/features/sdch.js
var require_sdch = __commonJS({
  "node_modules/caniuse-lite/data/features/sdch.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "2": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "1": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB", "2": "0 1 2 3 4 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB", "2": "F B C r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "2": "A B C r yB MC zB" }, L: { "2": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "1": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I" }, Q: { "2": "CC" }, R: { "2": "KD" }, S: { "2": "LD MD" } }, B: 6, C: "SDCH Accept-Encoding/Content-Encoding", D: true };
  }
});

// node_modules/caniuse-lite/data/features/selection-api.js
var require_selection_api = __commonJS({
  "node_modules/caniuse-lite/data/features/selection-api.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "F A B", "16": "OC", "260": "J D E" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "132": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB QC RC", "2180": "RB SB TB UB VB WB XB YB ZB" }, D: { "1": "0 1 2 3 4 6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "16": "5 I J D E F A B C K L" }, E: { "1": "J D E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "16": "5 I SC AC" }, F: { "1": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "132": "F B C bC cC dC eC yB MC fC zB" }, G: { "16": "NC", "132": "AC gC", "516": "E hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "1": "H 6C 7C", "16": "3B I 2C 3C 4C 5C", "1025": "NC" }, J: { "1": "A", "16": "D" }, K: { "1": "r", "16": "A B C yB MC", "132": "zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "B", "16": "A" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "2180": "LD" } }, B: 5, C: "Selection API", D: true };
  }
});

// node_modules/caniuse-lite/data/features/server-timing.js
var require_server_timing = __commonJS({
  "node_modules/caniuse-lite/data/features/server-timing.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB QC RC" }, D: { "1": "0 1 2 3 4 lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B", "196": "hB 5B iB jB", "324": "kB" }, E: { "2": "5 I J D E F A B C SC AC TC UC VC WC BC yB", "516": "K L G zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB bC cC dC eC yB MC fC zB" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "2": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "2": "LD" } }, B: 5, C: "Server Timing", D: true };
  }
});

// node_modules/caniuse-lite/data/features/serviceworkers.js
var require_serviceworkers = __commonJS({
  "node_modules/caniuse-lite/data/features/serviceworkers.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L", "322": "G M" }, C: { "1": "0 1 2 3 4 SB UB VB WB XB YB ZB bB cB dB eB fB gB 4B 5B iB jB kB lB mB nB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB QC RC", "194": "HB IB JB KB LB MB NB OB PB QB RB", "513": "TB aB hB oB" }, D: { "1": "0 1 2 3 4 TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB", "4": "OB PB QB RB SB" }, E: { "1": "C K L G yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A B SC AC TC UC VC WC BC" }, F: { "1": "GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB bC cC dC eC yB MC fC zB", "4": "BB CB DB EB FB" }, G: { "1": "qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC pC" }, H: { "2": "1C" }, I: { "2": "3B I 2C 3C 4C 5C NC 6C 7C", "4": "H" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "2": "LD" } }, B: 4, C: "Service Workers", D: true };
  }
});

// node_modules/caniuse-lite/data/features/setimmediate.js
var require_setimmediate = __commonJS({
  "node_modules/caniuse-lite/data/features/setimmediate.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "A B", "2": "J D E F OC" }, B: { "1": "C K L G M N O", "2": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "2": "A B C r yB MC zB" }, L: { "2": "H" }, M: { "2": "n" }, N: { "1": "A B" }, O: { "2": "0B" }, P: { "2": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "2": "KD" }, S: { "2": "LD MD" } }, B: 7, C: "Efficient Script Yielding: setImmediate()", D: true };
  }
});

// node_modules/caniuse-lite/data/features/shadowdom.js
var require_shadowdom = __commonJS({
  "node_modules/caniuse-lite/data/features/shadowdom.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "P", "2": "0 1 2 3 4 C K L G M N O Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC", "66": "DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB" }, D: { "1": "JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P", "2": "0 1 2 3 4 5 6 7 8 I J D E F A B C K L G M N O o p q Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "33": "9 AB BB CB DB EB FB GB HB IB" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "7 8 9 q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB", "2": "F B C nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB", "33": "6 G M N O o p" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC", "33": "6C 7C" }, J: { "2": "D A" }, K: { "2": "A B C r yB MC zB" }, L: { "2": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "8C 9C AD BD CD BC DD ED", "2": "o p q FD GD HD 1B 2B ID JD", "33": "I" }, Q: { "1": "CC" }, R: { "2": "KD" }, S: { "1": "LD", "2": "MD" } }, B: 7, C: "Shadow DOM (deprecated V0 spec)", D: true };
  }
});

// node_modules/caniuse-lite/data/features/shadowdomv1.js
var require_shadowdomv1 = __commonJS({
  "node_modules/caniuse-lite/data/features/shadowdomv1.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB QC RC", "322": "gB", "578": "4B hB 5B iB" }, D: { "1": "0 1 2 3 4 bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB" }, E: { "1": "A B C K L G BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F SC AC TC UC VC WC" }, F: { "1": "OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB bC cC dC eC yB MC fC zB" }, G: { "1": "pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC", "132": "nC oC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I", "4": "8C" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "2": "LD" } }, B: 5, C: "Shadow DOM (V1)", D: true };
  }
});

// node_modules/caniuse-lite/data/features/sharedarraybuffer.js
var require_sharedarraybuffer = __commonJS({
  "node_modules/caniuse-lite/data/features/sharedarraybuffer.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "P Q R S T U V W X Y Z", "2": "C K L G", "194": "M N O", "513": "0 1 2 3 4 a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB QC RC", "194": "fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r", "450": "tB uB vB wB xB", "513": "0 1 2 3 4 P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, D: { "1": "oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B", "194": "hB 5B iB jB kB lB mB nB", "513": "0 1 2 3 4 a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "2": "5 I J D E F A SC AC TC UC VC WC", "194": "B C K L G BC yB zB CC XC YC", "513": "DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "kB lB mB nB oB pB qB rB sB r tB uB vB wB", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB bC cC dC eC yB MC fC zB", "194": "VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB", "513": "xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC", "194": "oC pC qC rC sC tC uC vC wC xC yC zC", "513": "DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "2": "A B C yB MC zB", "513": "r" }, L: { "513": "H" }, M: { "513": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "2": "I 8C 9C AD BD CD BC DD ED FD GD", "513": "o p q HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "513": "KD" }, S: { "2": "LD", "513": "MD" } }, B: 6, C: "Shared Array Buffer", D: true };
  }
});

// node_modules/caniuse-lite/data/features/sharedworkers.js
var require_sharedworkers = __commonJS({
  "node_modules/caniuse-lite/data/features/sharedworkers.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB QC RC" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "5 J TC 1B FC GC HC IC JC KC 2B LC aC", "2": "I D E F A B C K L G SC AC UC VC WC BC yB zB CC XC YC DC EC 0B ZC" }, F: { "1": "6 7 8 9 B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m eC yB MC fC zB", "2": "F bC cC dC" }, G: { "1": "hC iC 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "1": "D A" }, K: { "1": "B C yB MC zB", "2": "r", "16": "A" }, L: { "2": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "1": "I", "2": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "2": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "Shared Web Workers", D: true };
  }
});

// node_modules/caniuse-lite/data/features/sni.js
var require_sni = __commonJS({
  "node_modules/caniuse-lite/data/features/sni.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "F A B", "2": "J OC", "132": "D E" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "1": "0 1 2 3 4 6 7 8 9 J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 I" }, E: { "1": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB" }, G: { "1": "E gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC" }, H: { "1": "1C" }, I: { "1": "3B I H 5C NC 6C 7C", "2": "2C 3C 4C" }, J: { "1": "A", "2": "D" }, K: { "1": "A B C r yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 6, C: "Server Name Indication", D: true };
  }
});

// node_modules/caniuse-lite/data/features/spdy.js
var require_spdy = __commonJS({
  "node_modules/caniuse-lite/data/features/spdy.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "B", "2": "J D E F A OC" }, B: { "2": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "6 7 8 9 K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB", "2": "0 1 2 3 4 5 PC 3B I J D E F A B C ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "1": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB", "2": "0 1 2 3 4 ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "E F A B C WC BC yB", "2": "5 I J D SC AC TC UC VC", "129": "K L G zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB QB SB zB", "2": "F B C OB PB RB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC" }, G: { "1": "E kC lC mC nC oC pC qC rC", "2": "AC gC NC hC iC jC", "257": "sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "1": "3B I 5C NC 6C 7C", "2": "H 2C 3C 4C" }, J: { "2": "D A" }, K: { "1": "zB", "2": "A B C r yB MC" }, L: { "2": "H" }, M: { "2": "n" }, N: { "1": "B", "2": "A" }, O: { "2": "0B" }, P: { "1": "I", "2": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "2": "KD" }, S: { "1": "LD", "2": "MD" } }, B: 7, C: "SPDY protocol", D: true };
  }
});

// node_modules/caniuse-lite/data/features/speech-recognition.js
var require_speech_recognition = __commonJS({
  "node_modules/caniuse-lite/data/features/speech-recognition.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "2": "C K L G M N O", "514": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "2": "5 6 PC 3B I J D E F A B C K L G M N O o p QC RC", "322": "0 1 2 3 4 7 8 9 q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, D: { "2": "5 6 7 8 I J D E F A B C K L G M N O o p q", "164": "0 1 2 3 4 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "2": "5 I J D E F A B C K L SC AC TC UC VC WC BC yB zB CC", "1060": "G XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "2": "6 7 8 9 F B C G M N O o p q AB bC cC dC eC yB MC fC zB", "514": "BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC", "1060": "yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "2": "A B C yB MC zB", "164": "r" }, L: { "164": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "164": "0B" }, P: { "164": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "164": "CC" }, R: { "164": "KD" }, S: { "322": "LD MD" } }, B: 7, C: "Speech Recognition API", D: true };
  }
});

// node_modules/caniuse-lite/data/features/speech-synthesis.js
var require_speech_synthesis = __commonJS({
  "node_modules/caniuse-lite/data/features/speech-synthesis.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "L G M N O", "2": "C K", "257": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB QC RC", "194": "FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB" }, D: { "1": "HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB", "257": "0 1 2 3 4 dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "D E F A B C K L G VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J SC AC TC UC" }, F: { "1": "BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB", "2": "6 7 8 9 F B C G M N O o p q AB bC cC dC eC yB MC fC zB", "257": "kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m" }, G: { "1": "E jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC hC iC" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "2": "A B C r yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "1": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I" }, Q: { "1": "CC" }, R: { "2": "KD" }, S: { "1": "LD MD" } }, B: 7, C: "Speech Synthesis API", D: true };
  }
});

// node_modules/caniuse-lite/data/features/spellcheck-attribute.js
var require_spellcheck_attribute = __commonJS({
  "node_modules/caniuse-lite/data/features/spellcheck-attribute.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "A B", "2": "J D E F OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "1": "0 1 2 3 4 6 7 8 9 F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 I J D E" }, E: { "1": "J D E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I SC AC" }, F: { "1": "6 7 8 9 B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m dC eC yB MC fC zB", "2": "F bC cC" }, G: { "4": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "4": "1C" }, I: { "4": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "1": "A", "4": "D" }, K: { "4": "A B C r yB MC zB" }, L: { "4": "H" }, M: { "4": "n" }, N: { "4": "A B" }, O: { "4": "0B" }, P: { "4": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "4": "KD" }, S: { "2": "LD MD" } }, B: 1, C: "Spellcheck attribute", D: true };
  }
});

// node_modules/caniuse-lite/data/features/sql-storage.js
var require_sql_storage = __commonJS({
  "node_modules/caniuse-lite/data/features/sql-storage.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "P Q R S T U V W X Y Z a b c d e f g h i j", "2": "C K L G M N O", "129": "k l m s t u v w x", "385": "0 1 2 3 4 y z H n" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "1": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j", "129": "k l m s t u v w x", "385": "0 1 2 3 4 y z H n", "897": "7B 8B 9B" }, E: { "1": "5 I J D E F A B C SC AC TC UC VC WC BC yB zB", "2": "K L G CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "6 7 8 9 B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z dC eC yB MC fC zB", "2": "F bC cC", "257": "a b c d e f g h i j k l m" }, G: { "1": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC", "2": "tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "1": "3B I 2C 3C 4C 5C NC 6C 7C", "257": "H" }, J: { "1": "D A" }, K: { "1": "B C yB MC zB", "2": "A", "257": "r" }, L: { "257": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "2": "LD MD" } }, B: 7, C: "Web SQL Database", D: true };
  }
});

// node_modules/caniuse-lite/data/features/srcset.js
var require_srcset = __commonJS({
  "node_modules/caniuse-lite/data/features/srcset.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "260": "C", "514": "K L G" }, C: { "1": "0 1 2 3 4 MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB QC RC", "194": "GB HB IB JB KB LB" }, D: { "1": "0 1 2 3 4 MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB", "260": "IB JB KB LB" }, E: { "2": "5 I J D SC AC TC UC", "260": "E VC", "1028": "F A B C K L G WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 F B C G M N O o bC cC dC eC yB MC fC zB", "260": "7 8 p q" }, G: { "2": "AC gC NC hC iC jC", "260": "E kC", "1028": "lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "Srcset and sizes attributes", D: true };
  }
});

// node_modules/caniuse-lite/data/features/stream.js
var require_stream = __commonJS({
  "node_modules/caniuse-lite/data/features/stream.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 PC 3B I J D E F A B C K L G M QC RC", "129": "KB LB MB NB OB PB", "420": "6 7 8 9 N O o p q AB BB CB DB EB FB GB HB IB JB" }, D: { "1": "0 1 2 3 4 bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 I J D E F A B C K L G M N O o", "420": "7 8 9 p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB" }, E: { "1": "B C K L G yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A SC AC TC UC VC WC BC" }, F: { "1": "OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F B G M N bC cC dC eC yB MC fC", "420": "6 7 8 9 C O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB zB" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC", "513": "wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "1537": "pC qC rC sC tC uC vC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D", "420": "A" }, K: { "1": "r", "2": "A B yB MC", "420": "C zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "420": "I 8C" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "2": "LD" } }, B: 4, C: "getUserMedia/Stream API", D: true };
  }
});

// node_modules/caniuse-lite/data/features/streams.js
var require_streams = __commonJS({
  "node_modules/caniuse-lite/data/features/streams.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A OC", "130": "B" }, B: { "1": "0 1 2 3 4 Y Z a b c d e f g h i j k l m s t u v w x y z H n", "16": "C K", "260": "L G", "1028": "P Q R S T U V W X", "5124": "M N O" }, C: { "1": "0 1 2 3 4 l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB QC RC", "5124": "j k", "7172": "lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i", "7746": "fB gB 4B hB 5B iB jB kB" }, D: { "1": "0 1 2 3 4 Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB", "260": "aB bB cB dB eB fB gB", "1028": "4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X" }, E: { "2": "5 I J D E F SC AC TC UC VC WC", "1028": "G XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "3076": "A B C K L BC yB zB CC" }, F: { "1": "vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB bC cC dC eC yB MC fC zB", "260": "NB OB PB QB RB SB TB", "1028": "UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB" }, G: { "2": "E AC gC NC hC iC jC kC lC mC", "16": "nC", "1028": "oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q HD 1B 2B ID JD", "2": "I 8C 9C", "1028": "AD BD CD BC DD ED FD GD" }, Q: { "1028": "CC" }, R: { "1": "KD" }, S: { "2": "LD MD" } }, B: 1, C: "Streams", D: true };
  }
});

// node_modules/caniuse-lite/data/features/stricttransportsecurity.js
var require_stricttransportsecurity = __commonJS({
  "node_modules/caniuse-lite/data/features/stricttransportsecurity.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A OC", "129": "B" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "PC 3B QC RC" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "D E F A B C K L G VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J SC AC TC UC" }, F: { "1": "6 7 8 9 C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m zB", "2": "F B bC cC dC eC yB MC fC" }, G: { "1": "E jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC hC iC" }, H: { "2": "1C" }, I: { "1": "H 6C 7C", "2": "3B I 2C 3C 4C 5C NC" }, J: { "1": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 6, C: "Strict Transport Security", D: true };
  }
});

// node_modules/caniuse-lite/data/features/style-scoped.js
var require_style_scoped = __commonJS({
  "node_modules/caniuse-lite/data/features/style-scoped.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "2": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "7 8 9 p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB", "2": "0 1 2 3 4 5 6 PC 3B I J D E F A B C K L G M N O o 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC", "322": "dB eB fB gB 4B hB" }, D: { "2": "0 1 2 3 4 5 6 I J D E F A B C K L G M N O LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "194": "7 8 9 o p q AB BB CB DB EB FB GB HB IB JB KB" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "2": "A B C r yB MC zB" }, L: { "2": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "2": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "2": "KD" }, S: { "1": "LD", "2": "MD" } }, B: 7, C: "Scoped CSS", D: true };
  }
});

// node_modules/caniuse-lite/data/features/subresource-bundling.js
var require_subresource_bundling = __commonJS({
  "node_modules/caniuse-lite/data/features/subresource-bundling.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 s t u v w x y z H n", "2": "C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "1": "0 1 2 3 4 s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y bC cC dC eC yB MC fC zB" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "2": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "2": "KD" }, S: { "2": "LD MD" } }, B: 7, C: "Subresource Loading with Web Bundles", D: false };
  }
});

// node_modules/caniuse-lite/data/features/subresource-integrity.js
var require_subresource_integrity = __commonJS({
  "node_modules/caniuse-lite/data/features/subresource-integrity.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M" }, C: { "1": "0 1 2 3 4 RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB QC RC" }, D: { "1": "0 1 2 3 4 TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB" }, E: { "1": "B C K L G yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A SC AC TC UC VC WC BC" }, F: { "1": "GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB bC cC dC eC yB MC fC zB" }, G: { "1": "qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC", "194": "pC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 2, C: "Subresource Integrity", D: true };
  }
});

// node_modules/caniuse-lite/data/features/svg-css.js
var require_svg_css = __commonJS({
  "node_modules/caniuse-lite/data/features/svg-css.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "F A B", "2": "J D E OC" }, B: { "1": "0 1 2 3 4 M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "516": "C K L G" }, C: { "1": "0 1 2 3 4 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "PC 3B QC RC", "260": "5 6 7 I J D E F A B C K L G M N O o p q" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "4": "I" }, E: { "1": "5 J D E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "SC", "132": "I AC" }, F: { "1": "6 7 8 9 B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB", "2": "F" }, G: { "1": "E NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "132": "AC gC" }, H: { "260": "1C" }, I: { "1": "3B I H 5C NC 6C 7C", "2": "2C 3C 4C" }, J: { "1": "D A" }, K: { "1": "r", "260": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 4, C: "SVG in CSS backgrounds", D: true };
  }
});

// node_modules/caniuse-lite/data/features/svg-filters.js
var require_svg_filters = __commonJS({
  "node_modules/caniuse-lite/data/features/svg-filters.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "A B", "2": "J D E F OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC", "2": "PC" }, D: { "1": "0 1 2 3 4 6 7 8 9 E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "I", "4": "5 J D" }, E: { "1": "J D E F A B C K L G UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I SC AC TC" }, F: { "1": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB" }, G: { "1": "E iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC hC" }, H: { "1": "1C" }, I: { "1": "H 6C 7C", "2": "3B I 2C 3C 4C 5C NC" }, J: { "1": "A", "2": "D" }, K: { "1": "A B C r yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 2, C: "SVG filters", D: true };
  }
});

// node_modules/caniuse-lite/data/features/svg-fonts.js
var require_svg_fonts = __commonJS({
  "node_modules/caniuse-lite/data/features/svg-fonts.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "F A B OC", "8": "J D E" }, B: { "2": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "1": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB", "2": "0 1 2 3 4 ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "130": "MB NB OB PB QB RB SB TB UB VB WB XB YB" }, E: { "1": "5 I J D E F A B C K L G AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "SC" }, F: { "1": "6 7 8 F B C G M N O o p q bC cC dC eC yB MC fC zB", "2": "LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "130": "9 AB BB CB DB EB FB GB HB IB JB KB" }, G: { "1": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "258": "1C" }, I: { "1": "3B I 5C NC 6C 7C", "2": "H 2C 3C 4C" }, J: { "1": "D A" }, K: { "1": "A B C yB MC zB", "2": "r" }, L: { "130": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "1": "I", "130": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "130": "KD" }, S: { "2": "LD MD" } }, B: 2, C: "SVG fonts", D: true };
  }
});

// node_modules/caniuse-lite/data/features/svg-fragment.js
var require_svg_fragment = __commonJS({
  "node_modules/caniuse-lite/data/features/svg-fragment.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E OC", "260": "F A B" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 PC 3B I J D E F A B C K L QC RC" }, D: { "1": "0 1 2 3 4 YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB", "132": "KB LB MB NB OB PB QB RB SB TB UB VB WB XB" }, E: { "1": "C K L G yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D F A B SC AC TC UC WC BC", "132": "E VC" }, F: { "1": "LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m zB", "2": "6 G M N O o p q", "4": "B C cC dC eC yB MC fC", "16": "F bC", "132": "7 8 9 AB BB CB DB EB FB GB HB IB JB KB" }, G: { "1": "qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC hC iC jC lC mC nC oC pC", "132": "E kC" }, H: { "1": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D", "132": "A" }, K: { "1": "r zB", "4": "A B C yB MC" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "132": "I" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 4, C: "SVG fragment identifiers", D: true };
  }
});

// node_modules/caniuse-lite/data/features/svg-html.js
var require_svg_html = __commonJS({
  "node_modules/caniuse-lite/data/features/svg-html.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E OC", "388": "F A B" }, B: { "4": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "260": "C K L G M N O" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC", "2": "PC", "4": "3B" }, D: { "4": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "2": "SC AC", "4": "5 I J D E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "4": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB" }, G: { "4": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "2": "3B I 2C 3C 4C 5C NC", "4": "H 6C 7C" }, J: { "1": "A", "2": "D" }, K: { "4": "A B C r yB MC zB" }, L: { "4": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "4": "0B" }, P: { "4": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "4": "CC" }, R: { "4": "KD" }, S: { "1": "LD MD" } }, B: 2, C: "SVG effects for HTML", D: true };
  }
});

// node_modules/caniuse-lite/data/features/svg-html5.js
var require_svg_html5 = __commonJS({
  "node_modules/caniuse-lite/data/features/svg-html5.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "OC", "8": "J D E", "129": "F A B" }, B: { "1": "0 1 2 3 4 N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "129": "C K L G M" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "8": "PC 3B QC RC" }, D: { "1": "0 1 2 3 4 6 7 8 9 D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "8": "5 I J" }, E: { "1": "F A B C K L G WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "8": "5 I SC AC", "129": "J D E TC UC VC" }, F: { "1": "6 7 8 9 C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m fC zB", "2": "B eC yB MC", "8": "F bC cC dC" }, G: { "1": "lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "8": "AC gC NC", "129": "E hC iC jC kC" }, H: { "1": "1C" }, I: { "1": "H 6C 7C", "2": "2C 3C 4C", "129": "3B I 5C NC" }, J: { "1": "A", "129": "D" }, K: { "1": "C r zB", "8": "A B yB MC" }, L: { "1": "H" }, M: { "1": "n" }, N: { "129": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "Inline SVG in HTML5", D: true };
  }
});

// node_modules/caniuse-lite/data/features/svg-img.js
var require_svg_img = __commonJS({
  "node_modules/caniuse-lite/data/features/svg-img.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "F A B", "2": "J D E OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "PC 3B QC RC" }, D: { "1": "0 1 2 3 4 CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "132": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB" }, E: { "1": "F A B C K L G WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "SC", "4": "AC", "132": "5 I J D E TC UC VC" }, F: { "1": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB" }, G: { "1": "lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "132": "E AC gC NC hC iC jC kC" }, H: { "1": "1C" }, I: { "1": "H 6C 7C", "2": "2C 3C 4C", "132": "3B I 5C NC" }, J: { "1": "D A" }, K: { "1": "A B C r yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "SVG in HTML img element", D: true };
  }
});

// node_modules/caniuse-lite/data/features/svg-smil.js
var require_svg_smil = __commonJS({
  "node_modules/caniuse-lite/data/features/svg-smil.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "OC", "8": "J D E F A B" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "8": "C K L G M N O" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "8": "PC 3B QC RC" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "4": "I" }, E: { "1": "J D E F A B C K L G UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "8": "SC AC", "132": "5 I TC" }, F: { "1": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB" }, G: { "1": "E iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "132": "AC gC NC hC" }, H: { "2": "1C" }, I: { "1": "3B I H 5C NC 6C 7C", "2": "2C 3C 4C" }, J: { "1": "D A" }, K: { "1": "A B C r yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "8": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 2, C: "SVG SMIL animation", D: true };
  }
});

// node_modules/caniuse-lite/data/features/svg.js
var require_svg = __commonJS({
  "node_modules/caniuse-lite/data/features/svg.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "OC", "8": "J D E", "772": "F A B" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "513": "C K L G M N O" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC", "4": "PC" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "5 I J D E F A B C K L G AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "4": "SC" }, F: { "1": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB" }, G: { "1": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "1": "1C" }, I: { "1": "H 6C 7C", "2": "2C 3C 4C", "132": "3B I 5C NC" }, J: { "1": "D A" }, K: { "1": "A B C r yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "257": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 4, C: "SVG (basic support)", D: true };
  }
});

// node_modules/caniuse-lite/data/features/sxg.js
var require_sxg = __commonJS({
  "node_modules/caniuse-lite/data/features/sxg.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "1": "0 1 2 3 4 r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB", "132": "rB sB" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB bC cC dC eC yB MC fC zB" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q DD ED FD GD HD 1B 2B ID JD", "2": "I 8C 9C AD BD CD BC" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "2": "LD MD" } }, B: 6, C: "Signed HTTP Exchanges (SXG)", D: true };
  }
});

// node_modules/caniuse-lite/data/features/tabindex-attr.js
var require_tabindex_attr = __commonJS({
  "node_modules/caniuse-lite/data/features/tabindex-attr.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "D E F A B", "16": "J OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "16": "PC 3B QC RC", "129": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, D: { "1": "0 1 2 3 4 6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "16": "5 I J D E F A B C K L" }, E: { "16": "5 I SC AC", "257": "J D E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "6 7 8 9 B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB", "16": "F" }, G: { "769": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "16": "1C" }, I: { "16": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "16": "D A" }, K: { "1": "r", "16": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "16": "A B" }, O: { "1": "0B" }, P: { "16": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "129": "LD MD" } }, B: 1, C: "tabindex global attribute", D: true };
  }
});

// node_modules/caniuse-lite/data/features/template-literals.js
var require_template_literals = __commonJS({
  "node_modules/caniuse-lite/data/features/template-literals.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "16": "C" }, C: { "1": "0 1 2 3 4 IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB QC RC" }, D: { "1": "0 1 2 3 4 PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB" }, E: { "1": "A B K L G WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F SC AC TC UC VC", "129": "C" }, F: { "1": "DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB bC cC dC eC yB MC fC zB" }, G: { "1": "lC mC nC oC pC qC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC", "129": "rC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 6, C: "ES6 Template Literals (Template Strings)", D: true };
  }
});

// node_modules/caniuse-lite/data/features/template.js
var require_template = __commonJS({
  "node_modules/caniuse-lite/data/features/template.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C", "388": "K L" }, C: { "1": "0 1 2 3 4 7 8 9 q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 PC 3B I J D E F A B C K L G M N O o p QC RC" }, D: { "1": "0 1 2 3 4 JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q", "132": "AB BB CB DB EB FB GB HB IB" }, E: { "1": "F A B C K L G WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D SC AC TC", "388": "E VC", "514": "UC" }, F: { "1": "7 8 9 q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F B C bC cC dC eC yB MC fC zB", "132": "6 G M N O o p" }, G: { "1": "lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC hC iC jC", "388": "E kC" }, H: { "2": "1C" }, I: { "1": "H 6C 7C", "2": "3B I 2C 3C 4C 5C NC" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "HTML templates", D: true };
  }
});

// node_modules/caniuse-lite/data/features/temporal.js
var require_temporal = __commonJS({
  "node_modules/caniuse-lite/data/features/temporal.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "2": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "2": "A B C r yB MC zB" }, L: { "2": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "2": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "2": "KD" }, S: { "2": "LD MD" } }, B: 6, C: "Temporal", D: true };
  }
});

// node_modules/caniuse-lite/data/features/testfeat.js
var require_testfeat = __commonJS({
  "node_modules/caniuse-lite/data/features/testfeat.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E A B OC", "16": "F" }, B: { "2": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "2": "0 1 2 3 4 6 7 8 9 PC 3B J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC", "16": "5 I" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I J D E F A K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "16": "B C" }, E: { "2": "I J SC AC TC", "16": "5 D E F A B C K L G UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC MC fC zB", "16": "yB" }, G: { "2": "AC gC NC hC iC", "16": "E jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 5C NC 6C 7C", "16": "4C" }, J: { "2": "A", "16": "D" }, K: { "2": "A B C r yB MC zB" }, L: { "2": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "2": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "2": "KD" }, S: { "2": "LD MD" } }, B: 7, C: "Test feature - updated", D: false };
  }
});

// node_modules/caniuse-lite/data/features/text-decoration.js
var require_text_decoration = __commonJS({
  "node_modules/caniuse-lite/data/features/text-decoration.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "2": "C K L G M N O", "2052": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "2": "5 PC 3B I QC RC", "1028": "0 1 2 3 4 KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "1060": "6 7 8 9 J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB" }, D: { "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q", "226": "AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB", "2052": "0 1 2 3 4 fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "2": "5 I J D SC AC TC UC", "772": "K L G zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "804": "E F A B C WC BC yB", "1316": "VC" }, F: { "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB bC cC dC eC yB MC fC zB", "226": "JB KB LB MB NB OB PB QB RB", "2052": "SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m" }, G: { "2": "AC gC NC hC iC jC", "292": "E kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "2": "A B C yB MC zB", "2052": "r" }, L: { "2052": "H" }, M: { "1028": "n" }, N: { "2": "A B" }, O: { "2052": "0B" }, P: { "2": "I 8C 9C", "2052": "o p q AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "2052": "CC" }, R: { "2052": "KD" }, S: { "1028": "LD MD" } }, B: 4, C: "text-decoration styling", D: true };
  }
});

// node_modules/caniuse-lite/data/features/text-emphasis.js
var require_text_emphasis = __commonJS({
  "node_modules/caniuse-lite/data/features/text-emphasis.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 i j k l m s t u v w x y z H n", "2": "C K L G M N O", "164": "P Q R S T U V W X Y Z a b c d e f g h" }, C: { "1": "0 1 2 3 4 UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB QC RC", "322": "TB" }, D: { "1": "0 1 2 3 4 i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 I J D E F A B C K L G M N O o p q", "164": "9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h" }, E: { "1": "E F A B C K L G VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J SC AC TC", "164": "D UC" }, F: { "1": "V W X Y Z a b c d e f g h i j k l m", "2": "F B C bC cC dC eC yB MC fC zB", "164": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U" }, G: { "1": "E jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC hC iC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC", "164": "6C 7C" }, J: { "2": "D", "164": "A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q ID JD", "164": "I 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B" }, Q: { "164": "CC" }, R: { "164": "KD" }, S: { "1": "LD MD" } }, B: 4, C: "text-emphasis styling", D: true };
  }
});

// node_modules/caniuse-lite/data/features/text-overflow.js
var require_text_overflow = __commonJS({
  "node_modules/caniuse-lite/data/features/text-overflow.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "J D E F A B", "2": "OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 6 7 8 9 D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "8": "5 PC 3B I J QC RC" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "6 7 8 9 B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m yB MC fC zB", "33": "F bC cC dC eC" }, G: { "1": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "1": "1C" }, I: { "1": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "1": "D A" }, K: { "1": "r zB", "33": "A B C yB MC" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 2, C: "CSS3 Text-overflow", D: true };
  }
});

// node_modules/caniuse-lite/data/features/text-size-adjust.js
var require_text_size_adjust = __commonJS({
  "node_modules/caniuse-lite/data/features/text-size-adjust.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "33": "C K L G M N O" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "1": "0 1 2 3 4 cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB", "258": "AB" }, E: { "2": "5 I J D E F A B C K L G SC AC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "258": "TC" }, F: { "1": "RB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB SB bC cC dC eC yB MC fC zB" }, G: { "2": "AC gC NC", "33": "E hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "33": "n" }, N: { "161": "A B" }, O: { "1": "0B" }, P: { "1": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "2": "LD MD" } }, B: 7, C: "CSS text-size-adjust", D: true };
  }
});

// node_modules/caniuse-lite/data/features/text-stroke.js
var require_text_stroke = __commonJS({
  "node_modules/caniuse-lite/data/features/text-stroke.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "2": "C K L", "33": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "161": "G M N O" }, C: { "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB QC RC", "161": "0 1 2 3 4 XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "450": "WB" }, D: { "33": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "33": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "2": "F B C bC cC dC eC yB MC fC zB", "33": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m" }, G: { "33": "E gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "36": "AC" }, H: { "2": "1C" }, I: { "2": "3B", "33": "I H 2C 3C 4C 5C NC 6C 7C" }, J: { "33": "D A" }, K: { "2": "A B C yB MC zB", "33": "r" }, L: { "33": "H" }, M: { "161": "n" }, N: { "2": "A B" }, O: { "33": "0B" }, P: { "33": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "33": "CC" }, R: { "33": "KD" }, S: { "161": "LD MD" } }, B: 7, C: "CSS text-stroke and text-fill", D: true };
  }
});

// node_modules/caniuse-lite/data/features/textcontent.js
var require_textcontent = __commonJS({
  "node_modules/caniuse-lite/data/features/textcontent.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "F A B", "2": "J D E OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "5 I J D E F A B C K L G AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "16": "SC" }, F: { "1": "6 7 8 9 B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB", "16": "F" }, G: { "1": "E gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "16": "AC" }, H: { "1": "1C" }, I: { "1": "3B I H 4C 5C NC 6C 7C", "16": "2C 3C" }, J: { "1": "D A" }, K: { "1": "A B C r yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "Node.textContent", D: true };
  }
});

// node_modules/caniuse-lite/data/features/textencoder.js
var require_textencoder = __commonJS({
  "node_modules/caniuse-lite/data/features/textencoder.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 7 8 9 o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 PC 3B I J D E F A B C K L G M N O QC RC", "132": "6" }, D: { "1": "0 1 2 3 4 MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB" }, E: { "1": "B C K L G BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A SC AC TC UC VC WC" }, F: { "1": "9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 F B C G M N O o p q bC cC dC eC yB MC fC zB" }, G: { "1": "oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "TextEncoder & TextDecoder", D: true };
  }
});

// node_modules/caniuse-lite/data/features/tls1-1.js
var require_tls1_1 = __commonJS({
  "node_modules/caniuse-lite/data/features/tls1-1.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "B", "2": "J D OC", "66": "E F A" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB", "2": "5 6 PC 3B I J D E F A B C K L G M N O o p q QC RC", "66": "7", "129": "oB pB qB rB sB r tB uB vB wB", "388": "0 1 2 3 4 xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, D: { "1": "7 8 9 q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T", "2": "5 6 I J D E F A B C K L G M N O o p", "1540": "0 1 2 3 4 U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "D E F A B C K VC WC BC yB zB", "2": "5 I J SC AC TC UC", "513": "L G CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB zB", "2": "F B C bC cC dC eC yB MC fC", "1540": "r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m" }, G: { "1": "E hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC" }, H: { "1": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "1": "A", "2": "D" }, K: { "1": "r zB", "2": "A B C yB MC" }, L: { "1": "H" }, M: { "129": "n" }, N: { "1": "B", "66": "A" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 6, C: "TLS 1.1", D: true };
  }
});

// node_modules/caniuse-lite/data/features/tls1-2.js
var require_tls1_2 = __commonJS({
  "node_modules/caniuse-lite/data/features/tls1-2.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "B", "2": "J D OC", "66": "E F A" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 PC 3B I J D E F A B C K L G M N O o p q QC RC", "66": "8 9 AB" }, D: { "1": "0 1 2 3 4 DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB" }, E: { "1": "D E F A B C K L G VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J SC AC TC UC" }, F: { "1": "6 7 8 9 M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F G bC", "66": "B C cC dC eC yB MC fC zB" }, G: { "1": "E hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC" }, H: { "1": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "1": "A", "2": "D" }, K: { "1": "r zB", "2": "A B C yB MC" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "B", "66": "A" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 6, C: "TLS 1.2", D: true };
  }
});

// node_modules/caniuse-lite/data/features/tls1-3.js
var require_tls1_3 = __commonJS({
  "node_modules/caniuse-lite/data/features/tls1-3.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB QC RC", "132": "hB 5B iB", "450": "ZB aB bB cB dB eB fB gB 4B" }, D: { "1": "0 1 2 3 4 qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB", "706": "cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB" }, E: { "1": "L G XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A B C SC AC TC UC VC WC BC yB", "1028": "K zB CC" }, F: { "1": "fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB bC cC dC eC yB MC fC zB", "706": "cB dB eB" }, G: { "1": "sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q BC DD ED FD GD HD 1B 2B ID JD", "2": "I 8C 9C AD BD CD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "2": "LD" } }, B: 6, C: "TLS 1.3", D: true };
  }
});

// node_modules/caniuse-lite/data/features/touch.js
var require_touch = __commonJS({
  "node_modules/caniuse-lite/data/features/touch.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F OC", "8": "A B" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "578": "C K L G M N O" }, C: { "1": "0 1 2 3 4 6 7 8 O o p q aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "PC 3B QC RC", "4": "5 I J D E F A B C K L G M N", "194": "9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB" }, D: { "1": "0 1 2 3 4 7 8 9 q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 I J D E F A B C K L G M N O o p" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F B C bC cC dC eC yB MC fC zB" }, G: { "1": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "1": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "1": "D A" }, K: { "1": "B C r yB MC zB", "2": "A" }, L: { "1": "H" }, M: { "1": "n" }, N: { "8": "A", "260": "B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "2": "LD" } }, B: 2, C: "Touch events", D: true };
  }
});

// node_modules/caniuse-lite/data/features/transforms2d.js
var require_transforms2d = __commonJS({
  "node_modules/caniuse-lite/data/features/transforms2d.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "OC", "8": "J D E", "129": "A B", "161": "F" }, B: { "1": "0 1 2 3 4 N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "129": "C K L G M" }, C: { "1": "0 1 2 3 4 6 7 8 9 M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "PC 3B", "33": "5 I J D E F A B C K L G QC RC" }, D: { "1": "0 1 2 3 4 KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "33": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB" }, E: { "1": "F A B C K L G WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "33": "5 I J D E SC AC TC UC VC" }, F: { "1": "7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m zB", "2": "F bC cC", "33": "6 B C G M N O o p q dC eC yB MC fC" }, G: { "1": "lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "33": "E AC gC NC hC iC jC kC" }, H: { "2": "1C" }, I: { "1": "H", "33": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "33": "D A" }, K: { "1": "B C r yB MC zB", "2": "A" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 4, C: "CSS3 2D Transforms", D: true };
  }
});

// node_modules/caniuse-lite/data/features/transforms3d.js
var require_transforms3d = __commonJS({
  "node_modules/caniuse-lite/data/features/transforms3d.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F OC", "132": "A B" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 6 7 8 9 M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 PC 3B I J D E F QC RC", "33": "A B C K L G" }, D: { "1": "0 1 2 3 4 KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 I J D E F A B", "33": "6 7 8 9 C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB" }, E: { "1": "EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "SC AC", "33": "5 I J D E TC UC VC", "257": "F A B C K L G WC BC yB zB CC XC YC DC" }, F: { "1": "7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F B C bC cC dC eC yB MC fC zB", "33": "6 G M N O o p q" }, G: { "1": "EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "33": "E AC gC NC hC iC jC kC", "257": "lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC" }, H: { "2": "1C" }, I: { "1": "H", "2": "2C 3C 4C", "33": "3B I 5C NC 6C 7C" }, J: { "33": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "132": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 5, C: "CSS3 3D Transforms", D: true };
  }
});

// node_modules/caniuse-lite/data/features/trusted-types.js
var require_trusted_types = __commonJS({
  "node_modules/caniuse-lite/data/features/trusted-types.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O P Q R" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "1": "0 1 2 3 4 S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB bC cC dC eC yB MC fC zB" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q FD GD HD 1B 2B ID JD", "2": "I 8C 9C AD BD CD BC DD ED" }, Q: { "2": "CC" }, R: { "1": "KD" }, S: { "2": "LD MD" } }, B: 7, C: "Trusted Types for DOM manipulation", D: true };
  }
});

// node_modules/caniuse-lite/data/features/ttf.js
var require_ttf = __commonJS({
  "node_modules/caniuse-lite/data/features/ttf.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E OC", "132": "F A B" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC", "2": "PC 3B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "6 7 8 9 B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m cC dC eC yB MC fC zB", "2": "F bC" }, G: { "1": "E NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC" }, H: { "2": "1C" }, I: { "1": "3B I H 3C 4C 5C NC 6C 7C", "2": "2C" }, J: { "1": "D A" }, K: { "1": "A B C r yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "132": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 6, C: "TTF/OTF - TrueType and OpenType font support", D: true };
  }
});

// node_modules/caniuse-lite/data/features/typedarrays.js
var require_typedarrays = __commonJS({
  "node_modules/caniuse-lite/data/features/typedarrays.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "B", "2": "J D E F OC", "132": "A" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "PC 3B QC RC" }, D: { "1": "0 1 2 3 4 6 7 8 9 D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 I J" }, E: { "1": "J D E F A B C K L G UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I SC AC", "260": "TC" }, F: { "1": "6 7 8 9 C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m fC zB", "2": "F B bC cC dC eC yB MC" }, G: { "1": "E hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC", "260": "NC" }, H: { "1": "1C" }, I: { "1": "I H 5C NC 6C 7C", "2": "3B 2C 3C 4C" }, J: { "1": "A", "2": "D" }, K: { "1": "C r zB", "2": "A B yB MC" }, L: { "1": "H" }, M: { "1": "n" }, N: { "132": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 6, C: "Typed Arrays", D: true };
  }
});

// node_modules/caniuse-lite/data/features/u2f.js
var require_u2f = __commonJS({
  "node_modules/caniuse-lite/data/features/u2f.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "2": "0 1 2 3 4 C K L G M N O u v w x y z H n", "513": "P Q R S T U V W X Y Z a b c d e f g h i j k l m s t" }, C: { "1": "nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z", "2": "2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB H n 7B 8B 9B QC RC", "322": "0 1 VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB u v w x y z H n 7B 8B 9B", "130": "MB NB OB", "513": "PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g", "578": "h i j k l m s t" }, E: { "1": "K L G CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A B C SC AC TC UC VC WC BC yB zB" }, F: { "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB PB bC cC dC eC yB MC fC zB", "513": "OB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m" }, G: { "1": "vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "2": "A B C r yB MC zB" }, L: { "2": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "2": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "2": "KD" }, S: { "1": "MD", "322": "LD" } }, B: 7, C: "FIDO U2F API", D: true };
  }
});

// node_modules/caniuse-lite/data/features/unhandledrejection.js
var require_unhandledrejection = __commonJS({
  "node_modules/caniuse-lite/data/features/unhandledrejection.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB QC RC" }, D: { "1": "0 1 2 3 4 XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB" }, E: { "1": "B C K L G yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A SC AC TC UC VC WC BC" }, F: { "1": "KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB bC cC dC eC yB MC fC zB" }, G: { "1": "qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC", "16": "pC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "2": "LD" } }, B: 1, C: "unhandledrejection/rejectionhandled events", D: true };
  }
});

// node_modules/caniuse-lite/data/features/upgradeinsecurerequests.js
var require_upgradeinsecurerequests = __commonJS({
  "node_modules/caniuse-lite/data/features/upgradeinsecurerequests.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M" }, C: { "1": "0 1 2 3 4 QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QC RC" }, D: { "1": "0 1 2 3 4 RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB" }, E: { "1": "B C K L G BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A SC AC TC UC VC WC" }, F: { "1": "EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB bC cC dC eC yB MC fC zB" }, G: { "1": "oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 4, C: "Upgrade Insecure Requests", D: true };
  }
});

// node_modules/caniuse-lite/data/features/url-scroll-to-text-fragment.js
var require_url_scroll_to_text_fragment = __commonJS({
  "node_modules/caniuse-lite/data/features/url-scroll-to-text-fragment.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O", "66": "P Q R" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "1": "0 1 2 3 4 R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r", "66": "tB uB vB wB xB P Q" }, E: { "1": "FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B" }, F: { "1": "oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB bC cC dC eC yB MC fC zB", "66": "mB nB" }, G: { "1": "FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "1": "o p q FD GD HD 1B 2B ID JD", "2": "I 8C 9C AD BD CD BC DD ED" }, Q: { "2": "CC" }, R: { "1": "KD" }, S: { "2": "LD MD" } }, B: 7, C: "URL Scroll-To-Text Fragment", D: true };
  }
});

// node_modules/caniuse-lite/data/features/url.js
var require_url = __commonJS({
  "node_modules/caniuse-lite/data/features/url.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q QC RC" }, D: { "1": "0 1 2 3 4 GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 I J D E F A B C K L G M N O o p q", "130": "7 8 9 AB BB CB DB EB FB" }, E: { "1": "E F A B C K L G VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J SC AC TC UC", "130": "D" }, F: { "1": "6 7 8 9 o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F B C bC cC dC eC yB MC fC zB", "130": "G M N O" }, G: { "1": "E kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC hC iC", "130": "jC" }, H: { "2": "1C" }, I: { "1": "H 7C", "2": "3B I 2C 3C 4C 5C NC", "130": "6C" }, J: { "2": "D", "130": "A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "URL API", D: true };
  }
});

// node_modules/caniuse-lite/data/features/urlsearchparams.js
var require_urlsearchparams = __commonJS({
  "node_modules/caniuse-lite/data/features/urlsearchparams.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M" }, C: { "1": "0 1 2 3 4 SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB QC RC", "132": "DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB" }, D: { "1": "0 1 2 3 4 XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB" }, E: { "1": "B C K L G BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A SC AC TC UC VC WC" }, F: { "1": "KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB bC cC dC eC yB MC fC zB" }, G: { "1": "oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "URLSearchParams", D: true };
  }
});

// node_modules/caniuse-lite/data/features/use-strict.js
var require_use_strict = __commonJS({
  "node_modules/caniuse-lite/data/features/use-strict.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "A B", "2": "J D E F OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "PC 3B QC RC" }, D: { "1": "0 1 2 3 4 6 7 8 9 K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 I J D E F A B C" }, E: { "1": "J D E F A B C K L G UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "I SC AC", "132": "5 TC" }, F: { "1": "6 7 8 9 C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m fC zB", "2": "F B bC cC dC eC yB MC" }, G: { "1": "E hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC" }, H: { "1": "1C" }, I: { "1": "3B I H 5C NC 6C 7C", "2": "2C 3C 4C" }, J: { "1": "D A" }, K: { "1": "C r MC zB", "2": "A B yB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 6, C: "ECMAScript 5 Strict Mode", D: true };
  }
});

// node_modules/caniuse-lite/data/features/user-select-none.js
var require_user_select_none = __commonJS({
  "node_modules/caniuse-lite/data/features/user-select-none.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F OC", "33": "A B" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "33": "C K L G M N O" }, C: { "1": "0 1 2 3 4 pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "33": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB QC RC" }, D: { "1": "0 1 2 3 4 cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "33": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB" }, E: { "1": "aC", "33": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC" }, F: { "1": "PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F B C bC cC dC eC yB MC fC zB", "33": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB" }, G: { "33": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "1": "H", "33": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "33": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "33": "A B" }, O: { "1": "0B" }, P: { "1": "o p q 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "33": "I 8C" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "33": "LD" } }, B: 5, C: "CSS user-select: none", D: true };
  }
});

// node_modules/caniuse-lite/data/features/user-timing.js
var require_user_timing = __commonJS({
  "node_modules/caniuse-lite/data/features/user-timing.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "A B", "2": "J D E F OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB QC RC" }, D: { "1": "0 1 2 3 4 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 I J D E F A B C K L G M N O o p q" }, E: { "1": "B C K L G yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A SC AC TC UC VC WC BC" }, F: { "1": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F B C bC cC dC eC yB MC fC zB" }, G: { "1": "pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC" }, H: { "2": "1C" }, I: { "1": "H 6C 7C", "2": "3B I 2C 3C 4C 5C NC" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 2, C: "User Timing API", D: true };
  }
});

// node_modules/caniuse-lite/data/features/variable-fonts.js
var require_variable_fonts = __commonJS({
  "node_modules/caniuse-lite/data/features/variable-fonts.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M" }, C: { "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB QC RC", "4609": "iB jB kB lB mB nB oB pB qB", "4674": "5B", "5698": "hB", "7490": "bB cB dB eB fB", "7746": "gB 4B", "8705": "0 1 2 3 4 rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, D: { "1": "0 1 2 3 4 nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB", "4097": "mB", "4290": "4B hB 5B", "6148": "iB jB kB lB" }, E: { "1": "G YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A SC AC TC UC VC WC BC", "4609": "B C yB zB", "8193": "K L CC XC" }, F: { "1": "cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB bC cC dC eC yB MC fC zB", "4097": "bB", "6148": "XB YB ZB aB" }, G: { "1": "tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC", "4097": "pC qC rC sC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "4097": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "2": "I 8C 9C AD", "4097": "o p q BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "2": "LD" } }, B: 5, C: "Variable fonts", D: true };
  }
});

// node_modules/caniuse-lite/data/features/vector-effect.js
var require_vector_effect = __commonJS({
  "node_modules/caniuse-lite/data/features/vector-effect.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 PC 3B I J D E F A B C K L QC RC" }, D: { "1": "0 1 2 3 4 6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "16": "5 I J D E F A B C K L" }, E: { "1": "J D E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I SC AC" }, F: { "1": "6 7 8 9 C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m fC zB", "2": "F B bC cC dC eC yB MC" }, G: { "1": "E hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "16": "AC gC NC" }, H: { "1": "1C" }, I: { "1": "H 6C 7C", "16": "3B I 2C 3C 4C 5C NC" }, J: { "16": "D A" }, K: { "1": "C r zB", "2": "A B yB MC" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 4, C: "SVG vector-effect: non-scaling-stroke", D: true };
  }
});

// node_modules/caniuse-lite/data/features/vibration.js
var require_vibration = __commonJS({
  "node_modules/caniuse-lite/data/features/vibration.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 6 7 8 9 M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 PC 3B I J D E F A QC RC", "33": "B C K L G" }, D: { "1": "0 1 2 3 4 EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "6 7 8 9 N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F B C G M bC cC dC eC yB MC fC zB" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "1": "H 6C 7C", "2": "3B I 2C 3C 4C 5C NC" }, J: { "1": "A", "2": "D" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 2, C: "Vibration API", D: true };
  }
});

// node_modules/caniuse-lite/data/features/video.js
var require_video = __commonJS({
  "node_modules/caniuse-lite/data/features/video.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "F A B", "2": "J D E OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 7 8 9 o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "PC 3B", "260": "5 6 I J D E F A B C K L G M N O QC RC" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "5 I J D E F A TC UC VC WC BC", "2": "SC AC", "513": "B C K L G yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "6 7 8 9 B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m dC eC yB MC fC zB", "2": "F bC cC" }, G: { "1": "E AC gC NC hC iC jC kC lC mC nC oC", "513": "pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "1": "3B I H 4C 5C NC 6C 7C", "132": "2C 3C" }, J: { "1": "D A" }, K: { "1": "B C r yB MC zB", "2": "A" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "Video element", D: true };
  }
});

// node_modules/caniuse-lite/data/features/videotracks.js
var require_videotracks = __commonJS({
  "node_modules/caniuse-lite/data/features/videotracks.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "C K L G M N O", "322": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB QC RC", "194": "0 1 2 3 4 HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, D: { "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB", "322": "0 1 2 3 4 TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "D E F A B C K L G UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J SC AC TC" }, F: { "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB bC cC dC eC yB MC fC zB", "322": "GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m" }, G: { "1": "E jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC hC iC" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "2": "A B C yB MC zB", "322": "r" }, L: { "322": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "322": "0B" }, P: { "2": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "322": "CC" }, R: { "322": "KD" }, S: { "194": "LD MD" } }, B: 1, C: "Video Tracks", D: true };
  }
});

// node_modules/caniuse-lite/data/features/view-transitions.js
var require_view_transitions = __commonJS({
  "node_modules/caniuse-lite/data/features/view-transitions.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 z H n", "2": "C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "1": "0 1 2 3 4 z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f bC cC dC eC yB MC fC zB" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "2": "A B C r yB MC zB" }, L: { "1": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "2": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "2": "KD" }, S: { "2": "LD MD" } }, B: 5, C: "View Transitions API (single-document)", D: true };
  }
});

// node_modules/caniuse-lite/data/features/viewport-unit-variants.js
var require_viewport_unit_variants = __commonJS({
  "node_modules/caniuse-lite/data/features/viewport-unit-variants.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 w x y z H n", "2": "C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s", "194": "t u v" }, C: { "1": "0 1 2 3 4 k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j QC RC" }, D: { "1": "0 1 2 3 4 w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i", "194": "j k l m s t u v" }, E: { "1": "EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC" }, F: { "1": "d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z bC cC dC eC yB MC fC zB", "194": "a b c" }, G: { "1": "EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "2": "A B C r yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "1": "p q", "2": "I o 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "2": "KD" }, S: { "2": "LD MD" } }, B: 5, C: "Small, Large, and Dynamic viewport units", D: true };
  }
});

// node_modules/caniuse-lite/data/features/viewport-units.js
var require_viewport_units = __commonJS({
  "node_modules/caniuse-lite/data/features/viewport-units.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E OC", "132": "F", "260": "A B" }, B: { "1": "0 1 2 3 4 M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "260": "C K L G" }, C: { "1": "0 1 2 3 4 6 7 8 9 o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 PC 3B I J D E F A B C K L G M N O QC RC" }, D: { "1": "0 1 2 3 4 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 I J D E F A B C K L G M N O", "260": "7 8 9 o p q" }, E: { "1": "D E F A B C K L G UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I SC AC TC", "260": "J" }, F: { "1": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F B C bC cC dC eC yB MC fC zB" }, G: { "1": "E kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC hC", "516": "jC", "772": "iC" }, H: { "2": "1C" }, I: { "1": "H 6C 7C", "2": "3B I 2C 3C 4C 5C NC" }, J: { "1": "A", "2": "D" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "260": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 4, C: "Viewport units: vw, vh, vmin, vmax", D: true };
  }
});

// node_modules/caniuse-lite/data/features/wai-aria.js
var require_wai_aria = __commonJS({
  "node_modules/caniuse-lite/data/features/wai-aria.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D OC", "4": "E F A B" }, B: { "4": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "4": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "4": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "2": "SC AC", "4": "5 I J D E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "2": "F", "4": "6 7 8 9 B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB" }, G: { "4": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "4": "1C" }, I: { "2": "3B I 2C 3C 4C 5C NC", "4": "H 6C 7C" }, J: { "2": "D A" }, K: { "4": "A B C r yB MC zB" }, L: { "4": "H" }, M: { "4": "n" }, N: { "4": "A B" }, O: { "4": "0B" }, P: { "4": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "4": "CC" }, R: { "4": "KD" }, S: { "4": "LD MD" } }, B: 2, C: "WAI-ARIA Accessibility features", D: true };
  }
});

// node_modules/caniuse-lite/data/features/wake-lock.js
var require_wake_lock = __commonJS({
  "node_modules/caniuse-lite/data/features/wake-lock.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O", "194": "P Q R S T U V W X Y" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "1": "0 1 2 3 4 U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB", "194": "rB sB r tB uB vB wB xB P Q R S T" }, E: { "1": "IC JC KC 2B LC aC", "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC" }, F: { "1": "r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB bC cC dC eC yB MC fC zB", "194": "gB hB iB jB kB lB mB nB oB pB qB rB sB" }, G: { "1": "IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q GD HD 1B 2B ID JD", "2": "I 8C 9C AD BD CD BC DD ED FD" }, Q: { "2": "CC" }, R: { "1": "KD" }, S: { "2": "LD MD" } }, B: 4, C: "Screen Wake Lock API", D: true };
  }
});

// node_modules/caniuse-lite/data/features/wasm.js
var require_wasm = __commonJS({
  "node_modules/caniuse-lite/data/features/wasm.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L", "578": "G" }, C: { "1": "0 1 2 3 4 bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB QC RC", "194": "VB WB XB YB ZB", "1025": "aB" }, D: { "1": "0 1 2 3 4 fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB", "322": "ZB aB bB cB dB eB" }, E: { "1": "B C K L G yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A SC AC TC UC VC WC BC" }, F: { "1": "SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB bC cC dC eC yB MC fC zB", "322": "MB NB OB PB QB RB" }, G: { "1": "pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I 8C 9C" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "194": "LD" } }, B: 6, C: "WebAssembly", D: true };
  }
});

// node_modules/caniuse-lite/data/features/wav.js
var require_wav = __commonJS({
  "node_modules/caniuse-lite/data/features/wav.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC", "2": "PC 3B" }, D: { "1": "0 1 2 3 4 6 7 8 9 E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 I J D" }, E: { "1": "5 I J D E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "SC AC" }, F: { "1": "6 7 8 9 B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m dC eC yB MC fC zB", "2": "F bC cC" }, G: { "1": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "1": "3B I H 4C 5C NC 6C 7C", "16": "2C 3C" }, J: { "1": "D A" }, K: { "1": "B C r yB MC zB", "16": "A" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 6, C: "Wav audio format", D: true };
  }
});

// node_modules/caniuse-lite/data/features/wbr-element.js
var require_wbr_element = __commonJS({
  "node_modules/caniuse-lite/data/features/wbr-element.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "J D OC", "2": "E F A B" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "5 I J D E F A B C K L G AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "16": "SC" }, F: { "1": "6 7 8 9 B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB", "16": "F" }, G: { "1": "E hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "16": "AC gC NC" }, H: { "1": "1C" }, I: { "1": "3B I H 4C 5C NC 6C 7C", "16": "2C 3C" }, J: { "1": "D A" }, K: { "1": "B C r yB MC zB", "2": "A" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "wbr (word break opportunity) element", D: true };
  }
});

// node_modules/caniuse-lite/data/features/web-animation.js
var require_web_animation = __commonJS({
  "node_modules/caniuse-lite/data/features/web-animation.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O", "260": "P Q R S" }, C: { "1": "0 1 2 3 4 R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB QC RC", "260": "4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB", "516": "VB WB XB YB ZB aB bB cB dB eB fB gB", "580": "HB IB JB KB LB MB NB OB PB QB RB SB TB UB", "2049": "uB vB wB xB P Q" }, D: { "1": "0 1 2 3 4 T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB", "132": "KB LB MB", "260": "NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S" }, E: { "1": "G YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A SC AC TC UC VC WC BC", "1090": "B C K yB zB", "2049": "L CC XC" }, F: { "1": "rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 F B C G M N O o p q bC cC dC eC yB MC fC zB", "132": "7 8 9", "260": "AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC", "1090": "pC qC rC sC tC uC vC", "2049": "wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "260": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "260": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "516": "LD" } }, B: 5, C: "Web Animations API", D: true };
  }
});

// node_modules/caniuse-lite/data/features/web-app-manifest.js
var require_web_app_manifest = __commonJS({
  "node_modules/caniuse-lite/data/features/web-app-manifest.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M", "130": "N O" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC", "578": "vB wB xB P Q R 6B S T U" }, D: { "1": "0 1 2 3 4 NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC", "4": "2B LC aC" }, F: { "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC", "4": "IC JC KC 2B LC", "260": "qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "2": "LD MD" } }, B: 5, C: "Add to home screen (A2HS)", D: false };
  }
});

// node_modules/caniuse-lite/data/features/web-bluetooth.js
var require_web_bluetooth = __commonJS({
  "node_modules/caniuse-lite/data/features/web-bluetooth.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "2": "C K L G M N O", "1025": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB", "194": "TB UB VB WB XB YB ZB aB", "706": "bB cB dB", "1025": "0 1 2 3 4 eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB bC cC dC eC yB MC fC zB", "450": "KB LB MB NB", "706": "OB PB QB", "1025": "RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "2": "3B I 2C 3C 4C 5C NC 6C 7C", "1025": "H" }, J: { "2": "D A" }, K: { "2": "A B C yB MC zB", "1025": "r" }, L: { "1025": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "1025": "0B" }, P: { "1": "o p q 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I 8C" }, Q: { "2": "CC" }, R: { "1025": "KD" }, S: { "2": "LD MD" } }, B: 7, C: "Web Bluetooth", D: true };
  }
});

// node_modules/caniuse-lite/data/features/web-serial.js
var require_web_serial = __commonJS({
  "node_modules/caniuse-lite/data/features/web-serial.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O", "66": "P Q R S T U V W X" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "1": "0 1 2 3 4 Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB", "66": "xB P Q R S T U V W X" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB bC cC dC eC yB MC fC zB", "66": "lB mB nB oB pB qB rB sB r tB uB" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "2": "A B C r yB MC zB" }, L: { "2": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "2": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "2": "KD" }, S: { "2": "LD MD" } }, B: 7, C: "Web Serial API", D: true };
  }
});

// node_modules/caniuse-lite/data/features/web-share.js
var require_web_share = __commonJS({
  "node_modules/caniuse-lite/data/features/web-share.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O P Q", "516": "R S T U V W X Y Z a b c d" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "2": "5 9 I J D E F A B C K L G M N AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X", "130": "6 7 8 O o p q", "1028": "0 1 2 3 4 Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "L G XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A B C SC AC TC UC VC WC BC yB", "2049": "K zB CC" }, F: { "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB" }, G: { "1": "xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC", "2049": "sC tC uC vC wC" }, H: { "2": "1C" }, I: { "2": "3B I 2C 3C 4C 5C NC 6C", "258": "H 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "1": "o p q BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I", "258": "8C 9C AD" }, Q: { "2": "CC" }, R: { "2": "KD" }, S: { "2": "LD MD" } }, B: 4, C: "Web Share API", D: true };
  }
});

// node_modules/caniuse-lite/data/features/webauthn.js
var require_webauthn = __commonJS({
  "node_modules/caniuse-lite/data/features/webauthn.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C", "226": "K L G M N" }, C: { "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B QC RC", "4100": "2 3 4 H n 7B 8B 9B", "5124": "0 1 hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z" }, D: { "1": "0 1 2 3 4 nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB" }, E: { "1": "K L G CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A B C SC AC TC UC VC WC BC yB", "322": "zB" }, F: { "1": "cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB bC cC dC eC yB MC fC zB" }, G: { "1": "yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC", "578": "uC", "2052": "xC", "3076": "vC wC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1028": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q 2B ID JD", "2": "I 8C 9C AD BD CD BC DD ED FD GD HD 1B" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "2": "LD" } }, B: 2, C: "Web Authentication API", D: true };
  }
});

// node_modules/caniuse-lite/data/features/webcodecs.js
var require_webcodecs = __commonJS({
  "node_modules/caniuse-lite/data/features/webcodecs.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O P Q R S T U V W X Y Z a b c" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "1": "0 1 2 3 4 d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC", "132": "IC JC KC 2B LC aC" }, F: { "1": "Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P bC cC dC eC yB MC fC zB" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC", "132": "IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q 2B ID JD", "2": "I 8C 9C AD BD CD BC DD ED FD GD HD 1B" }, Q: { "2": "CC" }, R: { "1": "KD" }, S: { "2": "LD MD" } }, B: 5, C: "WebCodecs API", D: true };
  }
});

// node_modules/caniuse-lite/data/features/webgl.js
var require_webgl = __commonJS({
  "node_modules/caniuse-lite/data/features/webgl.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "OC", "8": "J D E F A", "129": "B" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "129": "C K L G M N O" }, C: { "1": "0 1 2 3 4 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "PC 3B QC RC", "129": "5 6 7 I J D E F A B C K L G M N O o p q" }, D: { "1": "0 1 2 3 4 HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 I J D", "129": "6 7 8 9 E F A B C K L G M N O o p q AB BB CB DB EB FB GB" }, E: { "1": "E F A B C K L G WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I SC AC", "129": "J D TC UC VC" }, F: { "1": "6 7 8 9 o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F B bC cC dC eC yB MC fC", "129": "C G M N O zB" }, G: { "1": "E kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC hC iC jC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "1": "A", "2": "D" }, K: { "1": "C r zB", "2": "A B yB MC" }, L: { "1": "H" }, M: { "1": "n" }, N: { "8": "A", "129": "B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "129": "LD" } }, B: 6, C: "WebGL - 3D Canvas graphics", D: true };
  }
});

// node_modules/caniuse-lite/data/features/webgl2.js
var require_webgl2 = __commonJS({
  "node_modules/caniuse-lite/data/features/webgl2.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 PC 3B I J D E F A B C K L G M N O o p q QC RC", "194": "QB RB SB", "450": "9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB", "2242": "TB UB VB WB XB YB" }, D: { "1": "0 1 2 3 4 eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB", "578": "RB SB TB UB VB WB XB YB ZB aB bB cB dB" }, E: { "1": "G YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A SC AC TC UC VC WC", "1090": "B C K L BC yB zB CC XC" }, F: { "1": "RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB bC cC dC eC yB MC fC zB" }, G: { "1": "zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC", "1090": "rC sC tC uC vC wC xC yC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I 8C 9C" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "2242": "LD" } }, B: 6, C: "WebGL 2.0", D: true };
  }
});

// node_modules/caniuse-lite/data/features/webgpu.js
var require_webgpu = __commonJS({
  "node_modules/caniuse-lite/data/features/webgpu.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "1 2 3 4 H n", "2": "C K L G M N O P", "578": "Q R S T U V W X Y Z a b c", "1602": "0 d e f g h i j k l m s t u v w x y z" }, C: { "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB QC RC", "194": "0 1 2 3 4 jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, D: { "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P", "578": "Q R S T U V W X Y Z a b c", "1602": "0 d e f g h i j k l m s t u v w x y z", "2049": "1 2 3 4 H n 7B 8B 9B" }, E: { "2": "5 I J D E F A B G SC AC TC UC VC WC BC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "322": "C K L yB zB CC XC" }, F: { "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB bC cC dC eC yB MC fC zB", "578": "r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h", "2049": "i j k l m" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "2": "A B C r yB MC zB" }, L: { "2": "H" }, M: { "194": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "2": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "2": "KD" }, S: { "2": "LD", "194": "MD" } }, B: 5, C: "WebGPU", D: true };
  }
});

// node_modules/caniuse-lite/data/features/webhid.js
var require_webhid = __commonJS({
  "node_modules/caniuse-lite/data/features/webhid.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O", "66": "P Q R S T U V W X" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "1": "0 1 2 3 4 Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB", "66": "xB P Q R S T U V W X" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB bC cC dC eC yB MC fC zB", "66": "mB nB oB pB qB rB sB r tB uB" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "2": "A B C r yB MC zB" }, L: { "2": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "2": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "2": "KD" }, S: { "2": "LD MD" } }, B: 7, C: "WebHID API", D: true };
  }
});

// node_modules/caniuse-lite/data/features/webkit-user-drag.js
var require_webkit_user_drag = __commonJS({
  "node_modules/caniuse-lite/data/features/webkit-user-drag.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "2": "C K L G M N O", "132": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "16": "5 I J D E F A B C K L G", "132": "0 1 2 3 4 6 7 8 9 M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "2": "F B C bC cC dC eC yB MC fC zB", "132": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "2": "A B C r yB MC zB" }, L: { "2": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "2": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "2": "KD" }, S: { "2": "LD MD" } }, B: 7, C: "CSS -webkit-user-drag property", D: true };
  }
});

// node_modules/caniuse-lite/data/features/webm.js
var require_webm = __commonJS({
  "node_modules/caniuse-lite/data/features/webm.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E OC", "520": "F A B" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "8": "C K", "388": "L G M N O" }, C: { "1": "0 1 2 3 4 CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "PC 3B QC RC", "132": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB" }, D: { "1": "0 1 2 3 4 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 I", "132": "6 7 8 J D E F A B C K L G M N O o p q" }, E: { "1": "1B FC GC HC IC JC KC 2B LC aC", "2": "SC", "8": "5 I AC TC", "520": "J D E F A B C UC VC WC BC yB", "1028": "K zB CC", "7172": "L", "8196": "G XC YC DC EC 0B ZC" }, F: { "1": "6 7 8 9 M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F bC cC dC", "132": "B C G eC yB MC fC zB" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC", "1028": "sC tC uC vC wC", "3076": "xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "1": "H", "2": "2C 3C", "132": "3B I 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "8": "A B" }, O: { "1": "0B" }, P: { "1": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD", "132": "I" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 6, C: "WebM video format", D: true };
  }
});

// node_modules/caniuse-lite/data/features/webnfc.js
var require_webnfc = __commonJS({
  "node_modules/caniuse-lite/data/features/webnfc.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "2": "0 1 2 3 4 C K L G M N O P Y Z a b c d e f g h i j k l m s t u v w x y z H n", "450": "Q R S T U V W X" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "450": "Q R S T U V W X" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB", "450": "nB oB pB qB rB sB r tB uB" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "2": "A B C r yB MC zB" }, L: { "257": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "2": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "1": "KD" }, S: { "2": "LD MD" } }, B: 7, C: "Web NFC", D: true };
  }
});

// node_modules/caniuse-lite/data/features/webp.js
var require_webp = __commonJS({
  "node_modules/caniuse-lite/data/features/webp.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N" }, C: { "1": "0 1 2 3 4 lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "PC 3B QC RC", "8": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB" }, D: { "1": "0 1 2 3 4 GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 I", "8": "J D E", "132": "6 F A B C K L G M N O o p q", "260": "7 8 9 AB BB CB DB EB FB" }, E: { "1": "1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F A B C K SC AC TC UC VC WC BC yB zB CC", "516": "L G XC YC DC EC 0B ZC" }, F: { "1": "6 7 8 9 o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F bC cC dC", "8": "B eC", "132": "yB MC fC", "260": "C G M N O zB" }, G: { "1": "xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC" }, H: { "1": "1C" }, I: { "1": "H NC 6C 7C", "2": "3B 2C 3C 4C", "132": "I 5C" }, J: { "2": "D A" }, K: { "1": "C r yB MC zB", "2": "A", "132": "B" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "8": "LD" } }, B: 6, C: "WebP image format", D: true };
  }
});

// node_modules/caniuse-lite/data/features/websockets.js
var require_websockets = __commonJS({
  "node_modules/caniuse-lite/data/features/websockets.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "A B", "2": "J D E F OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 6 7 8 9 B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "PC 3B QC RC", "132": "5 I", "292": "J D E F A" }, D: { "1": "0 1 2 3 4 6 7 8 9 M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "132": "5 I J D E F A B C K L", "260": "G" }, E: { "1": "D E F A B C K L G VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "I SC AC", "132": "5 TC", "260": "J UC" }, F: { "1": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m zB", "2": "F bC cC dC eC", "132": "B C yB MC fC" }, G: { "1": "E iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC", "132": "NC hC" }, H: { "2": "1C" }, I: { "1": "H 6C 7C", "2": "3B I 2C 3C 4C 5C NC" }, J: { "1": "A", "129": "D" }, K: { "1": "r zB", "2": "A", "132": "B C yB MC" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "Web Sockets", D: true };
  }
});

// node_modules/caniuse-lite/data/features/webtransport.js
var require_webtransport = __commonJS({
  "node_modules/caniuse-lite/data/features/webtransport.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 h i j k l m s t u v w x y z H n", "2": "C K L G M N O P Q R S T U V W X Y Z a b c d e f g" }, C: { "1": "2 3 4 H n 7B 8B 9B", "2": "0 1 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z QC RC" }, D: { "1": "0 1 2 3 4 g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z e f", "66": "a b c d" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B bC cC dC eC yB MC fC zB" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q ID JD", "2": "I 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B" }, Q: { "2": "CC" }, R: { "1": "KD" }, S: { "2": "LD MD" } }, B: 5, C: "WebTransport", D: true };
  }
});

// node_modules/caniuse-lite/data/features/webusb.js
var require_webusb = __commonJS({
  "node_modules/caniuse-lite/data/features/webusb.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "1": "0 1 2 3 4 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB", "66": "cB dB eB fB gB 4B hB" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB bC cC dC eC yB MC fC zB", "66": "PB QB RB SB TB UB VB" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "o p q BD CD BC DD ED FD GD HD 1B 2B ID JD", "2": "I 8C 9C AD" }, Q: { "2": "CC" }, R: { "1": "KD" }, S: { "2": "LD MD" } }, B: 7, C: "WebUSB", D: true };
  }
});

// node_modules/caniuse-lite/data/features/webvr.js
var require_webvr = __commonJS({
  "node_modules/caniuse-lite/data/features/webvr.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "2": "0 1 2 3 4 C K L Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "66": "P", "257": "G M N O" }, C: { "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB QC RC", "129": "0 1 2 3 4 dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "194": "cB" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "66": "fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB", "66": "SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "2": "A B C r yB MC zB" }, L: { "2": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "513": "I", "516": "o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "2": "KD" }, S: { "2": "LD MD" } }, B: 7, C: "WebVR API", D: true };
  }
});

// node_modules/caniuse-lite/data/features/webvtt.js
var require_webvtt = __commonJS({
  "node_modules/caniuse-lite/data/features/webvtt.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "A B", "2": "J D E F OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "2": "5 6 7 PC 3B I J D E F A B C K L G M N O o p q QC RC", "66": "8 9 AB BB CB DB EB", "129": "FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB", "257": "0 1 2 3 4 dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, D: { "1": "0 1 2 3 4 6 7 8 9 O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 I J D E F A B C K L G M N" }, E: { "1": "J D E F A B C K L G UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I SC AC TC" }, F: { "1": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F B C bC cC dC eC yB MC fC zB" }, G: { "1": "E jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC hC iC" }, H: { "2": "1C" }, I: { "1": "H 6C 7C", "2": "3B I 2C 3C 4C 5C NC" }, J: { "1": "A", "2": "D" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "B", "2": "A" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "129": "LD MD" } }, B: 4, C: "WebVTT - Web Video Text Tracks", D: true };
  }
});

// node_modules/caniuse-lite/data/features/webworkers.js
var require_webworkers = __commonJS({
  "node_modules/caniuse-lite/data/features/webworkers.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "A B", "2": "OC", "8": "J D E F" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC", "8": "PC 3B" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "5 I J D E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "8": "SC AC" }, F: { "1": "6 7 8 9 B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m eC yB MC fC zB", "2": "F bC", "8": "cC dC" }, G: { "1": "E hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC" }, H: { "2": "1C" }, I: { "1": "H 2C 6C 7C", "2": "3B I 3C 4C 5C NC" }, J: { "1": "D A" }, K: { "1": "B C r yB MC zB", "8": "A" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "Web Workers", D: true };
  }
});

// node_modules/caniuse-lite/data/features/webxr.js
var require_webxr = __commonJS({
  "node_modules/caniuse-lite/data/features/webxr.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "2": "C K L G M N O", "132": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB QC RC", "322": "0 1 2 3 4 wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, D: { "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB", "66": "lB mB nB oB pB qB rB sB r tB uB vB wB xB", "132": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "2": "5 I J D E F A B C SC AC TC UC VC WC BC yB zB", "578": "K L G CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB bC cC dC eC yB MC fC zB", "66": "aB bB cB dB eB fB gB hB iB jB kB lB", "132": "mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "2": "A B C yB MC zB", "132": "r" }, L: { "132": "H" }, M: { "322": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "2": "I 8C 9C AD BD CD BC DD", "132": "o p q ED FD GD HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "2": "KD" }, S: { "2": "LD", "322": "MD" } }, B: 4, C: "WebXR Device API", D: true };
  }
});

// node_modules/caniuse-lite/data/features/will-change.js
var require_will_change = __commonJS({
  "node_modules/caniuse-lite/data/features/will-change.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K L G M N O" }, C: { "1": "0 1 2 3 4 KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB QC RC", "194": "DB EB FB GB HB IB JB" }, D: { "1": "0 1 2 3 4 KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB" }, E: { "1": "A B C K L G WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F SC AC TC UC VC" }, F: { "1": "8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 7 F B C G M N O o p q bC cC dC eC yB MC fC zB" }, G: { "1": "mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 4, C: "CSS will-change property", D: true };
  }
});

// node_modules/caniuse-lite/data/features/woff.js
var require_woff = __commonJS({
  "node_modules/caniuse-lite/data/features/woff.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "F A B", "2": "J D E OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B RC", "2": "PC 3B QC" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "I" }, E: { "1": "J D E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I SC AC" }, F: { "1": "6 7 8 9 C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m yB MC fC zB", "2": "F B bC cC dC eC" }, G: { "1": "E hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC" }, H: { "2": "1C" }, I: { "1": "H 6C 7C", "2": "3B 2C 3C 4C 5C NC", "130": "I" }, J: { "1": "D A" }, K: { "1": "B C r yB MC zB", "2": "A" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 2, C: "WOFF - Web Open Font Format", D: true };
  }
});

// node_modules/caniuse-lite/data/features/woff2.js
var require_woff2 = __commonJS({
  "node_modules/caniuse-lite/data/features/woff2.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "2": "C K" }, C: { "1": "0 1 2 3 4 NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB QC RC" }, D: { "1": "0 1 2 3 4 KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB" }, E: { "1": "C K L G zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "5 I J D E F SC AC TC UC VC WC", "132": "A B BC yB" }, F: { "1": "7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "6 F B C G M N O o p q bC cC dC eC yB MC fC zB" }, G: { "1": "nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "E AC gC NC hC iC jC kC lC mC" }, H: { "2": "1C" }, I: { "1": "H", "2": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "2": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 2, C: "WOFF 2.0 - Web Open Font Format", D: true };
  }
});

// node_modules/caniuse-lite/data/features/word-break.js
var require_word_break = __commonJS({
  "node_modules/caniuse-lite/data/features/word-break.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "5 PC 3B I J D E F A B C K L QC RC" }, D: { "1": "0 1 2 3 4 SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "4": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB" }, E: { "1": "F A B C K L G WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "4": "5 I J D E SC AC TC UC VC" }, F: { "1": "FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "2": "F B C bC cC dC eC yB MC fC zB", "4": "6 7 8 9 G M N O o p q AB BB CB DB EB" }, G: { "1": "lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "4": "E AC gC NC hC iC jC kC" }, H: { "2": "1C" }, I: { "1": "H", "4": "3B I 2C 3C 4C 5C NC 6C 7C" }, J: { "4": "D A" }, K: { "1": "r", "2": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 4, C: "CSS3 word-break", D: true };
  }
});

// node_modules/caniuse-lite/data/features/wordwrap.js
var require_wordwrap = __commonJS({
  "node_modules/caniuse-lite/data/features/wordwrap.js"(exports, module2) {
    module2.exports = { A: { A: { "4": "J D E F A B OC" }, B: { "1": "0 1 2 3 4 O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n", "4": "C K L G M N" }, C: { "1": "0 1 2 3 4 XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "PC 3B", "4": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB QC RC" }, D: { "1": "0 1 2 3 4 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "4": "5 6 I J D E F A B C K L G M N O o p q" }, E: { "1": "D E F A B C K L G UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "4": "5 I J SC AC TC" }, F: { "1": "6 7 8 9 G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m zB", "2": "F bC cC", "4": "B C dC eC yB MC fC" }, G: { "1": "E jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "4": "AC gC NC hC iC" }, H: { "4": "1C" }, I: { "1": "H 6C 7C", "4": "3B I 2C 3C 4C 5C NC" }, J: { "1": "A", "4": "D" }, K: { "1": "r", "4": "A B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "4": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "MD", "4": "LD" } }, B: 4, C: "CSS3 Overflow-wrap", D: true };
  }
});

// node_modules/caniuse-lite/data/features/x-doc-messaging.js
var require_x_doc_messaging = __commonJS({
  "node_modules/caniuse-lite/data/features/x-doc-messaging.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D OC", "132": "E F", "260": "A B" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC", "2": "PC" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "5 I J D E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "SC AC" }, F: { "1": "6 7 8 9 B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB", "2": "F" }, G: { "1": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "1": "1C" }, I: { "1": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "1": "D A" }, K: { "1": "A B C r yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "4": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "Cross-document messaging", D: true };
  }
});

// node_modules/caniuse-lite/data/features/x-frame-options.js
var require_x_frame_options = __commonJS({
  "node_modules/caniuse-lite/data/features/x-frame-options.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "E F A B", "2": "J D OC" }, B: { "1": "C K L G M N O", "4": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "6 7 8 9 O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB", "4": "0 1 2 3 4 5 I J D E F A B C K L G M N qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "16": "PC 3B QC RC" }, D: { "4": "0 1 2 3 4 AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "16": "5 6 7 8 9 I J D E F A B C K L G M N O o p q" }, E: { "4": "J D E F A B C K L G TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "16": "5 I SC AC" }, F: { "4": "6 7 8 9 C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m fC zB", "16": "F B bC cC dC eC yB MC" }, G: { "4": "E jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "16": "AC gC NC hC iC" }, H: { "2": "1C" }, I: { "4": "I H 5C NC 6C 7C", "16": "3B 2C 3C 4C" }, J: { "4": "D A" }, K: { "4": "r zB", "16": "A B C yB MC" }, L: { "4": "H" }, M: { "4": "n" }, N: { "1": "A B" }, O: { "4": "0B" }, P: { "4": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "4": "CC" }, R: { "4": "KD" }, S: { "1": "LD", "4": "MD" } }, B: 6, C: "X-Frame-Options HTTP header", D: true };
  }
});

// node_modules/caniuse-lite/data/features/xhr2.js
var require_xhr2 = __commonJS({
  "node_modules/caniuse-lite/data/features/xhr2.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F OC", "132": "A B" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 6 7 8 9 C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "2": "PC 3B", "260": "A B", "388": "J D E F", "900": "5 I QC RC" }, D: { "1": "0 1 2 3 4 FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "16": "5 I J", "132": "DB EB", "388": "6 7 8 9 D E F A B C K L G M N O o p q AB BB CB" }, E: { "1": "E F A B C K L G VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "2": "I SC AC", "132": "D UC", "388": "5 J TC" }, F: { "1": "6 7 8 9 C O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m zB", "2": "F B bC cC dC eC yB MC fC", "132": "G M N" }, G: { "1": "E kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "2": "AC gC NC", "132": "jC", "388": "hC iC" }, H: { "2": "1C" }, I: { "1": "H 7C", "2": "2C 3C 4C", "388": "6C", "900": "3B I 5C NC" }, J: { "132": "A", "388": "D" }, K: { "1": "C r zB", "2": "A B yB MC" }, L: { "1": "H" }, M: { "1": "n" }, N: { "132": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "XMLHttpRequest advanced features", D: true };
  }
});

// node_modules/caniuse-lite/data/features/xhtml.js
var require_xhtml = __commonJS({
  "node_modules/caniuse-lite/data/features/xhtml.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "F A B", "2": "J D E OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "1": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "1": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "1": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB" }, G: { "1": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "1": "1C" }, I: { "1": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "1": "D A" }, K: { "1": "A B C r yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 1, C: "XHTML served as application/xhtml+xml", D: true };
  }
});

// node_modules/caniuse-lite/data/features/xhtmlsmil.js
var require_xhtmlsmil = __commonJS({
  "node_modules/caniuse-lite/data/features/xhtmlsmil.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "F A B OC", "4": "J D E" }, B: { "2": "C K L G M N O", "8": "0 1 2 3 4 P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "8": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "8": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B" }, E: { "8": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "8": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB" }, G: { "8": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "8": "1C" }, I: { "8": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "8": "D A" }, K: { "8": "A B C r yB MC zB" }, L: { "8": "H" }, M: { "8": "n" }, N: { "2": "A B" }, O: { "8": "0B" }, P: { "8": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "8": "CC" }, R: { "8": "KD" }, S: { "8": "LD MD" } }, B: 7, C: "XHTML+SMIL animation", D: true };
  }
});

// node_modules/caniuse-lite/data/features/xml-serializer.js
var require_xml_serializer = __commonJS({
  "node_modules/caniuse-lite/data/features/xml-serializer.js"(exports, module2) {
    module2.exports = { A: { A: { "1": "A B", "260": "J D E F OC" }, B: { "1": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n" }, C: { "1": "0 1 2 3 4 6 7 8 9 C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "132": "B", "260": "5 PC 3B I J D QC RC", "516": "E F A" }, D: { "1": "0 1 2 3 4 FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B", "132": "5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB" }, E: { "1": "E F A B C K L G VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC", "132": "5 I J D SC AC TC UC" }, F: { "1": "6 7 8 9 O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m", "16": "F bC", "132": "B C G M N cC dC eC yB MC fC zB" }, G: { "1": "E kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC", "132": "AC gC NC hC iC jC" }, H: { "132": "1C" }, I: { "1": "H 6C 7C", "132": "3B I 2C 3C 4C 5C NC" }, J: { "132": "D A" }, K: { "1": "r", "16": "A", "132": "B C yB MC zB" }, L: { "1": "H" }, M: { "1": "n" }, N: { "1": "A B" }, O: { "1": "0B" }, P: { "1": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "1": "CC" }, R: { "1": "KD" }, S: { "1": "LD MD" } }, B: 4, C: "DOM Parsing and Serialization", D: true };
  }
});

// node_modules/caniuse-lite/data/features/zstd.js
var require_zstd = __commonJS({
  "node_modules/caniuse-lite/data/features/zstd.js"(exports, module2) {
    module2.exports = { A: { A: { "2": "J D E F A B OC" }, B: { "2": "0 1 2 3 4 C K L G M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H", "194": "n" }, C: { "2": "0 1 2 3 4 5 6 7 8 9 PC 3B I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H n 7B 8B 9B QC RC" }, D: { "2": "0 1 2 3 4 5 6 7 8 9 I J D E F A B C K L G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB 4B hB 5B iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R S T U V W X Y Z a b c d e f g h i j k l m s t u v w x y z H", "194": "n 7B 8B 9B" }, E: { "2": "5 I J D E F A B C K L G SC AC TC UC VC WC BC yB zB CC XC YC DC EC 0B ZC 1B FC GC HC IC JC KC 2B LC aC" }, F: { "2": "6 7 8 9 F B C G M N O o p q AB BB CB DB EB FB GB HB IB JB KB LB MB NB OB PB QB RB SB TB UB VB WB XB YB ZB aB bB cB dB eB fB gB hB iB jB kB lB mB nB oB pB qB rB sB r tB uB vB wB xB P Q R 6B S T U V W X Y Z a b c d e f g h i j k l m bC cC dC eC yB MC fC zB" }, G: { "2": "E AC gC NC hC iC jC kC lC mC nC oC pC qC rC sC tC uC vC wC xC yC zC DC EC 0B 0C 1B FC GC HC IC JC KC 2B LC" }, H: { "2": "1C" }, I: { "2": "3B I H 2C 3C 4C 5C NC 6C 7C" }, J: { "2": "D A" }, K: { "2": "A B C r yB MC zB" }, L: { "2": "H" }, M: { "2": "n" }, N: { "2": "A B" }, O: { "2": "0B" }, P: { "2": "I o p q 8C 9C AD BD CD BC DD ED FD GD HD 1B 2B ID JD" }, Q: { "2": "CC" }, R: { "2": "KD" }, S: { "2": "LD MD" } }, B: 6, C: "zstd (Zstandard) content-encoding", D: true };
  }
});

// node_modules/caniuse-lite/data/features.js
var require_features = __commonJS({
  "node_modules/caniuse-lite/data/features.js"(exports, module2) {
    module2.exports = { "aac": require_aac(), "abortcontroller": require_abortcontroller(), "ac3-ec3": require_ac3_ec3(), "accelerometer": require_accelerometer(), "addeventlistener": require_addeventlistener(), "alternate-stylesheet": require_alternate_stylesheet(), "ambient-light": require_ambient_light(), "apng": require_apng(), "array-find-index": require_array_find_index(), "array-find": require_array_find(), "array-flat": require_array_flat(), "array-includes": require_array_includes(), "arrow-functions": require_arrow_functions(), "asmjs": require_asmjs(), "async-clipboard": require_async_clipboard(), "async-functions": require_async_functions(), "atob-btoa": require_atob_btoa(), "audio-api": require_audio_api(), "audio": require_audio(), "audiotracks": require_audiotracks(), "autofocus": require_autofocus(), "auxclick": require_auxclick(), "av1": require_av1(), "avif": require_avif(), "background-attachment": require_background_attachment(), "background-clip-text": require_background_clip_text(), "background-img-opts": require_background_img_opts(), "background-position-x-y": require_background_position_x_y(), "background-repeat-round-space": require_background_repeat_round_space(), "background-sync": require_background_sync(), "battery-status": require_battery_status(), "beacon": require_beacon(), "beforeafterprint": require_beforeafterprint(), "bigint": require_bigint(), "blobbuilder": require_blobbuilder(), "bloburls": require_bloburls(), "border-image": require_border_image(), "border-radius": require_border_radius(), "broadcastchannel": require_broadcastchannel(), "brotli": require_brotli(), "calc": require_calc(), "canvas-blending": require_canvas_blending(), "canvas-text": require_canvas_text(), "canvas": require_canvas(), "ch-unit": require_ch_unit(), "chacha20-poly1305": require_chacha20_poly1305(), "channel-messaging": require_channel_messaging(), "childnode-remove": require_childnode_remove(), "classlist": require_classlist(), "client-hints-dpr-width-viewport": require_client_hints_dpr_width_viewport(), "clipboard": require_clipboard(), "colr-v1": require_colr_v1(), "colr": require_colr(), "comparedocumentposition": require_comparedocumentposition(), "console-basic": require_console_basic(), "console-time": require_console_time(), "const": require_const(), "constraint-validation": require_constraint_validation(), "contenteditable": require_contenteditable(), "contentsecuritypolicy": require_contentsecuritypolicy(), "contentsecuritypolicy2": require_contentsecuritypolicy2(), "cookie-store-api": require_cookie_store_api(), "cors": require_cors(), "createimagebitmap": require_createimagebitmap(), "credential-management": require_credential_management(), "cryptography": require_cryptography(), "css-all": require_css_all(), "css-anchor-positioning": require_css_anchor_positioning(), "css-animation": require_css_animation(), "css-any-link": require_css_any_link(), "css-appearance": require_css_appearance(), "css-at-counter-style": require_css_at_counter_style(), "css-autofill": require_css_autofill(), "css-backdrop-filter": require_css_backdrop_filter(), "css-background-offsets": require_css_background_offsets(), "css-backgroundblendmode": require_css_backgroundblendmode(), "css-boxdecorationbreak": require_css_boxdecorationbreak(), "css-boxshadow": require_css_boxshadow(), "css-canvas": require_css_canvas(), "css-caret-color": require_css_caret_color(), "css-cascade-layers": require_css_cascade_layers(), "css-cascade-scope": require_css_cascade_scope(), "css-case-insensitive": require_css_case_insensitive(), "css-clip-path": require_css_clip_path(), "css-color-adjust": require_css_color_adjust(), "css-color-function": require_css_color_function(), "css-conic-gradients": require_css_conic_gradients(), "css-container-queries-style": require_css_container_queries_style(), "css-container-queries": require_css_container_queries(), "css-container-query-units": require_css_container_query_units(), "css-containment": require_css_containment(), "css-content-visibility": require_css_content_visibility(), "css-counters": require_css_counters(), "css-crisp-edges": require_css_crisp_edges(), "css-cross-fade": require_css_cross_fade(), "css-default-pseudo": require_css_default_pseudo(), "css-descendant-gtgt": require_css_descendant_gtgt(), "css-deviceadaptation": require_css_deviceadaptation(), "css-dir-pseudo": require_css_dir_pseudo(), "css-display-contents": require_css_display_contents(), "css-element-function": require_css_element_function(), "css-env-function": require_css_env_function(), "css-exclusions": require_css_exclusions(), "css-featurequeries": require_css_featurequeries(), "css-file-selector-button": require_css_file_selector_button(), "css-filter-function": require_css_filter_function(), "css-filters": require_css_filters(), "css-first-letter": require_css_first_letter(), "css-first-line": require_css_first_line(), "css-fixed": require_css_fixed(), "css-focus-visible": require_css_focus_visible(), "css-focus-within": require_css_focus_within(), "css-font-palette": require_css_font_palette(), "css-font-rendering-controls": require_css_font_rendering_controls(), "css-font-stretch": require_css_font_stretch(), "css-gencontent": require_css_gencontent(), "css-gradients": require_css_gradients(), "css-grid-animation": require_css_grid_animation(), "css-grid": require_css_grid(), "css-hanging-punctuation": require_css_hanging_punctuation(), "css-has": require_css_has(), "css-hyphens": require_css_hyphens(), "css-image-orientation": require_css_image_orientation(), "css-image-set": require_css_image_set(), "css-in-out-of-range": require_css_in_out_of_range(), "css-indeterminate-pseudo": require_css_indeterminate_pseudo(), "css-initial-letter": require_css_initial_letter(), "css-initial-value": require_css_initial_value(), "css-lch-lab": require_css_lch_lab(), "css-letter-spacing": require_css_letter_spacing(), "css-line-clamp": require_css_line_clamp(), "css-logical-props": require_css_logical_props(), "css-marker-pseudo": require_css_marker_pseudo(), "css-masks": require_css_masks(), "css-matches-pseudo": require_css_matches_pseudo(), "css-math-functions": require_css_math_functions(), "css-media-interaction": require_css_media_interaction(), "css-media-range-syntax": require_css_media_range_syntax(), "css-media-resolution": require_css_media_resolution(), "css-media-scripting": require_css_media_scripting(), "css-mediaqueries": require_css_mediaqueries(), "css-mixblendmode": require_css_mixblendmode(), "css-motion-paths": require_css_motion_paths(), "css-namespaces": require_css_namespaces(), "css-nesting": require_css_nesting(), "css-not-sel-list": require_css_not_sel_list(), "css-nth-child-of": require_css_nth_child_of(), "css-opacity": require_css_opacity(), "css-optional-pseudo": require_css_optional_pseudo(), "css-overflow-anchor": require_css_overflow_anchor(), "css-overflow-overlay": require_css_overflow_overlay(), "css-overflow": require_css_overflow(), "css-overscroll-behavior": require_css_overscroll_behavior(), "css-page-break": require_css_page_break(), "css-paged-media": require_css_paged_media(), "css-paint-api": require_css_paint_api(), "css-placeholder-shown": require_css_placeholder_shown(), "css-placeholder": require_css_placeholder(), "css-print-color-adjust": require_css_print_color_adjust(), "css-read-only-write": require_css_read_only_write(), "css-rebeccapurple": require_css_rebeccapurple(), "css-reflections": require_css_reflections(), "css-regions": require_css_regions(), "css-relative-colors": require_css_relative_colors(), "css-repeating-gradients": require_css_repeating_gradients(), "css-resize": require_css_resize(), "css-revert-value": require_css_revert_value(), "css-rrggbbaa": require_css_rrggbbaa(), "css-scroll-behavior": require_css_scroll_behavior(), "css-scroll-timeline": require_css_scroll_timeline(), "css-scrollbar": require_css_scrollbar(), "css-sel2": require_css_sel2(), "css-sel3": require_css_sel3(), "css-selection": require_css_selection(), "css-shapes": require_css_shapes(), "css-snappoints": require_css_snappoints(), "css-sticky": require_css_sticky(), "css-subgrid": require_css_subgrid(), "css-supports-api": require_css_supports_api(), "css-table": require_css_table(), "css-text-align-last": require_css_text_align_last(), "css-text-box-trim": require_css_text_box_trim(), "css-text-indent": require_css_text_indent(), "css-text-justify": require_css_text_justify(), "css-text-orientation": require_css_text_orientation(), "css-text-spacing": require_css_text_spacing(), "css-text-wrap-balance": require_css_text_wrap_balance(), "css-textshadow": require_css_textshadow(), "css-touch-action": require_css_touch_action(), "css-transitions": require_css_transitions(), "css-unicode-bidi": require_css_unicode_bidi(), "css-unset-value": require_css_unset_value(), "css-variables": require_css_variables(), "css-when-else": require_css_when_else(), "css-widows-orphans": require_css_widows_orphans(), "css-width-stretch": require_css_width_stretch(), "css-writing-mode": require_css_writing_mode(), "css-zoom": require_css_zoom(), "css3-attr": require_css3_attr(), "css3-boxsizing": require_css3_boxsizing(), "css3-colors": require_css3_colors(), "css3-cursors-grab": require_css3_cursors_grab(), "css3-cursors-newer": require_css3_cursors_newer(), "css3-cursors": require_css3_cursors(), "css3-tabsize": require_css3_tabsize(), "currentcolor": require_currentcolor(), "custom-elements": require_custom_elements(), "custom-elementsv1": require_custom_elementsv1(), "customevent": require_customevent(), "datalist": require_datalist(), "dataset": require_dataset(), "datauri": require_datauri(), "date-tolocaledatestring": require_date_tolocaledatestring(), "declarative-shadow-dom": require_declarative_shadow_dom(), "decorators": require_decorators(), "details": require_details(), "deviceorientation": require_deviceorientation(), "devicepixelratio": require_devicepixelratio(), "dialog": require_dialog(), "dispatchevent": require_dispatchevent(), "dnssec": require_dnssec(), "do-not-track": require_do_not_track(), "document-currentscript": require_document_currentscript(), "document-evaluate-xpath": require_document_evaluate_xpath(), "document-execcommand": require_document_execcommand(), "document-policy": require_document_policy(), "document-scrollingelement": require_document_scrollingelement(), "documenthead": require_documenthead(), "dom-manip-convenience": require_dom_manip_convenience(), "dom-range": require_dom_range(), "domcontentloaded": require_domcontentloaded(), "dommatrix": require_dommatrix(), "download": require_download(), "dragndrop": require_dragndrop(), "element-closest": require_element_closest(), "element-from-point": require_element_from_point(), "element-scroll-methods": require_element_scroll_methods(), "eme": require_eme(), "eot": require_eot(), "es5": require_es5(), "es6-class": require_es6_class(), "es6-generators": require_es6_generators(), "es6-module-dynamic-import": require_es6_module_dynamic_import(), "es6-module": require_es6_module(), "es6-number": require_es6_number(), "es6-string-includes": require_es6_string_includes(), "es6": require_es6(), "eventsource": require_eventsource(), "extended-system-fonts": require_extended_system_fonts(), "feature-policy": require_feature_policy(), "fetch": require_fetch(), "fieldset-disabled": require_fieldset_disabled(), "fileapi": require_fileapi(), "filereader": require_filereader(), "filereadersync": require_filereadersync(), "filesystem": require_filesystem(), "flac": require_flac(), "flexbox-gap": require_flexbox_gap(), "flexbox": require_flexbox(), "flow-root": require_flow_root(), "focusin-focusout-events": require_focusin_focusout_events(), "font-family-system-ui": require_font_family_system_ui(), "font-feature": require_font_feature(), "font-kerning": require_font_kerning(), "font-loading": require_font_loading(), "font-size-adjust": require_font_size_adjust(), "font-smooth": require_font_smooth(), "font-unicode-range": require_font_unicode_range(), "font-variant-alternates": require_font_variant_alternates(), "font-variant-numeric": require_font_variant_numeric(), "fontface": require_fontface(), "form-attribute": require_form_attribute(), "form-submit-attributes": require_form_submit_attributes(), "form-validation": require_form_validation(), "forms": require_forms(), "fullscreen": require_fullscreen(), "gamepad": require_gamepad(), "geolocation": require_geolocation(), "getboundingclientrect": require_getboundingclientrect(), "getcomputedstyle": require_getcomputedstyle(), "getelementsbyclassname": require_getelementsbyclassname(), "getrandomvalues": require_getrandomvalues(), "gyroscope": require_gyroscope(), "hardwareconcurrency": require_hardwareconcurrency(), "hashchange": require_hashchange(), "heif": require_heif(), "hevc": require_hevc(), "hidden": require_hidden(), "high-resolution-time": require_high_resolution_time(), "history": require_history(), "html-media-capture": require_html_media_capture(), "html5semantic": require_html5semantic(), "http-live-streaming": require_http_live_streaming(), "http2": require_http2(), "http3": require_http3(), "iframe-sandbox": require_iframe_sandbox(), "iframe-seamless": require_iframe_seamless(), "iframe-srcdoc": require_iframe_srcdoc(), "imagecapture": require_imagecapture(), "ime": require_ime(), "img-naturalwidth-naturalheight": require_img_naturalwidth_naturalheight(), "import-maps": require_import_maps(), "imports": require_imports(), "indeterminate-checkbox": require_indeterminate_checkbox(), "indexeddb": require_indexeddb(), "indexeddb2": require_indexeddb2(), "inline-block": require_inline_block(), "innertext": require_innertext(), "input-autocomplete-onoff": require_input_autocomplete_onoff(), "input-color": require_input_color(), "input-datetime": require_input_datetime(), "input-email-tel-url": require_input_email_tel_url(), "input-event": require_input_event(), "input-file-accept": require_input_file_accept(), "input-file-directory": require_input_file_directory(), "input-file-multiple": require_input_file_multiple(), "input-inputmode": require_input_inputmode(), "input-minlength": require_input_minlength(), "input-number": require_input_number(), "input-pattern": require_input_pattern(), "input-placeholder": require_input_placeholder(), "input-range": require_input_range(), "input-search": require_input_search(), "input-selection": require_input_selection(), "insert-adjacent": require_insert_adjacent(), "insertadjacenthtml": require_insertadjacenthtml(), "internationalization": require_internationalization(), "intersectionobserver-v2": require_intersectionobserver_v2(), "intersectionobserver": require_intersectionobserver(), "intl-pluralrules": require_intl_pluralrules(), "intrinsic-width": require_intrinsic_width(), "jpeg2000": require_jpeg2000(), "jpegxl": require_jpegxl(), "jpegxr": require_jpegxr(), "js-regexp-lookbehind": require_js_regexp_lookbehind(), "json": require_json(), "justify-content-space-evenly": require_justify_content_space_evenly(), "kerning-pairs-ligatures": require_kerning_pairs_ligatures(), "keyboardevent-charcode": require_keyboardevent_charcode(), "keyboardevent-code": require_keyboardevent_code(), "keyboardevent-getmodifierstate": require_keyboardevent_getmodifierstate(), "keyboardevent-key": require_keyboardevent_key(), "keyboardevent-location": require_keyboardevent_location(), "keyboardevent-which": require_keyboardevent_which(), "lazyload": require_lazyload(), "let": require_let(), "link-icon-png": require_link_icon_png(), "link-icon-svg": require_link_icon_svg(), "link-rel-dns-prefetch": require_link_rel_dns_prefetch(), "link-rel-modulepreload": require_link_rel_modulepreload(), "link-rel-preconnect": require_link_rel_preconnect(), "link-rel-prefetch": require_link_rel_prefetch(), "link-rel-preload": require_link_rel_preload(), "link-rel-prerender": require_link_rel_prerender(), "loading-lazy-attr": require_loading_lazy_attr(), "localecompare": require_localecompare(), "magnetometer": require_magnetometer(), "matchesselector": require_matchesselector(), "matchmedia": require_matchmedia(), "mathml": require_mathml(), "maxlength": require_maxlength(), "mdn-css-backdrop-pseudo-element": require_mdn_css_backdrop_pseudo_element(), "mdn-css-unicode-bidi-isolate-override": require_mdn_css_unicode_bidi_isolate_override(), "mdn-css-unicode-bidi-isolate": require_mdn_css_unicode_bidi_isolate(), "mdn-css-unicode-bidi-plaintext": require_mdn_css_unicode_bidi_plaintext(), "mdn-text-decoration-color": require_mdn_text_decoration_color(), "mdn-text-decoration-line": require_mdn_text_decoration_line(), "mdn-text-decoration-shorthand": require_mdn_text_decoration_shorthand(), "mdn-text-decoration-style": require_mdn_text_decoration_style(), "media-fragments": require_media_fragments(), "mediacapture-fromelement": require_mediacapture_fromelement(), "mediarecorder": require_mediarecorder(), "mediasource": require_mediasource(), "menu": require_menu(), "meta-theme-color": require_meta_theme_color(), "meter": require_meter(), "midi": require_midi(), "minmaxwh": require_minmaxwh(), "mp3": require_mp3(), "mpeg-dash": require_mpeg_dash(), "mpeg4": require_mpeg4(), "multibackgrounds": require_multibackgrounds(), "multicolumn": require_multicolumn(), "mutation-events": require_mutation_events(), "mutationobserver": require_mutationobserver(), "namevalue-storage": require_namevalue_storage(), "native-filesystem-api": require_native_filesystem_api(), "nav-timing": require_nav_timing(), "netinfo": require_netinfo(), "notifications": require_notifications(), "object-entries": require_object_entries(), "object-fit": require_object_fit(), "object-observe": require_object_observe(), "object-values": require_object_values(), "objectrtc": require_objectrtc(), "offline-apps": require_offline_apps(), "offscreencanvas": require_offscreencanvas(), "ogg-vorbis": require_ogg_vorbis(), "ogv": require_ogv(), "ol-reversed": require_ol_reversed(), "once-event-listener": require_once_event_listener(), "online-status": require_online_status(), "opus": require_opus(), "orientation-sensor": require_orientation_sensor(), "outline": require_outline(), "pad-start-end": require_pad_start_end(), "page-transition-events": require_page_transition_events(), "pagevisibility": require_pagevisibility(), "passive-event-listener": require_passive_event_listener(), "passkeys": require_passkeys(), "passwordrules": require_passwordrules(), "path2d": require_path2d(), "payment-request": require_payment_request(), "pdf-viewer": require_pdf_viewer(), "permissions-api": require_permissions_api(), "permissions-policy": require_permissions_policy(), "picture-in-picture": require_picture_in_picture(), "picture": require_picture(), "ping": require_ping(), "png-alpha": require_png_alpha(), "pointer-events": require_pointer_events(), "pointer": require_pointer(), "pointerlock": require_pointerlock(), "portals": require_portals(), "prefers-color-scheme": require_prefers_color_scheme(), "prefers-reduced-motion": require_prefers_reduced_motion(), "progress": require_progress(), "promise-finally": require_promise_finally(), "promises": require_promises(), "proximity": require_proximity(), "proxy": require_proxy(), "publickeypinning": require_publickeypinning(), "push-api": require_push_api(), "queryselector": require_queryselector(), "readonly-attr": require_readonly_attr(), "referrer-policy": require_referrer_policy(), "registerprotocolhandler": require_registerprotocolhandler(), "rel-noopener": require_rel_noopener(), "rel-noreferrer": require_rel_noreferrer(), "rellist": require_rellist(), "rem": require_rem(), "requestanimationframe": require_requestanimationframe(), "requestidlecallback": require_requestidlecallback(), "resizeobserver": require_resizeobserver(), "resource-timing": require_resource_timing(), "rest-parameters": require_rest_parameters(), "rtcpeerconnection": require_rtcpeerconnection(), "ruby": require_ruby(), "run-in": require_run_in(), "same-site-cookie-attribute": require_same_site_cookie_attribute(), "screen-orientation": require_screen_orientation(), "script-async": require_script_async(), "script-defer": require_script_defer(), "scrollintoview": require_scrollintoview(), "scrollintoviewifneeded": require_scrollintoviewifneeded(), "sdch": require_sdch(), "selection-api": require_selection_api(), "server-timing": require_server_timing(), "serviceworkers": require_serviceworkers(), "setimmediate": require_setimmediate(), "shadowdom": require_shadowdom(), "shadowdomv1": require_shadowdomv1(), "sharedarraybuffer": require_sharedarraybuffer(), "sharedworkers": require_sharedworkers(), "sni": require_sni(), "spdy": require_spdy(), "speech-recognition": require_speech_recognition(), "speech-synthesis": require_speech_synthesis(), "spellcheck-attribute": require_spellcheck_attribute(), "sql-storage": require_sql_storage(), "srcset": require_srcset(), "stream": require_stream(), "streams": require_streams(), "stricttransportsecurity": require_stricttransportsecurity(), "style-scoped": require_style_scoped(), "subresource-bundling": require_subresource_bundling(), "subresource-integrity": require_subresource_integrity(), "svg-css": require_svg_css(), "svg-filters": require_svg_filters(), "svg-fonts": require_svg_fonts(), "svg-fragment": require_svg_fragment(), "svg-html": require_svg_html(), "svg-html5": require_svg_html5(), "svg-img": require_svg_img(), "svg-smil": require_svg_smil(), "svg": require_svg(), "sxg": require_sxg(), "tabindex-attr": require_tabindex_attr(), "template-literals": require_template_literals(), "template": require_template(), "temporal": require_temporal(), "testfeat": require_testfeat(), "text-decoration": require_text_decoration(), "text-emphasis": require_text_emphasis(), "text-overflow": require_text_overflow(), "text-size-adjust": require_text_size_adjust(), "text-stroke": require_text_stroke(), "textcontent": require_textcontent(), "textencoder": require_textencoder(), "tls1-1": require_tls1_1(), "tls1-2": require_tls1_2(), "tls1-3": require_tls1_3(), "touch": require_touch(), "transforms2d": require_transforms2d(), "transforms3d": require_transforms3d(), "trusted-types": require_trusted_types(), "ttf": require_ttf(), "typedarrays": require_typedarrays(), "u2f": require_u2f(), "unhandledrejection": require_unhandledrejection(), "upgradeinsecurerequests": require_upgradeinsecurerequests(), "url-scroll-to-text-fragment": require_url_scroll_to_text_fragment(), "url": require_url(), "urlsearchparams": require_urlsearchparams(), "use-strict": require_use_strict(), "user-select-none": require_user_select_none(), "user-timing": require_user_timing(), "variable-fonts": require_variable_fonts(), "vector-effect": require_vector_effect(), "vibration": require_vibration(), "video": require_video(), "videotracks": require_videotracks(), "view-transitions": require_view_transitions(), "viewport-unit-variants": require_viewport_unit_variants(), "viewport-units": require_viewport_units(), "wai-aria": require_wai_aria(), "wake-lock": require_wake_lock(), "wasm": require_wasm(), "wav": require_wav(), "wbr-element": require_wbr_element(), "web-animation": require_web_animation(), "web-app-manifest": require_web_app_manifest(), "web-bluetooth": require_web_bluetooth(), "web-serial": require_web_serial(), "web-share": require_web_share(), "webauthn": require_webauthn(), "webcodecs": require_webcodecs(), "webgl": require_webgl(), "webgl2": require_webgl2(), "webgpu": require_webgpu(), "webhid": require_webhid(), "webkit-user-drag": require_webkit_user_drag(), "webm": require_webm(), "webnfc": require_webnfc(), "webp": require_webp(), "websockets": require_websockets(), "webtransport": require_webtransport(), "webusb": require_webusb(), "webvr": require_webvr(), "webvtt": require_webvtt(), "webworkers": require_webworkers(), "webxr": require_webxr(), "will-change": require_will_change(), "woff": require_woff(), "woff2": require_woff2(), "word-break": require_word_break(), "wordwrap": require_wordwrap(), "x-doc-messaging": require_x_doc_messaging(), "x-frame-options": require_x_frame_options(), "xhr2": require_xhr2(), "xhtml": require_xhtml(), "xhtmlsmil": require_xhtmlsmil(), "xml-serializer": require_xml_serializer(), "zstd": require_zstd() };
  }
});

// node_modules/caniuse-lite/dist/unpacker/features.js
var require_features2 = __commonJS({
  "node_modules/caniuse-lite/dist/unpacker/features.js"(exports, module2) {
    module2.exports.features = require_features();
  }
});

// node_modules/caniuse-lite/dist/unpacker/index.js
var require_unpacker = __commonJS({
  "node_modules/caniuse-lite/dist/unpacker/index.js"(exports, module2) {
    module2.exports.agents = require_agents2().agents;
    module2.exports.feature = require_feature();
    module2.exports.features = require_features2().features;
    module2.exports.region = require_region();
  }
});

// node_modules/lodash.uniq/index.js
var require_lodash2 = __commonJS({
  "node_modules/lodash.uniq/index.js"(exports, module2) {
    var LARGE_ARRAY_SIZE = 200;
    var HASH_UNDEFINED = "__lodash_hash_undefined__";
    var INFINITY = 1 / 0;
    var funcTag = "[object Function]";
    var genTag = "[object GeneratorFunction]";
    var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
    var reIsHostCtor = /^\[object .+?Constructor\]$/;
    var freeGlobal = typeof global == "object" && global && global.Object === Object && global;
    var freeSelf = typeof self == "object" && self && self.Object === Object && self;
    var root = freeGlobal || freeSelf || Function("return this")();
    function arrayIncludes(array, value) {
      var length = array ? array.length : 0;
      return !!length && baseIndexOf(array, value, 0) > -1;
    }
    function arrayIncludesWith(array, value, comparator) {
      var index = -1, length = array ? array.length : 0;
      while (++index < length) {
        if (comparator(value, array[index])) {
          return true;
        }
      }
      return false;
    }
    function baseFindIndex(array, predicate, fromIndex, fromRight) {
      var length = array.length, index = fromIndex + (fromRight ? 1 : -1);
      while (fromRight ? index-- : ++index < length) {
        if (predicate(array[index], index, array)) {
          return index;
        }
      }
      return -1;
    }
    function baseIndexOf(array, value, fromIndex) {
      if (value !== value) {
        return baseFindIndex(array, baseIsNaN, fromIndex);
      }
      var index = fromIndex - 1, length = array.length;
      while (++index < length) {
        if (array[index] === value) {
          return index;
        }
      }
      return -1;
    }
    function baseIsNaN(value) {
      return value !== value;
    }
    function cacheHas(cache, key) {
      return cache.has(key);
    }
    function getValue(object, key) {
      return object == null ? void 0 : object[key];
    }
    function isHostObject(value) {
      var result = false;
      if (value != null && typeof value.toString != "function") {
        try {
          result = !!(value + "");
        } catch (e) {
        }
      }
      return result;
    }
    function setToArray(set) {
      var index = -1, result = Array(set.size);
      set.forEach(function(value) {
        result[++index] = value;
      });
      return result;
    }
    var arrayProto = Array.prototype;
    var funcProto = Function.prototype;
    var objectProto = Object.prototype;
    var coreJsData = root["__core-js_shared__"];
    var maskSrcKey = function() {
      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || "");
      return uid ? "Symbol(src)_1." + uid : "";
    }();
    var funcToString = funcProto.toString;
    var hasOwnProperty2 = objectProto.hasOwnProperty;
    var objectToString = objectProto.toString;
    var reIsNative = RegExp(
      "^" + funcToString.call(hasOwnProperty2).replace(reRegExpChar, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
    );
    var splice = arrayProto.splice;
    var Map2 = getNative(root, "Map");
    var Set2 = getNative(root, "Set");
    var nativeCreate = getNative(Object, "create");
    function Hash(entries) {
      var index = -1, length = entries ? entries.length : 0;
      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }
    function hashClear() {
      this.__data__ = nativeCreate ? nativeCreate(null) : {};
    }
    function hashDelete(key) {
      return this.has(key) && delete this.__data__[key];
    }
    function hashGet(key) {
      var data = this.__data__;
      if (nativeCreate) {
        var result = data[key];
        return result === HASH_UNDEFINED ? void 0 : result;
      }
      return hasOwnProperty2.call(data, key) ? data[key] : void 0;
    }
    function hashHas(key) {
      var data = this.__data__;
      return nativeCreate ? data[key] !== void 0 : hasOwnProperty2.call(data, key);
    }
    function hashSet(key, value) {
      var data = this.__data__;
      data[key] = nativeCreate && value === void 0 ? HASH_UNDEFINED : value;
      return this;
    }
    Hash.prototype.clear = hashClear;
    Hash.prototype["delete"] = hashDelete;
    Hash.prototype.get = hashGet;
    Hash.prototype.has = hashHas;
    Hash.prototype.set = hashSet;
    function ListCache(entries) {
      var index = -1, length = entries ? entries.length : 0;
      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }
    function listCacheClear() {
      this.__data__ = [];
    }
    function listCacheDelete(key) {
      var data = this.__data__, index = assocIndexOf(data, key);
      if (index < 0) {
        return false;
      }
      var lastIndex = data.length - 1;
      if (index == lastIndex) {
        data.pop();
      } else {
        splice.call(data, index, 1);
      }
      return true;
    }
    function listCacheGet(key) {
      var data = this.__data__, index = assocIndexOf(data, key);
      return index < 0 ? void 0 : data[index][1];
    }
    function listCacheHas(key) {
      return assocIndexOf(this.__data__, key) > -1;
    }
    function listCacheSet(key, value) {
      var data = this.__data__, index = assocIndexOf(data, key);
      if (index < 0) {
        data.push([key, value]);
      } else {
        data[index][1] = value;
      }
      return this;
    }
    ListCache.prototype.clear = listCacheClear;
    ListCache.prototype["delete"] = listCacheDelete;
    ListCache.prototype.get = listCacheGet;
    ListCache.prototype.has = listCacheHas;
    ListCache.prototype.set = listCacheSet;
    function MapCache(entries) {
      var index = -1, length = entries ? entries.length : 0;
      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }
    function mapCacheClear() {
      this.__data__ = {
        "hash": new Hash(),
        "map": new (Map2 || ListCache)(),
        "string": new Hash()
      };
    }
    function mapCacheDelete(key) {
      return getMapData(this, key)["delete"](key);
    }
    function mapCacheGet(key) {
      return getMapData(this, key).get(key);
    }
    function mapCacheHas(key) {
      return getMapData(this, key).has(key);
    }
    function mapCacheSet(key, value) {
      getMapData(this, key).set(key, value);
      return this;
    }
    MapCache.prototype.clear = mapCacheClear;
    MapCache.prototype["delete"] = mapCacheDelete;
    MapCache.prototype.get = mapCacheGet;
    MapCache.prototype.has = mapCacheHas;
    MapCache.prototype.set = mapCacheSet;
    function SetCache(values) {
      var index = -1, length = values ? values.length : 0;
      this.__data__ = new MapCache();
      while (++index < length) {
        this.add(values[index]);
      }
    }
    function setCacheAdd(value) {
      this.__data__.set(value, HASH_UNDEFINED);
      return this;
    }
    function setCacheHas(value) {
      return this.__data__.has(value);
    }
    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
    SetCache.prototype.has = setCacheHas;
    function assocIndexOf(array, key) {
      var length = array.length;
      while (length--) {
        if (eq(array[length][0], key)) {
          return length;
        }
      }
      return -1;
    }
    function baseIsNative(value) {
      if (!isObject(value) || isMasked(value)) {
        return false;
      }
      var pattern = isFunction(value) || isHostObject(value) ? reIsNative : reIsHostCtor;
      return pattern.test(toSource(value));
    }
    function baseUniq(array, iteratee, comparator) {
      var index = -1, includes = arrayIncludes, length = array.length, isCommon = true, result = [], seen = result;
      if (comparator) {
        isCommon = false;
        includes = arrayIncludesWith;
      } else if (length >= LARGE_ARRAY_SIZE) {
        var set = iteratee ? null : createSet(array);
        if (set) {
          return setToArray(set);
        }
        isCommon = false;
        includes = cacheHas;
        seen = new SetCache();
      } else {
        seen = iteratee ? [] : result;
      }
      outer:
        while (++index < length) {
          var value = array[index], computed = iteratee ? iteratee(value) : value;
          value = comparator || value !== 0 ? value : 0;
          if (isCommon && computed === computed) {
            var seenIndex = seen.length;
            while (seenIndex--) {
              if (seen[seenIndex] === computed) {
                continue outer;
              }
            }
            if (iteratee) {
              seen.push(computed);
            }
            result.push(value);
          } else if (!includes(seen, computed, comparator)) {
            if (seen !== result) {
              seen.push(computed);
            }
            result.push(value);
          }
        }
      return result;
    }
    var createSet = !(Set2 && 1 / setToArray(new Set2([, -0]))[1] == INFINITY) ? noop : function(values) {
      return new Set2(values);
    };
    function getMapData(map, key) {
      var data = map.__data__;
      return isKeyable(key) ? data[typeof key == "string" ? "string" : "hash"] : data.map;
    }
    function getNative(object, key) {
      var value = getValue(object, key);
      return baseIsNative(value) ? value : void 0;
    }
    function isKeyable(value) {
      var type = typeof value;
      return type == "string" || type == "number" || type == "symbol" || type == "boolean" ? value !== "__proto__" : value === null;
    }
    function isMasked(func) {
      return !!maskSrcKey && maskSrcKey in func;
    }
    function toSource(func) {
      if (func != null) {
        try {
          return funcToString.call(func);
        } catch (e) {
        }
        try {
          return func + "";
        } catch (e) {
        }
      }
      return "";
    }
    function uniq(array) {
      return array && array.length ? baseUniq(array) : [];
    }
    function eq(value, other) {
      return value === other || value !== value && other !== other;
    }
    function isFunction(value) {
      var tag = isObject(value) ? objectToString.call(value) : "";
      return tag == funcTag || tag == genTag;
    }
    function isObject(value) {
      var type = typeof value;
      return !!value && (type == "object" || type == "function");
    }
    function noop() {
    }
    module2.exports = uniq;
  }
});

// node_modules/caniuse-api/dist/utils.js
var require_utils = __commonJS({
  "node_modules/caniuse-api/dist/utils.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.contains = contains;
    exports.parseCaniuseData = parseCaniuseData;
    exports.cleanBrowsersList = cleanBrowsersList;
    var _lodash = require_lodash2();
    var _lodash2 = _interopRequireDefault(_lodash);
    var _browserslist = require_browserslist();
    var _browserslist2 = _interopRequireDefault(_browserslist);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function contains(str, substr) {
      return !!~str.indexOf(substr);
    }
    function parseCaniuseData(feature, browsers) {
      var support = {};
      var letters;
      var letter;
      browsers.forEach(function(browser) {
        support[browser] = {};
        for (var info in feature.stats[browser]) {
          letters = feature.stats[browser][info].replace(/#\d+/, "").trim().split(" ");
          info = parseFloat(info.split("-")[0]);
          if (isNaN(info))
            continue;
          for (var i = 0; i < letters.length; i++) {
            letter = letters[i];
            if (letter === "d") {
              continue;
            } else if (letter === "y") {
              if (typeof support[browser][letter] === "undefined" || info < support[browser][letter]) {
                support[browser][letter] = info;
              }
            } else {
              if (typeof support[browser][letter] === "undefined" || info > support[browser][letter]) {
                support[browser][letter] = info;
              }
            }
          }
        }
      });
      return support;
    }
    function cleanBrowsersList(browserList) {
      return (0, _lodash2.default)((0, _browserslist2.default)(browserList).map(function(browser) {
        return browser.split(" ")[0];
      }));
    }
  }
});

// node_modules/caniuse-api/dist/index.js
var require_dist2 = __commonJS({
  "node_modules/caniuse-api/dist/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.getBrowserScope = exports.setBrowserScope = exports.getLatestStableBrowsers = exports.find = exports.isSupported = exports.getSupport = exports.features = void 0;
    var _lodash = require_lodash();
    var _lodash2 = _interopRequireDefault(_lodash);
    var _browserslist = require_browserslist();
    var _browserslist2 = _interopRequireDefault(_browserslist);
    var _caniuseLite = require_unpacker();
    var _utils = require_utils();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var featuresList = Object.keys(_caniuseLite.features);
    var browsers = void 0;
    function setBrowserScope(browserList) {
      browsers = (0, _utils.cleanBrowsersList)(browserList);
    }
    function getBrowserScope() {
      return browsers;
    }
    var parse = (0, _lodash2.default)(_utils.parseCaniuseData, function(feat, browsers2) {
      return feat.title + browsers2;
    });
    function getSupport(query) {
      var feature = void 0;
      try {
        feature = (0, _caniuseLite.feature)(_caniuseLite.features[query]);
      } catch (e) {
        var res = find(query);
        if (res.length === 1)
          return getSupport(res[0]);
        throw new ReferenceError("Please provide a proper feature name. Cannot find " + query);
      }
      return parse(feature, browsers);
    }
    function isSupported(feature, browsers2) {
      var data = void 0;
      try {
        data = (0, _caniuseLite.feature)(_caniuseLite.features[feature]);
      } catch (e) {
        var res = find(feature);
        if (res.length === 1) {
          data = _caniuseLite.features[res[0]];
        } else {
          throw new ReferenceError("Please provide a proper feature name. Cannot find " + feature);
        }
      }
      return (0, _browserslist2.default)(browsers2, { ignoreUnknownVersions: true }).map(function(browser) {
        return browser.split(" ");
      }).every(function(browser) {
        return data.stats[browser[0]] && data.stats[browser[0]][browser[1]] === "y";
      });
    }
    function find(query) {
      if (typeof query !== "string") {
        throw new TypeError("The `query` parameter should be a string.");
      }
      if (~featuresList.indexOf(query)) {
        return query;
      }
      return featuresList.filter(function(file) {
        return (0, _utils.contains)(file, query);
      });
    }
    function getLatestStableBrowsers() {
      return (0, _browserslist2.default)("last 1 version");
    }
    setBrowserScope();
    exports.features = featuresList;
    exports.getSupport = getSupport;
    exports.isSupported = isSupported;
    exports.find = find;
    exports.getLatestStableBrowsers = getLatestStableBrowsers;
    exports.setBrowserScope = setBrowserScope;
    exports.getBrowserScope = getBrowserScope;
  }
});

// node_modules/postcss-reduce-initial/src/data/fromInitial.json
var require_fromInitial = __commonJS({
  "node_modules/postcss-reduce-initial/src/data/fromInitial.json"(exports, module2) {
    module2.exports = {
      "-webkit-line-clamp": "none",
      "accent-color": "auto",
      "align-content": "normal",
      "align-items": "normal",
      "align-self": "auto",
      "align-tracks": "normal",
      "animation-delay": "0s",
      "animation-direction": "normal",
      "animation-duration": "0s",
      "animation-fill-mode": "none",
      "animation-iteration-count": "1",
      "animation-name": "none",
      "animation-timing-function": "ease",
      "animation-timeline": "auto",
      appearance: "none",
      "aspect-ratio": "auto",
      azimuth: "center",
      "backdrop-filter": "none",
      "background-attachment": "scroll",
      "background-blend-mode": "normal",
      "background-image": "none",
      "background-position": "0% 0%",
      "background-position-x": "0%",
      "background-position-y": "0%",
      "background-repeat": "repeat",
      "block-overflow": "clip",
      "block-size": "auto",
      "border-block-style": "none",
      "border-block-width": "medium",
      "border-block-end-style": "none",
      "border-block-end-width": "medium",
      "border-block-start-style": "none",
      "border-block-start-width": "medium",
      "border-bottom-left-radius": "0",
      "border-bottom-right-radius": "0",
      "border-bottom-style": "none",
      "border-bottom-width": "medium",
      "border-end-end-radius": "0",
      "border-end-start-radius": "0",
      "border-image-outset": "0",
      "border-image-slice": "100%",
      "border-image-source": "none",
      "border-image-width": "1",
      "border-inline-style": "none",
      "border-inline-width": "medium",
      "border-inline-end-style": "none",
      "border-inline-end-width": "medium",
      "border-inline-start-style": "none",
      "border-inline-start-width": "medium",
      "border-left-style": "none",
      "border-left-width": "medium",
      "border-right-style": "none",
      "border-right-width": "medium",
      "border-spacing": "0",
      "border-start-end-radius": "0",
      "border-start-start-radius": "0",
      "border-top-left-radius": "0",
      "border-top-right-radius": "0",
      "border-top-style": "none",
      "border-top-width": "medium",
      bottom: "auto",
      "box-decoration-break": "slice",
      "box-shadow": "none",
      "break-after": "auto",
      "break-before": "auto",
      "break-inside": "auto",
      "caption-side": "top",
      "caret-color": "auto",
      "caret-shape": "auto",
      clear: "none",
      clip: "auto",
      "clip-path": "none",
      "color-scheme": "normal",
      "column-count": "auto",
      "column-gap": "normal",
      "column-rule-style": "none",
      "column-rule-width": "medium",
      "column-span": "none",
      "column-width": "auto",
      contain: "none",
      "contain-intrinsic-block-size": "none",
      "contain-intrinsic-height": "none",
      "contain-intrinsic-inline-size": "none",
      "contain-intrinsic-width": "none",
      content: "normal",
      "counter-increment": "none",
      "counter-reset": "none",
      "counter-set": "none",
      cursor: "auto",
      direction: "ltr",
      "empty-cells": "show",
      filter: "none",
      "flex-basis": "auto",
      "flex-direction": "row",
      "flex-grow": "0",
      "flex-shrink": "1",
      "flex-wrap": "nowrap",
      float: "none",
      "font-feature-settings": "normal",
      "font-kerning": "auto",
      "font-language-override": "normal",
      "font-optical-sizing": "auto",
      "font-variation-settings": "normal",
      "font-size": "medium",
      "font-size-adjust": "none",
      "font-stretch": "normal",
      "font-style": "normal",
      "font-variant": "normal",
      "font-variant-alternates": "normal",
      "font-variant-caps": "normal",
      "font-variant-east-asian": "normal",
      "font-variant-ligatures": "normal",
      "font-variant-numeric": "normal",
      "font-variant-position": "normal",
      "font-weight": "normal",
      "forced-color-adjust": "auto",
      "grid-auto-columns": "auto",
      "grid-auto-flow": "row",
      "grid-auto-rows": "auto",
      "grid-column-end": "auto",
      "grid-column-gap": "0",
      "grid-column-start": "auto",
      "grid-row-end": "auto",
      "grid-row-gap": "0",
      "grid-row-start": "auto",
      "grid-template-areas": "none",
      "grid-template-columns": "none",
      "grid-template-rows": "none",
      "hanging-punctuation": "none",
      height: "auto",
      "hyphenate-character": "auto",
      hyphens: "manual",
      "image-rendering": "auto",
      "image-resolution": "1dppx",
      "ime-mode": "auto",
      "initial-letter": "normal",
      "initial-letter-align": "auto",
      "inline-size": "auto",
      "input-security": "auto",
      inset: "auto",
      "inset-block": "auto",
      "inset-block-end": "auto",
      "inset-block-start": "auto",
      "inset-inline": "auto",
      "inset-inline-end": "auto",
      "inset-inline-start": "auto",
      isolation: "auto",
      "justify-content": "normal",
      "justify-items": "legacy",
      "justify-self": "auto",
      "justify-tracks": "normal",
      left: "auto",
      "letter-spacing": "normal",
      "line-break": "auto",
      "line-clamp": "none",
      "line-height": "normal",
      "line-height-step": "0",
      "list-style-image": "none",
      "list-style-type": "disc",
      "margin-block": "0",
      "margin-block-end": "0",
      "margin-block-start": "0",
      "margin-bottom": "0",
      "margin-inline": "0",
      "margin-inline-end": "0",
      "margin-inline-start": "0",
      "margin-left": "0",
      "margin-right": "0",
      "margin-top": "0",
      "margin-trim": "none",
      "mask-border-mode": "alpha",
      "mask-border-outset": "0",
      "mask-border-slice": "0",
      "mask-border-source": "none",
      "mask-border-width": "auto",
      "mask-composite": "add",
      "mask-image": "none",
      "mask-position": "center",
      "mask-repeat": "repeat",
      "mask-size": "auto",
      "masonry-auto-flow": "pack",
      "math-depth": "0",
      "math-shift": "normal",
      "math-style": "normal",
      "max-block-size": "none",
      "max-height": "none",
      "max-inline-size": "none",
      "max-lines": "none",
      "max-width": "none",
      "min-block-size": "0",
      "min-height": "auto",
      "min-inline-size": "0",
      "min-width": "auto",
      "mix-blend-mode": "normal",
      "object-fit": "fill",
      "offset-anchor": "auto",
      "offset-distance": "0",
      "offset-path": "none",
      "offset-position": "auto",
      "offset-rotate": "auto",
      opacity: "1",
      order: "0",
      orphans: "2",
      "outline-offset": "0",
      "outline-style": "none",
      "outline-width": "medium",
      "overflow-anchor": "auto",
      "overflow-block": "auto",
      "overflow-clip-margin": "0px",
      "overflow-inline": "auto",
      "overflow-wrap": "normal",
      "overscroll-behavior": "auto",
      "overscroll-behavior-block": "auto",
      "overscroll-behavior-inline": "auto",
      "overscroll-behavior-x": "auto",
      "overscroll-behavior-y": "auto",
      "padding-block": "0",
      "padding-block-end": "0",
      "padding-block-start": "0",
      "padding-bottom": "0",
      "padding-inline": "0",
      "padding-inline-end": "0",
      "padding-inline-start": "0",
      "padding-left": "0",
      "padding-right": "0",
      "padding-top": "0",
      "page-break-after": "auto",
      "page-break-before": "auto",
      "page-break-inside": "auto",
      "paint-order": "normal",
      perspective: "none",
      "place-content": "normal",
      "pointer-events": "auto",
      position: "static",
      resize: "none",
      right: "auto",
      rotate: "none",
      "row-gap": "normal",
      scale: "none",
      "scrollbar-color": "auto",
      "scrollbar-gutter": "auto",
      "scrollbar-width": "auto",
      "scroll-behavior": "auto",
      "scroll-margin": "0",
      "scroll-margin-block": "0",
      "scroll-margin-block-start": "0",
      "scroll-margin-block-end": "0",
      "scroll-margin-bottom": "0",
      "scroll-margin-inline": "0",
      "scroll-margin-inline-start": "0",
      "scroll-margin-inline-end": "0",
      "scroll-margin-left": "0",
      "scroll-margin-right": "0",
      "scroll-margin-top": "0",
      "scroll-padding": "auto",
      "scroll-padding-block": "auto",
      "scroll-padding-block-start": "auto",
      "scroll-padding-block-end": "auto",
      "scroll-padding-bottom": "auto",
      "scroll-padding-inline": "auto",
      "scroll-padding-inline-start": "auto",
      "scroll-padding-inline-end": "auto",
      "scroll-padding-left": "auto",
      "scroll-padding-right": "auto",
      "scroll-padding-top": "auto",
      "scroll-snap-align": "none",
      "scroll-snap-coordinate": "none",
      "scroll-snap-points-x": "none",
      "scroll-snap-points-y": "none",
      "scroll-snap-stop": "normal",
      "scroll-snap-type": "none",
      "scroll-snap-type-x": "none",
      "scroll-snap-type-y": "none",
      "scroll-timeline-axis": "block",
      "scroll-timeline-name": "none",
      "shape-image-threshold": "0.0",
      "shape-margin": "0",
      "shape-outside": "none",
      "tab-size": "8",
      "table-layout": "auto",
      "text-align-last": "auto",
      "text-combine-upright": "none",
      "text-decoration-line": "none",
      "text-decoration-skip-ink": "auto",
      "text-decoration-style": "solid",
      "text-decoration-thickness": "auto",
      "text-emphasis-style": "none",
      "text-indent": "0",
      "text-justify": "auto",
      "text-orientation": "mixed",
      "text-overflow": "clip",
      "text-rendering": "auto",
      "text-shadow": "none",
      "text-transform": "none",
      "text-underline-offset": "auto",
      "text-underline-position": "auto",
      top: "auto",
      "touch-action": "auto",
      transform: "none",
      "transform-style": "flat",
      "transition-delay": "0s",
      "transition-duration": "0s",
      "transition-property": "all",
      "transition-timing-function": "ease",
      translate: "none",
      "unicode-bidi": "normal",
      "user-select": "auto",
      "white-space": "normal",
      widows: "2",
      width: "auto",
      "will-change": "auto",
      "word-break": "normal",
      "word-spacing": "normal",
      "word-wrap": "normal",
      "z-index": "auto"
    };
  }
});

// node_modules/postcss-reduce-initial/src/data/toInitial.json
var require_toInitial = __commonJS({
  "node_modules/postcss-reduce-initial/src/data/toInitial.json"(exports, module2) {
    module2.exports = {
      "background-clip": "border-box",
      "background-color": "transparent",
      "background-origin": "padding-box",
      "background-size": "auto auto",
      "border-block-color": "currentcolor",
      "border-block-end-color": "currentcolor",
      "border-block-start-color": "currentcolor",
      "border-bottom-color": "currentcolor",
      "border-collapse": "separate",
      "border-inline-color": "currentcolor",
      "border-inline-end-color": "currentcolor",
      "border-inline-start-color": "currentcolor",
      "border-left-color": "currentcolor",
      "border-right-color": "currentcolor",
      "border-top-color": "currentcolor",
      "box-sizing": "content-box",
      color: "canvastext",
      "column-rule-color": "currentcolor",
      "font-synthesis": "weight style",
      "image-orientation": "from-image",
      "mask-clip": "border-box",
      "mask-mode": "match-source",
      "mask-origin": "border-box",
      "mask-type": "luminance",
      "ruby-align": "space-around",
      "ruby-merge": "separate",
      "ruby-position": "alternate",
      "text-decoration-color": "currentcolor",
      "text-emphasis-color": "currentcolor",
      "text-emphasis-position": "over right",
      "transform-box": "view-box",
      "transform-origin": "50% 50% 0",
      "vertical-align": "baseline",
      "writing-mode": "horizontal-tb"
    };
  }
});

// node_modules/postcss-reduce-initial/src/index.js
var require_src2 = __commonJS({
  "node_modules/postcss-reduce-initial/src/index.js"(exports, module2) {
    "use strict";
    var browserslist = require_browserslist();
    var { isSupported } = require_dist2();
    var fromInitial = require_fromInitial();
    var toInitial = require_toInitial();
    var initial = "initial";
    var defaultIgnoreProps = ["writing-mode", "transform-box"];
    function pluginCreator(options = {}) {
      return {
        postcssPlugin: "postcss-reduce-initial",
        /** @param {import('postcss').Result & {opts: browserslist.Options & {ignore?: string[]}}} result */
        prepare(result) {
          const resultOpts = result.opts || {};
          const browsers = browserslist(null, {
            stats: resultOpts.stats,
            path: __dirname,
            env: resultOpts.env
          });
          const initialSupport = isSupported("css-initial-value", browsers);
          return {
            OnceExit(css) {
              css.walkDecls((decl) => {
                const lowerCasedProp = decl.prop.toLowerCase();
                const ignoreProp = new Set(
                  defaultIgnoreProps.concat(options.ignore || [])
                );
                if (ignoreProp.has(lowerCasedProp)) {
                  return;
                }
                if (initialSupport && Object.prototype.hasOwnProperty.call(toInitial, lowerCasedProp) && decl.value.toLowerCase() === toInitial[
                  /** @type {keyof toInitial} */
                  lowerCasedProp
                ]) {
                  decl.value = initial;
                  return;
                }
                if (decl.value.toLowerCase() !== initial || !fromInitial[
                  /** @type {keyof fromInitial} */
                  lowerCasedProp
                ]) {
                  return;
                }
                decl.value = fromInitial[
                  /** @type {keyof fromInitial} */
                  lowerCasedProp
                ];
              });
            }
          };
        }
      };
    }
    pluginCreator.postcss = true;
    module2.exports = pluginCreator;
  }
});

// node_modules/postcss-value-parser/lib/parse.js
var require_parse3 = __commonJS({
  "node_modules/postcss-value-parser/lib/parse.js"(exports, module2) {
    var openParentheses = "(".charCodeAt(0);
    var closeParentheses = ")".charCodeAt(0);
    var singleQuote = "'".charCodeAt(0);
    var doubleQuote = '"'.charCodeAt(0);
    var backslash = "\\".charCodeAt(0);
    var slash = "/".charCodeAt(0);
    var comma = ",".charCodeAt(0);
    var colon = ":".charCodeAt(0);
    var star = "*".charCodeAt(0);
    var uLower = "u".charCodeAt(0);
    var uUpper = "U".charCodeAt(0);
    var plus = "+".charCodeAt(0);
    var isUnicodeRange = /^[a-f0-9?-]+$/i;
    module2.exports = function(input) {
      var tokens = [];
      var value = input;
      var next, quote, prev, token, escape, escapePos, whitespacePos, parenthesesOpenPos;
      var pos = 0;
      var code = value.charCodeAt(pos);
      var max = value.length;
      var stack = [{ nodes: tokens }];
      var balanced = 0;
      var parent;
      var name = "";
      var before = "";
      var after = "";
      while (pos < max) {
        if (code <= 32) {
          next = pos;
          do {
            next += 1;
            code = value.charCodeAt(next);
          } while (code <= 32);
          token = value.slice(pos, next);
          prev = tokens[tokens.length - 1];
          if (code === closeParentheses && balanced) {
            after = token;
          } else if (prev && prev.type === "div") {
            prev.after = token;
            prev.sourceEndIndex += token.length;
          } else if (code === comma || code === colon || code === slash && value.charCodeAt(next + 1) !== star && (!parent || parent && parent.type === "function" && parent.value !== "calc")) {
            before = token;
          } else {
            tokens.push({
              type: "space",
              sourceIndex: pos,
              sourceEndIndex: next,
              value: token
            });
          }
          pos = next;
        } else if (code === singleQuote || code === doubleQuote) {
          next = pos;
          quote = code === singleQuote ? "'" : '"';
          token = {
            type: "string",
            sourceIndex: pos,
            quote
          };
          do {
            escape = false;
            next = value.indexOf(quote, next + 1);
            if (~next) {
              escapePos = next;
              while (value.charCodeAt(escapePos - 1) === backslash) {
                escapePos -= 1;
                escape = !escape;
              }
            } else {
              value += quote;
              next = value.length - 1;
              token.unclosed = true;
            }
          } while (escape);
          token.value = value.slice(pos + 1, next);
          token.sourceEndIndex = token.unclosed ? next : next + 1;
          tokens.push(token);
          pos = next + 1;
          code = value.charCodeAt(pos);
        } else if (code === slash && value.charCodeAt(pos + 1) === star) {
          next = value.indexOf("*/", pos);
          token = {
            type: "comment",
            sourceIndex: pos,
            sourceEndIndex: next + 2
          };
          if (next === -1) {
            token.unclosed = true;
            next = value.length;
            token.sourceEndIndex = next;
          }
          token.value = value.slice(pos + 2, next);
          tokens.push(token);
          pos = next + 2;
          code = value.charCodeAt(pos);
        } else if ((code === slash || code === star) && parent && parent.type === "function" && parent.value === "calc") {
          token = value[pos];
          tokens.push({
            type: "word",
            sourceIndex: pos - before.length,
            sourceEndIndex: pos + token.length,
            value: token
          });
          pos += 1;
          code = value.charCodeAt(pos);
        } else if (code === slash || code === comma || code === colon) {
          token = value[pos];
          tokens.push({
            type: "div",
            sourceIndex: pos - before.length,
            sourceEndIndex: pos + token.length,
            value: token,
            before,
            after: ""
          });
          before = "";
          pos += 1;
          code = value.charCodeAt(pos);
        } else if (openParentheses === code) {
          next = pos;
          do {
            next += 1;
            code = value.charCodeAt(next);
          } while (code <= 32);
          parenthesesOpenPos = pos;
          token = {
            type: "function",
            sourceIndex: pos - name.length,
            value: name,
            before: value.slice(parenthesesOpenPos + 1, next)
          };
          pos = next;
          if (name === "url" && code !== singleQuote && code !== doubleQuote) {
            next -= 1;
            do {
              escape = false;
              next = value.indexOf(")", next + 1);
              if (~next) {
                escapePos = next;
                while (value.charCodeAt(escapePos - 1) === backslash) {
                  escapePos -= 1;
                  escape = !escape;
                }
              } else {
                value += ")";
                next = value.length - 1;
                token.unclosed = true;
              }
            } while (escape);
            whitespacePos = next;
            do {
              whitespacePos -= 1;
              code = value.charCodeAt(whitespacePos);
            } while (code <= 32);
            if (parenthesesOpenPos < whitespacePos) {
              if (pos !== whitespacePos + 1) {
                token.nodes = [
                  {
                    type: "word",
                    sourceIndex: pos,
                    sourceEndIndex: whitespacePos + 1,
                    value: value.slice(pos, whitespacePos + 1)
                  }
                ];
              } else {
                token.nodes = [];
              }
              if (token.unclosed && whitespacePos + 1 !== next) {
                token.after = "";
                token.nodes.push({
                  type: "space",
                  sourceIndex: whitespacePos + 1,
                  sourceEndIndex: next,
                  value: value.slice(whitespacePos + 1, next)
                });
              } else {
                token.after = value.slice(whitespacePos + 1, next);
                token.sourceEndIndex = next;
              }
            } else {
              token.after = "";
              token.nodes = [];
            }
            pos = next + 1;
            token.sourceEndIndex = token.unclosed ? next : pos;
            code = value.charCodeAt(pos);
            tokens.push(token);
          } else {
            balanced += 1;
            token.after = "";
            token.sourceEndIndex = pos + 1;
            tokens.push(token);
            stack.push(token);
            tokens = token.nodes = [];
            parent = token;
          }
          name = "";
        } else if (closeParentheses === code && balanced) {
          pos += 1;
          code = value.charCodeAt(pos);
          parent.after = after;
          parent.sourceEndIndex += after.length;
          after = "";
          balanced -= 1;
          stack[stack.length - 1].sourceEndIndex = pos;
          stack.pop();
          parent = stack[balanced];
          tokens = parent.nodes;
        } else {
          next = pos;
          do {
            if (code === backslash) {
              next += 1;
            }
            next += 1;
            code = value.charCodeAt(next);
          } while (next < max && !(code <= 32 || code === singleQuote || code === doubleQuote || code === comma || code === colon || code === slash || code === openParentheses || code === star && parent && parent.type === "function" && parent.value === "calc" || code === slash && parent.type === "function" && parent.value === "calc" || code === closeParentheses && balanced));
          token = value.slice(pos, next);
          if (openParentheses === code) {
            name = token;
          } else if ((uLower === token.charCodeAt(0) || uUpper === token.charCodeAt(0)) && plus === token.charCodeAt(1) && isUnicodeRange.test(token.slice(2))) {
            tokens.push({
              type: "unicode-range",
              sourceIndex: pos,
              sourceEndIndex: next,
              value: token
            });
          } else {
            tokens.push({
              type: "word",
              sourceIndex: pos,
              sourceEndIndex: next,
              value: token
            });
          }
          pos = next;
        }
      }
      for (pos = stack.length - 1; pos; pos -= 1) {
        stack[pos].unclosed = true;
        stack[pos].sourceEndIndex = value.length;
      }
      return stack[0].nodes;
    };
  }
});

// node_modules/postcss-value-parser/lib/walk.js
var require_walk = __commonJS({
  "node_modules/postcss-value-parser/lib/walk.js"(exports, module2) {
    module2.exports = function walk(nodes, cb, bubble) {
      var i, max, node, result;
      for (i = 0, max = nodes.length; i < max; i += 1) {
        node = nodes[i];
        if (!bubble) {
          result = cb(node, i, nodes);
        }
        if (result !== false && node.type === "function" && Array.isArray(node.nodes)) {
          walk(node.nodes, cb, bubble);
        }
        if (bubble) {
          cb(node, i, nodes);
        }
      }
    };
  }
});

// node_modules/postcss-value-parser/lib/stringify.js
var require_stringify2 = __commonJS({
  "node_modules/postcss-value-parser/lib/stringify.js"(exports, module2) {
    function stringifyNode(node, custom) {
      var type = node.type;
      var value = node.value;
      var buf;
      var customResult;
      if (custom && (customResult = custom(node)) !== void 0) {
        return customResult;
      } else if (type === "word" || type === "space") {
        return value;
      } else if (type === "string") {
        buf = node.quote || "";
        return buf + value + (node.unclosed ? "" : buf);
      } else if (type === "comment") {
        return "/*" + value + (node.unclosed ? "" : "*/");
      } else if (type === "div") {
        return (node.before || "") + value + (node.after || "");
      } else if (Array.isArray(node.nodes)) {
        buf = stringify(node.nodes, custom);
        if (type !== "function") {
          return buf;
        }
        return value + "(" + (node.before || "") + buf + (node.after || "") + (node.unclosed ? "" : ")");
      }
      return value;
    }
    function stringify(nodes, custom) {
      var result, i;
      if (Array.isArray(nodes)) {
        result = "";
        for (i = nodes.length - 1; ~i; i -= 1) {
          result = stringifyNode(nodes[i], custom) + result;
        }
        return result;
      }
      return stringifyNode(nodes, custom);
    }
    module2.exports = stringify;
  }
});

// node_modules/postcss-value-parser/lib/unit.js
var require_unit = __commonJS({
  "node_modules/postcss-value-parser/lib/unit.js"(exports, module2) {
    var minus = "-".charCodeAt(0);
    var plus = "+".charCodeAt(0);
    var dot = ".".charCodeAt(0);
    var exp = "e".charCodeAt(0);
    var EXP = "E".charCodeAt(0);
    function likeNumber(value) {
      var code = value.charCodeAt(0);
      var nextCode;
      if (code === plus || code === minus) {
        nextCode = value.charCodeAt(1);
        if (nextCode >= 48 && nextCode <= 57) {
          return true;
        }
        var nextNextCode = value.charCodeAt(2);
        if (nextCode === dot && nextNextCode >= 48 && nextNextCode <= 57) {
          return true;
        }
        return false;
      }
      if (code === dot) {
        nextCode = value.charCodeAt(1);
        if (nextCode >= 48 && nextCode <= 57) {
          return true;
        }
        return false;
      }
      if (code >= 48 && code <= 57) {
        return true;
      }
      return false;
    }
    module2.exports = function(value) {
      var pos = 0;
      var length = value.length;
      var code;
      var nextCode;
      var nextNextCode;
      if (length === 0 || !likeNumber(value)) {
        return false;
      }
      code = value.charCodeAt(pos);
      if (code === plus || code === minus) {
        pos++;
      }
      while (pos < length) {
        code = value.charCodeAt(pos);
        if (code < 48 || code > 57) {
          break;
        }
        pos += 1;
      }
      code = value.charCodeAt(pos);
      nextCode = value.charCodeAt(pos + 1);
      if (code === dot && nextCode >= 48 && nextCode <= 57) {
        pos += 2;
        while (pos < length) {
          code = value.charCodeAt(pos);
          if (code < 48 || code > 57) {
            break;
          }
          pos += 1;
        }
      }
      code = value.charCodeAt(pos);
      nextCode = value.charCodeAt(pos + 1);
      nextNextCode = value.charCodeAt(pos + 2);
      if ((code === exp || code === EXP) && (nextCode >= 48 && nextCode <= 57 || (nextCode === plus || nextCode === minus) && nextNextCode >= 48 && nextNextCode <= 57)) {
        pos += nextCode === plus || nextCode === minus ? 3 : 2;
        while (pos < length) {
          code = value.charCodeAt(pos);
          if (code < 48 || code > 57) {
            break;
          }
          pos += 1;
        }
      }
      return {
        number: value.slice(0, pos),
        unit: value.slice(pos)
      };
    };
  }
});

// node_modules/postcss-value-parser/lib/index.js
var require_lib = __commonJS({
  "node_modules/postcss-value-parser/lib/index.js"(exports, module2) {
    var parse = require_parse3();
    var walk = require_walk();
    var stringify = require_stringify2();
    function ValueParser(value) {
      if (this instanceof ValueParser) {
        this.nodes = parse(value);
        return this;
      }
      return new ValueParser(value);
    }
    ValueParser.prototype.toString = function() {
      return Array.isArray(this.nodes) ? stringify(this.nodes) : "";
    };
    ValueParser.prototype.walk = function(cb, bubble) {
      walk(this.nodes, cb, bubble);
      return this;
    };
    ValueParser.unit = require_unit();
    ValueParser.walk = walk;
    ValueParser.stringify = stringify;
    module2.exports = ValueParser;
  }
});

// node_modules/cssnano-utils/src/rawCache.js
var require_rawCache = __commonJS({
  "node_modules/cssnano-utils/src/rawCache.js"(exports, module2) {
    "use strict";
    function pluginCreator() {
      return {
        postcssPlugin: "cssnano-util-raw-cache",
        /**
         * @param {import('postcss').Root} css
         * @param {{result: import('postcss').Result & {root: {rawCache?: any}}}} arg
         */
        OnceExit(css, { result }) {
          result.root.rawCache = {
            colon: ":",
            indent: "",
            beforeDecl: "",
            beforeRule: "",
            beforeOpen: "",
            beforeClose: "",
            beforeComment: "",
            after: "",
            emptyBody: "",
            commentLeft: "",
            commentRight: ""
          };
        }
      };
    }
    pluginCreator.postcss = true;
    module2.exports = pluginCreator;
  }
});

// node_modules/cssnano-utils/src/getArguments.js
var require_getArguments = __commonJS({
  "node_modules/cssnano-utils/src/getArguments.js"(exports, module2) {
    "use strict";
    module2.exports = function getArguments(node) {
      const list = [[]];
      for (const child of node.nodes) {
        if (child.type !== "div") {
          list[list.length - 1].push(child);
        } else {
          list.push([]);
        }
      }
      return list;
    };
  }
});

// node_modules/cssnano-utils/src/sameParent.js
var require_sameParent = __commonJS({
  "node_modules/cssnano-utils/src/sameParent.js"(exports, module2) {
    "use strict";
    function checkMatch(nodeA, nodeB) {
      if (nodeA.type === "atrule" && nodeB.type === "atrule") {
        return nodeA.params === nodeB.params && nodeA.name.toLowerCase() === nodeB.name.toLowerCase();
      }
      return nodeA.type === nodeB.type;
    }
    function sameParent(nodeA, nodeB) {
      if (!nodeA.parent) {
        return !nodeB.parent;
      }
      if (!nodeB.parent) {
        return false;
      }
      if (!checkMatch(nodeA.parent, nodeB.parent)) {
        return false;
      }
      return sameParent(nodeA.parent, nodeB.parent);
    }
    module2.exports = sameParent;
  }
});

// node_modules/cssnano-utils/src/index.js
var require_src3 = __commonJS({
  "node_modules/cssnano-utils/src/index.js"(exports, module2) {
    "use strict";
    var rawCache = require_rawCache();
    var getArguments = require_getArguments();
    var sameParent = require_sameParent();
    module2.exports = { rawCache, getArguments, sameParent };
  }
});

// node_modules/colord/index.js
var require_colord = __commonJS({
  "node_modules/colord/index.js"(exports) {
    Object.defineProperty(exports, "__esModule", { value: true });
    var r = { grad: 0.9, turn: 360, rad: 360 / (2 * Math.PI) };
    var t = function(r2) {
      return "string" == typeof r2 ? r2.length > 0 : "number" == typeof r2;
    };
    var n = function(r2, t2, n2) {
      return void 0 === t2 && (t2 = 0), void 0 === n2 && (n2 = Math.pow(10, t2)), Math.round(n2 * r2) / n2 + 0;
    };
    var e = function(r2, t2, n2) {
      return void 0 === t2 && (t2 = 0), void 0 === n2 && (n2 = 1), r2 > n2 ? n2 : r2 > t2 ? r2 : t2;
    };
    var u = function(r2) {
      return (r2 = isFinite(r2) ? r2 % 360 : 0) > 0 ? r2 : r2 + 360;
    };
    var o = function(r2) {
      return { r: e(r2.r, 0, 255), g: e(r2.g, 0, 255), b: e(r2.b, 0, 255), a: e(r2.a) };
    };
    var a = function(r2) {
      return { r: n(r2.r), g: n(r2.g), b: n(r2.b), a: n(r2.a, 3) };
    };
    var s = /^#([0-9a-f]{3,8})$/i;
    var i = function(r2) {
      var t2 = r2.toString(16);
      return t2.length < 2 ? "0" + t2 : t2;
    };
    var h = function(r2) {
      var t2 = r2.r, n2 = r2.g, e2 = r2.b, u2 = r2.a, o2 = Math.max(t2, n2, e2), a2 = o2 - Math.min(t2, n2, e2), s2 = a2 ? o2 === t2 ? (n2 - e2) / a2 : o2 === n2 ? 2 + (e2 - t2) / a2 : 4 + (t2 - n2) / a2 : 0;
      return { h: 60 * (s2 < 0 ? s2 + 6 : s2), s: o2 ? a2 / o2 * 100 : 0, v: o2 / 255 * 100, a: u2 };
    };
    var b = function(r2) {
      var t2 = r2.h, n2 = r2.s, e2 = r2.v, u2 = r2.a;
      t2 = t2 / 360 * 6, n2 /= 100, e2 /= 100;
      var o2 = Math.floor(t2), a2 = e2 * (1 - n2), s2 = e2 * (1 - (t2 - o2) * n2), i2 = e2 * (1 - (1 - t2 + o2) * n2), h2 = o2 % 6;
      return { r: 255 * [e2, s2, a2, a2, i2, e2][h2], g: 255 * [i2, e2, e2, s2, a2, a2][h2], b: 255 * [a2, a2, i2, e2, e2, s2][h2], a: u2 };
    };
    var d = function(r2) {
      return { h: u(r2.h), s: e(r2.s, 0, 100), l: e(r2.l, 0, 100), a: e(r2.a) };
    };
    var g = function(r2) {
      return { h: n(r2.h), s: n(r2.s), l: n(r2.l), a: n(r2.a, 3) };
    };
    var f = function(r2) {
      return b((n2 = (t2 = r2).s, { h: t2.h, s: (n2 *= ((e2 = t2.l) < 50 ? e2 : 100 - e2) / 100) > 0 ? 2 * n2 / (e2 + n2) * 100 : 0, v: e2 + n2, a: t2.a }));
      var t2, n2, e2;
    };
    var p = function(r2) {
      return { h: (t2 = h(r2)).h, s: (u2 = (200 - (n2 = t2.s)) * (e2 = t2.v) / 100) > 0 && u2 < 200 ? n2 * e2 / 100 / (u2 <= 100 ? u2 : 200 - u2) * 100 : 0, l: u2 / 2, a: t2.a };
      var t2, n2, e2, u2;
    };
    var l = /^hsla?\(\s*([+-]?\d*\.?\d+)(deg|rad|grad|turn)?\s*,\s*([+-]?\d*\.?\d+)%\s*,\s*([+-]?\d*\.?\d+)%\s*(?:,\s*([+-]?\d*\.?\d+)(%)?\s*)?\)$/i;
    var c = /^hsla?\(\s*([+-]?\d*\.?\d+)(deg|rad|grad|turn)?\s+([+-]?\d*\.?\d+)%\s+([+-]?\d*\.?\d+)%\s*(?:\/\s*([+-]?\d*\.?\d+)(%)?\s*)?\)$/i;
    var v = /^rgba?\(\s*([+-]?\d*\.?\d+)(%)?\s*,\s*([+-]?\d*\.?\d+)(%)?\s*,\s*([+-]?\d*\.?\d+)(%)?\s*(?:,\s*([+-]?\d*\.?\d+)(%)?\s*)?\)$/i;
    var m = /^rgba?\(\s*([+-]?\d*\.?\d+)(%)?\s+([+-]?\d*\.?\d+)(%)?\s+([+-]?\d*\.?\d+)(%)?\s*(?:\/\s*([+-]?\d*\.?\d+)(%)?\s*)?\)$/i;
    var y = { string: [[function(r2) {
      var t2 = s.exec(r2);
      return t2 ? (r2 = t2[1]).length <= 4 ? { r: parseInt(r2[0] + r2[0], 16), g: parseInt(r2[1] + r2[1], 16), b: parseInt(r2[2] + r2[2], 16), a: 4 === r2.length ? n(parseInt(r2[3] + r2[3], 16) / 255, 2) : 1 } : 6 === r2.length || 8 === r2.length ? { r: parseInt(r2.substr(0, 2), 16), g: parseInt(r2.substr(2, 2), 16), b: parseInt(r2.substr(4, 2), 16), a: 8 === r2.length ? n(parseInt(r2.substr(6, 2), 16) / 255, 2) : 1 } : null : null;
    }, "hex"], [function(r2) {
      var t2 = v.exec(r2) || m.exec(r2);
      return t2 ? t2[2] !== t2[4] || t2[4] !== t2[6] ? null : o({ r: Number(t2[1]) / (t2[2] ? 100 / 255 : 1), g: Number(t2[3]) / (t2[4] ? 100 / 255 : 1), b: Number(t2[5]) / (t2[6] ? 100 / 255 : 1), a: void 0 === t2[7] ? 1 : Number(t2[7]) / (t2[8] ? 100 : 1) }) : null;
    }, "rgb"], [function(t2) {
      var n2 = l.exec(t2) || c.exec(t2);
      if (!n2)
        return null;
      var e2, u2, o2 = d({ h: (e2 = n2[1], u2 = n2[2], void 0 === u2 && (u2 = "deg"), Number(e2) * (r[u2] || 1)), s: Number(n2[3]), l: Number(n2[4]), a: void 0 === n2[5] ? 1 : Number(n2[5]) / (n2[6] ? 100 : 1) });
      return f(o2);
    }, "hsl"]], object: [[function(r2) {
      var n2 = r2.r, e2 = r2.g, u2 = r2.b, a2 = r2.a, s2 = void 0 === a2 ? 1 : a2;
      return t(n2) && t(e2) && t(u2) ? o({ r: Number(n2), g: Number(e2), b: Number(u2), a: Number(s2) }) : null;
    }, "rgb"], [function(r2) {
      var n2 = r2.h, e2 = r2.s, u2 = r2.l, o2 = r2.a, a2 = void 0 === o2 ? 1 : o2;
      if (!t(n2) || !t(e2) || !t(u2))
        return null;
      var s2 = d({ h: Number(n2), s: Number(e2), l: Number(u2), a: Number(a2) });
      return f(s2);
    }, "hsl"], [function(r2) {
      var n2 = r2.h, o2 = r2.s, a2 = r2.v, s2 = r2.a, i2 = void 0 === s2 ? 1 : s2;
      if (!t(n2) || !t(o2) || !t(a2))
        return null;
      var h2 = function(r3) {
        return { h: u(r3.h), s: e(r3.s, 0, 100), v: e(r3.v, 0, 100), a: e(r3.a) };
      }({ h: Number(n2), s: Number(o2), v: Number(a2), a: Number(i2) });
      return b(h2);
    }, "hsv"]] };
    var N = function(r2, t2) {
      for (var n2 = 0; n2 < t2.length; n2++) {
        var e2 = t2[n2][0](r2);
        if (e2)
          return [e2, t2[n2][1]];
      }
      return [null, void 0];
    };
    var x = function(r2) {
      return "string" == typeof r2 ? N(r2.trim(), y.string) : "object" == typeof r2 && null !== r2 ? N(r2, y.object) : [null, void 0];
    };
    var M = function(r2, t2) {
      var n2 = p(r2);
      return { h: n2.h, s: e(n2.s + 100 * t2, 0, 100), l: n2.l, a: n2.a };
    };
    var I = function(r2) {
      return (299 * r2.r + 587 * r2.g + 114 * r2.b) / 1e3 / 255;
    };
    var H = function(r2, t2) {
      var n2 = p(r2);
      return { h: n2.h, s: n2.s, l: e(n2.l + 100 * t2, 0, 100), a: n2.a };
    };
    var $ = function() {
      function r2(r3) {
        this.parsed = x(r3)[0], this.rgba = this.parsed || { r: 0, g: 0, b: 0, a: 1 };
      }
      return r2.prototype.isValid = function() {
        return null !== this.parsed;
      }, r2.prototype.brightness = function() {
        return n(I(this.rgba), 2);
      }, r2.prototype.isDark = function() {
        return I(this.rgba) < 0.5;
      }, r2.prototype.isLight = function() {
        return I(this.rgba) >= 0.5;
      }, r2.prototype.toHex = function() {
        return r3 = a(this.rgba), t2 = r3.r, e2 = r3.g, u2 = r3.b, s2 = (o2 = r3.a) < 1 ? i(n(255 * o2)) : "", "#" + i(t2) + i(e2) + i(u2) + s2;
        var r3, t2, e2, u2, o2, s2;
      }, r2.prototype.toRgb = function() {
        return a(this.rgba);
      }, r2.prototype.toRgbString = function() {
        return r3 = a(this.rgba), t2 = r3.r, n2 = r3.g, e2 = r3.b, (u2 = r3.a) < 1 ? "rgba(" + t2 + ", " + n2 + ", " + e2 + ", " + u2 + ")" : "rgb(" + t2 + ", " + n2 + ", " + e2 + ")";
        var r3, t2, n2, e2, u2;
      }, r2.prototype.toHsl = function() {
        return g(p(this.rgba));
      }, r2.prototype.toHslString = function() {
        return r3 = g(p(this.rgba)), t2 = r3.h, n2 = r3.s, e2 = r3.l, (u2 = r3.a) < 1 ? "hsla(" + t2 + ", " + n2 + "%, " + e2 + "%, " + u2 + ")" : "hsl(" + t2 + ", " + n2 + "%, " + e2 + "%)";
        var r3, t2, n2, e2, u2;
      }, r2.prototype.toHsv = function() {
        return r3 = h(this.rgba), { h: n(r3.h), s: n(r3.s), v: n(r3.v), a: n(r3.a, 3) };
        var r3;
      }, r2.prototype.invert = function() {
        return j({ r: 255 - (r3 = this.rgba).r, g: 255 - r3.g, b: 255 - r3.b, a: r3.a });
        var r3;
      }, r2.prototype.saturate = function(r3) {
        return void 0 === r3 && (r3 = 0.1), j(M(this.rgba, r3));
      }, r2.prototype.desaturate = function(r3) {
        return void 0 === r3 && (r3 = 0.1), j(M(this.rgba, -r3));
      }, r2.prototype.grayscale = function() {
        return j(M(this.rgba, -1));
      }, r2.prototype.lighten = function(r3) {
        return void 0 === r3 && (r3 = 0.1), j(H(this.rgba, r3));
      }, r2.prototype.darken = function(r3) {
        return void 0 === r3 && (r3 = 0.1), j(H(this.rgba, -r3));
      }, r2.prototype.rotate = function(r3) {
        return void 0 === r3 && (r3 = 15), this.hue(this.hue() + r3);
      }, r2.prototype.alpha = function(r3) {
        return "number" == typeof r3 ? j({ r: (t2 = this.rgba).r, g: t2.g, b: t2.b, a: r3 }) : n(this.rgba.a, 3);
        var t2;
      }, r2.prototype.hue = function(r3) {
        var t2 = p(this.rgba);
        return "number" == typeof r3 ? j({ h: r3, s: t2.s, l: t2.l, a: t2.a }) : n(t2.h);
      }, r2.prototype.isEqual = function(r3) {
        return this.toHex() === j(r3).toHex();
      }, r2;
    }();
    var j = function(r2) {
      return r2 instanceof $ ? r2 : new $(r2);
    };
    var w = [];
    exports.Colord = $, exports.colord = j, exports.extend = function(r2) {
      r2.forEach(function(r3) {
        w.indexOf(r3) < 0 && (r3($, y), w.push(r3));
      });
    }, exports.getFormat = function(r2) {
      return x(r2)[1];
    }, exports.random = function() {
      return new $({ r: 255 * Math.random(), g: 255 * Math.random(), b: 255 * Math.random() });
    };
  }
});

// node_modules/colord/plugins/names.js
var require_names = __commonJS({
  "node_modules/colord/plugins/names.js"(exports, module2) {
    module2.exports = function(e, f) {
      var a = { white: "#ffffff", bisque: "#ffe4c4", blue: "#0000ff", cadetblue: "#5f9ea0", chartreuse: "#7fff00", chocolate: "#d2691e", coral: "#ff7f50", antiquewhite: "#faebd7", aqua: "#00ffff", azure: "#f0ffff", whitesmoke: "#f5f5f5", papayawhip: "#ffefd5", plum: "#dda0dd", blanchedalmond: "#ffebcd", black: "#000000", gold: "#ffd700", goldenrod: "#daa520", gainsboro: "#dcdcdc", cornsilk: "#fff8dc", cornflowerblue: "#6495ed", burlywood: "#deb887", aquamarine: "#7fffd4", beige: "#f5f5dc", crimson: "#dc143c", cyan: "#00ffff", darkblue: "#00008b", darkcyan: "#008b8b", darkgoldenrod: "#b8860b", darkkhaki: "#bdb76b", darkgray: "#a9a9a9", darkgreen: "#006400", darkgrey: "#a9a9a9", peachpuff: "#ffdab9", darkmagenta: "#8b008b", darkred: "#8b0000", darkorchid: "#9932cc", darkorange: "#ff8c00", darkslateblue: "#483d8b", gray: "#808080", darkslategray: "#2f4f4f", darkslategrey: "#2f4f4f", deeppink: "#ff1493", deepskyblue: "#00bfff", wheat: "#f5deb3", firebrick: "#b22222", floralwhite: "#fffaf0", ghostwhite: "#f8f8ff", darkviolet: "#9400d3", magenta: "#ff00ff", green: "#008000", dodgerblue: "#1e90ff", grey: "#808080", honeydew: "#f0fff0", hotpink: "#ff69b4", blueviolet: "#8a2be2", forestgreen: "#228b22", lawngreen: "#7cfc00", indianred: "#cd5c5c", indigo: "#4b0082", fuchsia: "#ff00ff", brown: "#a52a2a", maroon: "#800000", mediumblue: "#0000cd", lightcoral: "#f08080", darkturquoise: "#00ced1", lightcyan: "#e0ffff", ivory: "#fffff0", lightyellow: "#ffffe0", lightsalmon: "#ffa07a", lightseagreen: "#20b2aa", linen: "#faf0e6", mediumaquamarine: "#66cdaa", lemonchiffon: "#fffacd", lime: "#00ff00", khaki: "#f0e68c", mediumseagreen: "#3cb371", limegreen: "#32cd32", mediumspringgreen: "#00fa9a", lightskyblue: "#87cefa", lightblue: "#add8e6", midnightblue: "#191970", lightpink: "#ffb6c1", mistyrose: "#ffe4e1", moccasin: "#ffe4b5", mintcream: "#f5fffa", lightslategray: "#778899", lightslategrey: "#778899", navajowhite: "#ffdead", navy: "#000080", mediumvioletred: "#c71585", powderblue: "#b0e0e6", palegoldenrod: "#eee8aa", oldlace: "#fdf5e6", paleturquoise: "#afeeee", mediumturquoise: "#48d1cc", mediumorchid: "#ba55d3", rebeccapurple: "#663399", lightsteelblue: "#b0c4de", mediumslateblue: "#7b68ee", thistle: "#d8bfd8", tan: "#d2b48c", orchid: "#da70d6", mediumpurple: "#9370db", purple: "#800080", pink: "#ffc0cb", skyblue: "#87ceeb", springgreen: "#00ff7f", palegreen: "#98fb98", red: "#ff0000", yellow: "#ffff00", slateblue: "#6a5acd", lavenderblush: "#fff0f5", peru: "#cd853f", palevioletred: "#db7093", violet: "#ee82ee", teal: "#008080", slategray: "#708090", slategrey: "#708090", aliceblue: "#f0f8ff", darkseagreen: "#8fbc8f", darkolivegreen: "#556b2f", greenyellow: "#adff2f", seagreen: "#2e8b57", seashell: "#fff5ee", tomato: "#ff6347", silver: "#c0c0c0", sienna: "#a0522d", lavender: "#e6e6fa", lightgreen: "#90ee90", orange: "#ffa500", orangered: "#ff4500", steelblue: "#4682b4", royalblue: "#4169e1", turquoise: "#40e0d0", yellowgreen: "#9acd32", salmon: "#fa8072", saddlebrown: "#8b4513", sandybrown: "#f4a460", rosybrown: "#bc8f8f", darksalmon: "#e9967a", lightgoldenrodyellow: "#fafad2", snow: "#fffafa", lightgrey: "#d3d3d3", lightgray: "#d3d3d3", dimgray: "#696969", dimgrey: "#696969", olivedrab: "#6b8e23", olive: "#808000" }, r = {};
      for (var d in a)
        r[a[d]] = d;
      var l = {};
      e.prototype.toName = function(f2) {
        if (!(this.rgba.a || this.rgba.r || this.rgba.g || this.rgba.b))
          return "transparent";
        var d2, i, o = r[this.toHex()];
        if (o)
          return o;
        if (null == f2 ? void 0 : f2.closest) {
          var n = this.toRgb(), t = 1 / 0, b = "black";
          if (!l.length)
            for (var c in a)
              l[c] = new e(a[c]).toRgb();
          for (var g in a) {
            var u = (d2 = n, i = l[g], Math.pow(d2.r - i.r, 2) + Math.pow(d2.g - i.g, 2) + Math.pow(d2.b - i.b, 2));
            u < t && (t = u, b = g);
          }
          return b;
        }
      };
      f.string.push([function(f2) {
        var r2 = f2.toLowerCase(), d2 = "transparent" === r2 ? "#0000" : a[r2];
        return d2 ? new e(d2).toRgb() : null;
      }, "name"]);
    };
  }
});

// node_modules/postcss-minify-gradients/src/isColorStop.js
var require_isColorStop = __commonJS({
  "node_modules/postcss-minify-gradients/src/isColorStop.js"(exports, module2) {
    "use strict";
    var { unit } = require_lib();
    var { colord, extend } = require_colord();
    var namesPlugin = require_names();
    extend([
      /** @type {any} */
      namesPlugin
    ]);
    var lengthUnits = /* @__PURE__ */ new Set([
      "PX",
      "IN",
      "CM",
      "MM",
      "EM",
      "REM",
      "POINTS",
      "PC",
      "EX",
      "CH",
      "VW",
      "VH",
      "VMIN",
      "VMAX",
      "%"
    ]);
    function isCSSLengthUnit(input) {
      return lengthUnits.has(input.toUpperCase());
    }
    function isStop(str) {
      if (str) {
        let stop = false;
        const node = unit(str);
        if (node) {
          const number = Number(node.number);
          if (number === 0 || !isNaN(number) && isCSSLengthUnit(node.unit)) {
            stop = true;
          }
        } else {
          stop = /^calc\(\S+\)$/g.test(str);
        }
        return stop;
      }
      return true;
    }
    module2.exports = function isColorStop(color, stop) {
      return colord(color).isValid() && isStop(stop);
    };
  }
});

// node_modules/postcss-minify-gradients/src/index.js
var require_src4 = __commonJS({
  "node_modules/postcss-minify-gradients/src/index.js"(exports, module2) {
    "use strict";
    var valueParser = require_lib();
    var { getArguments } = require_src3();
    var isColorStop = require_isColorStop();
    var angles = {
      top: "0deg",
      right: "90deg",
      bottom: "180deg",
      left: "270deg"
    };
    function isLessThan(a, b) {
      return a.unit.toLowerCase() === b.unit.toLowerCase() && parseFloat(a.number) >= parseFloat(b.number);
    }
    function optimise(decl) {
      const value = decl.value;
      if (!value) {
        return;
      }
      const normalizedValue = value.toLowerCase();
      if (normalizedValue.includes("var(") || normalizedValue.includes("env(")) {
        return;
      }
      if (!normalizedValue.includes("gradient")) {
        return;
      }
      decl.value = valueParser(value).walk((node) => {
        if (node.type !== "function" || !node.nodes.length) {
          return false;
        }
        const lowerCasedValue = node.value.toLowerCase();
        if (lowerCasedValue === "linear-gradient" || lowerCasedValue === "repeating-linear-gradient" || lowerCasedValue === "-webkit-linear-gradient" || lowerCasedValue === "-webkit-repeating-linear-gradient") {
          let args = getArguments(node);
          if (node.nodes[0].value.toLowerCase() === "to" && args[0].length === 3) {
            node.nodes = node.nodes.slice(2);
            node.nodes[0].value = angles[
              /** @type {'top'|'right'|'bottom'|'left'}*/
              node.nodes[0].value.toLowerCase()
            ];
          }
          let lastStop;
          args.forEach((arg, index) => {
            if (arg.length !== 3) {
              return;
            }
            let isFinalStop = index === args.length - 1;
            let thisStop = valueParser.unit(arg[2].value);
            if (lastStop === void 0) {
              lastStop = thisStop;
              if (!isFinalStop && lastStop && lastStop.number === "0" && lastStop.unit.toLowerCase() !== "deg") {
                arg[1].value = arg[2].value = "";
              }
              return;
            }
            if (lastStop && thisStop && isLessThan(lastStop, thisStop)) {
              arg[2].value = "0";
            }
            lastStop = thisStop;
            if (isFinalStop && arg[2].value === "100%") {
              arg[1].value = arg[2].value = "";
            }
          });
          return false;
        }
        if (lowerCasedValue === "radial-gradient" || lowerCasedValue === "repeating-radial-gradient") {
          let args = getArguments(node);
          let lastStop;
          const hasAt = args[0].find((n) => n.value.toLowerCase() === "at");
          args.forEach((arg, index) => {
            if (!arg[2] || !index && hasAt) {
              return;
            }
            let thisStop = valueParser.unit(arg[2].value);
            if (!lastStop) {
              lastStop = thisStop;
              return;
            }
            if (lastStop && thisStop && isLessThan(lastStop, thisStop)) {
              arg[2].value = "0";
            }
            lastStop = thisStop;
          });
          return false;
        }
        if (lowerCasedValue === "-webkit-radial-gradient" || lowerCasedValue === "-webkit-repeating-radial-gradient") {
          let args = getArguments(node);
          let lastStop;
          args.forEach((arg) => {
            let color;
            let stop;
            if (arg[2] !== void 0) {
              if (arg[0].type === "function") {
                color = `${arg[0].value}(${valueParser.stringify(arg[0].nodes)})`;
              } else {
                color = arg[0].value;
              }
              if (arg[2].type === "function") {
                stop = `${arg[2].value}(${valueParser.stringify(arg[2].nodes)})`;
              } else {
                stop = arg[2].value;
              }
            } else {
              if (arg[0].type === "function") {
                color = `${arg[0].value}(${valueParser.stringify(arg[0].nodes)})`;
              }
              color = arg[0].value;
            }
            color = color.toLowerCase();
            const colorStop = stop !== void 0 ? isColorStop(color, stop.toLowerCase()) : isColorStop(color);
            if (!colorStop || !arg[2]) {
              return;
            }
            let thisStop = valueParser.unit(arg[2].value);
            if (!lastStop) {
              lastStop = thisStop;
              return;
            }
            if (lastStop && thisStop && isLessThan(lastStop, thisStop)) {
              arg[2].value = "0";
            }
            lastStop = thisStop;
          });
          return false;
        }
      }).toString();
    }
    function pluginCreator() {
      return {
        postcssPlugin: "postcss-minify-gradients",
        OnceExit(css) {
          css.walkDecls(optimise);
        }
      };
    }
    pluginCreator.postcss = true;
    module2.exports = pluginCreator;
  }
});

// node_modules/@trysound/sax/lib/sax.js
var require_sax = __commonJS({
  "node_modules/@trysound/sax/lib/sax.js"(exports) {
    (function(sax) {
      sax.parser = function(strict, opt) {
        return new SAXParser(strict, opt);
      };
      sax.SAXParser = SAXParser;
      sax.MAX_BUFFER_LENGTH = 64 * 1024;
      var buffers = [
        "comment",
        "sgmlDecl",
        "textNode",
        "tagName",
        "doctype",
        "procInstName",
        "procInstBody",
        "entity",
        "attribName",
        "attribValue",
        "cdata",
        "script"
      ];
      sax.EVENTS = [
        "text",
        "processinginstruction",
        "sgmldeclaration",
        "doctype",
        "comment",
        "opentagstart",
        "attribute",
        "opentag",
        "closetag",
        "opencdata",
        "cdata",
        "closecdata",
        "error",
        "end",
        "ready",
        "script",
        "opennamespace",
        "closenamespace"
      ];
      function SAXParser(strict, opt) {
        if (!(this instanceof SAXParser)) {
          return new SAXParser(strict, opt);
        }
        var parser = this;
        clearBuffers(parser);
        parser.q = parser.c = "";
        parser.bufferCheckPosition = sax.MAX_BUFFER_LENGTH;
        parser.opt = opt || {};
        parser.opt.lowercase = parser.opt.lowercase || parser.opt.lowercasetags;
        parser.looseCase = parser.opt.lowercase ? "toLowerCase" : "toUpperCase";
        parser.tags = [];
        parser.closed = parser.closedRoot = parser.sawRoot = false;
        parser.tag = parser.error = null;
        parser.strict = !!strict;
        parser.noscript = !!(strict || parser.opt.noscript);
        parser.state = S.BEGIN;
        parser.strictEntities = parser.opt.strictEntities;
        parser.ENTITIES = parser.strictEntities ? Object.create(sax.XML_ENTITIES) : Object.create(sax.ENTITIES);
        parser.attribList = [];
        if (parser.opt.xmlns) {
          parser.ns = Object.create(rootNS);
        }
        parser.trackPosition = parser.opt.position !== false;
        if (parser.trackPosition) {
          parser.position = parser.line = parser.column = 0;
        }
        emit(parser, "onready");
      }
      if (!Object.create) {
        Object.create = function(o) {
          function F() {
          }
          F.prototype = o;
          var newf = new F();
          return newf;
        };
      }
      if (!Object.keys) {
        Object.keys = function(o) {
          var a = [];
          for (var i in o)
            if (o.hasOwnProperty(i))
              a.push(i);
          return a;
        };
      }
      function checkBufferLength(parser) {
        var maxAllowed = Math.max(sax.MAX_BUFFER_LENGTH, 10);
        var maxActual = 0;
        for (var i = 0, l = buffers.length; i < l; i++) {
          var len = parser[buffers[i]].length;
          if (len > maxAllowed) {
            switch (buffers[i]) {
              case "textNode":
                closeText(parser);
                break;
              case "cdata":
                emitNode(parser, "oncdata", parser.cdata);
                parser.cdata = "";
                break;
              case "script":
                emitNode(parser, "onscript", parser.script);
                parser.script = "";
                break;
              default:
                error(parser, "Max buffer length exceeded: " + buffers[i]);
            }
          }
          maxActual = Math.max(maxActual, len);
        }
        var m = sax.MAX_BUFFER_LENGTH - maxActual;
        parser.bufferCheckPosition = m + parser.position;
      }
      function clearBuffers(parser) {
        for (var i = 0, l = buffers.length; i < l; i++) {
          parser[buffers[i]] = "";
        }
      }
      function flushBuffers(parser) {
        closeText(parser);
        if (parser.cdata !== "") {
          emitNode(parser, "oncdata", parser.cdata);
          parser.cdata = "";
        }
        if (parser.script !== "") {
          emitNode(parser, "onscript", parser.script);
          parser.script = "";
        }
      }
      SAXParser.prototype = {
        end: function() {
          end(this);
        },
        write,
        resume: function() {
          this.error = null;
          return this;
        },
        close: function() {
          return this.write(null);
        },
        flush: function() {
          flushBuffers(this);
        }
      };
      var CDATA = "[CDATA[";
      var DOCTYPE = "DOCTYPE";
      var XML_NAMESPACE = "http://www.w3.org/XML/1998/namespace";
      var XMLNS_NAMESPACE = "http://www.w3.org/2000/xmlns/";
      var rootNS = { xml: XML_NAMESPACE, xmlns: XMLNS_NAMESPACE };
      var nameStart = /[:_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]/;
      var nameBody = /[:_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\u00B7\u0300-\u036F\u203F-\u2040.\d-]/;
      var entityStart = /[#:_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]/;
      var entityBody = /[#:_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\u00B7\u0300-\u036F\u203F-\u2040.\d-]/;
      function isWhitespace(c) {
        return c === " " || c === "\n" || c === "\r" || c === "	";
      }
      function isQuote(c) {
        return c === '"' || c === "'";
      }
      function isAttribEnd(c) {
        return c === ">" || isWhitespace(c);
      }
      function isMatch(regex, c) {
        return regex.test(c);
      }
      function notMatch(regex, c) {
        return !isMatch(regex, c);
      }
      var S = 0;
      sax.STATE = {
        BEGIN: S++,
        // leading byte order mark or whitespace
        BEGIN_WHITESPACE: S++,
        // leading whitespace
        TEXT: S++,
        // general stuff
        TEXT_ENTITY: S++,
        // &amp and such.
        OPEN_WAKA: S++,
        // <
        SGML_DECL: S++,
        // <!BLARG
        SGML_DECL_QUOTED: S++,
        // <!BLARG foo "bar
        DOCTYPE: S++,
        // <!DOCTYPE
        DOCTYPE_QUOTED: S++,
        // <!DOCTYPE "//blah
        DOCTYPE_DTD: S++,
        // <!DOCTYPE "//blah" [ ...
        DOCTYPE_DTD_QUOTED: S++,
        // <!DOCTYPE "//blah" [ "foo
        COMMENT_STARTING: S++,
        // <!-
        COMMENT: S++,
        // <!--
        COMMENT_ENDING: S++,
        // <!-- blah -
        COMMENT_ENDED: S++,
        // <!-- blah --
        CDATA: S++,
        // <![CDATA[ something
        CDATA_ENDING: S++,
        // ]
        CDATA_ENDING_2: S++,
        // ]]
        PROC_INST: S++,
        // <?hi
        PROC_INST_BODY: S++,
        // <?hi there
        PROC_INST_ENDING: S++,
        // <?hi "there" ?
        OPEN_TAG: S++,
        // <strong
        OPEN_TAG_SLASH: S++,
        // <strong /
        ATTRIB: S++,
        // <a
        ATTRIB_NAME: S++,
        // <a foo
        ATTRIB_NAME_SAW_WHITE: S++,
        // <a foo _
        ATTRIB_VALUE: S++,
        // <a foo=
        ATTRIB_VALUE_QUOTED: S++,
        // <a foo="bar
        ATTRIB_VALUE_CLOSED: S++,
        // <a foo="bar"
        ATTRIB_VALUE_UNQUOTED: S++,
        // <a foo=bar
        ATTRIB_VALUE_ENTITY_Q: S++,
        // <foo bar="&quot;"
        ATTRIB_VALUE_ENTITY_U: S++,
        // <foo bar=&quot
        CLOSE_TAG: S++,
        // </a
        CLOSE_TAG_SAW_WHITE: S++,
        // </a   >
        SCRIPT: S++,
        // <script> ...
        SCRIPT_ENDING: S++
        // <script> ... <
      };
      sax.XML_ENTITIES = {
        "amp": "&",
        "gt": ">",
        "lt": "<",
        "quot": '"',
        "apos": "'"
      };
      sax.ENTITIES = {
        "amp": "&",
        "gt": ">",
        "lt": "<",
        "quot": '"',
        "apos": "'",
        "AElig": 198,
        "Aacute": 193,
        "Acirc": 194,
        "Agrave": 192,
        "Aring": 197,
        "Atilde": 195,
        "Auml": 196,
        "Ccedil": 199,
        "ETH": 208,
        "Eacute": 201,
        "Ecirc": 202,
        "Egrave": 200,
        "Euml": 203,
        "Iacute": 205,
        "Icirc": 206,
        "Igrave": 204,
        "Iuml": 207,
        "Ntilde": 209,
        "Oacute": 211,
        "Ocirc": 212,
        "Ograve": 210,
        "Oslash": 216,
        "Otilde": 213,
        "Ouml": 214,
        "THORN": 222,
        "Uacute": 218,
        "Ucirc": 219,
        "Ugrave": 217,
        "Uuml": 220,
        "Yacute": 221,
        "aacute": 225,
        "acirc": 226,
        "aelig": 230,
        "agrave": 224,
        "aring": 229,
        "atilde": 227,
        "auml": 228,
        "ccedil": 231,
        "eacute": 233,
        "ecirc": 234,
        "egrave": 232,
        "eth": 240,
        "euml": 235,
        "iacute": 237,
        "icirc": 238,
        "igrave": 236,
        "iuml": 239,
        "ntilde": 241,
        "oacute": 243,
        "ocirc": 244,
        "ograve": 242,
        "oslash": 248,
        "otilde": 245,
        "ouml": 246,
        "szlig": 223,
        "thorn": 254,
        "uacute": 250,
        "ucirc": 251,
        "ugrave": 249,
        "uuml": 252,
        "yacute": 253,
        "yuml": 255,
        "copy": 169,
        "reg": 174,
        "nbsp": 160,
        "iexcl": 161,
        "cent": 162,
        "pound": 163,
        "curren": 164,
        "yen": 165,
        "brvbar": 166,
        "sect": 167,
        "uml": 168,
        "ordf": 170,
        "laquo": 171,
        "not": 172,
        "shy": 173,
        "macr": 175,
        "deg": 176,
        "plusmn": 177,
        "sup1": 185,
        "sup2": 178,
        "sup3": 179,
        "acute": 180,
        "micro": 181,
        "para": 182,
        "middot": 183,
        "cedil": 184,
        "ordm": 186,
        "raquo": 187,
        "frac14": 188,
        "frac12": 189,
        "frac34": 190,
        "iquest": 191,
        "times": 215,
        "divide": 247,
        "OElig": 338,
        "oelig": 339,
        "Scaron": 352,
        "scaron": 353,
        "Yuml": 376,
        "fnof": 402,
        "circ": 710,
        "tilde": 732,
        "Alpha": 913,
        "Beta": 914,
        "Gamma": 915,
        "Delta": 916,
        "Epsilon": 917,
        "Zeta": 918,
        "Eta": 919,
        "Theta": 920,
        "Iota": 921,
        "Kappa": 922,
        "Lambda": 923,
        "Mu": 924,
        "Nu": 925,
        "Xi": 926,
        "Omicron": 927,
        "Pi": 928,
        "Rho": 929,
        "Sigma": 931,
        "Tau": 932,
        "Upsilon": 933,
        "Phi": 934,
        "Chi": 935,
        "Psi": 936,
        "Omega": 937,
        "alpha": 945,
        "beta": 946,
        "gamma": 947,
        "delta": 948,
        "epsilon": 949,
        "zeta": 950,
        "eta": 951,
        "theta": 952,
        "iota": 953,
        "kappa": 954,
        "lambda": 955,
        "mu": 956,
        "nu": 957,
        "xi": 958,
        "omicron": 959,
        "pi": 960,
        "rho": 961,
        "sigmaf": 962,
        "sigma": 963,
        "tau": 964,
        "upsilon": 965,
        "phi": 966,
        "chi": 967,
        "psi": 968,
        "omega": 969,
        "thetasym": 977,
        "upsih": 978,
        "piv": 982,
        "ensp": 8194,
        "emsp": 8195,
        "thinsp": 8201,
        "zwnj": 8204,
        "zwj": 8205,
        "lrm": 8206,
        "rlm": 8207,
        "ndash": 8211,
        "mdash": 8212,
        "lsquo": 8216,
        "rsquo": 8217,
        "sbquo": 8218,
        "ldquo": 8220,
        "rdquo": 8221,
        "bdquo": 8222,
        "dagger": 8224,
        "Dagger": 8225,
        "bull": 8226,
        "hellip": 8230,
        "permil": 8240,
        "prime": 8242,
        "Prime": 8243,
        "lsaquo": 8249,
        "rsaquo": 8250,
        "oline": 8254,
        "frasl": 8260,
        "euro": 8364,
        "image": 8465,
        "weierp": 8472,
        "real": 8476,
        "trade": 8482,
        "alefsym": 8501,
        "larr": 8592,
        "uarr": 8593,
        "rarr": 8594,
        "darr": 8595,
        "harr": 8596,
        "crarr": 8629,
        "lArr": 8656,
        "uArr": 8657,
        "rArr": 8658,
        "dArr": 8659,
        "hArr": 8660,
        "forall": 8704,
        "part": 8706,
        "exist": 8707,
        "empty": 8709,
        "nabla": 8711,
        "isin": 8712,
        "notin": 8713,
        "ni": 8715,
        "prod": 8719,
        "sum": 8721,
        "minus": 8722,
        "lowast": 8727,
        "radic": 8730,
        "prop": 8733,
        "infin": 8734,
        "ang": 8736,
        "and": 8743,
        "or": 8744,
        "cap": 8745,
        "cup": 8746,
        "int": 8747,
        "there4": 8756,
        "sim": 8764,
        "cong": 8773,
        "asymp": 8776,
        "ne": 8800,
        "equiv": 8801,
        "le": 8804,
        "ge": 8805,
        "sub": 8834,
        "sup": 8835,
        "nsub": 8836,
        "sube": 8838,
        "supe": 8839,
        "oplus": 8853,
        "otimes": 8855,
        "perp": 8869,
        "sdot": 8901,
        "lceil": 8968,
        "rceil": 8969,
        "lfloor": 8970,
        "rfloor": 8971,
        "lang": 9001,
        "rang": 9002,
        "loz": 9674,
        "spades": 9824,
        "clubs": 9827,
        "hearts": 9829,
        "diams": 9830
      };
      Object.keys(sax.ENTITIES).forEach(function(key) {
        var e = sax.ENTITIES[key];
        var s2 = typeof e === "number" ? String.fromCharCode(e) : e;
        sax.ENTITIES[key] = s2;
      });
      for (var s in sax.STATE) {
        sax.STATE[sax.STATE[s]] = s;
      }
      S = sax.STATE;
      function emit(parser, event, data) {
        parser[event] && parser[event](data);
      }
      function emitNode(parser, nodeType, data) {
        if (parser.textNode)
          closeText(parser);
        emit(parser, nodeType, data);
      }
      function closeText(parser) {
        parser.textNode = textopts(parser.opt, parser.textNode);
        if (parser.textNode)
          emit(parser, "ontext", parser.textNode);
        parser.textNode = "";
      }
      function textopts(opt, text) {
        if (opt.trim)
          text = text.trim();
        if (opt.normalize)
          text = text.replace(/\s+/g, " ");
        return text;
      }
      function error(parser, reason) {
        closeText(parser);
        const message = reason + "\nLine: " + parser.line + "\nColumn: " + parser.column + "\nChar: " + parser.c;
        const error2 = new Error(message);
        error2.reason = reason;
        error2.line = parser.line;
        error2.column = parser.column;
        parser.error = error2;
        emit(parser, "onerror", error2);
        return parser;
      }
      function end(parser) {
        if (parser.sawRoot && !parser.closedRoot)
          strictFail(parser, "Unclosed root tag");
        if (parser.state !== S.BEGIN && parser.state !== S.BEGIN_WHITESPACE && parser.state !== S.TEXT) {
          error(parser, "Unexpected end");
        }
        closeText(parser);
        parser.c = "";
        parser.closed = true;
        emit(parser, "onend");
        SAXParser.call(parser, parser.strict, parser.opt);
        return parser;
      }
      function strictFail(parser, message) {
        if (typeof parser !== "object" || !(parser instanceof SAXParser)) {
          throw new Error("bad call to strictFail");
        }
        if (parser.strict) {
          error(parser, message);
        }
      }
      function newTag(parser) {
        if (!parser.strict)
          parser.tagName = parser.tagName[parser.looseCase]();
        var parent = parser.tags[parser.tags.length - 1] || parser;
        var tag = parser.tag = { name: parser.tagName, attributes: {} };
        if (parser.opt.xmlns) {
          tag.ns = parent.ns;
        }
        parser.attribList.length = 0;
        emitNode(parser, "onopentagstart", tag);
      }
      function qname(name, attribute) {
        var i = name.indexOf(":");
        var qualName = i < 0 ? ["", name] : name.split(":");
        var prefix = qualName[0];
        var local = qualName[1];
        if (attribute && name === "xmlns") {
          prefix = "xmlns";
          local = "";
        }
        return { prefix, local };
      }
      function attrib(parser) {
        if (!parser.strict) {
          parser.attribName = parser.attribName[parser.looseCase]();
        }
        if (parser.attribList.indexOf(parser.attribName) !== -1 || parser.tag.attributes.hasOwnProperty(parser.attribName)) {
          parser.attribName = parser.attribValue = "";
          return;
        }
        if (parser.opt.xmlns) {
          var qn = qname(parser.attribName, true);
          var prefix = qn.prefix;
          var local = qn.local;
          if (prefix === "xmlns") {
            if (local === "xml" && parser.attribValue !== XML_NAMESPACE) {
              strictFail(
                parser,
                "xml: prefix must be bound to " + XML_NAMESPACE + "\nActual: " + parser.attribValue
              );
            } else if (local === "xmlns" && parser.attribValue !== XMLNS_NAMESPACE) {
              strictFail(
                parser,
                "xmlns: prefix must be bound to " + XMLNS_NAMESPACE + "\nActual: " + parser.attribValue
              );
            } else {
              var tag = parser.tag;
              var parent = parser.tags[parser.tags.length - 1] || parser;
              if (tag.ns === parent.ns) {
                tag.ns = Object.create(parent.ns);
              }
              tag.ns[local] = parser.attribValue;
            }
          }
          parser.attribList.push([parser.attribName, parser.attribValue]);
        } else {
          parser.tag.attributes[parser.attribName] = parser.attribValue;
          emitNode(parser, "onattribute", {
            name: parser.attribName,
            value: parser.attribValue
          });
        }
        parser.attribName = parser.attribValue = "";
      }
      function openTag(parser, selfClosing) {
        if (parser.opt.xmlns) {
          var tag = parser.tag;
          var qn = qname(parser.tagName);
          tag.prefix = qn.prefix;
          tag.local = qn.local;
          tag.uri = tag.ns[qn.prefix] || "";
          if (tag.prefix && !tag.uri) {
            strictFail(parser, "Unbound namespace prefix: " + JSON.stringify(parser.tagName));
            tag.uri = qn.prefix;
          }
          var parent = parser.tags[parser.tags.length - 1] || parser;
          if (tag.ns && parent.ns !== tag.ns) {
            Object.keys(tag.ns).forEach(function(p) {
              emitNode(parser, "onopennamespace", {
                prefix: p,
                uri: tag.ns[p]
              });
            });
          }
          for (var i = 0, l = parser.attribList.length; i < l; i++) {
            var nv = parser.attribList[i];
            var name = nv[0];
            var value = nv[1];
            var qualName = qname(name, true);
            var prefix = qualName.prefix;
            var local = qualName.local;
            var uri = prefix === "" ? "" : tag.ns[prefix] || "";
            var a = {
              name,
              value,
              prefix,
              local,
              uri
            };
            if (prefix && prefix !== "xmlns" && !uri) {
              strictFail(parser, "Unbound namespace prefix: " + JSON.stringify(prefix));
              a.uri = prefix;
            }
            parser.tag.attributes[name] = a;
            emitNode(parser, "onattribute", a);
          }
          parser.attribList.length = 0;
        }
        parser.tag.isSelfClosing = !!selfClosing;
        parser.sawRoot = true;
        parser.tags.push(parser.tag);
        emitNode(parser, "onopentag", parser.tag);
        if (!selfClosing) {
          if (!parser.noscript && parser.tagName.toLowerCase() === "script") {
            parser.state = S.SCRIPT;
          } else {
            parser.state = S.TEXT;
          }
          parser.tag = null;
          parser.tagName = "";
        }
        parser.attribName = parser.attribValue = "";
        parser.attribList.length = 0;
      }
      function closeTag(parser) {
        if (!parser.tagName) {
          strictFail(parser, "Weird empty close tag.");
          parser.textNode += "</>";
          parser.state = S.TEXT;
          return;
        }
        if (parser.script) {
          if (parser.tagName !== "script") {
            parser.script += "</" + parser.tagName + ">";
            parser.tagName = "";
            parser.state = S.SCRIPT;
            return;
          }
          emitNode(parser, "onscript", parser.script);
          parser.script = "";
        }
        var t = parser.tags.length;
        var tagName = parser.tagName;
        if (!parser.strict) {
          tagName = tagName[parser.looseCase]();
        }
        var closeTo = tagName;
        while (t--) {
          var close = parser.tags[t];
          if (close.name !== closeTo) {
            strictFail(parser, "Unexpected close tag");
          } else {
            break;
          }
        }
        if (t < 0) {
          strictFail(parser, "Unmatched closing tag: " + parser.tagName);
          parser.textNode += "</" + parser.tagName + ">";
          parser.state = S.TEXT;
          return;
        }
        parser.tagName = tagName;
        var s2 = parser.tags.length;
        while (s2-- > t) {
          var tag = parser.tag = parser.tags.pop();
          parser.tagName = parser.tag.name;
          emitNode(parser, "onclosetag", parser.tagName);
          var x = {};
          for (var i in tag.ns) {
            x[i] = tag.ns[i];
          }
          var parent = parser.tags[parser.tags.length - 1] || parser;
          if (parser.opt.xmlns && tag.ns !== parent.ns) {
            Object.keys(tag.ns).forEach(function(p) {
              var n = tag.ns[p];
              emitNode(parser, "onclosenamespace", { prefix: p, uri: n });
            });
          }
        }
        if (t === 0)
          parser.closedRoot = true;
        parser.tagName = parser.attribValue = parser.attribName = "";
        parser.attribList.length = 0;
        parser.state = S.TEXT;
      }
      function parseEntity(parser) {
        var entity = parser.entity;
        var entityLC = entity.toLowerCase();
        var num;
        var numStr = "";
        if (parser.ENTITIES[entity]) {
          return parser.ENTITIES[entity];
        }
        if (parser.ENTITIES[entityLC]) {
          return parser.ENTITIES[entityLC];
        }
        entity = entityLC;
        if (entity.charAt(0) === "#") {
          if (entity.charAt(1) === "x") {
            entity = entity.slice(2);
            num = parseInt(entity, 16);
            numStr = num.toString(16);
          } else {
            entity = entity.slice(1);
            num = parseInt(entity, 10);
            numStr = num.toString(10);
          }
        }
        entity = entity.replace(/^0+/, "");
        if (isNaN(num) || numStr.toLowerCase() !== entity) {
          strictFail(parser, "Invalid character entity");
          return "&" + parser.entity + ";";
        }
        return String.fromCodePoint(num);
      }
      function beginWhiteSpace(parser, c) {
        if (c === "<") {
          parser.state = S.OPEN_WAKA;
          parser.startTagPosition = parser.position;
        } else if (!isWhitespace(c)) {
          strictFail(parser, "Non-whitespace before first tag.");
          parser.textNode = c;
          parser.state = S.TEXT;
        }
      }
      function charAt(chunk, i) {
        var result = "";
        if (i < chunk.length) {
          result = chunk.charAt(i);
        }
        return result;
      }
      function write(chunk) {
        var parser = this;
        if (this.error) {
          throw this.error;
        }
        if (parser.closed) {
          return error(
            parser,
            "Cannot write after close. Assign an onready handler."
          );
        }
        if (chunk === null) {
          return end(parser);
        }
        if (typeof chunk === "object") {
          chunk = chunk.toString();
        }
        var i = 0;
        var c = "";
        while (true) {
          c = charAt(chunk, i++);
          parser.c = c;
          if (!c) {
            break;
          }
          if (parser.trackPosition) {
            parser.position++;
            if (c === "\n") {
              parser.line++;
              parser.column = 0;
            } else {
              parser.column++;
            }
          }
          switch (parser.state) {
            case S.BEGIN:
              parser.state = S.BEGIN_WHITESPACE;
              if (c === "\uFEFF") {
                continue;
              }
              beginWhiteSpace(parser, c);
              continue;
            case S.BEGIN_WHITESPACE:
              beginWhiteSpace(parser, c);
              continue;
            case S.TEXT:
              if (parser.sawRoot && !parser.closedRoot) {
                var starti = i - 1;
                while (c && c !== "<" && c !== "&") {
                  c = charAt(chunk, i++);
                  if (c && parser.trackPosition) {
                    parser.position++;
                    if (c === "\n") {
                      parser.line++;
                      parser.column = 0;
                    } else {
                      parser.column++;
                    }
                  }
                }
                parser.textNode += chunk.substring(starti, i - 1);
              }
              if (c === "<" && !(parser.sawRoot && parser.closedRoot && !parser.strict)) {
                parser.state = S.OPEN_WAKA;
                parser.startTagPosition = parser.position;
              } else {
                if (!isWhitespace(c) && (!parser.sawRoot || parser.closedRoot)) {
                  strictFail(parser, "Text data outside of root node.");
                }
                if (c === "&") {
                  parser.state = S.TEXT_ENTITY;
                } else {
                  parser.textNode += c;
                }
              }
              continue;
            case S.SCRIPT:
              if (c === "<") {
                parser.state = S.SCRIPT_ENDING;
              } else {
                parser.script += c;
              }
              continue;
            case S.SCRIPT_ENDING:
              if (c === "/") {
                parser.state = S.CLOSE_TAG;
              } else {
                parser.script += "<" + c;
                parser.state = S.SCRIPT;
              }
              continue;
            case S.OPEN_WAKA:
              if (c === "!") {
                parser.state = S.SGML_DECL;
                parser.sgmlDecl = "";
              } else if (isWhitespace(c)) {
              } else if (isMatch(nameStart, c)) {
                parser.state = S.OPEN_TAG;
                parser.tagName = c;
              } else if (c === "/") {
                parser.state = S.CLOSE_TAG;
                parser.tagName = "";
              } else if (c === "?") {
                parser.state = S.PROC_INST;
                parser.procInstName = parser.procInstBody = "";
              } else {
                strictFail(parser, "Unencoded <");
                if (parser.startTagPosition + 1 < parser.position) {
                  var pad = parser.position - parser.startTagPosition;
                  c = new Array(pad).join(" ") + c;
                }
                parser.textNode += "<" + c;
                parser.state = S.TEXT;
              }
              continue;
            case S.SGML_DECL:
              if ((parser.sgmlDecl + c).toUpperCase() === CDATA) {
                emitNode(parser, "onopencdata");
                parser.state = S.CDATA;
                parser.sgmlDecl = "";
                parser.cdata = "";
              } else if (parser.sgmlDecl + c === "--") {
                parser.state = S.COMMENT;
                parser.comment = "";
                parser.sgmlDecl = "";
              } else if ((parser.sgmlDecl + c).toUpperCase() === DOCTYPE) {
                parser.state = S.DOCTYPE;
                if (parser.doctype || parser.sawRoot) {
                  strictFail(
                    parser,
                    "Inappropriately located doctype declaration"
                  );
                }
                parser.doctype = "";
                parser.sgmlDecl = "";
              } else if (c === ">") {
                emitNode(parser, "onsgmldeclaration", parser.sgmlDecl);
                parser.sgmlDecl = "";
                parser.state = S.TEXT;
              } else if (isQuote(c)) {
                parser.state = S.SGML_DECL_QUOTED;
                parser.sgmlDecl += c;
              } else {
                parser.sgmlDecl += c;
              }
              continue;
            case S.SGML_DECL_QUOTED:
              if (c === parser.q) {
                parser.state = S.SGML_DECL;
                parser.q = "";
              }
              parser.sgmlDecl += c;
              continue;
            case S.DOCTYPE:
              if (c === ">") {
                parser.state = S.TEXT;
                emitNode(parser, "ondoctype", parser.doctype);
                parser.doctype = true;
              } else {
                parser.doctype += c;
                if (c === "[") {
                  parser.state = S.DOCTYPE_DTD;
                } else if (isQuote(c)) {
                  parser.state = S.DOCTYPE_QUOTED;
                  parser.q = c;
                }
              }
              continue;
            case S.DOCTYPE_QUOTED:
              parser.doctype += c;
              if (c === parser.q) {
                parser.q = "";
                parser.state = S.DOCTYPE;
              }
              continue;
            case S.DOCTYPE_DTD:
              parser.doctype += c;
              if (c === "]") {
                parser.state = S.DOCTYPE;
              } else if (isQuote(c)) {
                parser.state = S.DOCTYPE_DTD_QUOTED;
                parser.q = c;
              }
              continue;
            case S.DOCTYPE_DTD_QUOTED:
              parser.doctype += c;
              if (c === parser.q) {
                parser.state = S.DOCTYPE_DTD;
                parser.q = "";
              }
              continue;
            case S.COMMENT:
              if (c === "-") {
                parser.state = S.COMMENT_ENDING;
              } else {
                parser.comment += c;
              }
              continue;
            case S.COMMENT_ENDING:
              if (c === "-") {
                parser.state = S.COMMENT_ENDED;
                parser.comment = textopts(parser.opt, parser.comment);
                if (parser.comment) {
                  emitNode(parser, "oncomment", parser.comment);
                }
                parser.comment = "";
              } else {
                parser.comment += "-" + c;
                parser.state = S.COMMENT;
              }
              continue;
            case S.COMMENT_ENDED:
              if (c !== ">") {
                strictFail(parser, "Malformed comment");
                parser.comment += "--" + c;
                parser.state = S.COMMENT;
              } else {
                parser.state = S.TEXT;
              }
              continue;
            case S.CDATA:
              if (c === "]") {
                parser.state = S.CDATA_ENDING;
              } else {
                parser.cdata += c;
              }
              continue;
            case S.CDATA_ENDING:
              if (c === "]") {
                parser.state = S.CDATA_ENDING_2;
              } else {
                parser.cdata += "]" + c;
                parser.state = S.CDATA;
              }
              continue;
            case S.CDATA_ENDING_2:
              if (c === ">") {
                if (parser.cdata) {
                  emitNode(parser, "oncdata", parser.cdata);
                }
                emitNode(parser, "onclosecdata");
                parser.cdata = "";
                parser.state = S.TEXT;
              } else if (c === "]") {
                parser.cdata += "]";
              } else {
                parser.cdata += "]]" + c;
                parser.state = S.CDATA;
              }
              continue;
            case S.PROC_INST:
              if (c === "?") {
                parser.state = S.PROC_INST_ENDING;
              } else if (isWhitespace(c)) {
                parser.state = S.PROC_INST_BODY;
              } else {
                parser.procInstName += c;
              }
              continue;
            case S.PROC_INST_BODY:
              if (!parser.procInstBody && isWhitespace(c)) {
                continue;
              } else if (c === "?") {
                parser.state = S.PROC_INST_ENDING;
              } else {
                parser.procInstBody += c;
              }
              continue;
            case S.PROC_INST_ENDING:
              if (c === ">") {
                emitNode(parser, "onprocessinginstruction", {
                  name: parser.procInstName,
                  body: parser.procInstBody
                });
                parser.procInstName = parser.procInstBody = "";
                parser.state = S.TEXT;
              } else {
                parser.procInstBody += "?" + c;
                parser.state = S.PROC_INST_BODY;
              }
              continue;
            case S.OPEN_TAG:
              if (isMatch(nameBody, c)) {
                parser.tagName += c;
              } else {
                newTag(parser);
                if (c === ">") {
                  openTag(parser);
                } else if (c === "/") {
                  parser.state = S.OPEN_TAG_SLASH;
                } else {
                  if (!isWhitespace(c)) {
                    strictFail(parser, "Invalid character in tag name");
                  }
                  parser.state = S.ATTRIB;
                }
              }
              continue;
            case S.OPEN_TAG_SLASH:
              if (c === ">") {
                openTag(parser, true);
                closeTag(parser);
              } else {
                strictFail(parser, "Forward-slash in opening tag not followed by >");
                parser.state = S.ATTRIB;
              }
              continue;
            case S.ATTRIB:
              if (isWhitespace(c)) {
                continue;
              } else if (c === ">") {
                openTag(parser);
              } else if (c === "/") {
                parser.state = S.OPEN_TAG_SLASH;
              } else if (isMatch(nameStart, c)) {
                parser.attribName = c;
                parser.attribValue = "";
                parser.state = S.ATTRIB_NAME;
              } else {
                strictFail(parser, "Invalid attribute name");
              }
              continue;
            case S.ATTRIB_NAME:
              if (c === "=") {
                parser.state = S.ATTRIB_VALUE;
              } else if (c === ">") {
                strictFail(parser, "Attribute without value");
                parser.attribValue = parser.attribName;
                attrib(parser);
                openTag(parser);
              } else if (isWhitespace(c)) {
                parser.state = S.ATTRIB_NAME_SAW_WHITE;
              } else if (isMatch(nameBody, c)) {
                parser.attribName += c;
              } else {
                strictFail(parser, "Invalid attribute name");
              }
              continue;
            case S.ATTRIB_NAME_SAW_WHITE:
              if (c === "=") {
                parser.state = S.ATTRIB_VALUE;
              } else if (isWhitespace(c)) {
                continue;
              } else {
                strictFail(parser, "Attribute without value");
                parser.tag.attributes[parser.attribName] = "";
                parser.attribValue = "";
                emitNode(parser, "onattribute", {
                  name: parser.attribName,
                  value: ""
                });
                parser.attribName = "";
                if (c === ">") {
                  openTag(parser);
                } else if (isMatch(nameStart, c)) {
                  parser.attribName = c;
                  parser.state = S.ATTRIB_NAME;
                } else {
                  strictFail(parser, "Invalid attribute name");
                  parser.state = S.ATTRIB;
                }
              }
              continue;
            case S.ATTRIB_VALUE:
              if (isWhitespace(c)) {
                continue;
              } else if (isQuote(c)) {
                parser.q = c;
                parser.state = S.ATTRIB_VALUE_QUOTED;
              } else {
                strictFail(parser, "Unquoted attribute value");
                parser.state = S.ATTRIB_VALUE_UNQUOTED;
                parser.attribValue = c;
              }
              continue;
            case S.ATTRIB_VALUE_QUOTED:
              if (c !== parser.q) {
                if (c === "&") {
                  parser.state = S.ATTRIB_VALUE_ENTITY_Q;
                } else {
                  parser.attribValue += c;
                }
                continue;
              }
              attrib(parser);
              parser.q = "";
              parser.state = S.ATTRIB_VALUE_CLOSED;
              continue;
            case S.ATTRIB_VALUE_CLOSED:
              if (isWhitespace(c)) {
                parser.state = S.ATTRIB;
              } else if (c === ">") {
                openTag(parser);
              } else if (c === "/") {
                parser.state = S.OPEN_TAG_SLASH;
              } else if (isMatch(nameStart, c)) {
                strictFail(parser, "No whitespace between attributes");
                parser.attribName = c;
                parser.attribValue = "";
                parser.state = S.ATTRIB_NAME;
              } else {
                strictFail(parser, "Invalid attribute name");
              }
              continue;
            case S.ATTRIB_VALUE_UNQUOTED:
              if (!isAttribEnd(c)) {
                if (c === "&") {
                  parser.state = S.ATTRIB_VALUE_ENTITY_U;
                } else {
                  parser.attribValue += c;
                }
                continue;
              }
              attrib(parser);
              if (c === ">") {
                openTag(parser);
              } else {
                parser.state = S.ATTRIB;
              }
              continue;
            case S.CLOSE_TAG:
              if (!parser.tagName) {
                if (isWhitespace(c)) {
                  continue;
                } else if (notMatch(nameStart, c)) {
                  if (parser.script) {
                    parser.script += "</" + c;
                    parser.state = S.SCRIPT;
                  } else {
                    strictFail(parser, "Invalid tagname in closing tag.");
                  }
                } else {
                  parser.tagName = c;
                }
              } else if (c === ">") {
                closeTag(parser);
              } else if (isMatch(nameBody, c)) {
                parser.tagName += c;
              } else if (parser.script) {
                parser.script += "</" + parser.tagName;
                parser.tagName = "";
                parser.state = S.SCRIPT;
              } else {
                if (!isWhitespace(c)) {
                  strictFail(parser, "Invalid tagname in closing tag");
                }
                parser.state = S.CLOSE_TAG_SAW_WHITE;
              }
              continue;
            case S.CLOSE_TAG_SAW_WHITE:
              if (isWhitespace(c)) {
                continue;
              }
              if (c === ">") {
                closeTag(parser);
              } else {
                strictFail(parser, "Invalid characters in closing tag");
              }
              continue;
            case S.TEXT_ENTITY:
            case S.ATTRIB_VALUE_ENTITY_Q:
            case S.ATTRIB_VALUE_ENTITY_U:
              var returnState;
              var buffer;
              switch (parser.state) {
                case S.TEXT_ENTITY:
                  returnState = S.TEXT;
                  buffer = "textNode";
                  break;
                case S.ATTRIB_VALUE_ENTITY_Q:
                  returnState = S.ATTRIB_VALUE_QUOTED;
                  buffer = "attribValue";
                  break;
                case S.ATTRIB_VALUE_ENTITY_U:
                  returnState = S.ATTRIB_VALUE_UNQUOTED;
                  buffer = "attribValue";
                  break;
              }
              if (c === ";") {
                var parsedEntity = parseEntity(parser);
                if (parser.state === S.TEXT_ENTITY && !sax.ENTITIES[parser.entity] && parsedEntity !== "&" + parser.entity + ";") {
                  chunk = chunk.slice(0, i) + parsedEntity + chunk.slice(i);
                } else {
                  parser[buffer] += parsedEntity;
                }
                parser.entity = "";
                parser.state = returnState;
              } else if (isMatch(parser.entity.length ? entityBody : entityStart, c)) {
                parser.entity += c;
              } else {
                strictFail(parser, "Invalid character in entity name");
                parser[buffer] += "&" + parser.entity + c;
                parser.entity = "";
                parser.state = returnState;
              }
              continue;
            default:
              throw new Error(parser, "Unknown state: " + parser.state);
          }
        }
        if (parser.position >= parser.bufferCheckPosition) {
          checkBufferLength(parser);
        }
        return parser;
      }
    })(typeof exports === "undefined" ? exports.sax = {} : exports);
  }
});

// node_modules/svgo/plugins/_collections.js
var require_collections = __commonJS({
  "node_modules/svgo/plugins/_collections.js"(exports) {
    "use strict";
    exports.elemsGroups = {
      animation: [
        "animate",
        "animateColor",
        "animateMotion",
        "animateTransform",
        "set"
      ],
      descriptive: ["desc", "metadata", "title"],
      shape: ["circle", "ellipse", "line", "path", "polygon", "polyline", "rect"],
      structural: ["defs", "g", "svg", "symbol", "use"],
      paintServer: [
        "solidColor",
        "linearGradient",
        "radialGradient",
        "meshGradient",
        "pattern",
        "hatch"
      ],
      nonRendering: [
        "linearGradient",
        "radialGradient",
        "pattern",
        "clipPath",
        "mask",
        "marker",
        "symbol",
        "filter",
        "solidColor"
      ],
      container: [
        "a",
        "defs",
        "g",
        "marker",
        "mask",
        "missing-glyph",
        "pattern",
        "svg",
        "switch",
        "symbol",
        "foreignObject"
      ],
      textContent: [
        "altGlyph",
        "altGlyphDef",
        "altGlyphItem",
        "glyph",
        "glyphRef",
        "textPath",
        "text",
        "tref",
        "tspan"
      ],
      textContentChild: ["altGlyph", "textPath", "tref", "tspan"],
      lightSource: [
        "feDiffuseLighting",
        "feSpecularLighting",
        "feDistantLight",
        "fePointLight",
        "feSpotLight"
      ],
      filterPrimitive: [
        "feBlend",
        "feColorMatrix",
        "feComponentTransfer",
        "feComposite",
        "feConvolveMatrix",
        "feDiffuseLighting",
        "feDisplacementMap",
        "feDropShadow",
        "feFlood",
        "feFuncA",
        "feFuncB",
        "feFuncG",
        "feFuncR",
        "feGaussianBlur",
        "feImage",
        "feMerge",
        "feMergeNode",
        "feMorphology",
        "feOffset",
        "feSpecularLighting",
        "feTile",
        "feTurbulence"
      ]
    };
    exports.textElems = exports.elemsGroups.textContent.concat("title");
    exports.pathElems = ["path", "glyph", "missing-glyph"];
    exports.attrsGroups = {
      animationAddition: ["additive", "accumulate"],
      animationAttributeTarget: ["attributeType", "attributeName"],
      animationEvent: ["onbegin", "onend", "onrepeat", "onload"],
      animationTiming: [
        "begin",
        "dur",
        "end",
        "min",
        "max",
        "restart",
        "repeatCount",
        "repeatDur",
        "fill"
      ],
      animationValue: [
        "calcMode",
        "values",
        "keyTimes",
        "keySplines",
        "from",
        "to",
        "by"
      ],
      conditionalProcessing: [
        "requiredFeatures",
        "requiredExtensions",
        "systemLanguage"
      ],
      core: ["id", "tabindex", "xml:base", "xml:lang", "xml:space"],
      graphicalEvent: [
        "onfocusin",
        "onfocusout",
        "onactivate",
        "onclick",
        "onmousedown",
        "onmouseup",
        "onmouseover",
        "onmousemove",
        "onmouseout",
        "onload"
      ],
      presentation: [
        "alignment-baseline",
        "baseline-shift",
        "clip",
        "clip-path",
        "clip-rule",
        "color",
        "color-interpolation",
        "color-interpolation-filters",
        "color-profile",
        "color-rendering",
        "cursor",
        "direction",
        "display",
        "dominant-baseline",
        "enable-background",
        "fill",
        "fill-opacity",
        "fill-rule",
        "filter",
        "flood-color",
        "flood-opacity",
        "font-family",
        "font-size",
        "font-size-adjust",
        "font-stretch",
        "font-style",
        "font-variant",
        "font-weight",
        "glyph-orientation-horizontal",
        "glyph-orientation-vertical",
        "image-rendering",
        "letter-spacing",
        "lighting-color",
        "marker-end",
        "marker-mid",
        "marker-start",
        "mask",
        "opacity",
        "overflow",
        "paint-order",
        "pointer-events",
        "shape-rendering",
        "stop-color",
        "stop-opacity",
        "stroke",
        "stroke-dasharray",
        "stroke-dashoffset",
        "stroke-linecap",
        "stroke-linejoin",
        "stroke-miterlimit",
        "stroke-opacity",
        "stroke-width",
        "text-anchor",
        "text-decoration",
        "text-overflow",
        "text-rendering",
        "transform",
        "transform-origin",
        "unicode-bidi",
        "vector-effect",
        "visibility",
        "word-spacing",
        "writing-mode"
      ],
      xlink: [
        "xlink:href",
        "xlink:show",
        "xlink:actuate",
        "xlink:type",
        "xlink:role",
        "xlink:arcrole",
        "xlink:title"
      ],
      documentEvent: [
        "onabort",
        "onerror",
        "onresize",
        "onscroll",
        "onunload",
        "onzoom"
      ],
      documentElementEvent: ["oncopy", "oncut", "onpaste"],
      globalEvent: [
        "oncancel",
        "oncanplay",
        "oncanplaythrough",
        "onchange",
        "onclick",
        "onclose",
        "oncuechange",
        "ondblclick",
        "ondrag",
        "ondragend",
        "ondragenter",
        "ondragleave",
        "ondragover",
        "ondragstart",
        "ondrop",
        "ondurationchange",
        "onemptied",
        "onended",
        "onerror",
        "onfocus",
        "oninput",
        "oninvalid",
        "onkeydown",
        "onkeypress",
        "onkeyup",
        "onload",
        "onloadeddata",
        "onloadedmetadata",
        "onloadstart",
        "onmousedown",
        "onmouseenter",
        "onmouseleave",
        "onmousemove",
        "onmouseout",
        "onmouseover",
        "onmouseup",
        "onmousewheel",
        "onpause",
        "onplay",
        "onplaying",
        "onprogress",
        "onratechange",
        "onreset",
        "onresize",
        "onscroll",
        "onseeked",
        "onseeking",
        "onselect",
        "onshow",
        "onstalled",
        "onsubmit",
        "onsuspend",
        "ontimeupdate",
        "ontoggle",
        "onvolumechange",
        "onwaiting"
      ],
      filterPrimitive: ["x", "y", "width", "height", "result"],
      transferFunction: [
        "type",
        "tableValues",
        "slope",
        "intercept",
        "amplitude",
        "exponent",
        "offset"
      ]
    };
    exports.attrsGroupsDefaults = {
      core: { "xml:space": "default" },
      presentation: {
        clip: "auto",
        "clip-path": "none",
        "clip-rule": "nonzero",
        mask: "none",
        opacity: "1",
        "stop-color": "#000",
        "stop-opacity": "1",
        "fill-opacity": "1",
        "fill-rule": "nonzero",
        fill: "#000",
        stroke: "none",
        "stroke-width": "1",
        "stroke-linecap": "butt",
        "stroke-linejoin": "miter",
        "stroke-miterlimit": "4",
        "stroke-dasharray": "none",
        "stroke-dashoffset": "0",
        "stroke-opacity": "1",
        "paint-order": "normal",
        "vector-effect": "none",
        display: "inline",
        visibility: "visible",
        "marker-start": "none",
        "marker-mid": "none",
        "marker-end": "none",
        "color-interpolation": "sRGB",
        "color-interpolation-filters": "linearRGB",
        "color-rendering": "auto",
        "shape-rendering": "auto",
        "text-rendering": "auto",
        "image-rendering": "auto",
        "font-style": "normal",
        "font-variant": "normal",
        "font-weight": "normal",
        "font-stretch": "normal",
        "font-size": "medium",
        "font-size-adjust": "none",
        kerning: "auto",
        "letter-spacing": "normal",
        "word-spacing": "normal",
        "text-decoration": "none",
        "text-anchor": "start",
        "text-overflow": "clip",
        "writing-mode": "lr-tb",
        "glyph-orientation-vertical": "auto",
        "glyph-orientation-horizontal": "0deg",
        direction: "ltr",
        "unicode-bidi": "normal",
        "dominant-baseline": "auto",
        "alignment-baseline": "baseline",
        "baseline-shift": "baseline"
      },
      transferFunction: {
        slope: "1",
        intercept: "0",
        amplitude: "1",
        exponent: "1",
        offset: "0"
      }
    };
    exports.elems = {
      a: {
        attrsGroups: [
          "conditionalProcessing",
          "core",
          "graphicalEvent",
          "presentation",
          "xlink"
        ],
        attrs: [
          "class",
          "style",
          "externalResourcesRequired",
          "transform",
          "target"
        ],
        defaults: {
          target: "_self"
        },
        contentGroups: [
          "animation",
          "descriptive",
          "shape",
          "structural",
          "paintServer"
        ],
        content: [
          "a",
          "altGlyphDef",
          "clipPath",
          "color-profile",
          "cursor",
          "filter",
          "font",
          "font-face",
          "foreignObject",
          "image",
          "marker",
          "mask",
          "pattern",
          "script",
          "style",
          "switch",
          "text",
          "view",
          // not spec compliant
          "tspan"
        ]
      },
      altGlyph: {
        attrsGroups: [
          "conditionalProcessing",
          "core",
          "graphicalEvent",
          "presentation",
          "xlink"
        ],
        attrs: [
          "class",
          "style",
          "externalResourcesRequired",
          "x",
          "y",
          "dx",
          "dy",
          "glyphRef",
          "format",
          "rotate"
        ]
      },
      altGlyphDef: {
        attrsGroups: ["core"],
        content: ["glyphRef"]
      },
      altGlyphItem: {
        attrsGroups: ["core"],
        content: ["glyphRef", "altGlyphItem"]
      },
      animate: {
        attrsGroups: [
          "conditionalProcessing",
          "core",
          "animationAddition",
          "animationAttributeTarget",
          "animationEvent",
          "animationTiming",
          "animationValue",
          "presentation",
          "xlink"
        ],
        attrs: ["externalResourcesRequired"],
        contentGroups: ["descriptive"]
      },
      animateColor: {
        attrsGroups: [
          "conditionalProcessing",
          "core",
          "animationEvent",
          "xlink",
          "animationAttributeTarget",
          "animationTiming",
          "animationValue",
          "animationAddition",
          "presentation"
        ],
        attrs: ["externalResourcesRequired"],
        contentGroups: ["descriptive"]
      },
      animateMotion: {
        attrsGroups: [
          "conditionalProcessing",
          "core",
          "animationEvent",
          "xlink",
          "animationTiming",
          "animationValue",
          "animationAddition"
        ],
        attrs: [
          "externalResourcesRequired",
          "path",
          "keyPoints",
          "rotate",
          "origin"
        ],
        defaults: {
          rotate: "0"
        },
        contentGroups: ["descriptive"],
        content: ["mpath"]
      },
      animateTransform: {
        attrsGroups: [
          "conditionalProcessing",
          "core",
          "animationEvent",
          "xlink",
          "animationAttributeTarget",
          "animationTiming",
          "animationValue",
          "animationAddition"
        ],
        attrs: ["externalResourcesRequired", "type"],
        contentGroups: ["descriptive"]
      },
      circle: {
        attrsGroups: [
          "conditionalProcessing",
          "core",
          "graphicalEvent",
          "presentation"
        ],
        attrs: [
          "class",
          "style",
          "externalResourcesRequired",
          "transform",
          "cx",
          "cy",
          "r"
        ],
        defaults: {
          cx: "0",
          cy: "0"
        },
        contentGroups: ["animation", "descriptive"]
      },
      clipPath: {
        attrsGroups: ["conditionalProcessing", "core", "presentation"],
        attrs: [
          "class",
          "style",
          "externalResourcesRequired",
          "transform",
          "clipPathUnits"
        ],
        defaults: {
          clipPathUnits: "userSpaceOnUse"
        },
        contentGroups: ["animation", "descriptive", "shape"],
        content: ["text", "use"]
      },
      "color-profile": {
        attrsGroups: ["core", "xlink"],
        attrs: ["local", "name", "rendering-intent"],
        defaults: {
          name: "sRGB",
          "rendering-intent": "auto"
        },
        contentGroups: ["descriptive"]
      },
      cursor: {
        attrsGroups: ["core", "conditionalProcessing", "xlink"],
        attrs: ["externalResourcesRequired", "x", "y"],
        defaults: {
          x: "0",
          y: "0"
        },
        contentGroups: ["descriptive"]
      },
      defs: {
        attrsGroups: [
          "conditionalProcessing",
          "core",
          "graphicalEvent",
          "presentation"
        ],
        attrs: ["class", "style", "externalResourcesRequired", "transform"],
        contentGroups: [
          "animation",
          "descriptive",
          "shape",
          "structural",
          "paintServer"
        ],
        content: [
          "a",
          "altGlyphDef",
          "clipPath",
          "color-profile",
          "cursor",
          "filter",
          "font",
          "font-face",
          "foreignObject",
          "image",
          "marker",
          "mask",
          "pattern",
          "script",
          "style",
          "switch",
          "text",
          "view"
        ]
      },
      desc: {
        attrsGroups: ["core"],
        attrs: ["class", "style"]
      },
      ellipse: {
        attrsGroups: [
          "conditionalProcessing",
          "core",
          "graphicalEvent",
          "presentation"
        ],
        attrs: [
          "class",
          "style",
          "externalResourcesRequired",
          "transform",
          "cx",
          "cy",
          "rx",
          "ry"
        ],
        defaults: {
          cx: "0",
          cy: "0"
        },
        contentGroups: ["animation", "descriptive"]
      },
      feBlend: {
        attrsGroups: ["core", "presentation", "filterPrimitive"],
        attrs: [
          "class",
          "style",
          // TODO: in - 'If no value is provided and this is the first filter primitive,
          // then this filter primitive will use SourceGraphic as its input'
          "in",
          "in2",
          "mode"
        ],
        defaults: {
          mode: "normal"
        },
        content: ["animate", "set"]
      },
      feColorMatrix: {
        attrsGroups: ["core", "presentation", "filterPrimitive"],
        attrs: ["class", "style", "in", "type", "values"],
        defaults: {
          type: "matrix"
        },
        content: ["animate", "set"]
      },
      feComponentTransfer: {
        attrsGroups: ["core", "presentation", "filterPrimitive"],
        attrs: ["class", "style", "in"],
        content: ["feFuncA", "feFuncB", "feFuncG", "feFuncR"]
      },
      feComposite: {
        attrsGroups: ["core", "presentation", "filterPrimitive"],
        attrs: ["class", "style", "in", "in2", "operator", "k1", "k2", "k3", "k4"],
        defaults: {
          operator: "over",
          k1: "0",
          k2: "0",
          k3: "0",
          k4: "0"
        },
        content: ["animate", "set"]
      },
      feConvolveMatrix: {
        attrsGroups: ["core", "presentation", "filterPrimitive"],
        attrs: [
          "class",
          "style",
          "in",
          "order",
          "kernelMatrix",
          // TODO: divisor - 'The default value is the sum of all values in kernelMatrix,
          // with the exception that if the sum is zero, then the divisor is set to 1'
          "divisor",
          "bias",
          // TODO: targetX - 'By default, the convolution matrix is centered in X over each
          // pixel of the input image (i.e., targetX = floor ( orderX / 2 ))'
          "targetX",
          "targetY",
          "edgeMode",
          // TODO: kernelUnitLength - 'The first number is the <dx> value. The second number
          // is the <dy> value. If the <dy> value is not specified, it defaults to the same value as <dx>'
          "kernelUnitLength",
          "preserveAlpha"
        ],
        defaults: {
          order: "3",
          bias: "0",
          edgeMode: "duplicate",
          preserveAlpha: "false"
        },
        content: ["animate", "set"]
      },
      feDiffuseLighting: {
        attrsGroups: ["core", "presentation", "filterPrimitive"],
        attrs: [
          "class",
          "style",
          "in",
          "surfaceScale",
          "diffuseConstant",
          "kernelUnitLength"
        ],
        defaults: {
          surfaceScale: "1",
          diffuseConstant: "1"
        },
        contentGroups: ["descriptive"],
        content: [
          // TODO: 'exactly one light source element, in any order'
          "feDistantLight",
          "fePointLight",
          "feSpotLight"
        ]
      },
      feDisplacementMap: {
        attrsGroups: ["core", "presentation", "filterPrimitive"],
        attrs: [
          "class",
          "style",
          "in",
          "in2",
          "scale",
          "xChannelSelector",
          "yChannelSelector"
        ],
        defaults: {
          scale: "0",
          xChannelSelector: "A",
          yChannelSelector: "A"
        },
        content: ["animate", "set"]
      },
      feDistantLight: {
        attrsGroups: ["core"],
        attrs: ["azimuth", "elevation"],
        defaults: {
          azimuth: "0",
          elevation: "0"
        },
        content: ["animate", "set"]
      },
      feFlood: {
        attrsGroups: ["core", "presentation", "filterPrimitive"],
        attrs: ["class", "style"],
        content: ["animate", "animateColor", "set"]
      },
      feFuncA: {
        attrsGroups: ["core", "transferFunction"],
        content: ["set", "animate"]
      },
      feFuncB: {
        attrsGroups: ["core", "transferFunction"],
        content: ["set", "animate"]
      },
      feFuncG: {
        attrsGroups: ["core", "transferFunction"],
        content: ["set", "animate"]
      },
      feFuncR: {
        attrsGroups: ["core", "transferFunction"],
        content: ["set", "animate"]
      },
      feGaussianBlur: {
        attrsGroups: ["core", "presentation", "filterPrimitive"],
        attrs: ["class", "style", "in", "stdDeviation"],
        defaults: {
          stdDeviation: "0"
        },
        content: ["set", "animate"]
      },
      feImage: {
        attrsGroups: ["core", "presentation", "filterPrimitive", "xlink"],
        attrs: [
          "class",
          "style",
          "externalResourcesRequired",
          "preserveAspectRatio",
          "href",
          "xlink:href"
        ],
        defaults: {
          preserveAspectRatio: "xMidYMid meet"
        },
        content: ["animate", "animateTransform", "set"]
      },
      feMerge: {
        attrsGroups: ["core", "presentation", "filterPrimitive"],
        attrs: ["class", "style"],
        content: ["feMergeNode"]
      },
      feMergeNode: {
        attrsGroups: ["core"],
        attrs: ["in"],
        content: ["animate", "set"]
      },
      feMorphology: {
        attrsGroups: ["core", "presentation", "filterPrimitive"],
        attrs: ["class", "style", "in", "operator", "radius"],
        defaults: {
          operator: "erode",
          radius: "0"
        },
        content: ["animate", "set"]
      },
      feOffset: {
        attrsGroups: ["core", "presentation", "filterPrimitive"],
        attrs: ["class", "style", "in", "dx", "dy"],
        defaults: {
          dx: "0",
          dy: "0"
        },
        content: ["animate", "set"]
      },
      fePointLight: {
        attrsGroups: ["core"],
        attrs: ["x", "y", "z"],
        defaults: {
          x: "0",
          y: "0",
          z: "0"
        },
        content: ["animate", "set"]
      },
      feSpecularLighting: {
        attrsGroups: ["core", "presentation", "filterPrimitive"],
        attrs: [
          "class",
          "style",
          "in",
          "surfaceScale",
          "specularConstant",
          "specularExponent",
          "kernelUnitLength"
        ],
        defaults: {
          surfaceScale: "1",
          specularConstant: "1",
          specularExponent: "1"
        },
        contentGroups: [
          "descriptive",
          // TODO: exactly one 'light source element'
          "lightSource"
        ]
      },
      feSpotLight: {
        attrsGroups: ["core"],
        attrs: [
          "x",
          "y",
          "z",
          "pointsAtX",
          "pointsAtY",
          "pointsAtZ",
          "specularExponent",
          "limitingConeAngle"
        ],
        defaults: {
          x: "0",
          y: "0",
          z: "0",
          pointsAtX: "0",
          pointsAtY: "0",
          pointsAtZ: "0",
          specularExponent: "1"
        },
        content: ["animate", "set"]
      },
      feTile: {
        attrsGroups: ["core", "presentation", "filterPrimitive"],
        attrs: ["class", "style", "in"],
        content: ["animate", "set"]
      },
      feTurbulence: {
        attrsGroups: ["core", "presentation", "filterPrimitive"],
        attrs: [
          "class",
          "style",
          "baseFrequency",
          "numOctaves",
          "seed",
          "stitchTiles",
          "type"
        ],
        defaults: {
          baseFrequency: "0",
          numOctaves: "1",
          seed: "0",
          stitchTiles: "noStitch",
          type: "turbulence"
        },
        content: ["animate", "set"]
      },
      filter: {
        attrsGroups: ["core", "presentation", "xlink"],
        attrs: [
          "class",
          "style",
          "externalResourcesRequired",
          "x",
          "y",
          "width",
          "height",
          "filterRes",
          "filterUnits",
          "primitiveUnits",
          "href",
          "xlink:href"
        ],
        defaults: {
          primitiveUnits: "userSpaceOnUse",
          x: "-10%",
          y: "-10%",
          width: "120%",
          height: "120%"
        },
        contentGroups: ["descriptive", "filterPrimitive"],
        content: ["animate", "set"]
      },
      font: {
        attrsGroups: ["core", "presentation"],
        attrs: [
          "class",
          "style",
          "externalResourcesRequired",
          "horiz-origin-x",
          "horiz-origin-y",
          "horiz-adv-x",
          "vert-origin-x",
          "vert-origin-y",
          "vert-adv-y"
        ],
        defaults: {
          "horiz-origin-x": "0",
          "horiz-origin-y": "0"
        },
        contentGroups: ["descriptive"],
        content: ["font-face", "glyph", "hkern", "missing-glyph", "vkern"]
      },
      "font-face": {
        attrsGroups: ["core"],
        attrs: [
          "font-family",
          "font-style",
          "font-variant",
          "font-weight",
          "font-stretch",
          "font-size",
          "unicode-range",
          "units-per-em",
          "panose-1",
          "stemv",
          "stemh",
          "slope",
          "cap-height",
          "x-height",
          "accent-height",
          "ascent",
          "descent",
          "widths",
          "bbox",
          "ideographic",
          "alphabetic",
          "mathematical",
          "hanging",
          "v-ideographic",
          "v-alphabetic",
          "v-mathematical",
          "v-hanging",
          "underline-position",
          "underline-thickness",
          "strikethrough-position",
          "strikethrough-thickness",
          "overline-position",
          "overline-thickness"
        ],
        defaults: {
          "font-style": "all",
          "font-variant": "normal",
          "font-weight": "all",
          "font-stretch": "normal",
          "unicode-range": "U+0-10FFFF",
          "units-per-em": "1000",
          "panose-1": "0 0 0 0 0 0 0 0 0 0",
          slope: "0"
        },
        contentGroups: ["descriptive"],
        content: [
          // TODO: "at most one 'font-face-src' element"
          "font-face-src"
        ]
      },
      // TODO: empty content
      "font-face-format": {
        attrsGroups: ["core"],
        attrs: ["string"]
      },
      "font-face-name": {
        attrsGroups: ["core"],
        attrs: ["name"]
      },
      "font-face-src": {
        attrsGroups: ["core"],
        content: ["font-face-name", "font-face-uri"]
      },
      "font-face-uri": {
        attrsGroups: ["core", "xlink"],
        attrs: ["href", "xlink:href"],
        content: ["font-face-format"]
      },
      foreignObject: {
        attrsGroups: [
          "core",
          "conditionalProcessing",
          "graphicalEvent",
          "presentation"
        ],
        attrs: [
          "class",
          "style",
          "externalResourcesRequired",
          "transform",
          "x",
          "y",
          "width",
          "height"
        ],
        defaults: {
          x: "0",
          y: "0"
        }
      },
      g: {
        attrsGroups: [
          "conditionalProcessing",
          "core",
          "graphicalEvent",
          "presentation"
        ],
        attrs: ["class", "style", "externalResourcesRequired", "transform"],
        contentGroups: [
          "animation",
          "descriptive",
          "shape",
          "structural",
          "paintServer"
        ],
        content: [
          "a",
          "altGlyphDef",
          "clipPath",
          "color-profile",
          "cursor",
          "filter",
          "font",
          "font-face",
          "foreignObject",
          "image",
          "marker",
          "mask",
          "pattern",
          "script",
          "style",
          "switch",
          "text",
          "view"
        ]
      },
      glyph: {
        attrsGroups: ["core", "presentation"],
        attrs: [
          "class",
          "style",
          "d",
          "horiz-adv-x",
          "vert-origin-x",
          "vert-origin-y",
          "vert-adv-y",
          "unicode",
          "glyph-name",
          "orientation",
          "arabic-form",
          "lang"
        ],
        defaults: {
          "arabic-form": "initial"
        },
        contentGroups: [
          "animation",
          "descriptive",
          "shape",
          "structural",
          "paintServer"
        ],
        content: [
          "a",
          "altGlyphDef",
          "clipPath",
          "color-profile",
          "cursor",
          "filter",
          "font",
          "font-face",
          "foreignObject",
          "image",
          "marker",
          "mask",
          "pattern",
          "script",
          "style",
          "switch",
          "text",
          "view"
        ]
      },
      glyphRef: {
        attrsGroups: ["core", "presentation"],
        attrs: [
          "class",
          "style",
          "d",
          "horiz-adv-x",
          "vert-origin-x",
          "vert-origin-y",
          "vert-adv-y"
        ],
        contentGroups: [
          "animation",
          "descriptive",
          "shape",
          "structural",
          "paintServer"
        ],
        content: [
          "a",
          "altGlyphDef",
          "clipPath",
          "color-profile",
          "cursor",
          "filter",
          "font",
          "font-face",
          "foreignObject",
          "image",
          "marker",
          "mask",
          "pattern",
          "script",
          "style",
          "switch",
          "text",
          "view"
        ]
      },
      hatch: {
        attrsGroups: ["core", "presentation", "xlink"],
        attrs: [
          "class",
          "style",
          "x",
          "y",
          "pitch",
          "rotate",
          "hatchUnits",
          "hatchContentUnits",
          "transform"
        ],
        defaults: {
          hatchUnits: "objectBoundingBox",
          hatchContentUnits: "userSpaceOnUse",
          x: "0",
          y: "0",
          pitch: "0",
          rotate: "0"
        },
        contentGroups: ["animation", "descriptive"],
        content: ["hatchPath"]
      },
      hatchPath: {
        attrsGroups: ["core", "presentation", "xlink"],
        attrs: ["class", "style", "d", "offset"],
        defaults: {
          offset: "0"
        },
        contentGroups: ["animation", "descriptive"]
      },
      hkern: {
        attrsGroups: ["core"],
        attrs: ["u1", "g1", "u2", "g2", "k"]
      },
      image: {
        attrsGroups: [
          "core",
          "conditionalProcessing",
          "graphicalEvent",
          "xlink",
          "presentation"
        ],
        attrs: [
          "class",
          "style",
          "externalResourcesRequired",
          "preserveAspectRatio",
          "transform",
          "x",
          "y",
          "width",
          "height",
          "href",
          "xlink:href"
        ],
        defaults: {
          x: "0",
          y: "0",
          preserveAspectRatio: "xMidYMid meet"
        },
        contentGroups: ["animation", "descriptive"]
      },
      line: {
        attrsGroups: [
          "conditionalProcessing",
          "core",
          "graphicalEvent",
          "presentation"
        ],
        attrs: [
          "class",
          "style",
          "externalResourcesRequired",
          "transform",
          "x1",
          "y1",
          "x2",
          "y2"
        ],
        defaults: {
          x1: "0",
          y1: "0",
          x2: "0",
          y2: "0"
        },
        contentGroups: ["animation", "descriptive"]
      },
      linearGradient: {
        attrsGroups: ["core", "presentation", "xlink"],
        attrs: [
          "class",
          "style",
          "externalResourcesRequired",
          "x1",
          "y1",
          "x2",
          "y2",
          "gradientUnits",
          "gradientTransform",
          "spreadMethod",
          "href",
          "xlink:href"
        ],
        defaults: {
          x1: "0",
          y1: "0",
          x2: "100%",
          y2: "0",
          spreadMethod: "pad"
        },
        contentGroups: ["descriptive"],
        content: ["animate", "animateTransform", "set", "stop"]
      },
      marker: {
        attrsGroups: ["core", "presentation"],
        attrs: [
          "class",
          "style",
          "externalResourcesRequired",
          "viewBox",
          "preserveAspectRatio",
          "refX",
          "refY",
          "markerUnits",
          "markerWidth",
          "markerHeight",
          "orient"
        ],
        defaults: {
          markerUnits: "strokeWidth",
          refX: "0",
          refY: "0",
          markerWidth: "3",
          markerHeight: "3"
        },
        contentGroups: [
          "animation",
          "descriptive",
          "shape",
          "structural",
          "paintServer"
        ],
        content: [
          "a",
          "altGlyphDef",
          "clipPath",
          "color-profile",
          "cursor",
          "filter",
          "font",
          "font-face",
          "foreignObject",
          "image",
          "marker",
          "mask",
          "pattern",
          "script",
          "style",
          "switch",
          "text",
          "view"
        ]
      },
      mask: {
        attrsGroups: ["conditionalProcessing", "core", "presentation"],
        attrs: [
          "class",
          "style",
          "externalResourcesRequired",
          "x",
          "y",
          "width",
          "height",
          "mask-type",
          "maskUnits",
          "maskContentUnits"
        ],
        defaults: {
          maskUnits: "objectBoundingBox",
          maskContentUnits: "userSpaceOnUse",
          x: "-10%",
          y: "-10%",
          width: "120%",
          height: "120%"
        },
        contentGroups: [
          "animation",
          "descriptive",
          "shape",
          "structural",
          "paintServer"
        ],
        content: [
          "a",
          "altGlyphDef",
          "clipPath",
          "color-profile",
          "cursor",
          "filter",
          "font",
          "font-face",
          "foreignObject",
          "image",
          "marker",
          "mask",
          "pattern",
          "script",
          "style",
          "switch",
          "text",
          "view"
        ]
      },
      metadata: {
        attrsGroups: ["core"]
      },
      "missing-glyph": {
        attrsGroups: ["core", "presentation"],
        attrs: [
          "class",
          "style",
          "d",
          "horiz-adv-x",
          "vert-origin-x",
          "vert-origin-y",
          "vert-adv-y"
        ],
        contentGroups: [
          "animation",
          "descriptive",
          "shape",
          "structural",
          "paintServer"
        ],
        content: [
          "a",
          "altGlyphDef",
          "clipPath",
          "color-profile",
          "cursor",
          "filter",
          "font",
          "font-face",
          "foreignObject",
          "image",
          "marker",
          "mask",
          "pattern",
          "script",
          "style",
          "switch",
          "text",
          "view"
        ]
      },
      mpath: {
        attrsGroups: ["core", "xlink"],
        attrs: ["externalResourcesRequired", "href", "xlink:href"],
        contentGroups: ["descriptive"]
      },
      path: {
        attrsGroups: [
          "conditionalProcessing",
          "core",
          "graphicalEvent",
          "presentation"
        ],
        attrs: [
          "class",
          "style",
          "externalResourcesRequired",
          "transform",
          "d",
          "pathLength"
        ],
        contentGroups: ["animation", "descriptive"]
      },
      pattern: {
        attrsGroups: ["conditionalProcessing", "core", "presentation", "xlink"],
        attrs: [
          "class",
          "style",
          "externalResourcesRequired",
          "viewBox",
          "preserveAspectRatio",
          "x",
          "y",
          "width",
          "height",
          "patternUnits",
          "patternContentUnits",
          "patternTransform",
          "href",
          "xlink:href"
        ],
        defaults: {
          patternUnits: "objectBoundingBox",
          patternContentUnits: "userSpaceOnUse",
          x: "0",
          y: "0",
          width: "0",
          height: "0",
          preserveAspectRatio: "xMidYMid meet"
        },
        contentGroups: [
          "animation",
          "descriptive",
          "paintServer",
          "shape",
          "structural"
        ],
        content: [
          "a",
          "altGlyphDef",
          "clipPath",
          "color-profile",
          "cursor",
          "filter",
          "font",
          "font-face",
          "foreignObject",
          "image",
          "marker",
          "mask",
          "pattern",
          "script",
          "style",
          "switch",
          "text",
          "view"
        ]
      },
      polygon: {
        attrsGroups: [
          "conditionalProcessing",
          "core",
          "graphicalEvent",
          "presentation"
        ],
        attrs: [
          "class",
          "style",
          "externalResourcesRequired",
          "transform",
          "points"
        ],
        contentGroups: ["animation", "descriptive"]
      },
      polyline: {
        attrsGroups: [
          "conditionalProcessing",
          "core",
          "graphicalEvent",
          "presentation"
        ],
        attrs: [
          "class",
          "style",
          "externalResourcesRequired",
          "transform",
          "points"
        ],
        contentGroups: ["animation", "descriptive"]
      },
      radialGradient: {
        attrsGroups: ["core", "presentation", "xlink"],
        attrs: [
          "class",
          "style",
          "externalResourcesRequired",
          "cx",
          "cy",
          "r",
          "fx",
          "fy",
          "fr",
          "gradientUnits",
          "gradientTransform",
          "spreadMethod",
          "href",
          "xlink:href"
        ],
        defaults: {
          gradientUnits: "objectBoundingBox",
          cx: "50%",
          cy: "50%",
          r: "50%"
        },
        contentGroups: ["descriptive"],
        content: ["animate", "animateTransform", "set", "stop"]
      },
      meshGradient: {
        attrsGroups: ["core", "presentation", "xlink"],
        attrs: ["class", "style", "x", "y", "gradientUnits", "transform"],
        contentGroups: ["descriptive", "paintServer", "animation"],
        content: ["meshRow"]
      },
      meshRow: {
        attrsGroups: ["core", "presentation"],
        attrs: ["class", "style"],
        contentGroups: ["descriptive"],
        content: ["meshPatch"]
      },
      meshPatch: {
        attrsGroups: ["core", "presentation"],
        attrs: ["class", "style"],
        contentGroups: ["descriptive"],
        content: ["stop"]
      },
      rect: {
        attrsGroups: [
          "conditionalProcessing",
          "core",
          "graphicalEvent",
          "presentation"
        ],
        attrs: [
          "class",
          "style",
          "externalResourcesRequired",
          "transform",
          "x",
          "y",
          "width",
          "height",
          "rx",
          "ry"
        ],
        defaults: {
          x: "0",
          y: "0"
        },
        contentGroups: ["animation", "descriptive"]
      },
      script: {
        attrsGroups: ["core", "xlink"],
        attrs: ["externalResourcesRequired", "type", "href", "xlink:href"]
      },
      set: {
        attrsGroups: [
          "conditionalProcessing",
          "core",
          "animation",
          "xlink",
          "animationAttributeTarget",
          "animationTiming"
        ],
        attrs: ["externalResourcesRequired", "to"],
        contentGroups: ["descriptive"]
      },
      solidColor: {
        attrsGroups: ["core", "presentation"],
        attrs: ["class", "style"],
        contentGroups: ["paintServer"]
      },
      stop: {
        attrsGroups: ["core", "presentation"],
        attrs: ["class", "style", "offset", "path"],
        content: ["animate", "animateColor", "set"]
      },
      style: {
        attrsGroups: ["core"],
        attrs: ["type", "media", "title"],
        defaults: {
          type: "text/css"
        }
      },
      svg: {
        attrsGroups: [
          "conditionalProcessing",
          "core",
          "documentEvent",
          "graphicalEvent",
          "presentation"
        ],
        attrs: [
          "class",
          "style",
          "x",
          "y",
          "width",
          "height",
          "viewBox",
          "preserveAspectRatio",
          "zoomAndPan",
          "version",
          "baseProfile",
          "contentScriptType",
          "contentStyleType"
        ],
        defaults: {
          x: "0",
          y: "0",
          width: "100%",
          height: "100%",
          preserveAspectRatio: "xMidYMid meet",
          zoomAndPan: "magnify",
          version: "1.1",
          baseProfile: "none",
          contentScriptType: "application/ecmascript",
          contentStyleType: "text/css"
        },
        contentGroups: [
          "animation",
          "descriptive",
          "shape",
          "structural",
          "paintServer"
        ],
        content: [
          "a",
          "altGlyphDef",
          "clipPath",
          "color-profile",
          "cursor",
          "filter",
          "font",
          "font-face",
          "foreignObject",
          "image",
          "marker",
          "mask",
          "pattern",
          "script",
          "style",
          "switch",
          "text",
          "view"
        ]
      },
      switch: {
        attrsGroups: [
          "conditionalProcessing",
          "core",
          "graphicalEvent",
          "presentation"
        ],
        attrs: ["class", "style", "externalResourcesRequired", "transform"],
        contentGroups: ["animation", "descriptive", "shape"],
        content: [
          "a",
          "foreignObject",
          "g",
          "image",
          "svg",
          "switch",
          "text",
          "use"
        ]
      },
      symbol: {
        attrsGroups: ["core", "graphicalEvent", "presentation"],
        attrs: [
          "class",
          "style",
          "externalResourcesRequired",
          "preserveAspectRatio",
          "viewBox",
          "refX",
          "refY"
        ],
        defaults: {
          refX: "0",
          refY: "0"
        },
        contentGroups: [
          "animation",
          "descriptive",
          "shape",
          "structural",
          "paintServer"
        ],
        content: [
          "a",
          "altGlyphDef",
          "clipPath",
          "color-profile",
          "cursor",
          "filter",
          "font",
          "font-face",
          "foreignObject",
          "image",
          "marker",
          "mask",
          "pattern",
          "script",
          "style",
          "switch",
          "text",
          "view"
        ]
      },
      text: {
        attrsGroups: [
          "conditionalProcessing",
          "core",
          "graphicalEvent",
          "presentation"
        ],
        attrs: [
          "class",
          "style",
          "externalResourcesRequired",
          "transform",
          "lengthAdjust",
          "x",
          "y",
          "dx",
          "dy",
          "rotate",
          "textLength"
        ],
        defaults: {
          x: "0",
          y: "0",
          lengthAdjust: "spacing"
        },
        contentGroups: ["animation", "descriptive", "textContentChild"],
        content: ["a"]
      },
      textPath: {
        attrsGroups: [
          "conditionalProcessing",
          "core",
          "graphicalEvent",
          "presentation",
          "xlink"
        ],
        attrs: [
          "class",
          "style",
          "externalResourcesRequired",
          "href",
          "xlink:href",
          "startOffset",
          "method",
          "spacing",
          "d"
        ],
        defaults: {
          startOffset: "0",
          method: "align",
          spacing: "exact"
        },
        contentGroups: ["descriptive"],
        content: [
          "a",
          "altGlyph",
          "animate",
          "animateColor",
          "set",
          "tref",
          "tspan"
        ]
      },
      title: {
        attrsGroups: ["core"],
        attrs: ["class", "style"]
      },
      tref: {
        attrsGroups: [
          "conditionalProcessing",
          "core",
          "graphicalEvent",
          "presentation",
          "xlink"
        ],
        attrs: [
          "class",
          "style",
          "externalResourcesRequired",
          "href",
          "xlink:href"
        ],
        contentGroups: ["descriptive"],
        content: ["animate", "animateColor", "set"]
      },
      tspan: {
        attrsGroups: [
          "conditionalProcessing",
          "core",
          "graphicalEvent",
          "presentation"
        ],
        attrs: [
          "class",
          "style",
          "externalResourcesRequired",
          "x",
          "y",
          "dx",
          "dy",
          "rotate",
          "textLength",
          "lengthAdjust"
        ],
        contentGroups: ["descriptive"],
        content: [
          "a",
          "altGlyph",
          "animate",
          "animateColor",
          "set",
          "tref",
          "tspan"
        ]
      },
      use: {
        attrsGroups: [
          "core",
          "conditionalProcessing",
          "graphicalEvent",
          "presentation",
          "xlink"
        ],
        attrs: [
          "class",
          "style",
          "externalResourcesRequired",
          "transform",
          "x",
          "y",
          "width",
          "height",
          "href",
          "xlink:href"
        ],
        defaults: {
          x: "0",
          y: "0"
        },
        contentGroups: ["animation", "descriptive"]
      },
      view: {
        attrsGroups: ["core"],
        attrs: [
          "externalResourcesRequired",
          "viewBox",
          "preserveAspectRatio",
          "zoomAndPan",
          "viewTarget"
        ],
        contentGroups: ["descriptive"]
      },
      vkern: {
        attrsGroups: ["core"],
        attrs: ["u1", "g1", "u2", "g2", "k"]
      }
    };
    exports.editorNamespaces = [
      "http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd",
      "http://inkscape.sourceforge.net/DTD/sodipodi-0.dtd",
      "http://www.inkscape.org/namespaces/inkscape",
      "http://www.bohemiancoding.com/sketch/ns",
      "http://ns.adobe.com/AdobeIllustrator/10.0/",
      "http://ns.adobe.com/Graphs/1.0/",
      "http://ns.adobe.com/AdobeSVGViewerExtensions/3.0/",
      "http://ns.adobe.com/Variables/1.0/",
      "http://ns.adobe.com/SaveForWeb/1.0/",
      "http://ns.adobe.com/Extensibility/1.0/",
      "http://ns.adobe.com/Flows/1.0/",
      "http://ns.adobe.com/ImageReplacement/1.0/",
      "http://ns.adobe.com/GenericCustomNamespace/1.0/",
      "http://ns.adobe.com/XPath/1.0/",
      "http://schemas.microsoft.com/visio/2003/SVGExtensions/",
      "http://taptrix.com/vectorillustrator/svg_extensions",
      "http://www.figma.com/figma/ns",
      "http://purl.org/dc/elements/1.1/",
      "http://creativecommons.org/ns#",
      "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
      "http://www.serif.com/",
      "http://www.vector.evaxdesign.sk"
    ];
    exports.referencesProps = [
      "clip-path",
      "color-profile",
      "fill",
      "filter",
      "marker-start",
      "marker-mid",
      "marker-end",
      "mask",
      "stroke",
      "style"
    ];
    exports.inheritableAttrs = [
      "clip-rule",
      "color",
      "color-interpolation",
      "color-interpolation-filters",
      "color-profile",
      "color-rendering",
      "cursor",
      "direction",
      "dominant-baseline",
      "fill",
      "fill-opacity",
      "fill-rule",
      "font",
      "font-family",
      "font-size",
      "font-size-adjust",
      "font-stretch",
      "font-style",
      "font-variant",
      "font-weight",
      "glyph-orientation-horizontal",
      "glyph-orientation-vertical",
      "image-rendering",
      "letter-spacing",
      "marker",
      "marker-end",
      "marker-mid",
      "marker-start",
      "paint-order",
      "pointer-events",
      "shape-rendering",
      "stroke",
      "stroke-dasharray",
      "stroke-dashoffset",
      "stroke-linecap",
      "stroke-linejoin",
      "stroke-miterlimit",
      "stroke-opacity",
      "stroke-width",
      "text-anchor",
      "text-rendering",
      "transform",
      "visibility",
      "word-spacing",
      "writing-mode"
    ];
    exports.presentationNonInheritableGroupAttrs = [
      "display",
      "clip-path",
      "filter",
      "mask",
      "opacity",
      "text-decoration",
      "transform",
      "unicode-bidi"
    ];
    exports.colorsNames = {
      aliceblue: "#f0f8ff",
      antiquewhite: "#faebd7",
      aqua: "#0ff",
      aquamarine: "#7fffd4",
      azure: "#f0ffff",
      beige: "#f5f5dc",
      bisque: "#ffe4c4",
      black: "#000",
      blanchedalmond: "#ffebcd",
      blue: "#00f",
      blueviolet: "#8a2be2",
      brown: "#a52a2a",
      burlywood: "#deb887",
      cadetblue: "#5f9ea0",
      chartreuse: "#7fff00",
      chocolate: "#d2691e",
      coral: "#ff7f50",
      cornflowerblue: "#6495ed",
      cornsilk: "#fff8dc",
      crimson: "#dc143c",
      cyan: "#0ff",
      darkblue: "#00008b",
      darkcyan: "#008b8b",
      darkgoldenrod: "#b8860b",
      darkgray: "#a9a9a9",
      darkgreen: "#006400",
      darkgrey: "#a9a9a9",
      darkkhaki: "#bdb76b",
      darkmagenta: "#8b008b",
      darkolivegreen: "#556b2f",
      darkorange: "#ff8c00",
      darkorchid: "#9932cc",
      darkred: "#8b0000",
      darksalmon: "#e9967a",
      darkseagreen: "#8fbc8f",
      darkslateblue: "#483d8b",
      darkslategray: "#2f4f4f",
      darkslategrey: "#2f4f4f",
      darkturquoise: "#00ced1",
      darkviolet: "#9400d3",
      deeppink: "#ff1493",
      deepskyblue: "#00bfff",
      dimgray: "#696969",
      dimgrey: "#696969",
      dodgerblue: "#1e90ff",
      firebrick: "#b22222",
      floralwhite: "#fffaf0",
      forestgreen: "#228b22",
      fuchsia: "#f0f",
      gainsboro: "#dcdcdc",
      ghostwhite: "#f8f8ff",
      gold: "#ffd700",
      goldenrod: "#daa520",
      gray: "#808080",
      green: "#008000",
      greenyellow: "#adff2f",
      grey: "#808080",
      honeydew: "#f0fff0",
      hotpink: "#ff69b4",
      indianred: "#cd5c5c",
      indigo: "#4b0082",
      ivory: "#fffff0",
      khaki: "#f0e68c",
      lavender: "#e6e6fa",
      lavenderblush: "#fff0f5",
      lawngreen: "#7cfc00",
      lemonchiffon: "#fffacd",
      lightblue: "#add8e6",
      lightcoral: "#f08080",
      lightcyan: "#e0ffff",
      lightgoldenrodyellow: "#fafad2",
      lightgray: "#d3d3d3",
      lightgreen: "#90ee90",
      lightgrey: "#d3d3d3",
      lightpink: "#ffb6c1",
      lightsalmon: "#ffa07a",
      lightseagreen: "#20b2aa",
      lightskyblue: "#87cefa",
      lightslategray: "#789",
      lightslategrey: "#789",
      lightsteelblue: "#b0c4de",
      lightyellow: "#ffffe0",
      lime: "#0f0",
      limegreen: "#32cd32",
      linen: "#faf0e6",
      magenta: "#f0f",
      maroon: "#800000",
      mediumaquamarine: "#66cdaa",
      mediumblue: "#0000cd",
      mediumorchid: "#ba55d3",
      mediumpurple: "#9370db",
      mediumseagreen: "#3cb371",
      mediumslateblue: "#7b68ee",
      mediumspringgreen: "#00fa9a",
      mediumturquoise: "#48d1cc",
      mediumvioletred: "#c71585",
      midnightblue: "#191970",
      mintcream: "#f5fffa",
      mistyrose: "#ffe4e1",
      moccasin: "#ffe4b5",
      navajowhite: "#ffdead",
      navy: "#000080",
      oldlace: "#fdf5e6",
      olive: "#808000",
      olivedrab: "#6b8e23",
      orange: "#ffa500",
      orangered: "#ff4500",
      orchid: "#da70d6",
      palegoldenrod: "#eee8aa",
      palegreen: "#98fb98",
      paleturquoise: "#afeeee",
      palevioletred: "#db7093",
      papayawhip: "#ffefd5",
      peachpuff: "#ffdab9",
      peru: "#cd853f",
      pink: "#ffc0cb",
      plum: "#dda0dd",
      powderblue: "#b0e0e6",
      purple: "#800080",
      rebeccapurple: "#639",
      red: "#f00",
      rosybrown: "#bc8f8f",
      royalblue: "#4169e1",
      saddlebrown: "#8b4513",
      salmon: "#fa8072",
      sandybrown: "#f4a460",
      seagreen: "#2e8b57",
      seashell: "#fff5ee",
      sienna: "#a0522d",
      silver: "#c0c0c0",
      skyblue: "#87ceeb",
      slateblue: "#6a5acd",
      slategray: "#708090",
      slategrey: "#708090",
      snow: "#fffafa",
      springgreen: "#00ff7f",
      steelblue: "#4682b4",
      tan: "#d2b48c",
      teal: "#008080",
      thistle: "#d8bfd8",
      tomato: "#ff6347",
      turquoise: "#40e0d0",
      violet: "#ee82ee",
      wheat: "#f5deb3",
      white: "#fff",
      whitesmoke: "#f5f5f5",
      yellow: "#ff0",
      yellowgreen: "#9acd32"
    };
    exports.colorsShortNames = {
      "#f0ffff": "azure",
      "#f5f5dc": "beige",
      "#ffe4c4": "bisque",
      "#a52a2a": "brown",
      "#ff7f50": "coral",
      "#ffd700": "gold",
      "#808080": "gray",
      "#008000": "green",
      "#4b0082": "indigo",
      "#fffff0": "ivory",
      "#f0e68c": "khaki",
      "#faf0e6": "linen",
      "#800000": "maroon",
      "#000080": "navy",
      "#808000": "olive",
      "#ffa500": "orange",
      "#da70d6": "orchid",
      "#cd853f": "peru",
      "#ffc0cb": "pink",
      "#dda0dd": "plum",
      "#800080": "purple",
      "#f00": "red",
      "#ff0000": "red",
      "#fa8072": "salmon",
      "#a0522d": "sienna",
      "#c0c0c0": "silver",
      "#fffafa": "snow",
      "#d2b48c": "tan",
      "#008080": "teal",
      "#ff6347": "tomato",
      "#ee82ee": "violet",
      "#f5deb3": "wheat"
    };
    exports.colorsProps = [
      "color",
      "fill",
      "stroke",
      "stop-color",
      "flood-color",
      "lighting-color"
    ];
  }
});

// node_modules/svgo/lib/parser.js
var require_parser2 = __commonJS({
  "node_modules/svgo/lib/parser.js"(exports) {
    "use strict";
    var SAX = require_sax();
    var { textElems } = require_collections();
    var SvgoParserError = class _SvgoParserError extends Error {
      /**
       * @param message {string}
       * @param line {number}
       * @param column {number}
       * @param source {string}
       * @param file {void | string}
       */
      constructor(message, line, column, source, file) {
        super(message);
        this.name = "SvgoParserError";
        this.message = `${file || "<input>"}:${line}:${column}: ${message}`;
        this.reason = message;
        this.line = line;
        this.column = column;
        this.source = source;
        if (Error.captureStackTrace) {
          Error.captureStackTrace(this, _SvgoParserError);
        }
      }
      toString() {
        const lines = this.source.split(/\r?\n/);
        const startLine = Math.max(this.line - 3, 0);
        const endLine = Math.min(this.line + 2, lines.length);
        const lineNumberWidth = String(endLine).length;
        const startColumn = Math.max(this.column - 54, 0);
        const endColumn = Math.max(this.column + 20, 80);
        const code = lines.slice(startLine, endLine).map((line, index) => {
          const lineSlice = line.slice(startColumn, endColumn);
          let ellipsisPrefix = "";
          let ellipsisSuffix = "";
          if (startColumn !== 0) {
            ellipsisPrefix = startColumn > line.length - 1 ? " " : "\u2026";
          }
          if (endColumn < line.length - 1) {
            ellipsisSuffix = "\u2026";
          }
          const number = startLine + 1 + index;
          const gutter = ` ${number.toString().padStart(lineNumberWidth)} | `;
          if (number === this.line) {
            const gutterSpacing = gutter.replace(/[^|]/g, " ");
            const lineSpacing = (ellipsisPrefix + line.slice(startColumn, this.column - 1)).replace(/[^\t]/g, " ");
            const spacing = gutterSpacing + lineSpacing;
            return `>${gutter}${ellipsisPrefix}${lineSlice}${ellipsisSuffix}
 ${spacing}^`;
          }
          return ` ${gutter}${ellipsisPrefix}${lineSlice}${ellipsisSuffix}`;
        }).join("\n");
        return `${this.name}: ${this.message}

${code}
`;
      }
    };
    var entityDeclaration = /<!ENTITY\s+(\S+)\s+(?:'([^']+)'|"([^"]+)")\s*>/g;
    var config = {
      strict: true,
      trim: false,
      normalize: false,
      lowercase: true,
      xmlns: true,
      position: true
    };
    var parseSvg = (data, from) => {
      const sax = SAX.parser(config.strict, config);
      const root = { type: "root", children: [] };
      let current = root;
      const stack = [root];
      const pushToContent = (node) => {
        Object.defineProperty(node, "parentNode", {
          writable: true,
          value: current
        });
        current.children.push(node);
      };
      sax.ondoctype = (doctype) => {
        const node = {
          type: "doctype",
          // TODO parse doctype for name, public and system to match xast
          name: "svg",
          data: {
            doctype
          }
        };
        pushToContent(node);
        const subsetStart = doctype.indexOf("[");
        if (subsetStart >= 0) {
          entityDeclaration.lastIndex = subsetStart;
          let entityMatch = entityDeclaration.exec(data);
          while (entityMatch != null) {
            sax.ENTITIES[entityMatch[1]] = entityMatch[2] || entityMatch[3];
            entityMatch = entityDeclaration.exec(data);
          }
        }
      };
      sax.onprocessinginstruction = (data2) => {
        const node = {
          type: "instruction",
          name: data2.name,
          value: data2.body
        };
        pushToContent(node);
      };
      sax.oncomment = (comment) => {
        const node = {
          type: "comment",
          value: comment.trim()
        };
        pushToContent(node);
      };
      sax.oncdata = (cdata) => {
        const node = {
          type: "cdata",
          value: cdata
        };
        pushToContent(node);
      };
      sax.onopentag = (data2) => {
        let element = {
          type: "element",
          name: data2.name,
          attributes: {},
          children: []
        };
        for (const [name, attr] of Object.entries(data2.attributes)) {
          element.attributes[name] = attr.value;
        }
        pushToContent(element);
        current = element;
        stack.push(element);
      };
      sax.ontext = (text) => {
        if (current.type === "element") {
          if (textElems.includes(current.name)) {
            const node = {
              type: "text",
              value: text
            };
            pushToContent(node);
          } else if (/\S/.test(text)) {
            const node = {
              type: "text",
              value: text.trim()
            };
            pushToContent(node);
          }
        }
      };
      sax.onclosetag = () => {
        stack.pop();
        current = stack[stack.length - 1];
      };
      sax.onerror = (e) => {
        const error = new SvgoParserError(
          e.reason,
          e.line + 1,
          e.column,
          data,
          from
        );
        if (e.message.indexOf("Unexpected end") === -1) {
          throw error;
        }
      };
      sax.write(data).close();
      return root;
    };
    exports.parseSvg = parseSvg;
  }
});

// node_modules/svgo/lib/stringifier.js
var require_stringifier2 = __commonJS({
  "node_modules/svgo/lib/stringifier.js"(exports) {
    "use strict";
    var { textElems } = require_collections();
    var encodeEntity = (char) => {
      return entities[char];
    };
    var defaults = {
      doctypeStart: "<!DOCTYPE",
      doctypeEnd: ">",
      procInstStart: "<?",
      procInstEnd: "?>",
      tagOpenStart: "<",
      tagOpenEnd: ">",
      tagCloseStart: "</",
      tagCloseEnd: ">",
      tagShortStart: "<",
      tagShortEnd: "/>",
      attrStart: '="',
      attrEnd: '"',
      commentStart: "<!--",
      commentEnd: "-->",
      cdataStart: "<![CDATA[",
      cdataEnd: "]]>",
      textStart: "",
      textEnd: "",
      indent: 4,
      regEntities: /[&'"<>]/g,
      regValEntities: /[&"<>]/g,
      encodeEntity,
      pretty: false,
      useShortTags: true,
      eol: "lf",
      finalNewline: false
    };
    var entities = {
      "&": "&amp;",
      "'": "&apos;",
      '"': "&quot;",
      ">": "&gt;",
      "<": "&lt;"
    };
    var stringifySvg = (data, userOptions = {}) => {
      const config = { ...defaults, ...userOptions };
      const indent = config.indent;
      let newIndent = "    ";
      if (typeof indent === "number" && Number.isNaN(indent) === false) {
        newIndent = indent < 0 ? "	" : " ".repeat(indent);
      } else if (typeof indent === "string") {
        newIndent = indent;
      }
      const state = {
        indent: newIndent,
        textContext: null,
        indentLevel: 0
      };
      const eol = config.eol === "crlf" ? "\r\n" : "\n";
      if (config.pretty) {
        config.doctypeEnd += eol;
        config.procInstEnd += eol;
        config.commentEnd += eol;
        config.cdataEnd += eol;
        config.tagShortEnd += eol;
        config.tagOpenEnd += eol;
        config.tagCloseEnd += eol;
        config.textEnd += eol;
      }
      let svg = stringifyNode(data, config, state);
      if (config.finalNewline && svg.length > 0 && svg[svg.length - 1] !== "\n") {
        svg += eol;
      }
      return svg;
    };
    exports.stringifySvg = stringifySvg;
    var stringifyNode = (data, config, state) => {
      let svg = "";
      state.indentLevel += 1;
      for (const item of data.children) {
        if (item.type === "element") {
          svg += stringifyElement(item, config, state);
        }
        if (item.type === "text") {
          svg += stringifyText(item, config, state);
        }
        if (item.type === "doctype") {
          svg += stringifyDoctype(item, config);
        }
        if (item.type === "instruction") {
          svg += stringifyInstruction(item, config);
        }
        if (item.type === "comment") {
          svg += stringifyComment(item, config);
        }
        if (item.type === "cdata") {
          svg += stringifyCdata(item, config, state);
        }
      }
      state.indentLevel -= 1;
      return svg;
    };
    var createIndent = (config, state) => {
      let indent = "";
      if (config.pretty && state.textContext == null) {
        indent = state.indent.repeat(state.indentLevel - 1);
      }
      return indent;
    };
    var stringifyDoctype = (node, config) => {
      return config.doctypeStart + node.data.doctype + config.doctypeEnd;
    };
    var stringifyInstruction = (node, config) => {
      return config.procInstStart + node.name + " " + node.value + config.procInstEnd;
    };
    var stringifyComment = (node, config) => {
      return config.commentStart + node.value + config.commentEnd;
    };
    var stringifyCdata = (node, config, state) => {
      return createIndent(config, state) + config.cdataStart + node.value + config.cdataEnd;
    };
    var stringifyElement = (node, config, state) => {
      if (node.children.length === 0) {
        if (config.useShortTags) {
          return createIndent(config, state) + config.tagShortStart + node.name + stringifyAttributes(node, config) + config.tagShortEnd;
        } else {
          return createIndent(config, state) + config.tagShortStart + node.name + stringifyAttributes(node, config) + config.tagOpenEnd + config.tagCloseStart + node.name + config.tagCloseEnd;
        }
      } else {
        let tagOpenStart = config.tagOpenStart;
        let tagOpenEnd = config.tagOpenEnd;
        let tagCloseStart = config.tagCloseStart;
        let tagCloseEnd = config.tagCloseEnd;
        let openIndent = createIndent(config, state);
        let closeIndent = createIndent(config, state);
        if (state.textContext) {
          tagOpenStart = defaults.tagOpenStart;
          tagOpenEnd = defaults.tagOpenEnd;
          tagCloseStart = defaults.tagCloseStart;
          tagCloseEnd = defaults.tagCloseEnd;
          openIndent = "";
        } else if (textElems.includes(node.name)) {
          tagOpenEnd = defaults.tagOpenEnd;
          tagCloseStart = defaults.tagCloseStart;
          closeIndent = "";
          state.textContext = node;
        }
        const children = stringifyNode(node, config, state);
        if (state.textContext === node) {
          state.textContext = null;
        }
        return openIndent + tagOpenStart + node.name + stringifyAttributes(node, config) + tagOpenEnd + children + closeIndent + tagCloseStart + node.name + tagCloseEnd;
      }
    };
    var stringifyAttributes = (node, config) => {
      let attrs = "";
      for (const [name, value] of Object.entries(node.attributes)) {
        if (value !== void 0) {
          const encodedValue = value.toString().replace(config.regValEntities, config.encodeEntity);
          attrs += " " + name + config.attrStart + encodedValue + config.attrEnd;
        } else {
          attrs += " " + name;
        }
      }
      return attrs;
    };
    var stringifyText = (node, config, state) => {
      return createIndent(config, state) + config.textStart + node.value.replace(config.regEntities, config.encodeEntity) + (state.textContext ? "" : config.textEnd);
    };
  }
});

// node_modules/domelementtype/lib/index.js
var require_lib2 = __commonJS({
  "node_modules/domelementtype/lib/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Doctype = exports.CDATA = exports.Tag = exports.Style = exports.Script = exports.Comment = exports.Directive = exports.Text = exports.Root = exports.isTag = exports.ElementType = void 0;
    var ElementType;
    (function(ElementType2) {
      ElementType2["Root"] = "root";
      ElementType2["Text"] = "text";
      ElementType2["Directive"] = "directive";
      ElementType2["Comment"] = "comment";
      ElementType2["Script"] = "script";
      ElementType2["Style"] = "style";
      ElementType2["Tag"] = "tag";
      ElementType2["CDATA"] = "cdata";
      ElementType2["Doctype"] = "doctype";
    })(ElementType = exports.ElementType || (exports.ElementType = {}));
    function isTag(elem) {
      return elem.type === ElementType.Tag || elem.type === ElementType.Script || elem.type === ElementType.Style;
    }
    exports.isTag = isTag;
    exports.Root = ElementType.Root;
    exports.Text = ElementType.Text;
    exports.Directive = ElementType.Directive;
    exports.Comment = ElementType.Comment;
    exports.Script = ElementType.Script;
    exports.Style = ElementType.Style;
    exports.Tag = ElementType.Tag;
    exports.CDATA = ElementType.CDATA;
    exports.Doctype = ElementType.Doctype;
  }
});

// node_modules/domhandler/lib/node.js
var require_node3 = __commonJS({
  "node_modules/domhandler/lib/node.js"(exports) {
    "use strict";
    var __extends = exports && exports.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
          d2.__proto__ = b2;
        } || function(d2, b2) {
          for (var p in b2)
            if (Object.prototype.hasOwnProperty.call(b2, p))
              d2[p] = b2[p];
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        if (typeof b !== "function" && b !== null)
          throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __assign = exports && exports.__assign || function() {
      __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p))
              t[p] = s[p];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.cloneNode = exports.hasChildren = exports.isDocument = exports.isDirective = exports.isComment = exports.isText = exports.isCDATA = exports.isTag = exports.Element = exports.Document = exports.CDATA = exports.NodeWithChildren = exports.ProcessingInstruction = exports.Comment = exports.Text = exports.DataNode = exports.Node = void 0;
    var domelementtype_1 = require_lib2();
    var Node = (
      /** @class */
      function() {
        function Node2() {
          this.parent = null;
          this.prev = null;
          this.next = null;
          this.startIndex = null;
          this.endIndex = null;
        }
        Object.defineProperty(Node2.prototype, "parentNode", {
          // Read-write aliases for properties
          /**
           * Same as {@link parent}.
           * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.
           */
          get: function() {
            return this.parent;
          },
          set: function(parent) {
            this.parent = parent;
          },
          enumerable: false,
          configurable: true
        });
        Object.defineProperty(Node2.prototype, "previousSibling", {
          /**
           * Same as {@link prev}.
           * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.
           */
          get: function() {
            return this.prev;
          },
          set: function(prev) {
            this.prev = prev;
          },
          enumerable: false,
          configurable: true
        });
        Object.defineProperty(Node2.prototype, "nextSibling", {
          /**
           * Same as {@link next}.
           * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.
           */
          get: function() {
            return this.next;
          },
          set: function(next) {
            this.next = next;
          },
          enumerable: false,
          configurable: true
        });
        Node2.prototype.cloneNode = function(recursive) {
          if (recursive === void 0) {
            recursive = false;
          }
          return cloneNode(this, recursive);
        };
        return Node2;
      }()
    );
    exports.Node = Node;
    var DataNode = (
      /** @class */
      function(_super) {
        __extends(DataNode2, _super);
        function DataNode2(data) {
          var _this = _super.call(this) || this;
          _this.data = data;
          return _this;
        }
        Object.defineProperty(DataNode2.prototype, "nodeValue", {
          /**
           * Same as {@link data}.
           * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.
           */
          get: function() {
            return this.data;
          },
          set: function(data) {
            this.data = data;
          },
          enumerable: false,
          configurable: true
        });
        return DataNode2;
      }(Node)
    );
    exports.DataNode = DataNode;
    var Text = (
      /** @class */
      function(_super) {
        __extends(Text2, _super);
        function Text2() {
          var _this = _super !== null && _super.apply(this, arguments) || this;
          _this.type = domelementtype_1.ElementType.Text;
          return _this;
        }
        Object.defineProperty(Text2.prototype, "nodeType", {
          get: function() {
            return 3;
          },
          enumerable: false,
          configurable: true
        });
        return Text2;
      }(DataNode)
    );
    exports.Text = Text;
    var Comment = (
      /** @class */
      function(_super) {
        __extends(Comment2, _super);
        function Comment2() {
          var _this = _super !== null && _super.apply(this, arguments) || this;
          _this.type = domelementtype_1.ElementType.Comment;
          return _this;
        }
        Object.defineProperty(Comment2.prototype, "nodeType", {
          get: function() {
            return 8;
          },
          enumerable: false,
          configurable: true
        });
        return Comment2;
      }(DataNode)
    );
    exports.Comment = Comment;
    var ProcessingInstruction = (
      /** @class */
      function(_super) {
        __extends(ProcessingInstruction2, _super);
        function ProcessingInstruction2(name, data) {
          var _this = _super.call(this, data) || this;
          _this.name = name;
          _this.type = domelementtype_1.ElementType.Directive;
          return _this;
        }
        Object.defineProperty(ProcessingInstruction2.prototype, "nodeType", {
          get: function() {
            return 1;
          },
          enumerable: false,
          configurable: true
        });
        return ProcessingInstruction2;
      }(DataNode)
    );
    exports.ProcessingInstruction = ProcessingInstruction;
    var NodeWithChildren = (
      /** @class */
      function(_super) {
        __extends(NodeWithChildren2, _super);
        function NodeWithChildren2(children) {
          var _this = _super.call(this) || this;
          _this.children = children;
          return _this;
        }
        Object.defineProperty(NodeWithChildren2.prototype, "firstChild", {
          // Aliases
          /** First child of the node. */
          get: function() {
            var _a;
            return (_a = this.children[0]) !== null && _a !== void 0 ? _a : null;
          },
          enumerable: false,
          configurable: true
        });
        Object.defineProperty(NodeWithChildren2.prototype, "lastChild", {
          /** Last child of the node. */
          get: function() {
            return this.children.length > 0 ? this.children[this.children.length - 1] : null;
          },
          enumerable: false,
          configurable: true
        });
        Object.defineProperty(NodeWithChildren2.prototype, "childNodes", {
          /**
           * Same as {@link children}.
           * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.
           */
          get: function() {
            return this.children;
          },
          set: function(children) {
            this.children = children;
          },
          enumerable: false,
          configurable: true
        });
        return NodeWithChildren2;
      }(Node)
    );
    exports.NodeWithChildren = NodeWithChildren;
    var CDATA = (
      /** @class */
      function(_super) {
        __extends(CDATA2, _super);
        function CDATA2() {
          var _this = _super !== null && _super.apply(this, arguments) || this;
          _this.type = domelementtype_1.ElementType.CDATA;
          return _this;
        }
        Object.defineProperty(CDATA2.prototype, "nodeType", {
          get: function() {
            return 4;
          },
          enumerable: false,
          configurable: true
        });
        return CDATA2;
      }(NodeWithChildren)
    );
    exports.CDATA = CDATA;
    var Document = (
      /** @class */
      function(_super) {
        __extends(Document2, _super);
        function Document2() {
          var _this = _super !== null && _super.apply(this, arguments) || this;
          _this.type = domelementtype_1.ElementType.Root;
          return _this;
        }
        Object.defineProperty(Document2.prototype, "nodeType", {
          get: function() {
            return 9;
          },
          enumerable: false,
          configurable: true
        });
        return Document2;
      }(NodeWithChildren)
    );
    exports.Document = Document;
    var Element = (
      /** @class */
      function(_super) {
        __extends(Element2, _super);
        function Element2(name, attribs, children, type) {
          if (children === void 0) {
            children = [];
          }
          if (type === void 0) {
            type = name === "script" ? domelementtype_1.ElementType.Script : name === "style" ? domelementtype_1.ElementType.Style : domelementtype_1.ElementType.Tag;
          }
          var _this = _super.call(this, children) || this;
          _this.name = name;
          _this.attribs = attribs;
          _this.type = type;
          return _this;
        }
        Object.defineProperty(Element2.prototype, "nodeType", {
          get: function() {
            return 1;
          },
          enumerable: false,
          configurable: true
        });
        Object.defineProperty(Element2.prototype, "tagName", {
          // DOM Level 1 aliases
          /**
           * Same as {@link name}.
           * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.
           */
          get: function() {
            return this.name;
          },
          set: function(name) {
            this.name = name;
          },
          enumerable: false,
          configurable: true
        });
        Object.defineProperty(Element2.prototype, "attributes", {
          get: function() {
            var _this = this;
            return Object.keys(this.attribs).map(function(name) {
              var _a, _b;
              return {
                name,
                value: _this.attribs[name],
                namespace: (_a = _this["x-attribsNamespace"]) === null || _a === void 0 ? void 0 : _a[name],
                prefix: (_b = _this["x-attribsPrefix"]) === null || _b === void 0 ? void 0 : _b[name]
              };
            });
          },
          enumerable: false,
          configurable: true
        });
        return Element2;
      }(NodeWithChildren)
    );
    exports.Element = Element;
    function isTag(node) {
      return (0, domelementtype_1.isTag)(node);
    }
    exports.isTag = isTag;
    function isCDATA(node) {
      return node.type === domelementtype_1.ElementType.CDATA;
    }
    exports.isCDATA = isCDATA;
    function isText(node) {
      return node.type === domelementtype_1.ElementType.Text;
    }
    exports.isText = isText;
    function isComment(node) {
      return node.type === domelementtype_1.ElementType.Comment;
    }
    exports.isComment = isComment;
    function isDirective(node) {
      return node.type === domelementtype_1.ElementType.Directive;
    }
    exports.isDirective = isDirective;
    function isDocument(node) {
      return node.type === domelementtype_1.ElementType.Root;
    }
    exports.isDocument = isDocument;
    function hasChildren(node) {
      return Object.prototype.hasOwnProperty.call(node, "children");
    }
    exports.hasChildren = hasChildren;
    function cloneNode(node, recursive) {
      if (recursive === void 0) {
        recursive = false;
      }
      var result;
      if (isText(node)) {
        result = new Text(node.data);
      } else if (isComment(node)) {
        result = new Comment(node.data);
      } else if (isTag(node)) {
        var children = recursive ? cloneChildren(node.children) : [];
        var clone_1 = new Element(node.name, __assign({}, node.attribs), children);
        children.forEach(function(child) {
          return child.parent = clone_1;
        });
        if (node.namespace != null) {
          clone_1.namespace = node.namespace;
        }
        if (node["x-attribsNamespace"]) {
          clone_1["x-attribsNamespace"] = __assign({}, node["x-attribsNamespace"]);
        }
        if (node["x-attribsPrefix"]) {
          clone_1["x-attribsPrefix"] = __assign({}, node["x-attribsPrefix"]);
        }
        result = clone_1;
      } else if (isCDATA(node)) {
        var children = recursive ? cloneChildren(node.children) : [];
        var clone_2 = new CDATA(children);
        children.forEach(function(child) {
          return child.parent = clone_2;
        });
        result = clone_2;
      } else if (isDocument(node)) {
        var children = recursive ? cloneChildren(node.children) : [];
        var clone_3 = new Document(children);
        children.forEach(function(child) {
          return child.parent = clone_3;
        });
        if (node["x-mode"]) {
          clone_3["x-mode"] = node["x-mode"];
        }
        result = clone_3;
      } else if (isDirective(node)) {
        var instruction = new ProcessingInstruction(node.name, node.data);
        if (node["x-name"] != null) {
          instruction["x-name"] = node["x-name"];
          instruction["x-publicId"] = node["x-publicId"];
          instruction["x-systemId"] = node["x-systemId"];
        }
        result = instruction;
      } else {
        throw new Error("Not implemented yet: ".concat(node.type));
      }
      result.startIndex = node.startIndex;
      result.endIndex = node.endIndex;
      if (node.sourceCodeLocation != null) {
        result.sourceCodeLocation = node.sourceCodeLocation;
      }
      return result;
    }
    exports.cloneNode = cloneNode;
    function cloneChildren(childs) {
      var children = childs.map(function(child) {
        return cloneNode(child, true);
      });
      for (var i = 1; i < children.length; i++) {
        children[i].prev = children[i - 1];
        children[i - 1].next = children[i];
      }
      return children;
    }
  }
});

// node_modules/domhandler/lib/index.js
var require_lib3 = __commonJS({
  "node_modules/domhandler/lib/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.DomHandler = void 0;
    var domelementtype_1 = require_lib2();
    var node_js_1 = require_node3();
    __exportStar(require_node3(), exports);
    var defaultOpts = {
      withStartIndices: false,
      withEndIndices: false,
      xmlMode: false
    };
    var DomHandler = (
      /** @class */
      function() {
        function DomHandler2(callback, options, elementCB) {
          this.dom = [];
          this.root = new node_js_1.Document(this.dom);
          this.done = false;
          this.tagStack = [this.root];
          this.lastNode = null;
          this.parser = null;
          if (typeof options === "function") {
            elementCB = options;
            options = defaultOpts;
          }
          if (typeof callback === "object") {
            options = callback;
            callback = void 0;
          }
          this.callback = callback !== null && callback !== void 0 ? callback : null;
          this.options = options !== null && options !== void 0 ? options : defaultOpts;
          this.elementCB = elementCB !== null && elementCB !== void 0 ? elementCB : null;
        }
        DomHandler2.prototype.onparserinit = function(parser) {
          this.parser = parser;
        };
        DomHandler2.prototype.onreset = function() {
          this.dom = [];
          this.root = new node_js_1.Document(this.dom);
          this.done = false;
          this.tagStack = [this.root];
          this.lastNode = null;
          this.parser = null;
        };
        DomHandler2.prototype.onend = function() {
          if (this.done)
            return;
          this.done = true;
          this.parser = null;
          this.handleCallback(null);
        };
        DomHandler2.prototype.onerror = function(error) {
          this.handleCallback(error);
        };
        DomHandler2.prototype.onclosetag = function() {
          this.lastNode = null;
          var elem = this.tagStack.pop();
          if (this.options.withEndIndices) {
            elem.endIndex = this.parser.endIndex;
          }
          if (this.elementCB)
            this.elementCB(elem);
        };
        DomHandler2.prototype.onopentag = function(name, attribs) {
          var type = this.options.xmlMode ? domelementtype_1.ElementType.Tag : void 0;
          var element = new node_js_1.Element(name, attribs, void 0, type);
          this.addNode(element);
          this.tagStack.push(element);
        };
        DomHandler2.prototype.ontext = function(data) {
          var lastNode = this.lastNode;
          if (lastNode && lastNode.type === domelementtype_1.ElementType.Text) {
            lastNode.data += data;
            if (this.options.withEndIndices) {
              lastNode.endIndex = this.parser.endIndex;
            }
          } else {
            var node = new node_js_1.Text(data);
            this.addNode(node);
            this.lastNode = node;
          }
        };
        DomHandler2.prototype.oncomment = function(data) {
          if (this.lastNode && this.lastNode.type === domelementtype_1.ElementType.Comment) {
            this.lastNode.data += data;
            return;
          }
          var node = new node_js_1.Comment(data);
          this.addNode(node);
          this.lastNode = node;
        };
        DomHandler2.prototype.oncommentend = function() {
          this.lastNode = null;
        };
        DomHandler2.prototype.oncdatastart = function() {
          var text = new node_js_1.Text("");
          var node = new node_js_1.CDATA([text]);
          this.addNode(node);
          text.parent = node;
          this.lastNode = text;
        };
        DomHandler2.prototype.oncdataend = function() {
          this.lastNode = null;
        };
        DomHandler2.prototype.onprocessinginstruction = function(name, data) {
          var node = new node_js_1.ProcessingInstruction(name, data);
          this.addNode(node);
        };
        DomHandler2.prototype.handleCallback = function(error) {
          if (typeof this.callback === "function") {
            this.callback(error, this.dom);
          } else if (error) {
            throw error;
          }
        };
        DomHandler2.prototype.addNode = function(node) {
          var parent = this.tagStack[this.tagStack.length - 1];
          var previousSibling = parent.children[parent.children.length - 1];
          if (this.options.withStartIndices) {
            node.startIndex = this.parser.startIndex;
          }
          if (this.options.withEndIndices) {
            node.endIndex = this.parser.endIndex;
          }
          parent.children.push(node);
          if (previousSibling) {
            node.prev = previousSibling;
            previousSibling.next = node;
          }
          node.parent = parent;
          this.lastNode = null;
        };
        return DomHandler2;
      }()
    );
    exports.DomHandler = DomHandler;
    exports.default = DomHandler;
  }
});

// node_modules/entities/lib/generated/decode-data-html.js
var require_decode_data_html = __commonJS({
  "node_modules/entities/lib/generated/decode-data-html.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.default = new Uint16Array(
      // prettier-ignore
      '\u1D41<\xD5\u0131\u028A\u049D\u057B\u05D0\u0675\u06DE\u07A2\u07D6\u080F\u0A4A\u0A91\u0DA1\u0E6D\u0F09\u0F26\u10CA\u1228\u12E1\u1415\u149D\u14C3\u14DF\u1525\0\0\0\0\0\0\u156B\u16CD\u198D\u1C12\u1DDD\u1F7E\u2060\u21B0\u228D\u23C0\u23FB\u2442\u2824\u2912\u2D08\u2E48\u2FCE\u3016\u32BA\u3639\u37AC\u38FE\u3A28\u3A71\u3AE0\u3B2E\u0800EMabcfglmnoprstu\\bfms\x7F\x84\x8B\x90\x95\x98\xA6\xB3\xB9\xC8\xCFlig\u803B\xC6\u40C6P\u803B&\u4026cute\u803B\xC1\u40C1reve;\u4102\u0100iyx}rc\u803B\xC2\u40C2;\u4410r;\uC000\u{1D504}rave\u803B\xC0\u40C0pha;\u4391acr;\u4100d;\u6A53\u0100gp\x9D\xA1on;\u4104f;\uC000\u{1D538}plyFunction;\u6061ing\u803B\xC5\u40C5\u0100cs\xBE\xC3r;\uC000\u{1D49C}ign;\u6254ilde\u803B\xC3\u40C3ml\u803B\xC4\u40C4\u0400aceforsu\xE5\xFB\xFE\u0117\u011C\u0122\u0127\u012A\u0100cr\xEA\xF2kslash;\u6216\u0176\xF6\xF8;\u6AE7ed;\u6306y;\u4411\u0180crt\u0105\u010B\u0114ause;\u6235noullis;\u612Ca;\u4392r;\uC000\u{1D505}pf;\uC000\u{1D539}eve;\u42D8c\xF2\u0113mpeq;\u624E\u0700HOacdefhilorsu\u014D\u0151\u0156\u0180\u019E\u01A2\u01B5\u01B7\u01BA\u01DC\u0215\u0273\u0278\u027Ecy;\u4427PY\u803B\xA9\u40A9\u0180cpy\u015D\u0162\u017Aute;\u4106\u0100;i\u0167\u0168\u62D2talDifferentialD;\u6145leys;\u612D\u0200aeio\u0189\u018E\u0194\u0198ron;\u410Cdil\u803B\xC7\u40C7rc;\u4108nint;\u6230ot;\u410A\u0100dn\u01A7\u01ADilla;\u40B8terDot;\u40B7\xF2\u017Fi;\u43A7rcle\u0200DMPT\u01C7\u01CB\u01D1\u01D6ot;\u6299inus;\u6296lus;\u6295imes;\u6297o\u0100cs\u01E2\u01F8kwiseContourIntegral;\u6232eCurly\u0100DQ\u0203\u020FoubleQuote;\u601Duote;\u6019\u0200lnpu\u021E\u0228\u0247\u0255on\u0100;e\u0225\u0226\u6237;\u6A74\u0180git\u022F\u0236\u023Aruent;\u6261nt;\u622FourIntegral;\u622E\u0100fr\u024C\u024E;\u6102oduct;\u6210nterClockwiseContourIntegral;\u6233oss;\u6A2Fcr;\uC000\u{1D49E}p\u0100;C\u0284\u0285\u62D3ap;\u624D\u0580DJSZacefios\u02A0\u02AC\u02B0\u02B4\u02B8\u02CB\u02D7\u02E1\u02E6\u0333\u048D\u0100;o\u0179\u02A5trahd;\u6911cy;\u4402cy;\u4405cy;\u440F\u0180grs\u02BF\u02C4\u02C7ger;\u6021r;\u61A1hv;\u6AE4\u0100ay\u02D0\u02D5ron;\u410E;\u4414l\u0100;t\u02DD\u02DE\u6207a;\u4394r;\uC000\u{1D507}\u0100af\u02EB\u0327\u0100cm\u02F0\u0322ritical\u0200ADGT\u0300\u0306\u0316\u031Ccute;\u40B4o\u0174\u030B\u030D;\u42D9bleAcute;\u42DDrave;\u4060ilde;\u42DCond;\u62C4ferentialD;\u6146\u0470\u033D\0\0\0\u0342\u0354\0\u0405f;\uC000\u{1D53B}\u0180;DE\u0348\u0349\u034D\u40A8ot;\u60DCqual;\u6250ble\u0300CDLRUV\u0363\u0372\u0382\u03CF\u03E2\u03F8ontourIntegra\xEC\u0239o\u0274\u0379\0\0\u037B\xBB\u0349nArrow;\u61D3\u0100eo\u0387\u03A4ft\u0180ART\u0390\u0396\u03A1rrow;\u61D0ightArrow;\u61D4e\xE5\u02CAng\u0100LR\u03AB\u03C4eft\u0100AR\u03B3\u03B9rrow;\u67F8ightArrow;\u67FAightArrow;\u67F9ight\u0100AT\u03D8\u03DErrow;\u61D2ee;\u62A8p\u0241\u03E9\0\0\u03EFrrow;\u61D1ownArrow;\u61D5erticalBar;\u6225n\u0300ABLRTa\u0412\u042A\u0430\u045E\u047F\u037Crrow\u0180;BU\u041D\u041E\u0422\u6193ar;\u6913pArrow;\u61F5reve;\u4311eft\u02D2\u043A\0\u0446\0\u0450ightVector;\u6950eeVector;\u695Eector\u0100;B\u0459\u045A\u61BDar;\u6956ight\u01D4\u0467\0\u0471eeVector;\u695Fector\u0100;B\u047A\u047B\u61C1ar;\u6957ee\u0100;A\u0486\u0487\u62A4rrow;\u61A7\u0100ct\u0492\u0497r;\uC000\u{1D49F}rok;\u4110\u0800NTacdfglmopqstux\u04BD\u04C0\u04C4\u04CB\u04DE\u04E2\u04E7\u04EE\u04F5\u0521\u052F\u0536\u0552\u055D\u0560\u0565G;\u414AH\u803B\xD0\u40D0cute\u803B\xC9\u40C9\u0180aiy\u04D2\u04D7\u04DCron;\u411Arc\u803B\xCA\u40CA;\u442Dot;\u4116r;\uC000\u{1D508}rave\u803B\xC8\u40C8ement;\u6208\u0100ap\u04FA\u04FEcr;\u4112ty\u0253\u0506\0\0\u0512mallSquare;\u65FBerySmallSquare;\u65AB\u0100gp\u0526\u052Aon;\u4118f;\uC000\u{1D53C}silon;\u4395u\u0100ai\u053C\u0549l\u0100;T\u0542\u0543\u6A75ilde;\u6242librium;\u61CC\u0100ci\u0557\u055Ar;\u6130m;\u6A73a;\u4397ml\u803B\xCB\u40CB\u0100ip\u056A\u056Fsts;\u6203onentialE;\u6147\u0280cfios\u0585\u0588\u058D\u05B2\u05CCy;\u4424r;\uC000\u{1D509}lled\u0253\u0597\0\0\u05A3mallSquare;\u65FCerySmallSquare;\u65AA\u0370\u05BA\0\u05BF\0\0\u05C4f;\uC000\u{1D53D}All;\u6200riertrf;\u6131c\xF2\u05CB\u0600JTabcdfgorst\u05E8\u05EC\u05EF\u05FA\u0600\u0612\u0616\u061B\u061D\u0623\u066C\u0672cy;\u4403\u803B>\u403Emma\u0100;d\u05F7\u05F8\u4393;\u43DCreve;\u411E\u0180eiy\u0607\u060C\u0610dil;\u4122rc;\u411C;\u4413ot;\u4120r;\uC000\u{1D50A};\u62D9pf;\uC000\u{1D53E}eater\u0300EFGLST\u0635\u0644\u064E\u0656\u065B\u0666qual\u0100;L\u063E\u063F\u6265ess;\u62DBullEqual;\u6267reater;\u6AA2ess;\u6277lantEqual;\u6A7Eilde;\u6273cr;\uC000\u{1D4A2};\u626B\u0400Aacfiosu\u0685\u068B\u0696\u069B\u069E\u06AA\u06BE\u06CARDcy;\u442A\u0100ct\u0690\u0694ek;\u42C7;\u405Eirc;\u4124r;\u610ClbertSpace;\u610B\u01F0\u06AF\0\u06B2f;\u610DizontalLine;\u6500\u0100ct\u06C3\u06C5\xF2\u06A9rok;\u4126mp\u0144\u06D0\u06D8ownHum\xF0\u012Fqual;\u624F\u0700EJOacdfgmnostu\u06FA\u06FE\u0703\u0707\u070E\u071A\u071E\u0721\u0728\u0744\u0778\u078B\u078F\u0795cy;\u4415lig;\u4132cy;\u4401cute\u803B\xCD\u40CD\u0100iy\u0713\u0718rc\u803B\xCE\u40CE;\u4418ot;\u4130r;\u6111rave\u803B\xCC\u40CC\u0180;ap\u0720\u072F\u073F\u0100cg\u0734\u0737r;\u412AinaryI;\u6148lie\xF3\u03DD\u01F4\u0749\0\u0762\u0100;e\u074D\u074E\u622C\u0100gr\u0753\u0758ral;\u622Bsection;\u62C2isible\u0100CT\u076C\u0772omma;\u6063imes;\u6062\u0180gpt\u077F\u0783\u0788on;\u412Ef;\uC000\u{1D540}a;\u4399cr;\u6110ilde;\u4128\u01EB\u079A\0\u079Ecy;\u4406l\u803B\xCF\u40CF\u0280cfosu\u07AC\u07B7\u07BC\u07C2\u07D0\u0100iy\u07B1\u07B5rc;\u4134;\u4419r;\uC000\u{1D50D}pf;\uC000\u{1D541}\u01E3\u07C7\0\u07CCr;\uC000\u{1D4A5}rcy;\u4408kcy;\u4404\u0380HJacfos\u07E4\u07E8\u07EC\u07F1\u07FD\u0802\u0808cy;\u4425cy;\u440Cppa;\u439A\u0100ey\u07F6\u07FBdil;\u4136;\u441Ar;\uC000\u{1D50E}pf;\uC000\u{1D542}cr;\uC000\u{1D4A6}\u0580JTaceflmost\u0825\u0829\u082C\u0850\u0863\u09B3\u09B8\u09C7\u09CD\u0A37\u0A47cy;\u4409\u803B<\u403C\u0280cmnpr\u0837\u083C\u0841\u0844\u084Dute;\u4139bda;\u439Bg;\u67EAlacetrf;\u6112r;\u619E\u0180aey\u0857\u085C\u0861ron;\u413Ddil;\u413B;\u441B\u0100fs\u0868\u0970t\u0500ACDFRTUVar\u087E\u08A9\u08B1\u08E0\u08E6\u08FC\u092F\u095B\u0390\u096A\u0100nr\u0883\u088FgleBracket;\u67E8row\u0180;BR\u0899\u089A\u089E\u6190ar;\u61E4ightArrow;\u61C6eiling;\u6308o\u01F5\u08B7\0\u08C3bleBracket;\u67E6n\u01D4\u08C8\0\u08D2eeVector;\u6961ector\u0100;B\u08DB\u08DC\u61C3ar;\u6959loor;\u630Aight\u0100AV\u08EF\u08F5rrow;\u6194ector;\u694E\u0100er\u0901\u0917e\u0180;AV\u0909\u090A\u0910\u62A3rrow;\u61A4ector;\u695Aiangle\u0180;BE\u0924\u0925\u0929\u62B2ar;\u69CFqual;\u62B4p\u0180DTV\u0937\u0942\u094CownVector;\u6951eeVector;\u6960ector\u0100;B\u0956\u0957\u61BFar;\u6958ector\u0100;B\u0965\u0966\u61BCar;\u6952ight\xE1\u039Cs\u0300EFGLST\u097E\u098B\u0995\u099D\u09A2\u09ADqualGreater;\u62DAullEqual;\u6266reater;\u6276ess;\u6AA1lantEqual;\u6A7Dilde;\u6272r;\uC000\u{1D50F}\u0100;e\u09BD\u09BE\u62D8ftarrow;\u61DAidot;\u413F\u0180npw\u09D4\u0A16\u0A1Bg\u0200LRlr\u09DE\u09F7\u0A02\u0A10eft\u0100AR\u09E6\u09ECrrow;\u67F5ightArrow;\u67F7ightArrow;\u67F6eft\u0100ar\u03B3\u0A0Aight\xE1\u03BFight\xE1\u03CAf;\uC000\u{1D543}er\u0100LR\u0A22\u0A2CeftArrow;\u6199ightArrow;\u6198\u0180cht\u0A3E\u0A40\u0A42\xF2\u084C;\u61B0rok;\u4141;\u626A\u0400acefiosu\u0A5A\u0A5D\u0A60\u0A77\u0A7C\u0A85\u0A8B\u0A8Ep;\u6905y;\u441C\u0100dl\u0A65\u0A6FiumSpace;\u605Flintrf;\u6133r;\uC000\u{1D510}nusPlus;\u6213pf;\uC000\u{1D544}c\xF2\u0A76;\u439C\u0480Jacefostu\u0AA3\u0AA7\u0AAD\u0AC0\u0B14\u0B19\u0D91\u0D97\u0D9Ecy;\u440Acute;\u4143\u0180aey\u0AB4\u0AB9\u0ABEron;\u4147dil;\u4145;\u441D\u0180gsw\u0AC7\u0AF0\u0B0Eative\u0180MTV\u0AD3\u0ADF\u0AE8ediumSpace;\u600Bhi\u0100cn\u0AE6\u0AD8\xEB\u0AD9eryThi\xEE\u0AD9ted\u0100GL\u0AF8\u0B06reaterGreate\xF2\u0673essLes\xF3\u0A48Line;\u400Ar;\uC000\u{1D511}\u0200Bnpt\u0B22\u0B28\u0B37\u0B3Areak;\u6060BreakingSpace;\u40A0f;\u6115\u0680;CDEGHLNPRSTV\u0B55\u0B56\u0B6A\u0B7C\u0BA1\u0BEB\u0C04\u0C5E\u0C84\u0CA6\u0CD8\u0D61\u0D85\u6AEC\u0100ou\u0B5B\u0B64ngruent;\u6262pCap;\u626DoubleVerticalBar;\u6226\u0180lqx\u0B83\u0B8A\u0B9Bement;\u6209ual\u0100;T\u0B92\u0B93\u6260ilde;\uC000\u2242\u0338ists;\u6204reater\u0380;EFGLST\u0BB6\u0BB7\u0BBD\u0BC9\u0BD3\u0BD8\u0BE5\u626Fqual;\u6271ullEqual;\uC000\u2267\u0338reater;\uC000\u226B\u0338ess;\u6279lantEqual;\uC000\u2A7E\u0338ilde;\u6275ump\u0144\u0BF2\u0BFDownHump;\uC000\u224E\u0338qual;\uC000\u224F\u0338e\u0100fs\u0C0A\u0C27tTriangle\u0180;BE\u0C1A\u0C1B\u0C21\u62EAar;\uC000\u29CF\u0338qual;\u62ECs\u0300;EGLST\u0C35\u0C36\u0C3C\u0C44\u0C4B\u0C58\u626Equal;\u6270reater;\u6278ess;\uC000\u226A\u0338lantEqual;\uC000\u2A7D\u0338ilde;\u6274ested\u0100GL\u0C68\u0C79reaterGreater;\uC000\u2AA2\u0338essLess;\uC000\u2AA1\u0338recedes\u0180;ES\u0C92\u0C93\u0C9B\u6280qual;\uC000\u2AAF\u0338lantEqual;\u62E0\u0100ei\u0CAB\u0CB9verseElement;\u620CghtTriangle\u0180;BE\u0CCB\u0CCC\u0CD2\u62EBar;\uC000\u29D0\u0338qual;\u62ED\u0100qu\u0CDD\u0D0CuareSu\u0100bp\u0CE8\u0CF9set\u0100;E\u0CF0\u0CF3\uC000\u228F\u0338qual;\u62E2erset\u0100;E\u0D03\u0D06\uC000\u2290\u0338qual;\u62E3\u0180bcp\u0D13\u0D24\u0D4Eset\u0100;E\u0D1B\u0D1E\uC000\u2282\u20D2qual;\u6288ceeds\u0200;EST\u0D32\u0D33\u0D3B\u0D46\u6281qual;\uC000\u2AB0\u0338lantEqual;\u62E1ilde;\uC000\u227F\u0338erset\u0100;E\u0D58\u0D5B\uC000\u2283\u20D2qual;\u6289ilde\u0200;EFT\u0D6E\u0D6F\u0D75\u0D7F\u6241qual;\u6244ullEqual;\u6247ilde;\u6249erticalBar;\u6224cr;\uC000\u{1D4A9}ilde\u803B\xD1\u40D1;\u439D\u0700Eacdfgmoprstuv\u0DBD\u0DC2\u0DC9\u0DD5\u0DDB\u0DE0\u0DE7\u0DFC\u0E02\u0E20\u0E22\u0E32\u0E3F\u0E44lig;\u4152cute\u803B\xD3\u40D3\u0100iy\u0DCE\u0DD3rc\u803B\xD4\u40D4;\u441Eblac;\u4150r;\uC000\u{1D512}rave\u803B\xD2\u40D2\u0180aei\u0DEE\u0DF2\u0DF6cr;\u414Cga;\u43A9cron;\u439Fpf;\uC000\u{1D546}enCurly\u0100DQ\u0E0E\u0E1AoubleQuote;\u601Cuote;\u6018;\u6A54\u0100cl\u0E27\u0E2Cr;\uC000\u{1D4AA}ash\u803B\xD8\u40D8i\u016C\u0E37\u0E3Cde\u803B\xD5\u40D5es;\u6A37ml\u803B\xD6\u40D6er\u0100BP\u0E4B\u0E60\u0100ar\u0E50\u0E53r;\u603Eac\u0100ek\u0E5A\u0E5C;\u63DEet;\u63B4arenthesis;\u63DC\u0480acfhilors\u0E7F\u0E87\u0E8A\u0E8F\u0E92\u0E94\u0E9D\u0EB0\u0EFCrtialD;\u6202y;\u441Fr;\uC000\u{1D513}i;\u43A6;\u43A0usMinus;\u40B1\u0100ip\u0EA2\u0EADncareplan\xE5\u069Df;\u6119\u0200;eio\u0EB9\u0EBA\u0EE0\u0EE4\u6ABBcedes\u0200;EST\u0EC8\u0EC9\u0ECF\u0EDA\u627Aqual;\u6AAFlantEqual;\u627Cilde;\u627Eme;\u6033\u0100dp\u0EE9\u0EEEuct;\u620Fortion\u0100;a\u0225\u0EF9l;\u621D\u0100ci\u0F01\u0F06r;\uC000\u{1D4AB};\u43A8\u0200Ufos\u0F11\u0F16\u0F1B\u0F1FOT\u803B"\u4022r;\uC000\u{1D514}pf;\u611Acr;\uC000\u{1D4AC}\u0600BEacefhiorsu\u0F3E\u0F43\u0F47\u0F60\u0F73\u0FA7\u0FAA\u0FAD\u1096\u10A9\u10B4\u10BEarr;\u6910G\u803B\xAE\u40AE\u0180cnr\u0F4E\u0F53\u0F56ute;\u4154g;\u67EBr\u0100;t\u0F5C\u0F5D\u61A0l;\u6916\u0180aey\u0F67\u0F6C\u0F71ron;\u4158dil;\u4156;\u4420\u0100;v\u0F78\u0F79\u611Cerse\u0100EU\u0F82\u0F99\u0100lq\u0F87\u0F8Eement;\u620Builibrium;\u61CBpEquilibrium;\u696Fr\xBB\u0F79o;\u43A1ght\u0400ACDFTUVa\u0FC1\u0FEB\u0FF3\u1022\u1028\u105B\u1087\u03D8\u0100nr\u0FC6\u0FD2gleBracket;\u67E9row\u0180;BL\u0FDC\u0FDD\u0FE1\u6192ar;\u61E5eftArrow;\u61C4eiling;\u6309o\u01F5\u0FF9\0\u1005bleBracket;\u67E7n\u01D4\u100A\0\u1014eeVector;\u695Dector\u0100;B\u101D\u101E\u61C2ar;\u6955loor;\u630B\u0100er\u102D\u1043e\u0180;AV\u1035\u1036\u103C\u62A2rrow;\u61A6ector;\u695Biangle\u0180;BE\u1050\u1051\u1055\u62B3ar;\u69D0qual;\u62B5p\u0180DTV\u1063\u106E\u1078ownVector;\u694FeeVector;\u695Cector\u0100;B\u1082\u1083\u61BEar;\u6954ector\u0100;B\u1091\u1092\u61C0ar;\u6953\u0100pu\u109B\u109Ef;\u611DndImplies;\u6970ightarrow;\u61DB\u0100ch\u10B9\u10BCr;\u611B;\u61B1leDelayed;\u69F4\u0680HOacfhimoqstu\u10E4\u10F1\u10F7\u10FD\u1119\u111E\u1151\u1156\u1161\u1167\u11B5\u11BB\u11BF\u0100Cc\u10E9\u10EEHcy;\u4429y;\u4428FTcy;\u442Ccute;\u415A\u0280;aeiy\u1108\u1109\u110E\u1113\u1117\u6ABCron;\u4160dil;\u415Erc;\u415C;\u4421r;\uC000\u{1D516}ort\u0200DLRU\u112A\u1134\u113E\u1149ownArrow\xBB\u041EeftArrow\xBB\u089AightArrow\xBB\u0FDDpArrow;\u6191gma;\u43A3allCircle;\u6218pf;\uC000\u{1D54A}\u0272\u116D\0\0\u1170t;\u621Aare\u0200;ISU\u117B\u117C\u1189\u11AF\u65A1ntersection;\u6293u\u0100bp\u118F\u119Eset\u0100;E\u1197\u1198\u628Fqual;\u6291erset\u0100;E\u11A8\u11A9\u6290qual;\u6292nion;\u6294cr;\uC000\u{1D4AE}ar;\u62C6\u0200bcmp\u11C8\u11DB\u1209\u120B\u0100;s\u11CD\u11CE\u62D0et\u0100;E\u11CD\u11D5qual;\u6286\u0100ch\u11E0\u1205eeds\u0200;EST\u11ED\u11EE\u11F4\u11FF\u627Bqual;\u6AB0lantEqual;\u627Dilde;\u627FTh\xE1\u0F8C;\u6211\u0180;es\u1212\u1213\u1223\u62D1rset\u0100;E\u121C\u121D\u6283qual;\u6287et\xBB\u1213\u0580HRSacfhiors\u123E\u1244\u1249\u1255\u125E\u1271\u1276\u129F\u12C2\u12C8\u12D1ORN\u803B\xDE\u40DEADE;\u6122\u0100Hc\u124E\u1252cy;\u440By;\u4426\u0100bu\u125A\u125C;\u4009;\u43A4\u0180aey\u1265\u126A\u126Fron;\u4164dil;\u4162;\u4422r;\uC000\u{1D517}\u0100ei\u127B\u1289\u01F2\u1280\0\u1287efore;\u6234a;\u4398\u0100cn\u128E\u1298kSpace;\uC000\u205F\u200ASpace;\u6009lde\u0200;EFT\u12AB\u12AC\u12B2\u12BC\u623Cqual;\u6243ullEqual;\u6245ilde;\u6248pf;\uC000\u{1D54B}ipleDot;\u60DB\u0100ct\u12D6\u12DBr;\uC000\u{1D4AF}rok;\u4166\u0AE1\u12F7\u130E\u131A\u1326\0\u132C\u1331\0\0\0\0\0\u1338\u133D\u1377\u1385\0\u13FF\u1404\u140A\u1410\u0100cr\u12FB\u1301ute\u803B\xDA\u40DAr\u0100;o\u1307\u1308\u619Fcir;\u6949r\u01E3\u1313\0\u1316y;\u440Eve;\u416C\u0100iy\u131E\u1323rc\u803B\xDB\u40DB;\u4423blac;\u4170r;\uC000\u{1D518}rave\u803B\xD9\u40D9acr;\u416A\u0100di\u1341\u1369er\u0100BP\u1348\u135D\u0100ar\u134D\u1350r;\u405Fac\u0100ek\u1357\u1359;\u63DFet;\u63B5arenthesis;\u63DDon\u0100;P\u1370\u1371\u62C3lus;\u628E\u0100gp\u137B\u137Fon;\u4172f;\uC000\u{1D54C}\u0400ADETadps\u1395\u13AE\u13B8\u13C4\u03E8\u13D2\u13D7\u13F3rrow\u0180;BD\u1150\u13A0\u13A4ar;\u6912ownArrow;\u61C5ownArrow;\u6195quilibrium;\u696Eee\u0100;A\u13CB\u13CC\u62A5rrow;\u61A5own\xE1\u03F3er\u0100LR\u13DE\u13E8eftArrow;\u6196ightArrow;\u6197i\u0100;l\u13F9\u13FA\u43D2on;\u43A5ing;\u416Ecr;\uC000\u{1D4B0}ilde;\u4168ml\u803B\xDC\u40DC\u0480Dbcdefosv\u1427\u142C\u1430\u1433\u143E\u1485\u148A\u1490\u1496ash;\u62ABar;\u6AEBy;\u4412ash\u0100;l\u143B\u143C\u62A9;\u6AE6\u0100er\u1443\u1445;\u62C1\u0180bty\u144C\u1450\u147Aar;\u6016\u0100;i\u144F\u1455cal\u0200BLST\u1461\u1465\u146A\u1474ar;\u6223ine;\u407Ceparator;\u6758ilde;\u6240ThinSpace;\u600Ar;\uC000\u{1D519}pf;\uC000\u{1D54D}cr;\uC000\u{1D4B1}dash;\u62AA\u0280cefos\u14A7\u14AC\u14B1\u14B6\u14BCirc;\u4174dge;\u62C0r;\uC000\u{1D51A}pf;\uC000\u{1D54E}cr;\uC000\u{1D4B2}\u0200fios\u14CB\u14D0\u14D2\u14D8r;\uC000\u{1D51B};\u439Epf;\uC000\u{1D54F}cr;\uC000\u{1D4B3}\u0480AIUacfosu\u14F1\u14F5\u14F9\u14FD\u1504\u150F\u1514\u151A\u1520cy;\u442Fcy;\u4407cy;\u442Ecute\u803B\xDD\u40DD\u0100iy\u1509\u150Drc;\u4176;\u442Br;\uC000\u{1D51C}pf;\uC000\u{1D550}cr;\uC000\u{1D4B4}ml;\u4178\u0400Hacdefos\u1535\u1539\u153F\u154B\u154F\u155D\u1560\u1564cy;\u4416cute;\u4179\u0100ay\u1544\u1549ron;\u417D;\u4417ot;\u417B\u01F2\u1554\0\u155BoWidt\xE8\u0AD9a;\u4396r;\u6128pf;\u6124cr;\uC000\u{1D4B5}\u0BE1\u1583\u158A\u1590\0\u15B0\u15B6\u15BF\0\0\0\0\u15C6\u15DB\u15EB\u165F\u166D\0\u1695\u169B\u16B2\u16B9\0\u16BEcute\u803B\xE1\u40E1reve;\u4103\u0300;Ediuy\u159C\u159D\u15A1\u15A3\u15A8\u15AD\u623E;\uC000\u223E\u0333;\u623Frc\u803B\xE2\u40E2te\u80BB\xB4\u0306;\u4430lig\u803B\xE6\u40E6\u0100;r\xB2\u15BA;\uC000\u{1D51E}rave\u803B\xE0\u40E0\u0100ep\u15CA\u15D6\u0100fp\u15CF\u15D4sym;\u6135\xE8\u15D3ha;\u43B1\u0100ap\u15DFc\u0100cl\u15E4\u15E7r;\u4101g;\u6A3F\u0264\u15F0\0\0\u160A\u0280;adsv\u15FA\u15FB\u15FF\u1601\u1607\u6227nd;\u6A55;\u6A5Clope;\u6A58;\u6A5A\u0380;elmrsz\u1618\u1619\u161B\u161E\u163F\u164F\u1659\u6220;\u69A4e\xBB\u1619sd\u0100;a\u1625\u1626\u6221\u0461\u1630\u1632\u1634\u1636\u1638\u163A\u163C\u163E;\u69A8;\u69A9;\u69AA;\u69AB;\u69AC;\u69AD;\u69AE;\u69AFt\u0100;v\u1645\u1646\u621Fb\u0100;d\u164C\u164D\u62BE;\u699D\u0100pt\u1654\u1657h;\u6222\xBB\xB9arr;\u637C\u0100gp\u1663\u1667on;\u4105f;\uC000\u{1D552}\u0380;Eaeiop\u12C1\u167B\u167D\u1682\u1684\u1687\u168A;\u6A70cir;\u6A6F;\u624Ad;\u624Bs;\u4027rox\u0100;e\u12C1\u1692\xF1\u1683ing\u803B\xE5\u40E5\u0180cty\u16A1\u16A6\u16A8r;\uC000\u{1D4B6};\u402Amp\u0100;e\u12C1\u16AF\xF1\u0288ilde\u803B\xE3\u40E3ml\u803B\xE4\u40E4\u0100ci\u16C2\u16C8onin\xF4\u0272nt;\u6A11\u0800Nabcdefiklnoprsu\u16ED\u16F1\u1730\u173C\u1743\u1748\u1778\u177D\u17E0\u17E6\u1839\u1850\u170D\u193D\u1948\u1970ot;\u6AED\u0100cr\u16F6\u171Ek\u0200ceps\u1700\u1705\u170D\u1713ong;\u624Cpsilon;\u43F6rime;\u6035im\u0100;e\u171A\u171B\u623Dq;\u62CD\u0176\u1722\u1726ee;\u62BDed\u0100;g\u172C\u172D\u6305e\xBB\u172Drk\u0100;t\u135C\u1737brk;\u63B6\u0100oy\u1701\u1741;\u4431quo;\u601E\u0280cmprt\u1753\u175B\u1761\u1764\u1768aus\u0100;e\u010A\u0109ptyv;\u69B0s\xE9\u170Cno\xF5\u0113\u0180ahw\u176F\u1771\u1773;\u43B2;\u6136een;\u626Cr;\uC000\u{1D51F}g\u0380costuvw\u178D\u179D\u17B3\u17C1\u17D5\u17DB\u17DE\u0180aiu\u1794\u1796\u179A\xF0\u0760rc;\u65EFp\xBB\u1371\u0180dpt\u17A4\u17A8\u17ADot;\u6A00lus;\u6A01imes;\u6A02\u0271\u17B9\0\0\u17BEcup;\u6A06ar;\u6605riangle\u0100du\u17CD\u17D2own;\u65BDp;\u65B3plus;\u6A04e\xE5\u1444\xE5\u14ADarow;\u690D\u0180ako\u17ED\u1826\u1835\u0100cn\u17F2\u1823k\u0180lst\u17FA\u05AB\u1802ozenge;\u69EBriangle\u0200;dlr\u1812\u1813\u1818\u181D\u65B4own;\u65BEeft;\u65C2ight;\u65B8k;\u6423\u01B1\u182B\0\u1833\u01B2\u182F\0\u1831;\u6592;\u65914;\u6593ck;\u6588\u0100eo\u183E\u184D\u0100;q\u1843\u1846\uC000=\u20E5uiv;\uC000\u2261\u20E5t;\u6310\u0200ptwx\u1859\u185E\u1867\u186Cf;\uC000\u{1D553}\u0100;t\u13CB\u1863om\xBB\u13CCtie;\u62C8\u0600DHUVbdhmptuv\u1885\u1896\u18AA\u18BB\u18D7\u18DB\u18EC\u18FF\u1905\u190A\u1910\u1921\u0200LRlr\u188E\u1890\u1892\u1894;\u6557;\u6554;\u6556;\u6553\u0280;DUdu\u18A1\u18A2\u18A4\u18A6\u18A8\u6550;\u6566;\u6569;\u6564;\u6567\u0200LRlr\u18B3\u18B5\u18B7\u18B9;\u655D;\u655A;\u655C;\u6559\u0380;HLRhlr\u18CA\u18CB\u18CD\u18CF\u18D1\u18D3\u18D5\u6551;\u656C;\u6563;\u6560;\u656B;\u6562;\u655Fox;\u69C9\u0200LRlr\u18E4\u18E6\u18E8\u18EA;\u6555;\u6552;\u6510;\u650C\u0280;DUdu\u06BD\u18F7\u18F9\u18FB\u18FD;\u6565;\u6568;\u652C;\u6534inus;\u629Flus;\u629Eimes;\u62A0\u0200LRlr\u1919\u191B\u191D\u191F;\u655B;\u6558;\u6518;\u6514\u0380;HLRhlr\u1930\u1931\u1933\u1935\u1937\u1939\u193B\u6502;\u656A;\u6561;\u655E;\u653C;\u6524;\u651C\u0100ev\u0123\u1942bar\u803B\xA6\u40A6\u0200ceio\u1951\u1956\u195A\u1960r;\uC000\u{1D4B7}mi;\u604Fm\u0100;e\u171A\u171Cl\u0180;bh\u1968\u1969\u196B\u405C;\u69C5sub;\u67C8\u016C\u1974\u197El\u0100;e\u1979\u197A\u6022t\xBB\u197Ap\u0180;Ee\u012F\u1985\u1987;\u6AAE\u0100;q\u06DC\u06DB\u0CE1\u19A7\0\u19E8\u1A11\u1A15\u1A32\0\u1A37\u1A50\0\0\u1AB4\0\0\u1AC1\0\0\u1B21\u1B2E\u1B4D\u1B52\0\u1BFD\0\u1C0C\u0180cpr\u19AD\u19B2\u19DDute;\u4107\u0300;abcds\u19BF\u19C0\u19C4\u19CA\u19D5\u19D9\u6229nd;\u6A44rcup;\u6A49\u0100au\u19CF\u19D2p;\u6A4Bp;\u6A47ot;\u6A40;\uC000\u2229\uFE00\u0100eo\u19E2\u19E5t;\u6041\xEE\u0693\u0200aeiu\u19F0\u19FB\u1A01\u1A05\u01F0\u19F5\0\u19F8s;\u6A4Don;\u410Ddil\u803B\xE7\u40E7rc;\u4109ps\u0100;s\u1A0C\u1A0D\u6A4Cm;\u6A50ot;\u410B\u0180dmn\u1A1B\u1A20\u1A26il\u80BB\xB8\u01ADptyv;\u69B2t\u8100\xA2;e\u1A2D\u1A2E\u40A2r\xE4\u01B2r;\uC000\u{1D520}\u0180cei\u1A3D\u1A40\u1A4Dy;\u4447ck\u0100;m\u1A47\u1A48\u6713ark\xBB\u1A48;\u43C7r\u0380;Ecefms\u1A5F\u1A60\u1A62\u1A6B\u1AA4\u1AAA\u1AAE\u65CB;\u69C3\u0180;el\u1A69\u1A6A\u1A6D\u42C6q;\u6257e\u0261\u1A74\0\0\u1A88rrow\u0100lr\u1A7C\u1A81eft;\u61BAight;\u61BB\u0280RSacd\u1A92\u1A94\u1A96\u1A9A\u1A9F\xBB\u0F47;\u64C8st;\u629Birc;\u629Aash;\u629Dnint;\u6A10id;\u6AEFcir;\u69C2ubs\u0100;u\u1ABB\u1ABC\u6663it\xBB\u1ABC\u02EC\u1AC7\u1AD4\u1AFA\0\u1B0Aon\u0100;e\u1ACD\u1ACE\u403A\u0100;q\xC7\xC6\u026D\u1AD9\0\0\u1AE2a\u0100;t\u1ADE\u1ADF\u402C;\u4040\u0180;fl\u1AE8\u1AE9\u1AEB\u6201\xEE\u1160e\u0100mx\u1AF1\u1AF6ent\xBB\u1AE9e\xF3\u024D\u01E7\u1AFE\0\u1B07\u0100;d\u12BB\u1B02ot;\u6A6Dn\xF4\u0246\u0180fry\u1B10\u1B14\u1B17;\uC000\u{1D554}o\xE4\u0254\u8100\xA9;s\u0155\u1B1Dr;\u6117\u0100ao\u1B25\u1B29rr;\u61B5ss;\u6717\u0100cu\u1B32\u1B37r;\uC000\u{1D4B8}\u0100bp\u1B3C\u1B44\u0100;e\u1B41\u1B42\u6ACF;\u6AD1\u0100;e\u1B49\u1B4A\u6AD0;\u6AD2dot;\u62EF\u0380delprvw\u1B60\u1B6C\u1B77\u1B82\u1BAC\u1BD4\u1BF9arr\u0100lr\u1B68\u1B6A;\u6938;\u6935\u0270\u1B72\0\0\u1B75r;\u62DEc;\u62DFarr\u0100;p\u1B7F\u1B80\u61B6;\u693D\u0300;bcdos\u1B8F\u1B90\u1B96\u1BA1\u1BA5\u1BA8\u622Arcap;\u6A48\u0100au\u1B9B\u1B9Ep;\u6A46p;\u6A4Aot;\u628Dr;\u6A45;\uC000\u222A\uFE00\u0200alrv\u1BB5\u1BBF\u1BDE\u1BE3rr\u0100;m\u1BBC\u1BBD\u61B7;\u693Cy\u0180evw\u1BC7\u1BD4\u1BD8q\u0270\u1BCE\0\0\u1BD2re\xE3\u1B73u\xE3\u1B75ee;\u62CEedge;\u62CFen\u803B\xA4\u40A4earrow\u0100lr\u1BEE\u1BF3eft\xBB\u1B80ight\xBB\u1BBDe\xE4\u1BDD\u0100ci\u1C01\u1C07onin\xF4\u01F7nt;\u6231lcty;\u632D\u0980AHabcdefhijlorstuwz\u1C38\u1C3B\u1C3F\u1C5D\u1C69\u1C75\u1C8A\u1C9E\u1CAC\u1CB7\u1CFB\u1CFF\u1D0D\u1D7B\u1D91\u1DAB\u1DBB\u1DC6\u1DCDr\xF2\u0381ar;\u6965\u0200glrs\u1C48\u1C4D\u1C52\u1C54ger;\u6020eth;\u6138\xF2\u1133h\u0100;v\u1C5A\u1C5B\u6010\xBB\u090A\u016B\u1C61\u1C67arow;\u690Fa\xE3\u0315\u0100ay\u1C6E\u1C73ron;\u410F;\u4434\u0180;ao\u0332\u1C7C\u1C84\u0100gr\u02BF\u1C81r;\u61CAtseq;\u6A77\u0180glm\u1C91\u1C94\u1C98\u803B\xB0\u40B0ta;\u43B4ptyv;\u69B1\u0100ir\u1CA3\u1CA8sht;\u697F;\uC000\u{1D521}ar\u0100lr\u1CB3\u1CB5\xBB\u08DC\xBB\u101E\u0280aegsv\u1CC2\u0378\u1CD6\u1CDC\u1CE0m\u0180;os\u0326\u1CCA\u1CD4nd\u0100;s\u0326\u1CD1uit;\u6666amma;\u43DDin;\u62F2\u0180;io\u1CE7\u1CE8\u1CF8\u40F7de\u8100\xF7;o\u1CE7\u1CF0ntimes;\u62C7n\xF8\u1CF7cy;\u4452c\u026F\u1D06\0\0\u1D0Arn;\u631Eop;\u630D\u0280lptuw\u1D18\u1D1D\u1D22\u1D49\u1D55lar;\u4024f;\uC000\u{1D555}\u0280;emps\u030B\u1D2D\u1D37\u1D3D\u1D42q\u0100;d\u0352\u1D33ot;\u6251inus;\u6238lus;\u6214quare;\u62A1blebarwedg\xE5\xFAn\u0180adh\u112E\u1D5D\u1D67ownarrow\xF3\u1C83arpoon\u0100lr\u1D72\u1D76ef\xF4\u1CB4igh\xF4\u1CB6\u0162\u1D7F\u1D85karo\xF7\u0F42\u026F\u1D8A\0\0\u1D8Ern;\u631Fop;\u630C\u0180cot\u1D98\u1DA3\u1DA6\u0100ry\u1D9D\u1DA1;\uC000\u{1D4B9};\u4455l;\u69F6rok;\u4111\u0100dr\u1DB0\u1DB4ot;\u62F1i\u0100;f\u1DBA\u1816\u65BF\u0100ah\u1DC0\u1DC3r\xF2\u0429a\xF2\u0FA6angle;\u69A6\u0100ci\u1DD2\u1DD5y;\u445Fgrarr;\u67FF\u0900Dacdefglmnopqrstux\u1E01\u1E09\u1E19\u1E38\u0578\u1E3C\u1E49\u1E61\u1E7E\u1EA5\u1EAF\u1EBD\u1EE1\u1F2A\u1F37\u1F44\u1F4E\u1F5A\u0100Do\u1E06\u1D34o\xF4\u1C89\u0100cs\u1E0E\u1E14ute\u803B\xE9\u40E9ter;\u6A6E\u0200aioy\u1E22\u1E27\u1E31\u1E36ron;\u411Br\u0100;c\u1E2D\u1E2E\u6256\u803B\xEA\u40EAlon;\u6255;\u444Dot;\u4117\u0100Dr\u1E41\u1E45ot;\u6252;\uC000\u{1D522}\u0180;rs\u1E50\u1E51\u1E57\u6A9Aave\u803B\xE8\u40E8\u0100;d\u1E5C\u1E5D\u6A96ot;\u6A98\u0200;ils\u1E6A\u1E6B\u1E72\u1E74\u6A99nters;\u63E7;\u6113\u0100;d\u1E79\u1E7A\u6A95ot;\u6A97\u0180aps\u1E85\u1E89\u1E97cr;\u4113ty\u0180;sv\u1E92\u1E93\u1E95\u6205et\xBB\u1E93p\u01001;\u1E9D\u1EA4\u0133\u1EA1\u1EA3;\u6004;\u6005\u6003\u0100gs\u1EAA\u1EAC;\u414Bp;\u6002\u0100gp\u1EB4\u1EB8on;\u4119f;\uC000\u{1D556}\u0180als\u1EC4\u1ECE\u1ED2r\u0100;s\u1ECA\u1ECB\u62D5l;\u69E3us;\u6A71i\u0180;lv\u1EDA\u1EDB\u1EDF\u43B5on\xBB\u1EDB;\u43F5\u0200csuv\u1EEA\u1EF3\u1F0B\u1F23\u0100io\u1EEF\u1E31rc\xBB\u1E2E\u0269\u1EF9\0\0\u1EFB\xED\u0548ant\u0100gl\u1F02\u1F06tr\xBB\u1E5Dess\xBB\u1E7A\u0180aei\u1F12\u1F16\u1F1Als;\u403Dst;\u625Fv\u0100;D\u0235\u1F20D;\u6A78parsl;\u69E5\u0100Da\u1F2F\u1F33ot;\u6253rr;\u6971\u0180cdi\u1F3E\u1F41\u1EF8r;\u612Fo\xF4\u0352\u0100ah\u1F49\u1F4B;\u43B7\u803B\xF0\u40F0\u0100mr\u1F53\u1F57l\u803B\xEB\u40EBo;\u60AC\u0180cip\u1F61\u1F64\u1F67l;\u4021s\xF4\u056E\u0100eo\u1F6C\u1F74ctatio\xEE\u0559nential\xE5\u0579\u09E1\u1F92\0\u1F9E\0\u1FA1\u1FA7\0\0\u1FC6\u1FCC\0\u1FD3\0\u1FE6\u1FEA\u2000\0\u2008\u205Allingdotse\xF1\u1E44y;\u4444male;\u6640\u0180ilr\u1FAD\u1FB3\u1FC1lig;\u8000\uFB03\u0269\u1FB9\0\0\u1FBDg;\u8000\uFB00ig;\u8000\uFB04;\uC000\u{1D523}lig;\u8000\uFB01lig;\uC000fj\u0180alt\u1FD9\u1FDC\u1FE1t;\u666Dig;\u8000\uFB02ns;\u65B1of;\u4192\u01F0\u1FEE\0\u1FF3f;\uC000\u{1D557}\u0100ak\u05BF\u1FF7\u0100;v\u1FFC\u1FFD\u62D4;\u6AD9artint;\u6A0D\u0100ao\u200C\u2055\u0100cs\u2011\u2052\u03B1\u201A\u2030\u2038\u2045\u2048\0\u2050\u03B2\u2022\u2025\u2027\u202A\u202C\0\u202E\u803B\xBD\u40BD;\u6153\u803B\xBC\u40BC;\u6155;\u6159;\u615B\u01B3\u2034\0\u2036;\u6154;\u6156\u02B4\u203E\u2041\0\0\u2043\u803B\xBE\u40BE;\u6157;\u615C5;\u6158\u01B6\u204C\0\u204E;\u615A;\u615D8;\u615El;\u6044wn;\u6322cr;\uC000\u{1D4BB}\u0880Eabcdefgijlnorstv\u2082\u2089\u209F\u20A5\u20B0\u20B4\u20F0\u20F5\u20FA\u20FF\u2103\u2112\u2138\u0317\u213E\u2152\u219E\u0100;l\u064D\u2087;\u6A8C\u0180cmp\u2090\u2095\u209Dute;\u41F5ma\u0100;d\u209C\u1CDA\u43B3;\u6A86reve;\u411F\u0100iy\u20AA\u20AErc;\u411D;\u4433ot;\u4121\u0200;lqs\u063E\u0642\u20BD\u20C9\u0180;qs\u063E\u064C\u20C4lan\xF4\u0665\u0200;cdl\u0665\u20D2\u20D5\u20E5c;\u6AA9ot\u0100;o\u20DC\u20DD\u6A80\u0100;l\u20E2\u20E3\u6A82;\u6A84\u0100;e\u20EA\u20ED\uC000\u22DB\uFE00s;\u6A94r;\uC000\u{1D524}\u0100;g\u0673\u061Bmel;\u6137cy;\u4453\u0200;Eaj\u065A\u210C\u210E\u2110;\u6A92;\u6AA5;\u6AA4\u0200Eaes\u211B\u211D\u2129\u2134;\u6269p\u0100;p\u2123\u2124\u6A8Arox\xBB\u2124\u0100;q\u212E\u212F\u6A88\u0100;q\u212E\u211Bim;\u62E7pf;\uC000\u{1D558}\u0100ci\u2143\u2146r;\u610Am\u0180;el\u066B\u214E\u2150;\u6A8E;\u6A90\u8300>;cdlqr\u05EE\u2160\u216A\u216E\u2173\u2179\u0100ci\u2165\u2167;\u6AA7r;\u6A7Aot;\u62D7Par;\u6995uest;\u6A7C\u0280adels\u2184\u216A\u2190\u0656\u219B\u01F0\u2189\0\u218Epro\xF8\u209Er;\u6978q\u0100lq\u063F\u2196les\xF3\u2088i\xED\u066B\u0100en\u21A3\u21ADrtneqq;\uC000\u2269\uFE00\xC5\u21AA\u0500Aabcefkosy\u21C4\u21C7\u21F1\u21F5\u21FA\u2218\u221D\u222F\u2268\u227Dr\xF2\u03A0\u0200ilmr\u21D0\u21D4\u21D7\u21DBrs\xF0\u1484f\xBB\u2024il\xF4\u06A9\u0100dr\u21E0\u21E4cy;\u444A\u0180;cw\u08F4\u21EB\u21EFir;\u6948;\u61ADar;\u610Firc;\u4125\u0180alr\u2201\u220E\u2213rts\u0100;u\u2209\u220A\u6665it\xBB\u220Alip;\u6026con;\u62B9r;\uC000\u{1D525}s\u0100ew\u2223\u2229arow;\u6925arow;\u6926\u0280amopr\u223A\u223E\u2243\u225E\u2263rr;\u61FFtht;\u623Bk\u0100lr\u2249\u2253eftarrow;\u61A9ightarrow;\u61AAf;\uC000\u{1D559}bar;\u6015\u0180clt\u226F\u2274\u2278r;\uC000\u{1D4BD}as\xE8\u21F4rok;\u4127\u0100bp\u2282\u2287ull;\u6043hen\xBB\u1C5B\u0AE1\u22A3\0\u22AA\0\u22B8\u22C5\u22CE\0\u22D5\u22F3\0\0\u22F8\u2322\u2367\u2362\u237F\0\u2386\u23AA\u23B4cute\u803B\xED\u40ED\u0180;iy\u0771\u22B0\u22B5rc\u803B\xEE\u40EE;\u4438\u0100cx\u22BC\u22BFy;\u4435cl\u803B\xA1\u40A1\u0100fr\u039F\u22C9;\uC000\u{1D526}rave\u803B\xEC\u40EC\u0200;ino\u073E\u22DD\u22E9\u22EE\u0100in\u22E2\u22E6nt;\u6A0Ct;\u622Dfin;\u69DCta;\u6129lig;\u4133\u0180aop\u22FE\u231A\u231D\u0180cgt\u2305\u2308\u2317r;\u412B\u0180elp\u071F\u230F\u2313in\xE5\u078Ear\xF4\u0720h;\u4131f;\u62B7ed;\u41B5\u0280;cfot\u04F4\u232C\u2331\u233D\u2341are;\u6105in\u0100;t\u2338\u2339\u621Eie;\u69DDdo\xF4\u2319\u0280;celp\u0757\u234C\u2350\u235B\u2361al;\u62BA\u0100gr\u2355\u2359er\xF3\u1563\xE3\u234Darhk;\u6A17rod;\u6A3C\u0200cgpt\u236F\u2372\u2376\u237By;\u4451on;\u412Ff;\uC000\u{1D55A}a;\u43B9uest\u803B\xBF\u40BF\u0100ci\u238A\u238Fr;\uC000\u{1D4BE}n\u0280;Edsv\u04F4\u239B\u239D\u23A1\u04F3;\u62F9ot;\u62F5\u0100;v\u23A6\u23A7\u62F4;\u62F3\u0100;i\u0777\u23AElde;\u4129\u01EB\u23B8\0\u23BCcy;\u4456l\u803B\xEF\u40EF\u0300cfmosu\u23CC\u23D7\u23DC\u23E1\u23E7\u23F5\u0100iy\u23D1\u23D5rc;\u4135;\u4439r;\uC000\u{1D527}ath;\u4237pf;\uC000\u{1D55B}\u01E3\u23EC\0\u23F1r;\uC000\u{1D4BF}rcy;\u4458kcy;\u4454\u0400acfghjos\u240B\u2416\u2422\u2427\u242D\u2431\u2435\u243Bppa\u0100;v\u2413\u2414\u43BA;\u43F0\u0100ey\u241B\u2420dil;\u4137;\u443Ar;\uC000\u{1D528}reen;\u4138cy;\u4445cy;\u445Cpf;\uC000\u{1D55C}cr;\uC000\u{1D4C0}\u0B80ABEHabcdefghjlmnoprstuv\u2470\u2481\u2486\u248D\u2491\u250E\u253D\u255A\u2580\u264E\u265E\u2665\u2679\u267D\u269A\u26B2\u26D8\u275D\u2768\u278B\u27C0\u2801\u2812\u0180art\u2477\u247A\u247Cr\xF2\u09C6\xF2\u0395ail;\u691Barr;\u690E\u0100;g\u0994\u248B;\u6A8Bar;\u6962\u0963\u24A5\0\u24AA\0\u24B1\0\0\0\0\0\u24B5\u24BA\0\u24C6\u24C8\u24CD\0\u24F9ute;\u413Amptyv;\u69B4ra\xEE\u084Cbda;\u43BBg\u0180;dl\u088E\u24C1\u24C3;\u6991\xE5\u088E;\u6A85uo\u803B\xAB\u40ABr\u0400;bfhlpst\u0899\u24DE\u24E6\u24E9\u24EB\u24EE\u24F1\u24F5\u0100;f\u089D\u24E3s;\u691Fs;\u691D\xEB\u2252p;\u61ABl;\u6939im;\u6973l;\u61A2\u0180;ae\u24FF\u2500\u2504\u6AABil;\u6919\u0100;s\u2509\u250A\u6AAD;\uC000\u2AAD\uFE00\u0180abr\u2515\u2519\u251Drr;\u690Crk;\u6772\u0100ak\u2522\u252Cc\u0100ek\u2528\u252A;\u407B;\u405B\u0100es\u2531\u2533;\u698Bl\u0100du\u2539\u253B;\u698F;\u698D\u0200aeuy\u2546\u254B\u2556\u2558ron;\u413E\u0100di\u2550\u2554il;\u413C\xEC\u08B0\xE2\u2529;\u443B\u0200cqrs\u2563\u2566\u256D\u257Da;\u6936uo\u0100;r\u0E19\u1746\u0100du\u2572\u2577har;\u6967shar;\u694Bh;\u61B2\u0280;fgqs\u258B\u258C\u0989\u25F3\u25FF\u6264t\u0280ahlrt\u2598\u25A4\u25B7\u25C2\u25E8rrow\u0100;t\u0899\u25A1a\xE9\u24F6arpoon\u0100du\u25AF\u25B4own\xBB\u045Ap\xBB\u0966eftarrows;\u61C7ight\u0180ahs\u25CD\u25D6\u25DErrow\u0100;s\u08F4\u08A7arpoon\xF3\u0F98quigarro\xF7\u21F0hreetimes;\u62CB\u0180;qs\u258B\u0993\u25FAlan\xF4\u09AC\u0280;cdgs\u09AC\u260A\u260D\u261D\u2628c;\u6AA8ot\u0100;o\u2614\u2615\u6A7F\u0100;r\u261A\u261B\u6A81;\u6A83\u0100;e\u2622\u2625\uC000\u22DA\uFE00s;\u6A93\u0280adegs\u2633\u2639\u263D\u2649\u264Bppro\xF8\u24C6ot;\u62D6q\u0100gq\u2643\u2645\xF4\u0989gt\xF2\u248C\xF4\u099Bi\xED\u09B2\u0180ilr\u2655\u08E1\u265Asht;\u697C;\uC000\u{1D529}\u0100;E\u099C\u2663;\u6A91\u0161\u2669\u2676r\u0100du\u25B2\u266E\u0100;l\u0965\u2673;\u696Alk;\u6584cy;\u4459\u0280;acht\u0A48\u2688\u268B\u2691\u2696r\xF2\u25C1orne\xF2\u1D08ard;\u696Bri;\u65FA\u0100io\u269F\u26A4dot;\u4140ust\u0100;a\u26AC\u26AD\u63B0che\xBB\u26AD\u0200Eaes\u26BB\u26BD\u26C9\u26D4;\u6268p\u0100;p\u26C3\u26C4\u6A89rox\xBB\u26C4\u0100;q\u26CE\u26CF\u6A87\u0100;q\u26CE\u26BBim;\u62E6\u0400abnoptwz\u26E9\u26F4\u26F7\u271A\u272F\u2741\u2747\u2750\u0100nr\u26EE\u26F1g;\u67ECr;\u61FDr\xEB\u08C1g\u0180lmr\u26FF\u270D\u2714eft\u0100ar\u09E6\u2707ight\xE1\u09F2apsto;\u67FCight\xE1\u09FDparrow\u0100lr\u2725\u2729ef\xF4\u24EDight;\u61AC\u0180afl\u2736\u2739\u273Dr;\u6985;\uC000\u{1D55D}us;\u6A2Dimes;\u6A34\u0161\u274B\u274Fst;\u6217\xE1\u134E\u0180;ef\u2757\u2758\u1800\u65CAnge\xBB\u2758ar\u0100;l\u2764\u2765\u4028t;\u6993\u0280achmt\u2773\u2776\u277C\u2785\u2787r\xF2\u08A8orne\xF2\u1D8Car\u0100;d\u0F98\u2783;\u696D;\u600Eri;\u62BF\u0300achiqt\u2798\u279D\u0A40\u27A2\u27AE\u27BBquo;\u6039r;\uC000\u{1D4C1}m\u0180;eg\u09B2\u27AA\u27AC;\u6A8D;\u6A8F\u0100bu\u252A\u27B3o\u0100;r\u0E1F\u27B9;\u601Arok;\u4142\u8400<;cdhilqr\u082B\u27D2\u2639\u27DC\u27E0\u27E5\u27EA\u27F0\u0100ci\u27D7\u27D9;\u6AA6r;\u6A79re\xE5\u25F2mes;\u62C9arr;\u6976uest;\u6A7B\u0100Pi\u27F5\u27F9ar;\u6996\u0180;ef\u2800\u092D\u181B\u65C3r\u0100du\u2807\u280Dshar;\u694Ahar;\u6966\u0100en\u2817\u2821rtneqq;\uC000\u2268\uFE00\xC5\u281E\u0700Dacdefhilnopsu\u2840\u2845\u2882\u288E\u2893\u28A0\u28A5\u28A8\u28DA\u28E2\u28E4\u0A83\u28F3\u2902Dot;\u623A\u0200clpr\u284E\u2852\u2863\u287Dr\u803B\xAF\u40AF\u0100et\u2857\u2859;\u6642\u0100;e\u285E\u285F\u6720se\xBB\u285F\u0100;s\u103B\u2868to\u0200;dlu\u103B\u2873\u2877\u287Bow\xEE\u048Cef\xF4\u090F\xF0\u13D1ker;\u65AE\u0100oy\u2887\u288Cmma;\u6A29;\u443Cash;\u6014asuredangle\xBB\u1626r;\uC000\u{1D52A}o;\u6127\u0180cdn\u28AF\u28B4\u28C9ro\u803B\xB5\u40B5\u0200;acd\u1464\u28BD\u28C0\u28C4s\xF4\u16A7ir;\u6AF0ot\u80BB\xB7\u01B5us\u0180;bd\u28D2\u1903\u28D3\u6212\u0100;u\u1D3C\u28D8;\u6A2A\u0163\u28DE\u28E1p;\u6ADB\xF2\u2212\xF0\u0A81\u0100dp\u28E9\u28EEels;\u62A7f;\uC000\u{1D55E}\u0100ct\u28F8\u28FDr;\uC000\u{1D4C2}pos\xBB\u159D\u0180;lm\u2909\u290A\u290D\u43BCtimap;\u62B8\u0C00GLRVabcdefghijlmoprstuvw\u2942\u2953\u297E\u2989\u2998\u29DA\u29E9\u2A15\u2A1A\u2A58\u2A5D\u2A83\u2A95\u2AA4\u2AA8\u2B04\u2B07\u2B44\u2B7F\u2BAE\u2C34\u2C67\u2C7C\u2CE9\u0100gt\u2947\u294B;\uC000\u22D9\u0338\u0100;v\u2950\u0BCF\uC000\u226B\u20D2\u0180elt\u295A\u2972\u2976ft\u0100ar\u2961\u2967rrow;\u61CDightarrow;\u61CE;\uC000\u22D8\u0338\u0100;v\u297B\u0C47\uC000\u226A\u20D2ightarrow;\u61CF\u0100Dd\u298E\u2993ash;\u62AFash;\u62AE\u0280bcnpt\u29A3\u29A7\u29AC\u29B1\u29CCla\xBB\u02DEute;\u4144g;\uC000\u2220\u20D2\u0280;Eiop\u0D84\u29BC\u29C0\u29C5\u29C8;\uC000\u2A70\u0338d;\uC000\u224B\u0338s;\u4149ro\xF8\u0D84ur\u0100;a\u29D3\u29D4\u666El\u0100;s\u29D3\u0B38\u01F3\u29DF\0\u29E3p\u80BB\xA0\u0B37mp\u0100;e\u0BF9\u0C00\u0280aeouy\u29F4\u29FE\u2A03\u2A10\u2A13\u01F0\u29F9\0\u29FB;\u6A43on;\u4148dil;\u4146ng\u0100;d\u0D7E\u2A0Aot;\uC000\u2A6D\u0338p;\u6A42;\u443Dash;\u6013\u0380;Aadqsx\u0B92\u2A29\u2A2D\u2A3B\u2A41\u2A45\u2A50rr;\u61D7r\u0100hr\u2A33\u2A36k;\u6924\u0100;o\u13F2\u13F0ot;\uC000\u2250\u0338ui\xF6\u0B63\u0100ei\u2A4A\u2A4Ear;\u6928\xED\u0B98ist\u0100;s\u0BA0\u0B9Fr;\uC000\u{1D52B}\u0200Eest\u0BC5\u2A66\u2A79\u2A7C\u0180;qs\u0BBC\u2A6D\u0BE1\u0180;qs\u0BBC\u0BC5\u2A74lan\xF4\u0BE2i\xED\u0BEA\u0100;r\u0BB6\u2A81\xBB\u0BB7\u0180Aap\u2A8A\u2A8D\u2A91r\xF2\u2971rr;\u61AEar;\u6AF2\u0180;sv\u0F8D\u2A9C\u0F8C\u0100;d\u2AA1\u2AA2\u62FC;\u62FAcy;\u445A\u0380AEadest\u2AB7\u2ABA\u2ABE\u2AC2\u2AC5\u2AF6\u2AF9r\xF2\u2966;\uC000\u2266\u0338rr;\u619Ar;\u6025\u0200;fqs\u0C3B\u2ACE\u2AE3\u2AEFt\u0100ar\u2AD4\u2AD9rro\xF7\u2AC1ightarro\xF7\u2A90\u0180;qs\u0C3B\u2ABA\u2AEAlan\xF4\u0C55\u0100;s\u0C55\u2AF4\xBB\u0C36i\xED\u0C5D\u0100;r\u0C35\u2AFEi\u0100;e\u0C1A\u0C25i\xE4\u0D90\u0100pt\u2B0C\u2B11f;\uC000\u{1D55F}\u8180\xAC;in\u2B19\u2B1A\u2B36\u40ACn\u0200;Edv\u0B89\u2B24\u2B28\u2B2E;\uC000\u22F9\u0338ot;\uC000\u22F5\u0338\u01E1\u0B89\u2B33\u2B35;\u62F7;\u62F6i\u0100;v\u0CB8\u2B3C\u01E1\u0CB8\u2B41\u2B43;\u62FE;\u62FD\u0180aor\u2B4B\u2B63\u2B69r\u0200;ast\u0B7B\u2B55\u2B5A\u2B5Flle\xEC\u0B7Bl;\uC000\u2AFD\u20E5;\uC000\u2202\u0338lint;\u6A14\u0180;ce\u0C92\u2B70\u2B73u\xE5\u0CA5\u0100;c\u0C98\u2B78\u0100;e\u0C92\u2B7D\xF1\u0C98\u0200Aait\u2B88\u2B8B\u2B9D\u2BA7r\xF2\u2988rr\u0180;cw\u2B94\u2B95\u2B99\u619B;\uC000\u2933\u0338;\uC000\u219D\u0338ghtarrow\xBB\u2B95ri\u0100;e\u0CCB\u0CD6\u0380chimpqu\u2BBD\u2BCD\u2BD9\u2B04\u0B78\u2BE4\u2BEF\u0200;cer\u0D32\u2BC6\u0D37\u2BC9u\xE5\u0D45;\uC000\u{1D4C3}ort\u026D\u2B05\0\0\u2BD6ar\xE1\u2B56m\u0100;e\u0D6E\u2BDF\u0100;q\u0D74\u0D73su\u0100bp\u2BEB\u2BED\xE5\u0CF8\xE5\u0D0B\u0180bcp\u2BF6\u2C11\u2C19\u0200;Ees\u2BFF\u2C00\u0D22\u2C04\u6284;\uC000\u2AC5\u0338et\u0100;e\u0D1B\u2C0Bq\u0100;q\u0D23\u2C00c\u0100;e\u0D32\u2C17\xF1\u0D38\u0200;Ees\u2C22\u2C23\u0D5F\u2C27\u6285;\uC000\u2AC6\u0338et\u0100;e\u0D58\u2C2Eq\u0100;q\u0D60\u2C23\u0200gilr\u2C3D\u2C3F\u2C45\u2C47\xEC\u0BD7lde\u803B\xF1\u40F1\xE7\u0C43iangle\u0100lr\u2C52\u2C5Ceft\u0100;e\u0C1A\u2C5A\xF1\u0C26ight\u0100;e\u0CCB\u2C65\xF1\u0CD7\u0100;m\u2C6C\u2C6D\u43BD\u0180;es\u2C74\u2C75\u2C79\u4023ro;\u6116p;\u6007\u0480DHadgilrs\u2C8F\u2C94\u2C99\u2C9E\u2CA3\u2CB0\u2CB6\u2CD3\u2CE3ash;\u62ADarr;\u6904p;\uC000\u224D\u20D2ash;\u62AC\u0100et\u2CA8\u2CAC;\uC000\u2265\u20D2;\uC000>\u20D2nfin;\u69DE\u0180Aet\u2CBD\u2CC1\u2CC5rr;\u6902;\uC000\u2264\u20D2\u0100;r\u2CCA\u2CCD\uC000<\u20D2ie;\uC000\u22B4\u20D2\u0100At\u2CD8\u2CDCrr;\u6903rie;\uC000\u22B5\u20D2im;\uC000\u223C\u20D2\u0180Aan\u2CF0\u2CF4\u2D02rr;\u61D6r\u0100hr\u2CFA\u2CFDk;\u6923\u0100;o\u13E7\u13E5ear;\u6927\u1253\u1A95\0\0\0\0\0\0\0\0\0\0\0\0\0\u2D2D\0\u2D38\u2D48\u2D60\u2D65\u2D72\u2D84\u1B07\0\0\u2D8D\u2DAB\0\u2DC8\u2DCE\0\u2DDC\u2E19\u2E2B\u2E3E\u2E43\u0100cs\u2D31\u1A97ute\u803B\xF3\u40F3\u0100iy\u2D3C\u2D45r\u0100;c\u1A9E\u2D42\u803B\xF4\u40F4;\u443E\u0280abios\u1AA0\u2D52\u2D57\u01C8\u2D5Alac;\u4151v;\u6A38old;\u69BClig;\u4153\u0100cr\u2D69\u2D6Dir;\u69BF;\uC000\u{1D52C}\u036F\u2D79\0\0\u2D7C\0\u2D82n;\u42DBave\u803B\xF2\u40F2;\u69C1\u0100bm\u2D88\u0DF4ar;\u69B5\u0200acit\u2D95\u2D98\u2DA5\u2DA8r\xF2\u1A80\u0100ir\u2D9D\u2DA0r;\u69BEoss;\u69BBn\xE5\u0E52;\u69C0\u0180aei\u2DB1\u2DB5\u2DB9cr;\u414Dga;\u43C9\u0180cdn\u2DC0\u2DC5\u01CDron;\u43BF;\u69B6pf;\uC000\u{1D560}\u0180ael\u2DD4\u2DD7\u01D2r;\u69B7rp;\u69B9\u0380;adiosv\u2DEA\u2DEB\u2DEE\u2E08\u2E0D\u2E10\u2E16\u6228r\xF2\u1A86\u0200;efm\u2DF7\u2DF8\u2E02\u2E05\u6A5Dr\u0100;o\u2DFE\u2DFF\u6134f\xBB\u2DFF\u803B\xAA\u40AA\u803B\xBA\u40BAgof;\u62B6r;\u6A56lope;\u6A57;\u6A5B\u0180clo\u2E1F\u2E21\u2E27\xF2\u2E01ash\u803B\xF8\u40F8l;\u6298i\u016C\u2E2F\u2E34de\u803B\xF5\u40F5es\u0100;a\u01DB\u2E3As;\u6A36ml\u803B\xF6\u40F6bar;\u633D\u0AE1\u2E5E\0\u2E7D\0\u2E80\u2E9D\0\u2EA2\u2EB9\0\0\u2ECB\u0E9C\0\u2F13\0\0\u2F2B\u2FBC\0\u2FC8r\u0200;ast\u0403\u2E67\u2E72\u0E85\u8100\xB6;l\u2E6D\u2E6E\u40B6le\xEC\u0403\u0269\u2E78\0\0\u2E7Bm;\u6AF3;\u6AFDy;\u443Fr\u0280cimpt\u2E8B\u2E8F\u2E93\u1865\u2E97nt;\u4025od;\u402Eil;\u6030enk;\u6031r;\uC000\u{1D52D}\u0180imo\u2EA8\u2EB0\u2EB4\u0100;v\u2EAD\u2EAE\u43C6;\u43D5ma\xF4\u0A76ne;\u660E\u0180;tv\u2EBF\u2EC0\u2EC8\u43C0chfork\xBB\u1FFD;\u43D6\u0100au\u2ECF\u2EDFn\u0100ck\u2ED5\u2EDDk\u0100;h\u21F4\u2EDB;\u610E\xF6\u21F4s\u0480;abcdemst\u2EF3\u2EF4\u1908\u2EF9\u2EFD\u2F04\u2F06\u2F0A\u2F0E\u402Bcir;\u6A23ir;\u6A22\u0100ou\u1D40\u2F02;\u6A25;\u6A72n\u80BB\xB1\u0E9Dim;\u6A26wo;\u6A27\u0180ipu\u2F19\u2F20\u2F25ntint;\u6A15f;\uC000\u{1D561}nd\u803B\xA3\u40A3\u0500;Eaceinosu\u0EC8\u2F3F\u2F41\u2F44\u2F47\u2F81\u2F89\u2F92\u2F7E\u2FB6;\u6AB3p;\u6AB7u\xE5\u0ED9\u0100;c\u0ECE\u2F4C\u0300;acens\u0EC8\u2F59\u2F5F\u2F66\u2F68\u2F7Eppro\xF8\u2F43urlye\xF1\u0ED9\xF1\u0ECE\u0180aes\u2F6F\u2F76\u2F7Approx;\u6AB9qq;\u6AB5im;\u62E8i\xED\u0EDFme\u0100;s\u2F88\u0EAE\u6032\u0180Eas\u2F78\u2F90\u2F7A\xF0\u2F75\u0180dfp\u0EEC\u2F99\u2FAF\u0180als\u2FA0\u2FA5\u2FAAlar;\u632Eine;\u6312urf;\u6313\u0100;t\u0EFB\u2FB4\xEF\u0EFBrel;\u62B0\u0100ci\u2FC0\u2FC5r;\uC000\u{1D4C5};\u43C8ncsp;\u6008\u0300fiopsu\u2FDA\u22E2\u2FDF\u2FE5\u2FEB\u2FF1r;\uC000\u{1D52E}pf;\uC000\u{1D562}rime;\u6057cr;\uC000\u{1D4C6}\u0180aeo\u2FF8\u3009\u3013t\u0100ei\u2FFE\u3005rnion\xF3\u06B0nt;\u6A16st\u0100;e\u3010\u3011\u403F\xF1\u1F19\xF4\u0F14\u0A80ABHabcdefhilmnoprstux\u3040\u3051\u3055\u3059\u30E0\u310E\u312B\u3147\u3162\u3172\u318E\u3206\u3215\u3224\u3229\u3258\u326E\u3272\u3290\u32B0\u32B7\u0180art\u3047\u304A\u304Cr\xF2\u10B3\xF2\u03DDail;\u691Car\xF2\u1C65ar;\u6964\u0380cdenqrt\u3068\u3075\u3078\u307F\u308F\u3094\u30CC\u0100eu\u306D\u3071;\uC000\u223D\u0331te;\u4155i\xE3\u116Emptyv;\u69B3g\u0200;del\u0FD1\u3089\u308B\u308D;\u6992;\u69A5\xE5\u0FD1uo\u803B\xBB\u40BBr\u0580;abcfhlpstw\u0FDC\u30AC\u30AF\u30B7\u30B9\u30BC\u30BE\u30C0\u30C3\u30C7\u30CAp;\u6975\u0100;f\u0FE0\u30B4s;\u6920;\u6933s;\u691E\xEB\u225D\xF0\u272El;\u6945im;\u6974l;\u61A3;\u619D\u0100ai\u30D1\u30D5il;\u691Ao\u0100;n\u30DB\u30DC\u6236al\xF3\u0F1E\u0180abr\u30E7\u30EA\u30EEr\xF2\u17E5rk;\u6773\u0100ak\u30F3\u30FDc\u0100ek\u30F9\u30FB;\u407D;\u405D\u0100es\u3102\u3104;\u698Cl\u0100du\u310A\u310C;\u698E;\u6990\u0200aeuy\u3117\u311C\u3127\u3129ron;\u4159\u0100di\u3121\u3125il;\u4157\xEC\u0FF2\xE2\u30FA;\u4440\u0200clqs\u3134\u3137\u313D\u3144a;\u6937dhar;\u6969uo\u0100;r\u020E\u020Dh;\u61B3\u0180acg\u314E\u315F\u0F44l\u0200;ips\u0F78\u3158\u315B\u109Cn\xE5\u10BBar\xF4\u0FA9t;\u65AD\u0180ilr\u3169\u1023\u316Esht;\u697D;\uC000\u{1D52F}\u0100ao\u3177\u3186r\u0100du\u317D\u317F\xBB\u047B\u0100;l\u1091\u3184;\u696C\u0100;v\u318B\u318C\u43C1;\u43F1\u0180gns\u3195\u31F9\u31FCht\u0300ahlrst\u31A4\u31B0\u31C2\u31D8\u31E4\u31EErrow\u0100;t\u0FDC\u31ADa\xE9\u30C8arpoon\u0100du\u31BB\u31BFow\xEE\u317Ep\xBB\u1092eft\u0100ah\u31CA\u31D0rrow\xF3\u0FEAarpoon\xF3\u0551ightarrows;\u61C9quigarro\xF7\u30CBhreetimes;\u62CCg;\u42DAingdotse\xF1\u1F32\u0180ahm\u320D\u3210\u3213r\xF2\u0FEAa\xF2\u0551;\u600Foust\u0100;a\u321E\u321F\u63B1che\xBB\u321Fmid;\u6AEE\u0200abpt\u3232\u323D\u3240\u3252\u0100nr\u3237\u323Ag;\u67EDr;\u61FEr\xEB\u1003\u0180afl\u3247\u324A\u324Er;\u6986;\uC000\u{1D563}us;\u6A2Eimes;\u6A35\u0100ap\u325D\u3267r\u0100;g\u3263\u3264\u4029t;\u6994olint;\u6A12ar\xF2\u31E3\u0200achq\u327B\u3280\u10BC\u3285quo;\u603Ar;\uC000\u{1D4C7}\u0100bu\u30FB\u328Ao\u0100;r\u0214\u0213\u0180hir\u3297\u329B\u32A0re\xE5\u31F8mes;\u62CAi\u0200;efl\u32AA\u1059\u1821\u32AB\u65B9tri;\u69CEluhar;\u6968;\u611E\u0D61\u32D5\u32DB\u32DF\u332C\u3338\u3371\0\u337A\u33A4\0\0\u33EC\u33F0\0\u3428\u3448\u345A\u34AD\u34B1\u34CA\u34F1\0\u3616\0\0\u3633cute;\u415Bqu\xEF\u27BA\u0500;Eaceinpsy\u11ED\u32F3\u32F5\u32FF\u3302\u330B\u330F\u331F\u3326\u3329;\u6AB4\u01F0\u32FA\0\u32FC;\u6AB8on;\u4161u\xE5\u11FE\u0100;d\u11F3\u3307il;\u415Frc;\u415D\u0180Eas\u3316\u3318\u331B;\u6AB6p;\u6ABAim;\u62E9olint;\u6A13i\xED\u1204;\u4441ot\u0180;be\u3334\u1D47\u3335\u62C5;\u6A66\u0380Aacmstx\u3346\u334A\u3357\u335B\u335E\u3363\u336Drr;\u61D8r\u0100hr\u3350\u3352\xEB\u2228\u0100;o\u0A36\u0A34t\u803B\xA7\u40A7i;\u403Bwar;\u6929m\u0100in\u3369\xF0nu\xF3\xF1t;\u6736r\u0100;o\u3376\u2055\uC000\u{1D530}\u0200acoy\u3382\u3386\u3391\u33A0rp;\u666F\u0100hy\u338B\u338Fcy;\u4449;\u4448rt\u026D\u3399\0\0\u339Ci\xE4\u1464ara\xEC\u2E6F\u803B\xAD\u40AD\u0100gm\u33A8\u33B4ma\u0180;fv\u33B1\u33B2\u33B2\u43C3;\u43C2\u0400;deglnpr\u12AB\u33C5\u33C9\u33CE\u33D6\u33DE\u33E1\u33E6ot;\u6A6A\u0100;q\u12B1\u12B0\u0100;E\u33D3\u33D4\u6A9E;\u6AA0\u0100;E\u33DB\u33DC\u6A9D;\u6A9Fe;\u6246lus;\u6A24arr;\u6972ar\xF2\u113D\u0200aeit\u33F8\u3408\u340F\u3417\u0100ls\u33FD\u3404lsetm\xE9\u336Ahp;\u6A33parsl;\u69E4\u0100dl\u1463\u3414e;\u6323\u0100;e\u341C\u341D\u6AAA\u0100;s\u3422\u3423\u6AAC;\uC000\u2AAC\uFE00\u0180flp\u342E\u3433\u3442tcy;\u444C\u0100;b\u3438\u3439\u402F\u0100;a\u343E\u343F\u69C4r;\u633Ff;\uC000\u{1D564}a\u0100dr\u344D\u0402es\u0100;u\u3454\u3455\u6660it\xBB\u3455\u0180csu\u3460\u3479\u349F\u0100au\u3465\u346Fp\u0100;s\u1188\u346B;\uC000\u2293\uFE00p\u0100;s\u11B4\u3475;\uC000\u2294\uFE00u\u0100bp\u347F\u348F\u0180;es\u1197\u119C\u3486et\u0100;e\u1197\u348D\xF1\u119D\u0180;es\u11A8\u11AD\u3496et\u0100;e\u11A8\u349D\xF1\u11AE\u0180;af\u117B\u34A6\u05B0r\u0165\u34AB\u05B1\xBB\u117Car\xF2\u1148\u0200cemt\u34B9\u34BE\u34C2\u34C5r;\uC000\u{1D4C8}tm\xEE\xF1i\xEC\u3415ar\xE6\u11BE\u0100ar\u34CE\u34D5r\u0100;f\u34D4\u17BF\u6606\u0100an\u34DA\u34EDight\u0100ep\u34E3\u34EApsilo\xEE\u1EE0h\xE9\u2EAFs\xBB\u2852\u0280bcmnp\u34FB\u355E\u1209\u358B\u358E\u0480;Edemnprs\u350E\u350F\u3511\u3515\u351E\u3523\u352C\u3531\u3536\u6282;\u6AC5ot;\u6ABD\u0100;d\u11DA\u351Aot;\u6AC3ult;\u6AC1\u0100Ee\u3528\u352A;\u6ACB;\u628Alus;\u6ABFarr;\u6979\u0180eiu\u353D\u3552\u3555t\u0180;en\u350E\u3545\u354Bq\u0100;q\u11DA\u350Feq\u0100;q\u352B\u3528m;\u6AC7\u0100bp\u355A\u355C;\u6AD5;\u6AD3c\u0300;acens\u11ED\u356C\u3572\u3579\u357B\u3326ppro\xF8\u32FAurlye\xF1\u11FE\xF1\u11F3\u0180aes\u3582\u3588\u331Bppro\xF8\u331Aq\xF1\u3317g;\u666A\u0680123;Edehlmnps\u35A9\u35AC\u35AF\u121C\u35B2\u35B4\u35C0\u35C9\u35D5\u35DA\u35DF\u35E8\u35ED\u803B\xB9\u40B9\u803B\xB2\u40B2\u803B\xB3\u40B3;\u6AC6\u0100os\u35B9\u35BCt;\u6ABEub;\u6AD8\u0100;d\u1222\u35C5ot;\u6AC4s\u0100ou\u35CF\u35D2l;\u67C9b;\u6AD7arr;\u697Bult;\u6AC2\u0100Ee\u35E4\u35E6;\u6ACC;\u628Blus;\u6AC0\u0180eiu\u35F4\u3609\u360Ct\u0180;en\u121C\u35FC\u3602q\u0100;q\u1222\u35B2eq\u0100;q\u35E7\u35E4m;\u6AC8\u0100bp\u3611\u3613;\u6AD4;\u6AD6\u0180Aan\u361C\u3620\u362Drr;\u61D9r\u0100hr\u3626\u3628\xEB\u222E\u0100;o\u0A2B\u0A29war;\u692Alig\u803B\xDF\u40DF\u0BE1\u3651\u365D\u3660\u12CE\u3673\u3679\0\u367E\u36C2\0\0\0\0\0\u36DB\u3703\0\u3709\u376C\0\0\0\u3787\u0272\u3656\0\0\u365Bget;\u6316;\u43C4r\xEB\u0E5F\u0180aey\u3666\u366B\u3670ron;\u4165dil;\u4163;\u4442lrec;\u6315r;\uC000\u{1D531}\u0200eiko\u3686\u369D\u36B5\u36BC\u01F2\u368B\0\u3691e\u01004f\u1284\u1281a\u0180;sv\u3698\u3699\u369B\u43B8ym;\u43D1\u0100cn\u36A2\u36B2k\u0100as\u36A8\u36AEppro\xF8\u12C1im\xBB\u12ACs\xF0\u129E\u0100as\u36BA\u36AE\xF0\u12C1rn\u803B\xFE\u40FE\u01EC\u031F\u36C6\u22E7es\u8180\xD7;bd\u36CF\u36D0\u36D8\u40D7\u0100;a\u190F\u36D5r;\u6A31;\u6A30\u0180eps\u36E1\u36E3\u3700\xE1\u2A4D\u0200;bcf\u0486\u36EC\u36F0\u36F4ot;\u6336ir;\u6AF1\u0100;o\u36F9\u36FC\uC000\u{1D565}rk;\u6ADA\xE1\u3362rime;\u6034\u0180aip\u370F\u3712\u3764d\xE5\u1248\u0380adempst\u3721\u374D\u3740\u3751\u3757\u375C\u375Fngle\u0280;dlqr\u3730\u3731\u3736\u3740\u3742\u65B5own\xBB\u1DBBeft\u0100;e\u2800\u373E\xF1\u092E;\u625Cight\u0100;e\u32AA\u374B\xF1\u105Aot;\u65ECinus;\u6A3Alus;\u6A39b;\u69CDime;\u6A3Bezium;\u63E2\u0180cht\u3772\u377D\u3781\u0100ry\u3777\u377B;\uC000\u{1D4C9};\u4446cy;\u445Brok;\u4167\u0100io\u378B\u378Ex\xF4\u1777head\u0100lr\u3797\u37A0eftarro\xF7\u084Fightarrow\xBB\u0F5D\u0900AHabcdfghlmoprstuw\u37D0\u37D3\u37D7\u37E4\u37F0\u37FC\u380E\u381C\u3823\u3834\u3851\u385D\u386B\u38A9\u38CC\u38D2\u38EA\u38F6r\xF2\u03EDar;\u6963\u0100cr\u37DC\u37E2ute\u803B\xFA\u40FA\xF2\u1150r\u01E3\u37EA\0\u37EDy;\u445Eve;\u416D\u0100iy\u37F5\u37FArc\u803B\xFB\u40FB;\u4443\u0180abh\u3803\u3806\u380Br\xF2\u13ADlac;\u4171a\xF2\u13C3\u0100ir\u3813\u3818sht;\u697E;\uC000\u{1D532}rave\u803B\xF9\u40F9\u0161\u3827\u3831r\u0100lr\u382C\u382E\xBB\u0957\xBB\u1083lk;\u6580\u0100ct\u3839\u384D\u026F\u383F\0\0\u384Arn\u0100;e\u3845\u3846\u631Cr\xBB\u3846op;\u630Fri;\u65F8\u0100al\u3856\u385Acr;\u416B\u80BB\xA8\u0349\u0100gp\u3862\u3866on;\u4173f;\uC000\u{1D566}\u0300adhlsu\u114B\u3878\u387D\u1372\u3891\u38A0own\xE1\u13B3arpoon\u0100lr\u3888\u388Cef\xF4\u382Digh\xF4\u382Fi\u0180;hl\u3899\u389A\u389C\u43C5\xBB\u13FAon\xBB\u389Aparrows;\u61C8\u0180cit\u38B0\u38C4\u38C8\u026F\u38B6\0\0\u38C1rn\u0100;e\u38BC\u38BD\u631Dr\xBB\u38BDop;\u630Eng;\u416Fri;\u65F9cr;\uC000\u{1D4CA}\u0180dir\u38D9\u38DD\u38E2ot;\u62F0lde;\u4169i\u0100;f\u3730\u38E8\xBB\u1813\u0100am\u38EF\u38F2r\xF2\u38A8l\u803B\xFC\u40FCangle;\u69A7\u0780ABDacdeflnoprsz\u391C\u391F\u3929\u392D\u39B5\u39B8\u39BD\u39DF\u39E4\u39E8\u39F3\u39F9\u39FD\u3A01\u3A20r\xF2\u03F7ar\u0100;v\u3926\u3927\u6AE8;\u6AE9as\xE8\u03E1\u0100nr\u3932\u3937grt;\u699C\u0380eknprst\u34E3\u3946\u394B\u3952\u395D\u3964\u3996app\xE1\u2415othin\xE7\u1E96\u0180hir\u34EB\u2EC8\u3959op\xF4\u2FB5\u0100;h\u13B7\u3962\xEF\u318D\u0100iu\u3969\u396Dgm\xE1\u33B3\u0100bp\u3972\u3984setneq\u0100;q\u397D\u3980\uC000\u228A\uFE00;\uC000\u2ACB\uFE00setneq\u0100;q\u398F\u3992\uC000\u228B\uFE00;\uC000\u2ACC\uFE00\u0100hr\u399B\u399Fet\xE1\u369Ciangle\u0100lr\u39AA\u39AFeft\xBB\u0925ight\xBB\u1051y;\u4432ash\xBB\u1036\u0180elr\u39C4\u39D2\u39D7\u0180;be\u2DEA\u39CB\u39CFar;\u62BBq;\u625Alip;\u62EE\u0100bt\u39DC\u1468a\xF2\u1469r;\uC000\u{1D533}tr\xE9\u39AEsu\u0100bp\u39EF\u39F1\xBB\u0D1C\xBB\u0D59pf;\uC000\u{1D567}ro\xF0\u0EFBtr\xE9\u39B4\u0100cu\u3A06\u3A0Br;\uC000\u{1D4CB}\u0100bp\u3A10\u3A18n\u0100Ee\u3980\u3A16\xBB\u397En\u0100Ee\u3992\u3A1E\xBB\u3990igzag;\u699A\u0380cefoprs\u3A36\u3A3B\u3A56\u3A5B\u3A54\u3A61\u3A6Airc;\u4175\u0100di\u3A40\u3A51\u0100bg\u3A45\u3A49ar;\u6A5Fe\u0100;q\u15FA\u3A4F;\u6259erp;\u6118r;\uC000\u{1D534}pf;\uC000\u{1D568}\u0100;e\u1479\u3A66at\xE8\u1479cr;\uC000\u{1D4CC}\u0AE3\u178E\u3A87\0\u3A8B\0\u3A90\u3A9B\0\0\u3A9D\u3AA8\u3AAB\u3AAF\0\0\u3AC3\u3ACE\0\u3AD8\u17DC\u17DFtr\xE9\u17D1r;\uC000\u{1D535}\u0100Aa\u3A94\u3A97r\xF2\u03C3r\xF2\u09F6;\u43BE\u0100Aa\u3AA1\u3AA4r\xF2\u03B8r\xF2\u09EBa\xF0\u2713is;\u62FB\u0180dpt\u17A4\u3AB5\u3ABE\u0100fl\u3ABA\u17A9;\uC000\u{1D569}im\xE5\u17B2\u0100Aa\u3AC7\u3ACAr\xF2\u03CEr\xF2\u0A01\u0100cq\u3AD2\u17B8r;\uC000\u{1D4CD}\u0100pt\u17D6\u3ADCr\xE9\u17D4\u0400acefiosu\u3AF0\u3AFD\u3B08\u3B0C\u3B11\u3B15\u3B1B\u3B21c\u0100uy\u3AF6\u3AFBte\u803B\xFD\u40FD;\u444F\u0100iy\u3B02\u3B06rc;\u4177;\u444Bn\u803B\xA5\u40A5r;\uC000\u{1D536}cy;\u4457pf;\uC000\u{1D56A}cr;\uC000\u{1D4CE}\u0100cm\u3B26\u3B29y;\u444El\u803B\xFF\u40FF\u0500acdefhiosw\u3B42\u3B48\u3B54\u3B58\u3B64\u3B69\u3B6D\u3B74\u3B7A\u3B80cute;\u417A\u0100ay\u3B4D\u3B52ron;\u417E;\u4437ot;\u417C\u0100et\u3B5D\u3B61tr\xE6\u155Fa;\u43B6r;\uC000\u{1D537}cy;\u4436grarr;\u61DDpf;\uC000\u{1D56B}cr;\uC000\u{1D4CF}\u0100jn\u3B85\u3B87;\u600Dj;\u600C'.split("").map(function(c) {
        return c.charCodeAt(0);
      })
    );
  }
});

// node_modules/entities/lib/generated/decode-data-xml.js
var require_decode_data_xml = __commonJS({
  "node_modules/entities/lib/generated/decode-data-xml.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.default = new Uint16Array(
      // prettier-ignore
      "\u0200aglq	\x1B\u026D\0\0p;\u4026os;\u4027t;\u403Et;\u403Cuot;\u4022".split("").map(function(c) {
        return c.charCodeAt(0);
      })
    );
  }
});

// node_modules/entities/lib/decode_codepoint.js
var require_decode_codepoint = __commonJS({
  "node_modules/entities/lib/decode_codepoint.js"(exports) {
    "use strict";
    var _a;
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.replaceCodePoint = exports.fromCodePoint = void 0;
    var decodeMap = /* @__PURE__ */ new Map([
      [0, 65533],
      // C1 Unicode control character reference replacements
      [128, 8364],
      [130, 8218],
      [131, 402],
      [132, 8222],
      [133, 8230],
      [134, 8224],
      [135, 8225],
      [136, 710],
      [137, 8240],
      [138, 352],
      [139, 8249],
      [140, 338],
      [142, 381],
      [145, 8216],
      [146, 8217],
      [147, 8220],
      [148, 8221],
      [149, 8226],
      [150, 8211],
      [151, 8212],
      [152, 732],
      [153, 8482],
      [154, 353],
      [155, 8250],
      [156, 339],
      [158, 382],
      [159, 376]
    ]);
    exports.fromCodePoint = // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition, node/no-unsupported-features/es-builtins
    (_a = String.fromCodePoint) !== null && _a !== void 0 ? _a : function(codePoint) {
      var output = "";
      if (codePoint > 65535) {
        codePoint -= 65536;
        output += String.fromCharCode(codePoint >>> 10 & 1023 | 55296);
        codePoint = 56320 | codePoint & 1023;
      }
      output += String.fromCharCode(codePoint);
      return output;
    };
    function replaceCodePoint(codePoint) {
      var _a2;
      if (codePoint >= 55296 && codePoint <= 57343 || codePoint > 1114111) {
        return 65533;
      }
      return (_a2 = decodeMap.get(codePoint)) !== null && _a2 !== void 0 ? _a2 : codePoint;
    }
    exports.replaceCodePoint = replaceCodePoint;
    function decodeCodePoint(codePoint) {
      return (0, exports.fromCodePoint)(replaceCodePoint(codePoint));
    }
    exports.default = decodeCodePoint;
  }
});

// node_modules/entities/lib/decode.js
var require_decode = __commonJS({
  "node_modules/entities/lib/decode.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.decodeXML = exports.decodeHTMLStrict = exports.decodeHTMLAttribute = exports.decodeHTML = exports.determineBranch = exports.EntityDecoder = exports.DecodingMode = exports.BinTrieFlags = exports.fromCodePoint = exports.replaceCodePoint = exports.decodeCodePoint = exports.xmlDecodeTree = exports.htmlDecodeTree = void 0;
    var decode_data_html_js_1 = __importDefault(require_decode_data_html());
    exports.htmlDecodeTree = decode_data_html_js_1.default;
    var decode_data_xml_js_1 = __importDefault(require_decode_data_xml());
    exports.xmlDecodeTree = decode_data_xml_js_1.default;
    var decode_codepoint_js_1 = __importStar(require_decode_codepoint());
    exports.decodeCodePoint = decode_codepoint_js_1.default;
    var decode_codepoint_js_2 = require_decode_codepoint();
    Object.defineProperty(exports, "replaceCodePoint", { enumerable: true, get: function() {
      return decode_codepoint_js_2.replaceCodePoint;
    } });
    Object.defineProperty(exports, "fromCodePoint", { enumerable: true, get: function() {
      return decode_codepoint_js_2.fromCodePoint;
    } });
    var CharCodes;
    (function(CharCodes2) {
      CharCodes2[CharCodes2["NUM"] = 35] = "NUM";
      CharCodes2[CharCodes2["SEMI"] = 59] = "SEMI";
      CharCodes2[CharCodes2["EQUALS"] = 61] = "EQUALS";
      CharCodes2[CharCodes2["ZERO"] = 48] = "ZERO";
      CharCodes2[CharCodes2["NINE"] = 57] = "NINE";
      CharCodes2[CharCodes2["LOWER_A"] = 97] = "LOWER_A";
      CharCodes2[CharCodes2["LOWER_F"] = 102] = "LOWER_F";
      CharCodes2[CharCodes2["LOWER_X"] = 120] = "LOWER_X";
      CharCodes2[CharCodes2["LOWER_Z"] = 122] = "LOWER_Z";
      CharCodes2[CharCodes2["UPPER_A"] = 65] = "UPPER_A";
      CharCodes2[CharCodes2["UPPER_F"] = 70] = "UPPER_F";
      CharCodes2[CharCodes2["UPPER_Z"] = 90] = "UPPER_Z";
    })(CharCodes || (CharCodes = {}));
    var TO_LOWER_BIT = 32;
    var BinTrieFlags;
    (function(BinTrieFlags2) {
      BinTrieFlags2[BinTrieFlags2["VALUE_LENGTH"] = 49152] = "VALUE_LENGTH";
      BinTrieFlags2[BinTrieFlags2["BRANCH_LENGTH"] = 16256] = "BRANCH_LENGTH";
      BinTrieFlags2[BinTrieFlags2["JUMP_TABLE"] = 127] = "JUMP_TABLE";
    })(BinTrieFlags = exports.BinTrieFlags || (exports.BinTrieFlags = {}));
    function isNumber(code) {
      return code >= CharCodes.ZERO && code <= CharCodes.NINE;
    }
    function isHexadecimalCharacter(code) {
      return code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_F || code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_F;
    }
    function isAsciiAlphaNumeric(code) {
      return code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_Z || code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_Z || isNumber(code);
    }
    function isEntityInAttributeInvalidEnd(code) {
      return code === CharCodes.EQUALS || isAsciiAlphaNumeric(code);
    }
    var EntityDecoderState;
    (function(EntityDecoderState2) {
      EntityDecoderState2[EntityDecoderState2["EntityStart"] = 0] = "EntityStart";
      EntityDecoderState2[EntityDecoderState2["NumericStart"] = 1] = "NumericStart";
      EntityDecoderState2[EntityDecoderState2["NumericDecimal"] = 2] = "NumericDecimal";
      EntityDecoderState2[EntityDecoderState2["NumericHex"] = 3] = "NumericHex";
      EntityDecoderState2[EntityDecoderState2["NamedEntity"] = 4] = "NamedEntity";
    })(EntityDecoderState || (EntityDecoderState = {}));
    var DecodingMode;
    (function(DecodingMode2) {
      DecodingMode2[DecodingMode2["Legacy"] = 0] = "Legacy";
      DecodingMode2[DecodingMode2["Strict"] = 1] = "Strict";
      DecodingMode2[DecodingMode2["Attribute"] = 2] = "Attribute";
    })(DecodingMode = exports.DecodingMode || (exports.DecodingMode = {}));
    var EntityDecoder = (
      /** @class */
      function() {
        function EntityDecoder2(decodeTree, emitCodePoint, errors) {
          this.decodeTree = decodeTree;
          this.emitCodePoint = emitCodePoint;
          this.errors = errors;
          this.state = EntityDecoderState.EntityStart;
          this.consumed = 1;
          this.result = 0;
          this.treeIndex = 0;
          this.excess = 1;
          this.decodeMode = DecodingMode.Strict;
        }
        EntityDecoder2.prototype.startEntity = function(decodeMode) {
          this.decodeMode = decodeMode;
          this.state = EntityDecoderState.EntityStart;
          this.result = 0;
          this.treeIndex = 0;
          this.excess = 1;
          this.consumed = 1;
        };
        EntityDecoder2.prototype.write = function(str, offset) {
          switch (this.state) {
            case EntityDecoderState.EntityStart: {
              if (str.charCodeAt(offset) === CharCodes.NUM) {
                this.state = EntityDecoderState.NumericStart;
                this.consumed += 1;
                return this.stateNumericStart(str, offset + 1);
              }
              this.state = EntityDecoderState.NamedEntity;
              return this.stateNamedEntity(str, offset);
            }
            case EntityDecoderState.NumericStart: {
              return this.stateNumericStart(str, offset);
            }
            case EntityDecoderState.NumericDecimal: {
              return this.stateNumericDecimal(str, offset);
            }
            case EntityDecoderState.NumericHex: {
              return this.stateNumericHex(str, offset);
            }
            case EntityDecoderState.NamedEntity: {
              return this.stateNamedEntity(str, offset);
            }
          }
        };
        EntityDecoder2.prototype.stateNumericStart = function(str, offset) {
          if (offset >= str.length) {
            return -1;
          }
          if ((str.charCodeAt(offset) | TO_LOWER_BIT) === CharCodes.LOWER_X) {
            this.state = EntityDecoderState.NumericHex;
            this.consumed += 1;
            return this.stateNumericHex(str, offset + 1);
          }
          this.state = EntityDecoderState.NumericDecimal;
          return this.stateNumericDecimal(str, offset);
        };
        EntityDecoder2.prototype.addToNumericResult = function(str, start, end, base) {
          if (start !== end) {
            var digitCount = end - start;
            this.result = this.result * Math.pow(base, digitCount) + parseInt(str.substr(start, digitCount), base);
            this.consumed += digitCount;
          }
        };
        EntityDecoder2.prototype.stateNumericHex = function(str, offset) {
          var startIdx = offset;
          while (offset < str.length) {
            var char = str.charCodeAt(offset);
            if (isNumber(char) || isHexadecimalCharacter(char)) {
              offset += 1;
            } else {
              this.addToNumericResult(str, startIdx, offset, 16);
              return this.emitNumericEntity(char, 3);
            }
          }
          this.addToNumericResult(str, startIdx, offset, 16);
          return -1;
        };
        EntityDecoder2.prototype.stateNumericDecimal = function(str, offset) {
          var startIdx = offset;
          while (offset < str.length) {
            var char = str.charCodeAt(offset);
            if (isNumber(char)) {
              offset += 1;
            } else {
              this.addToNumericResult(str, startIdx, offset, 10);
              return this.emitNumericEntity(char, 2);
            }
          }
          this.addToNumericResult(str, startIdx, offset, 10);
          return -1;
        };
        EntityDecoder2.prototype.emitNumericEntity = function(lastCp, expectedLength) {
          var _a;
          if (this.consumed <= expectedLength) {
            (_a = this.errors) === null || _a === void 0 ? void 0 : _a.absenceOfDigitsInNumericCharacterReference(this.consumed);
            return 0;
          }
          if (lastCp === CharCodes.SEMI) {
            this.consumed += 1;
          } else if (this.decodeMode === DecodingMode.Strict) {
            return 0;
          }
          this.emitCodePoint((0, decode_codepoint_js_1.replaceCodePoint)(this.result), this.consumed);
          if (this.errors) {
            if (lastCp !== CharCodes.SEMI) {
              this.errors.missingSemicolonAfterCharacterReference();
            }
            this.errors.validateNumericCharacterReference(this.result);
          }
          return this.consumed;
        };
        EntityDecoder2.prototype.stateNamedEntity = function(str, offset) {
          var decodeTree = this.decodeTree;
          var current = decodeTree[this.treeIndex];
          var valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;
          for (; offset < str.length; offset++, this.excess++) {
            var char = str.charCodeAt(offset);
            this.treeIndex = determineBranch(decodeTree, current, this.treeIndex + Math.max(1, valueLength), char);
            if (this.treeIndex < 0) {
              return this.result === 0 || // If we are parsing an attribute
              this.decodeMode === DecodingMode.Attribute && // We shouldn't have consumed any characters after the entity,
              (valueLength === 0 || // And there should be no invalid characters.
              isEntityInAttributeInvalidEnd(char)) ? 0 : this.emitNotTerminatedNamedEntity();
            }
            current = decodeTree[this.treeIndex];
            valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;
            if (valueLength !== 0) {
              if (char === CharCodes.SEMI) {
                return this.emitNamedEntityData(this.treeIndex, valueLength, this.consumed + this.excess);
              }
              if (this.decodeMode !== DecodingMode.Strict) {
                this.result = this.treeIndex;
                this.consumed += this.excess;
                this.excess = 0;
              }
            }
          }
          return -1;
        };
        EntityDecoder2.prototype.emitNotTerminatedNamedEntity = function() {
          var _a;
          var _b = this, result = _b.result, decodeTree = _b.decodeTree;
          var valueLength = (decodeTree[result] & BinTrieFlags.VALUE_LENGTH) >> 14;
          this.emitNamedEntityData(result, valueLength, this.consumed);
          (_a = this.errors) === null || _a === void 0 ? void 0 : _a.missingSemicolonAfterCharacterReference();
          return this.consumed;
        };
        EntityDecoder2.prototype.emitNamedEntityData = function(result, valueLength, consumed) {
          var decodeTree = this.decodeTree;
          this.emitCodePoint(valueLength === 1 ? decodeTree[result] & ~BinTrieFlags.VALUE_LENGTH : decodeTree[result + 1], consumed);
          if (valueLength === 3) {
            this.emitCodePoint(decodeTree[result + 2], consumed);
          }
          return consumed;
        };
        EntityDecoder2.prototype.end = function() {
          var _a;
          switch (this.state) {
            case EntityDecoderState.NamedEntity: {
              return this.result !== 0 && (this.decodeMode !== DecodingMode.Attribute || this.result === this.treeIndex) ? this.emitNotTerminatedNamedEntity() : 0;
            }
            case EntityDecoderState.NumericDecimal: {
              return this.emitNumericEntity(0, 2);
            }
            case EntityDecoderState.NumericHex: {
              return this.emitNumericEntity(0, 3);
            }
            case EntityDecoderState.NumericStart: {
              (_a = this.errors) === null || _a === void 0 ? void 0 : _a.absenceOfDigitsInNumericCharacterReference(this.consumed);
              return 0;
            }
            case EntityDecoderState.EntityStart: {
              return 0;
            }
          }
        };
        return EntityDecoder2;
      }()
    );
    exports.EntityDecoder = EntityDecoder;
    function getDecoder(decodeTree) {
      var ret = "";
      var decoder = new EntityDecoder(decodeTree, function(str) {
        return ret += (0, decode_codepoint_js_1.fromCodePoint)(str);
      });
      return function decodeWithTrie(str, decodeMode) {
        var lastIndex = 0;
        var offset = 0;
        while ((offset = str.indexOf("&", offset)) >= 0) {
          ret += str.slice(lastIndex, offset);
          decoder.startEntity(decodeMode);
          var len = decoder.write(
            str,
            // Skip the "&"
            offset + 1
          );
          if (len < 0) {
            lastIndex = offset + decoder.end();
            break;
          }
          lastIndex = offset + len;
          offset = len === 0 ? lastIndex + 1 : lastIndex;
        }
        var result = ret + str.slice(lastIndex);
        ret = "";
        return result;
      };
    }
    function determineBranch(decodeTree, current, nodeIdx, char) {
      var branchCount = (current & BinTrieFlags.BRANCH_LENGTH) >> 7;
      var jumpOffset = current & BinTrieFlags.JUMP_TABLE;
      if (branchCount === 0) {
        return jumpOffset !== 0 && char === jumpOffset ? nodeIdx : -1;
      }
      if (jumpOffset) {
        var value = char - jumpOffset;
        return value < 0 || value >= branchCount ? -1 : decodeTree[nodeIdx + value] - 1;
      }
      var lo = nodeIdx;
      var hi = lo + branchCount - 1;
      while (lo <= hi) {
        var mid = lo + hi >>> 1;
        var midVal = decodeTree[mid];
        if (midVal < char) {
          lo = mid + 1;
        } else if (midVal > char) {
          hi = mid - 1;
        } else {
          return decodeTree[mid + branchCount];
        }
      }
      return -1;
    }
    exports.determineBranch = determineBranch;
    var htmlDecoder = getDecoder(decode_data_html_js_1.default);
    var xmlDecoder = getDecoder(decode_data_xml_js_1.default);
    function decodeHTML(str, mode) {
      if (mode === void 0) {
        mode = DecodingMode.Legacy;
      }
      return htmlDecoder(str, mode);
    }
    exports.decodeHTML = decodeHTML;
    function decodeHTMLAttribute(str) {
      return htmlDecoder(str, DecodingMode.Attribute);
    }
    exports.decodeHTMLAttribute = decodeHTMLAttribute;
    function decodeHTMLStrict(str) {
      return htmlDecoder(str, DecodingMode.Strict);
    }
    exports.decodeHTMLStrict = decodeHTMLStrict;
    function decodeXML(str) {
      return xmlDecoder(str, DecodingMode.Strict);
    }
    exports.decodeXML = decodeXML;
  }
});

// node_modules/entities/lib/generated/encode-html.js
var require_encode_html = __commonJS({
  "node_modules/entities/lib/generated/encode-html.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    function restoreDiff(arr) {
      for (var i = 1; i < arr.length; i++) {
        arr[i][0] += arr[i - 1][0] + 1;
      }
      return arr;
    }
    exports.default = new Map(/* @__PURE__ */ restoreDiff([[9, "&Tab;"], [0, "&NewLine;"], [22, "&excl;"], [0, "&quot;"], [0, "&num;"], [0, "&dollar;"], [0, "&percnt;"], [0, "&amp;"], [0, "&apos;"], [0, "&lpar;"], [0, "&rpar;"], [0, "&ast;"], [0, "&plus;"], [0, "&comma;"], [1, "&period;"], [0, "&sol;"], [10, "&colon;"], [0, "&semi;"], [0, { v: "&lt;", n: 8402, o: "&nvlt;" }], [0, { v: "&equals;", n: 8421, o: "&bne;" }], [0, { v: "&gt;", n: 8402, o: "&nvgt;" }], [0, "&quest;"], [0, "&commat;"], [26, "&lbrack;"], [0, "&bsol;"], [0, "&rbrack;"], [0, "&Hat;"], [0, "&lowbar;"], [0, "&DiacriticalGrave;"], [5, { n: 106, o: "&fjlig;" }], [20, "&lbrace;"], [0, "&verbar;"], [0, "&rbrace;"], [34, "&nbsp;"], [0, "&iexcl;"], [0, "&cent;"], [0, "&pound;"], [0, "&curren;"], [0, "&yen;"], [0, "&brvbar;"], [0, "&sect;"], [0, "&die;"], [0, "&copy;"], [0, "&ordf;"], [0, "&laquo;"], [0, "&not;"], [0, "&shy;"], [0, "&circledR;"], [0, "&macr;"], [0, "&deg;"], [0, "&PlusMinus;"], [0, "&sup2;"], [0, "&sup3;"], [0, "&acute;"], [0, "&micro;"], [0, "&para;"], [0, "&centerdot;"], [0, "&cedil;"], [0, "&sup1;"], [0, "&ordm;"], [0, "&raquo;"], [0, "&frac14;"], [0, "&frac12;"], [0, "&frac34;"], [0, "&iquest;"], [0, "&Agrave;"], [0, "&Aacute;"], [0, "&Acirc;"], [0, "&Atilde;"], [0, "&Auml;"], [0, "&angst;"], [0, "&AElig;"], [0, "&Ccedil;"], [0, "&Egrave;"], [0, "&Eacute;"], [0, "&Ecirc;"], [0, "&Euml;"], [0, "&Igrave;"], [0, "&Iacute;"], [0, "&Icirc;"], [0, "&Iuml;"], [0, "&ETH;"], [0, "&Ntilde;"], [0, "&Ograve;"], [0, "&Oacute;"], [0, "&Ocirc;"], [0, "&Otilde;"], [0, "&Ouml;"], [0, "&times;"], [0, "&Oslash;"], [0, "&Ugrave;"], [0, "&Uacute;"], [0, "&Ucirc;"], [0, "&Uuml;"], [0, "&Yacute;"], [0, "&THORN;"], [0, "&szlig;"], [0, "&agrave;"], [0, "&aacute;"], [0, "&acirc;"], [0, "&atilde;"], [0, "&auml;"], [0, "&aring;"], [0, "&aelig;"], [0, "&ccedil;"], [0, "&egrave;"], [0, "&eacute;"], [0, "&ecirc;"], [0, "&euml;"], [0, "&igrave;"], [0, "&iacute;"], [0, "&icirc;"], [0, "&iuml;"], [0, "&eth;"], [0, "&ntilde;"], [0, "&ograve;"], [0, "&oacute;"], [0, "&ocirc;"], [0, "&otilde;"], [0, "&ouml;"], [0, "&div;"], [0, "&oslash;"], [0, "&ugrave;"], [0, "&uacute;"], [0, "&ucirc;"], [0, "&uuml;"], [0, "&yacute;"], [0, "&thorn;"], [0, "&yuml;"], [0, "&Amacr;"], [0, "&amacr;"], [0, "&Abreve;"], [0, "&abreve;"], [0, "&Aogon;"], [0, "&aogon;"], [0, "&Cacute;"], [0, "&cacute;"], [0, "&Ccirc;"], [0, "&ccirc;"], [0, "&Cdot;"], [0, "&cdot;"], [0, "&Ccaron;"], [0, "&ccaron;"], [0, "&Dcaron;"], [0, "&dcaron;"], [0, "&Dstrok;"], [0, "&dstrok;"], [0, "&Emacr;"], [0, "&emacr;"], [2, "&Edot;"], [0, "&edot;"], [0, "&Eogon;"], [0, "&eogon;"], [0, "&Ecaron;"], [0, "&ecaron;"], [0, "&Gcirc;"], [0, "&gcirc;"], [0, "&Gbreve;"], [0, "&gbreve;"], [0, "&Gdot;"], [0, "&gdot;"], [0, "&Gcedil;"], [1, "&Hcirc;"], [0, "&hcirc;"], [0, "&Hstrok;"], [0, "&hstrok;"], [0, "&Itilde;"], [0, "&itilde;"], [0, "&Imacr;"], [0, "&imacr;"], [2, "&Iogon;"], [0, "&iogon;"], [0, "&Idot;"], [0, "&imath;"], [0, "&IJlig;"], [0, "&ijlig;"], [0, "&Jcirc;"], [0, "&jcirc;"], [0, "&Kcedil;"], [0, "&kcedil;"], [0, "&kgreen;"], [0, "&Lacute;"], [0, "&lacute;"], [0, "&Lcedil;"], [0, "&lcedil;"], [0, "&Lcaron;"], [0, "&lcaron;"], [0, "&Lmidot;"], [0, "&lmidot;"], [0, "&Lstrok;"], [0, "&lstrok;"], [0, "&Nacute;"], [0, "&nacute;"], [0, "&Ncedil;"], [0, "&ncedil;"], [0, "&Ncaron;"], [0, "&ncaron;"], [0, "&napos;"], [0, "&ENG;"], [0, "&eng;"], [0, "&Omacr;"], [0, "&omacr;"], [2, "&Odblac;"], [0, "&odblac;"], [0, "&OElig;"], [0, "&oelig;"], [0, "&Racute;"], [0, "&racute;"], [0, "&Rcedil;"], [0, "&rcedil;"], [0, "&Rcaron;"], [0, "&rcaron;"], [0, "&Sacute;"], [0, "&sacute;"], [0, "&Scirc;"], [0, "&scirc;"], [0, "&Scedil;"], [0, "&scedil;"], [0, "&Scaron;"], [0, "&scaron;"], [0, "&Tcedil;"], [0, "&tcedil;"], [0, "&Tcaron;"], [0, "&tcaron;"], [0, "&Tstrok;"], [0, "&tstrok;"], [0, "&Utilde;"], [0, "&utilde;"], [0, "&Umacr;"], [0, "&umacr;"], [0, "&Ubreve;"], [0, "&ubreve;"], [0, "&Uring;"], [0, "&uring;"], [0, "&Udblac;"], [0, "&udblac;"], [0, "&Uogon;"], [0, "&uogon;"], [0, "&Wcirc;"], [0, "&wcirc;"], [0, "&Ycirc;"], [0, "&ycirc;"], [0, "&Yuml;"], [0, "&Zacute;"], [0, "&zacute;"], [0, "&Zdot;"], [0, "&zdot;"], [0, "&Zcaron;"], [0, "&zcaron;"], [19, "&fnof;"], [34, "&imped;"], [63, "&gacute;"], [65, "&jmath;"], [142, "&circ;"], [0, "&caron;"], [16, "&breve;"], [0, "&DiacriticalDot;"], [0, "&ring;"], [0, "&ogon;"], [0, "&DiacriticalTilde;"], [0, "&dblac;"], [51, "&DownBreve;"], [127, "&Alpha;"], [0, "&Beta;"], [0, "&Gamma;"], [0, "&Delta;"], [0, "&Epsilon;"], [0, "&Zeta;"], [0, "&Eta;"], [0, "&Theta;"], [0, "&Iota;"], [0, "&Kappa;"], [0, "&Lambda;"], [0, "&Mu;"], [0, "&Nu;"], [0, "&Xi;"], [0, "&Omicron;"], [0, "&Pi;"], [0, "&Rho;"], [1, "&Sigma;"], [0, "&Tau;"], [0, "&Upsilon;"], [0, "&Phi;"], [0, "&Chi;"], [0, "&Psi;"], [0, "&ohm;"], [7, "&alpha;"], [0, "&beta;"], [0, "&gamma;"], [0, "&delta;"], [0, "&epsi;"], [0, "&zeta;"], [0, "&eta;"], [0, "&theta;"], [0, "&iota;"], [0, "&kappa;"], [0, "&lambda;"], [0, "&mu;"], [0, "&nu;"], [0, "&xi;"], [0, "&omicron;"], [0, "&pi;"], [0, "&rho;"], [0, "&sigmaf;"], [0, "&sigma;"], [0, "&tau;"], [0, "&upsi;"], [0, "&phi;"], [0, "&chi;"], [0, "&psi;"], [0, "&omega;"], [7, "&thetasym;"], [0, "&Upsi;"], [2, "&phiv;"], [0, "&piv;"], [5, "&Gammad;"], [0, "&digamma;"], [18, "&kappav;"], [0, "&rhov;"], [3, "&epsiv;"], [0, "&backepsilon;"], [10, "&IOcy;"], [0, "&DJcy;"], [0, "&GJcy;"], [0, "&Jukcy;"], [0, "&DScy;"], [0, "&Iukcy;"], [0, "&YIcy;"], [0, "&Jsercy;"], [0, "&LJcy;"], [0, "&NJcy;"], [0, "&TSHcy;"], [0, "&KJcy;"], [1, "&Ubrcy;"], [0, "&DZcy;"], [0, "&Acy;"], [0, "&Bcy;"], [0, "&Vcy;"], [0, "&Gcy;"], [0, "&Dcy;"], [0, "&IEcy;"], [0, "&ZHcy;"], [0, "&Zcy;"], [0, "&Icy;"], [0, "&Jcy;"], [0, "&Kcy;"], [0, "&Lcy;"], [0, "&Mcy;"], [0, "&Ncy;"], [0, "&Ocy;"], [0, "&Pcy;"], [0, "&Rcy;"], [0, "&Scy;"], [0, "&Tcy;"], [0, "&Ucy;"], [0, "&Fcy;"], [0, "&KHcy;"], [0, "&TScy;"], [0, "&CHcy;"], [0, "&SHcy;"], [0, "&SHCHcy;"], [0, "&HARDcy;"], [0, "&Ycy;"], [0, "&SOFTcy;"], [0, "&Ecy;"], [0, "&YUcy;"], [0, "&YAcy;"], [0, "&acy;"], [0, "&bcy;"], [0, "&vcy;"], [0, "&gcy;"], [0, "&dcy;"], [0, "&iecy;"], [0, "&zhcy;"], [0, "&zcy;"], [0, "&icy;"], [0, "&jcy;"], [0, "&kcy;"], [0, "&lcy;"], [0, "&mcy;"], [0, "&ncy;"], [0, "&ocy;"], [0, "&pcy;"], [0, "&rcy;"], [0, "&scy;"], [0, "&tcy;"], [0, "&ucy;"], [0, "&fcy;"], [0, "&khcy;"], [0, "&tscy;"], [0, "&chcy;"], [0, "&shcy;"], [0, "&shchcy;"], [0, "&hardcy;"], [0, "&ycy;"], [0, "&softcy;"], [0, "&ecy;"], [0, "&yucy;"], [0, "&yacy;"], [1, "&iocy;"], [0, "&djcy;"], [0, "&gjcy;"], [0, "&jukcy;"], [0, "&dscy;"], [0, "&iukcy;"], [0, "&yicy;"], [0, "&jsercy;"], [0, "&ljcy;"], [0, "&njcy;"], [0, "&tshcy;"], [0, "&kjcy;"], [1, "&ubrcy;"], [0, "&dzcy;"], [7074, "&ensp;"], [0, "&emsp;"], [0, "&emsp13;"], [0, "&emsp14;"], [1, "&numsp;"], [0, "&puncsp;"], [0, "&ThinSpace;"], [0, "&hairsp;"], [0, "&NegativeMediumSpace;"], [0, "&zwnj;"], [0, "&zwj;"], [0, "&lrm;"], [0, "&rlm;"], [0, "&dash;"], [2, "&ndash;"], [0, "&mdash;"], [0, "&horbar;"], [0, "&Verbar;"], [1, "&lsquo;"], [0, "&CloseCurlyQuote;"], [0, "&lsquor;"], [1, "&ldquo;"], [0, "&CloseCurlyDoubleQuote;"], [0, "&bdquo;"], [1, "&dagger;"], [0, "&Dagger;"], [0, "&bull;"], [2, "&nldr;"], [0, "&hellip;"], [9, "&permil;"], [0, "&pertenk;"], [0, "&prime;"], [0, "&Prime;"], [0, "&tprime;"], [0, "&backprime;"], [3, "&lsaquo;"], [0, "&rsaquo;"], [3, "&oline;"], [2, "&caret;"], [1, "&hybull;"], [0, "&frasl;"], [10, "&bsemi;"], [7, "&qprime;"], [7, { v: "&MediumSpace;", n: 8202, o: "&ThickSpace;" }], [0, "&NoBreak;"], [0, "&af;"], [0, "&InvisibleTimes;"], [0, "&ic;"], [72, "&euro;"], [46, "&tdot;"], [0, "&DotDot;"], [37, "&complexes;"], [2, "&incare;"], [4, "&gscr;"], [0, "&hamilt;"], [0, "&Hfr;"], [0, "&Hopf;"], [0, "&planckh;"], [0, "&hbar;"], [0, "&imagline;"], [0, "&Ifr;"], [0, "&lagran;"], [0, "&ell;"], [1, "&naturals;"], [0, "&numero;"], [0, "&copysr;"], [0, "&weierp;"], [0, "&Popf;"], [0, "&Qopf;"], [0, "&realine;"], [0, "&real;"], [0, "&reals;"], [0, "&rx;"], [3, "&trade;"], [1, "&integers;"], [2, "&mho;"], [0, "&zeetrf;"], [0, "&iiota;"], [2, "&bernou;"], [0, "&Cayleys;"], [1, "&escr;"], [0, "&Escr;"], [0, "&Fouriertrf;"], [1, "&Mellintrf;"], [0, "&order;"], [0, "&alefsym;"], [0, "&beth;"], [0, "&gimel;"], [0, "&daleth;"], [12, "&CapitalDifferentialD;"], [0, "&dd;"], [0, "&ee;"], [0, "&ii;"], [10, "&frac13;"], [0, "&frac23;"], [0, "&frac15;"], [0, "&frac25;"], [0, "&frac35;"], [0, "&frac45;"], [0, "&frac16;"], [0, "&frac56;"], [0, "&frac18;"], [0, "&frac38;"], [0, "&frac58;"], [0, "&frac78;"], [49, "&larr;"], [0, "&ShortUpArrow;"], [0, "&rarr;"], [0, "&darr;"], [0, "&harr;"], [0, "&updownarrow;"], [0, "&nwarr;"], [0, "&nearr;"], [0, "&LowerRightArrow;"], [0, "&LowerLeftArrow;"], [0, "&nlarr;"], [0, "&nrarr;"], [1, { v: "&rarrw;", n: 824, o: "&nrarrw;" }], [0, "&Larr;"], [0, "&Uarr;"], [0, "&Rarr;"], [0, "&Darr;"], [0, "&larrtl;"], [0, "&rarrtl;"], [0, "&LeftTeeArrow;"], [0, "&mapstoup;"], [0, "&map;"], [0, "&DownTeeArrow;"], [1, "&hookleftarrow;"], [0, "&hookrightarrow;"], [0, "&larrlp;"], [0, "&looparrowright;"], [0, "&harrw;"], [0, "&nharr;"], [1, "&lsh;"], [0, "&rsh;"], [0, "&ldsh;"], [0, "&rdsh;"], [1, "&crarr;"], [0, "&cularr;"], [0, "&curarr;"], [2, "&circlearrowleft;"], [0, "&circlearrowright;"], [0, "&leftharpoonup;"], [0, "&DownLeftVector;"], [0, "&RightUpVector;"], [0, "&LeftUpVector;"], [0, "&rharu;"], [0, "&DownRightVector;"], [0, "&dharr;"], [0, "&dharl;"], [0, "&RightArrowLeftArrow;"], [0, "&udarr;"], [0, "&LeftArrowRightArrow;"], [0, "&leftleftarrows;"], [0, "&upuparrows;"], [0, "&rightrightarrows;"], [0, "&ddarr;"], [0, "&leftrightharpoons;"], [0, "&Equilibrium;"], [0, "&nlArr;"], [0, "&nhArr;"], [0, "&nrArr;"], [0, "&DoubleLeftArrow;"], [0, "&DoubleUpArrow;"], [0, "&DoubleRightArrow;"], [0, "&dArr;"], [0, "&DoubleLeftRightArrow;"], [0, "&DoubleUpDownArrow;"], [0, "&nwArr;"], [0, "&neArr;"], [0, "&seArr;"], [0, "&swArr;"], [0, "&lAarr;"], [0, "&rAarr;"], [1, "&zigrarr;"], [6, "&larrb;"], [0, "&rarrb;"], [15, "&DownArrowUpArrow;"], [7, "&loarr;"], [0, "&roarr;"], [0, "&hoarr;"], [0, "&forall;"], [0, "&comp;"], [0, { v: "&part;", n: 824, o: "&npart;" }], [0, "&exist;"], [0, "&nexist;"], [0, "&empty;"], [1, "&Del;"], [0, "&Element;"], [0, "&NotElement;"], [1, "&ni;"], [0, "&notni;"], [2, "&prod;"], [0, "&coprod;"], [0, "&sum;"], [0, "&minus;"], [0, "&MinusPlus;"], [0, "&dotplus;"], [1, "&Backslash;"], [0, "&lowast;"], [0, "&compfn;"], [1, "&radic;"], [2, "&prop;"], [0, "&infin;"], [0, "&angrt;"], [0, { v: "&ang;", n: 8402, o: "&nang;" }], [0, "&angmsd;"], [0, "&angsph;"], [0, "&mid;"], [0, "&nmid;"], [0, "&DoubleVerticalBar;"], [0, "&NotDoubleVerticalBar;"], [0, "&and;"], [0, "&or;"], [0, { v: "&cap;", n: 65024, o: "&caps;" }], [0, { v: "&cup;", n: 65024, o: "&cups;" }], [0, "&int;"], [0, "&Int;"], [0, "&iiint;"], [0, "&conint;"], [0, "&Conint;"], [0, "&Cconint;"], [0, "&cwint;"], [0, "&ClockwiseContourIntegral;"], [0, "&awconint;"], [0, "&there4;"], [0, "&becaus;"], [0, "&ratio;"], [0, "&Colon;"], [0, "&dotminus;"], [1, "&mDDot;"], [0, "&homtht;"], [0, { v: "&sim;", n: 8402, o: "&nvsim;" }], [0, { v: "&backsim;", n: 817, o: "&race;" }], [0, { v: "&ac;", n: 819, o: "&acE;" }], [0, "&acd;"], [0, "&VerticalTilde;"], [0, "&NotTilde;"], [0, { v: "&eqsim;", n: 824, o: "&nesim;" }], [0, "&sime;"], [0, "&NotTildeEqual;"], [0, "&cong;"], [0, "&simne;"], [0, "&ncong;"], [0, "&ap;"], [0, "&nap;"], [0, "&ape;"], [0, { v: "&apid;", n: 824, o: "&napid;" }], [0, "&backcong;"], [0, { v: "&asympeq;", n: 8402, o: "&nvap;" }], [0, { v: "&bump;", n: 824, o: "&nbump;" }], [0, { v: "&bumpe;", n: 824, o: "&nbumpe;" }], [0, { v: "&doteq;", n: 824, o: "&nedot;" }], [0, "&doteqdot;"], [0, "&efDot;"], [0, "&erDot;"], [0, "&Assign;"], [0, "&ecolon;"], [0, "&ecir;"], [0, "&circeq;"], [1, "&wedgeq;"], [0, "&veeeq;"], [1, "&triangleq;"], [2, "&equest;"], [0, "&ne;"], [0, { v: "&Congruent;", n: 8421, o: "&bnequiv;" }], [0, "&nequiv;"], [1, { v: "&le;", n: 8402, o: "&nvle;" }], [0, { v: "&ge;", n: 8402, o: "&nvge;" }], [0, { v: "&lE;", n: 824, o: "&nlE;" }], [0, { v: "&gE;", n: 824, o: "&ngE;" }], [0, { v: "&lnE;", n: 65024, o: "&lvertneqq;" }], [0, { v: "&gnE;", n: 65024, o: "&gvertneqq;" }], [0, { v: "&ll;", n: new Map(/* @__PURE__ */ restoreDiff([[824, "&nLtv;"], [7577, "&nLt;"]])) }], [0, { v: "&gg;", n: new Map(/* @__PURE__ */ restoreDiff([[824, "&nGtv;"], [7577, "&nGt;"]])) }], [0, "&between;"], [0, "&NotCupCap;"], [0, "&nless;"], [0, "&ngt;"], [0, "&nle;"], [0, "&nge;"], [0, "&lesssim;"], [0, "&GreaterTilde;"], [0, "&nlsim;"], [0, "&ngsim;"], [0, "&LessGreater;"], [0, "&gl;"], [0, "&NotLessGreater;"], [0, "&NotGreaterLess;"], [0, "&pr;"], [0, "&sc;"], [0, "&prcue;"], [0, "&sccue;"], [0, "&PrecedesTilde;"], [0, { v: "&scsim;", n: 824, o: "&NotSucceedsTilde;" }], [0, "&NotPrecedes;"], [0, "&NotSucceeds;"], [0, { v: "&sub;", n: 8402, o: "&NotSubset;" }], [0, { v: "&sup;", n: 8402, o: "&NotSuperset;" }], [0, "&nsub;"], [0, "&nsup;"], [0, "&sube;"], [0, "&supe;"], [0, "&NotSubsetEqual;"], [0, "&NotSupersetEqual;"], [0, { v: "&subne;", n: 65024, o: "&varsubsetneq;" }], [0, { v: "&supne;", n: 65024, o: "&varsupsetneq;" }], [1, "&cupdot;"], [0, "&UnionPlus;"], [0, { v: "&sqsub;", n: 824, o: "&NotSquareSubset;" }], [0, { v: "&sqsup;", n: 824, o: "&NotSquareSuperset;" }], [0, "&sqsube;"], [0, "&sqsupe;"], [0, { v: "&sqcap;", n: 65024, o: "&sqcaps;" }], [0, { v: "&sqcup;", n: 65024, o: "&sqcups;" }], [0, "&CirclePlus;"], [0, "&CircleMinus;"], [0, "&CircleTimes;"], [0, "&osol;"], [0, "&CircleDot;"], [0, "&circledcirc;"], [0, "&circledast;"], [1, "&circleddash;"], [0, "&boxplus;"], [0, "&boxminus;"], [0, "&boxtimes;"], [0, "&dotsquare;"], [0, "&RightTee;"], [0, "&dashv;"], [0, "&DownTee;"], [0, "&bot;"], [1, "&models;"], [0, "&DoubleRightTee;"], [0, "&Vdash;"], [0, "&Vvdash;"], [0, "&VDash;"], [0, "&nvdash;"], [0, "&nvDash;"], [0, "&nVdash;"], [0, "&nVDash;"], [0, "&prurel;"], [1, "&LeftTriangle;"], [0, "&RightTriangle;"], [0, { v: "&LeftTriangleEqual;", n: 8402, o: "&nvltrie;" }], [0, { v: "&RightTriangleEqual;", n: 8402, o: "&nvrtrie;" }], [0, "&origof;"], [0, "&imof;"], [0, "&multimap;"], [0, "&hercon;"], [0, "&intcal;"], [0, "&veebar;"], [1, "&barvee;"], [0, "&angrtvb;"], [0, "&lrtri;"], [0, "&bigwedge;"], [0, "&bigvee;"], [0, "&bigcap;"], [0, "&bigcup;"], [0, "&diam;"], [0, "&sdot;"], [0, "&sstarf;"], [0, "&divideontimes;"], [0, "&bowtie;"], [0, "&ltimes;"], [0, "&rtimes;"], [0, "&leftthreetimes;"], [0, "&rightthreetimes;"], [0, "&backsimeq;"], [0, "&curlyvee;"], [0, "&curlywedge;"], [0, "&Sub;"], [0, "&Sup;"], [0, "&Cap;"], [0, "&Cup;"], [0, "&fork;"], [0, "&epar;"], [0, "&lessdot;"], [0, "&gtdot;"], [0, { v: "&Ll;", n: 824, o: "&nLl;" }], [0, { v: "&Gg;", n: 824, o: "&nGg;" }], [0, { v: "&leg;", n: 65024, o: "&lesg;" }], [0, { v: "&gel;", n: 65024, o: "&gesl;" }], [2, "&cuepr;"], [0, "&cuesc;"], [0, "&NotPrecedesSlantEqual;"], [0, "&NotSucceedsSlantEqual;"], [0, "&NotSquareSubsetEqual;"], [0, "&NotSquareSupersetEqual;"], [2, "&lnsim;"], [0, "&gnsim;"], [0, "&precnsim;"], [0, "&scnsim;"], [0, "&nltri;"], [0, "&NotRightTriangle;"], [0, "&nltrie;"], [0, "&NotRightTriangleEqual;"], [0, "&vellip;"], [0, "&ctdot;"], [0, "&utdot;"], [0, "&dtdot;"], [0, "&disin;"], [0, "&isinsv;"], [0, "&isins;"], [0, { v: "&isindot;", n: 824, o: "&notindot;" }], [0, "&notinvc;"], [0, "&notinvb;"], [1, { v: "&isinE;", n: 824, o: "&notinE;" }], [0, "&nisd;"], [0, "&xnis;"], [0, "&nis;"], [0, "&notnivc;"], [0, "&notnivb;"], [6, "&barwed;"], [0, "&Barwed;"], [1, "&lceil;"], [0, "&rceil;"], [0, "&LeftFloor;"], [0, "&rfloor;"], [0, "&drcrop;"], [0, "&dlcrop;"], [0, "&urcrop;"], [0, "&ulcrop;"], [0, "&bnot;"], [1, "&profline;"], [0, "&profsurf;"], [1, "&telrec;"], [0, "&target;"], [5, "&ulcorn;"], [0, "&urcorn;"], [0, "&dlcorn;"], [0, "&drcorn;"], [2, "&frown;"], [0, "&smile;"], [9, "&cylcty;"], [0, "&profalar;"], [7, "&topbot;"], [6, "&ovbar;"], [1, "&solbar;"], [60, "&angzarr;"], [51, "&lmoustache;"], [0, "&rmoustache;"], [2, "&OverBracket;"], [0, "&bbrk;"], [0, "&bbrktbrk;"], [37, "&OverParenthesis;"], [0, "&UnderParenthesis;"], [0, "&OverBrace;"], [0, "&UnderBrace;"], [2, "&trpezium;"], [4, "&elinters;"], [59, "&blank;"], [164, "&circledS;"], [55, "&boxh;"], [1, "&boxv;"], [9, "&boxdr;"], [3, "&boxdl;"], [3, "&boxur;"], [3, "&boxul;"], [3, "&boxvr;"], [7, "&boxvl;"], [7, "&boxhd;"], [7, "&boxhu;"], [7, "&boxvh;"], [19, "&boxH;"], [0, "&boxV;"], [0, "&boxdR;"], [0, "&boxDr;"], [0, "&boxDR;"], [0, "&boxdL;"], [0, "&boxDl;"], [0, "&boxDL;"], [0, "&boxuR;"], [0, "&boxUr;"], [0, "&boxUR;"], [0, "&boxuL;"], [0, "&boxUl;"], [0, "&boxUL;"], [0, "&boxvR;"], [0, "&boxVr;"], [0, "&boxVR;"], [0, "&boxvL;"], [0, "&boxVl;"], [0, "&boxVL;"], [0, "&boxHd;"], [0, "&boxhD;"], [0, "&boxHD;"], [0, "&boxHu;"], [0, "&boxhU;"], [0, "&boxHU;"], [0, "&boxvH;"], [0, "&boxVh;"], [0, "&boxVH;"], [19, "&uhblk;"], [3, "&lhblk;"], [3, "&block;"], [8, "&blk14;"], [0, "&blk12;"], [0, "&blk34;"], [13, "&square;"], [8, "&blacksquare;"], [0, "&EmptyVerySmallSquare;"], [1, "&rect;"], [0, "&marker;"], [2, "&fltns;"], [1, "&bigtriangleup;"], [0, "&blacktriangle;"], [0, "&triangle;"], [2, "&blacktriangleright;"], [0, "&rtri;"], [3, "&bigtriangledown;"], [0, "&blacktriangledown;"], [0, "&dtri;"], [2, "&blacktriangleleft;"], [0, "&ltri;"], [6, "&loz;"], [0, "&cir;"], [32, "&tridot;"], [2, "&bigcirc;"], [8, "&ultri;"], [0, "&urtri;"], [0, "&lltri;"], [0, "&EmptySmallSquare;"], [0, "&FilledSmallSquare;"], [8, "&bigstar;"], [0, "&star;"], [7, "&phone;"], [49, "&female;"], [1, "&male;"], [29, "&spades;"], [2, "&clubs;"], [1, "&hearts;"], [0, "&diamondsuit;"], [3, "&sung;"], [2, "&flat;"], [0, "&natural;"], [0, "&sharp;"], [163, "&check;"], [3, "&cross;"], [8, "&malt;"], [21, "&sext;"], [33, "&VerticalSeparator;"], [25, "&lbbrk;"], [0, "&rbbrk;"], [84, "&bsolhsub;"], [0, "&suphsol;"], [28, "&LeftDoubleBracket;"], [0, "&RightDoubleBracket;"], [0, "&lang;"], [0, "&rang;"], [0, "&Lang;"], [0, "&Rang;"], [0, "&loang;"], [0, "&roang;"], [7, "&longleftarrow;"], [0, "&longrightarrow;"], [0, "&longleftrightarrow;"], [0, "&DoubleLongLeftArrow;"], [0, "&DoubleLongRightArrow;"], [0, "&DoubleLongLeftRightArrow;"], [1, "&longmapsto;"], [2, "&dzigrarr;"], [258, "&nvlArr;"], [0, "&nvrArr;"], [0, "&nvHarr;"], [0, "&Map;"], [6, "&lbarr;"], [0, "&bkarow;"], [0, "&lBarr;"], [0, "&dbkarow;"], [0, "&drbkarow;"], [0, "&DDotrahd;"], [0, "&UpArrowBar;"], [0, "&DownArrowBar;"], [2, "&Rarrtl;"], [2, "&latail;"], [0, "&ratail;"], [0, "&lAtail;"], [0, "&rAtail;"], [0, "&larrfs;"], [0, "&rarrfs;"], [0, "&larrbfs;"], [0, "&rarrbfs;"], [2, "&nwarhk;"], [0, "&nearhk;"], [0, "&hksearow;"], [0, "&hkswarow;"], [0, "&nwnear;"], [0, "&nesear;"], [0, "&seswar;"], [0, "&swnwar;"], [8, { v: "&rarrc;", n: 824, o: "&nrarrc;" }], [1, "&cudarrr;"], [0, "&ldca;"], [0, "&rdca;"], [0, "&cudarrl;"], [0, "&larrpl;"], [2, "&curarrm;"], [0, "&cularrp;"], [7, "&rarrpl;"], [2, "&harrcir;"], [0, "&Uarrocir;"], [0, "&lurdshar;"], [0, "&ldrushar;"], [2, "&LeftRightVector;"], [0, "&RightUpDownVector;"], [0, "&DownLeftRightVector;"], [0, "&LeftUpDownVector;"], [0, "&LeftVectorBar;"], [0, "&RightVectorBar;"], [0, "&RightUpVectorBar;"], [0, "&RightDownVectorBar;"], [0, "&DownLeftVectorBar;"], [0, "&DownRightVectorBar;"], [0, "&LeftUpVectorBar;"], [0, "&LeftDownVectorBar;"], [0, "&LeftTeeVector;"], [0, "&RightTeeVector;"], [0, "&RightUpTeeVector;"], [0, "&RightDownTeeVector;"], [0, "&DownLeftTeeVector;"], [0, "&DownRightTeeVector;"], [0, "&LeftUpTeeVector;"], [0, "&LeftDownTeeVector;"], [0, "&lHar;"], [0, "&uHar;"], [0, "&rHar;"], [0, "&dHar;"], [0, "&luruhar;"], [0, "&ldrdhar;"], [0, "&ruluhar;"], [0, "&rdldhar;"], [0, "&lharul;"], [0, "&llhard;"], [0, "&rharul;"], [0, "&lrhard;"], [0, "&udhar;"], [0, "&duhar;"], [0, "&RoundImplies;"], [0, "&erarr;"], [0, "&simrarr;"], [0, "&larrsim;"], [0, "&rarrsim;"], [0, "&rarrap;"], [0, "&ltlarr;"], [1, "&gtrarr;"], [0, "&subrarr;"], [1, "&suplarr;"], [0, "&lfisht;"], [0, "&rfisht;"], [0, "&ufisht;"], [0, "&dfisht;"], [5, "&lopar;"], [0, "&ropar;"], [4, "&lbrke;"], [0, "&rbrke;"], [0, "&lbrkslu;"], [0, "&rbrksld;"], [0, "&lbrksld;"], [0, "&rbrkslu;"], [0, "&langd;"], [0, "&rangd;"], [0, "&lparlt;"], [0, "&rpargt;"], [0, "&gtlPar;"], [0, "&ltrPar;"], [3, "&vzigzag;"], [1, "&vangrt;"], [0, "&angrtvbd;"], [6, "&ange;"], [0, "&range;"], [0, "&dwangle;"], [0, "&uwangle;"], [0, "&angmsdaa;"], [0, "&angmsdab;"], [0, "&angmsdac;"], [0, "&angmsdad;"], [0, "&angmsdae;"], [0, "&angmsdaf;"], [0, "&angmsdag;"], [0, "&angmsdah;"], [0, "&bemptyv;"], [0, "&demptyv;"], [0, "&cemptyv;"], [0, "&raemptyv;"], [0, "&laemptyv;"], [0, "&ohbar;"], [0, "&omid;"], [0, "&opar;"], [1, "&operp;"], [1, "&olcross;"], [0, "&odsold;"], [1, "&olcir;"], [0, "&ofcir;"], [0, "&olt;"], [0, "&ogt;"], [0, "&cirscir;"], [0, "&cirE;"], [0, "&solb;"], [0, "&bsolb;"], [3, "&boxbox;"], [3, "&trisb;"], [0, "&rtriltri;"], [0, { v: "&LeftTriangleBar;", n: 824, o: "&NotLeftTriangleBar;" }], [0, { v: "&RightTriangleBar;", n: 824, o: "&NotRightTriangleBar;" }], [11, "&iinfin;"], [0, "&infintie;"], [0, "&nvinfin;"], [4, "&eparsl;"], [0, "&smeparsl;"], [0, "&eqvparsl;"], [5, "&blacklozenge;"], [8, "&RuleDelayed;"], [1, "&dsol;"], [9, "&bigodot;"], [0, "&bigoplus;"], [0, "&bigotimes;"], [1, "&biguplus;"], [1, "&bigsqcup;"], [5, "&iiiint;"], [0, "&fpartint;"], [2, "&cirfnint;"], [0, "&awint;"], [0, "&rppolint;"], [0, "&scpolint;"], [0, "&npolint;"], [0, "&pointint;"], [0, "&quatint;"], [0, "&intlarhk;"], [10, "&pluscir;"], [0, "&plusacir;"], [0, "&simplus;"], [0, "&plusdu;"], [0, "&plussim;"], [0, "&plustwo;"], [1, "&mcomma;"], [0, "&minusdu;"], [2, "&loplus;"], [0, "&roplus;"], [0, "&Cross;"], [0, "&timesd;"], [0, "&timesbar;"], [1, "&smashp;"], [0, "&lotimes;"], [0, "&rotimes;"], [0, "&otimesas;"], [0, "&Otimes;"], [0, "&odiv;"], [0, "&triplus;"], [0, "&triminus;"], [0, "&tritime;"], [0, "&intprod;"], [2, "&amalg;"], [0, "&capdot;"], [1, "&ncup;"], [0, "&ncap;"], [0, "&capand;"], [0, "&cupor;"], [0, "&cupcap;"], [0, "&capcup;"], [0, "&cupbrcap;"], [0, "&capbrcup;"], [0, "&cupcup;"], [0, "&capcap;"], [0, "&ccups;"], [0, "&ccaps;"], [2, "&ccupssm;"], [2, "&And;"], [0, "&Or;"], [0, "&andand;"], [0, "&oror;"], [0, "&orslope;"], [0, "&andslope;"], [1, "&andv;"], [0, "&orv;"], [0, "&andd;"], [0, "&ord;"], [1, "&wedbar;"], [6, "&sdote;"], [3, "&simdot;"], [2, { v: "&congdot;", n: 824, o: "&ncongdot;" }], [0, "&easter;"], [0, "&apacir;"], [0, { v: "&apE;", n: 824, o: "&napE;" }], [0, "&eplus;"], [0, "&pluse;"], [0, "&Esim;"], [0, "&Colone;"], [0, "&Equal;"], [1, "&ddotseq;"], [0, "&equivDD;"], [0, "&ltcir;"], [0, "&gtcir;"], [0, "&ltquest;"], [0, "&gtquest;"], [0, { v: "&leqslant;", n: 824, o: "&nleqslant;" }], [0, { v: "&geqslant;", n: 824, o: "&ngeqslant;" }], [0, "&lesdot;"], [0, "&gesdot;"], [0, "&lesdoto;"], [0, "&gesdoto;"], [0, "&lesdotor;"], [0, "&gesdotol;"], [0, "&lap;"], [0, "&gap;"], [0, "&lne;"], [0, "&gne;"], [0, "&lnap;"], [0, "&gnap;"], [0, "&lEg;"], [0, "&gEl;"], [0, "&lsime;"], [0, "&gsime;"], [0, "&lsimg;"], [0, "&gsiml;"], [0, "&lgE;"], [0, "&glE;"], [0, "&lesges;"], [0, "&gesles;"], [0, "&els;"], [0, "&egs;"], [0, "&elsdot;"], [0, "&egsdot;"], [0, "&el;"], [0, "&eg;"], [2, "&siml;"], [0, "&simg;"], [0, "&simlE;"], [0, "&simgE;"], [0, { v: "&LessLess;", n: 824, o: "&NotNestedLessLess;" }], [0, { v: "&GreaterGreater;", n: 824, o: "&NotNestedGreaterGreater;" }], [1, "&glj;"], [0, "&gla;"], [0, "&ltcc;"], [0, "&gtcc;"], [0, "&lescc;"], [0, "&gescc;"], [0, "&smt;"], [0, "&lat;"], [0, { v: "&smte;", n: 65024, o: "&smtes;" }], [0, { v: "&late;", n: 65024, o: "&lates;" }], [0, "&bumpE;"], [0, { v: "&PrecedesEqual;", n: 824, o: "&NotPrecedesEqual;" }], [0, { v: "&sce;", n: 824, o: "&NotSucceedsEqual;" }], [2, "&prE;"], [0, "&scE;"], [0, "&precneqq;"], [0, "&scnE;"], [0, "&prap;"], [0, "&scap;"], [0, "&precnapprox;"], [0, "&scnap;"], [0, "&Pr;"], [0, "&Sc;"], [0, "&subdot;"], [0, "&supdot;"], [0, "&subplus;"], [0, "&supplus;"], [0, "&submult;"], [0, "&supmult;"], [0, "&subedot;"], [0, "&supedot;"], [0, { v: "&subE;", n: 824, o: "&nsubE;" }], [0, { v: "&supE;", n: 824, o: "&nsupE;" }], [0, "&subsim;"], [0, "&supsim;"], [2, { v: "&subnE;", n: 65024, o: "&varsubsetneqq;" }], [0, { v: "&supnE;", n: 65024, o: "&varsupsetneqq;" }], [2, "&csub;"], [0, "&csup;"], [0, "&csube;"], [0, "&csupe;"], [0, "&subsup;"], [0, "&supsub;"], [0, "&subsub;"], [0, "&supsup;"], [0, "&suphsub;"], [0, "&supdsub;"], [0, "&forkv;"], [0, "&topfork;"], [0, "&mlcp;"], [8, "&Dashv;"], [1, "&Vdashl;"], [0, "&Barv;"], [0, "&vBar;"], [0, "&vBarv;"], [1, "&Vbar;"], [0, "&Not;"], [0, "&bNot;"], [0, "&rnmid;"], [0, "&cirmid;"], [0, "&midcir;"], [0, "&topcir;"], [0, "&nhpar;"], [0, "&parsim;"], [9, { v: "&parsl;", n: 8421, o: "&nparsl;" }], [44343, { n: new Map(/* @__PURE__ */ restoreDiff([[56476, "&Ascr;"], [1, "&Cscr;"], [0, "&Dscr;"], [2, "&Gscr;"], [2, "&Jscr;"], [0, "&Kscr;"], [2, "&Nscr;"], [0, "&Oscr;"], [0, "&Pscr;"], [0, "&Qscr;"], [1, "&Sscr;"], [0, "&Tscr;"], [0, "&Uscr;"], [0, "&Vscr;"], [0, "&Wscr;"], [0, "&Xscr;"], [0, "&Yscr;"], [0, "&Zscr;"], [0, "&ascr;"], [0, "&bscr;"], [0, "&cscr;"], [0, "&dscr;"], [1, "&fscr;"], [1, "&hscr;"], [0, "&iscr;"], [0, "&jscr;"], [0, "&kscr;"], [0, "&lscr;"], [0, "&mscr;"], [0, "&nscr;"], [1, "&pscr;"], [0, "&qscr;"], [0, "&rscr;"], [0, "&sscr;"], [0, "&tscr;"], [0, "&uscr;"], [0, "&vscr;"], [0, "&wscr;"], [0, "&xscr;"], [0, "&yscr;"], [0, "&zscr;"], [52, "&Afr;"], [0, "&Bfr;"], [1, "&Dfr;"], [0, "&Efr;"], [0, "&Ffr;"], [0, "&Gfr;"], [2, "&Jfr;"], [0, "&Kfr;"], [0, "&Lfr;"], [0, "&Mfr;"], [0, "&Nfr;"], [0, "&Ofr;"], [0, "&Pfr;"], [0, "&Qfr;"], [1, "&Sfr;"], [0, "&Tfr;"], [0, "&Ufr;"], [0, "&Vfr;"], [0, "&Wfr;"], [0, "&Xfr;"], [0, "&Yfr;"], [1, "&afr;"], [0, "&bfr;"], [0, "&cfr;"], [0, "&dfr;"], [0, "&efr;"], [0, "&ffr;"], [0, "&gfr;"], [0, "&hfr;"], [0, "&ifr;"], [0, "&jfr;"], [0, "&kfr;"], [0, "&lfr;"], [0, "&mfr;"], [0, "&nfr;"], [0, "&ofr;"], [0, "&pfr;"], [0, "&qfr;"], [0, "&rfr;"], [0, "&sfr;"], [0, "&tfr;"], [0, "&ufr;"], [0, "&vfr;"], [0, "&wfr;"], [0, "&xfr;"], [0, "&yfr;"], [0, "&zfr;"], [0, "&Aopf;"], [0, "&Bopf;"], [1, "&Dopf;"], [0, "&Eopf;"], [0, "&Fopf;"], [0, "&Gopf;"], [1, "&Iopf;"], [0, "&Jopf;"], [0, "&Kopf;"], [0, "&Lopf;"], [0, "&Mopf;"], [1, "&Oopf;"], [3, "&Sopf;"], [0, "&Topf;"], [0, "&Uopf;"], [0, "&Vopf;"], [0, "&Wopf;"], [0, "&Xopf;"], [0, "&Yopf;"], [1, "&aopf;"], [0, "&bopf;"], [0, "&copf;"], [0, "&dopf;"], [0, "&eopf;"], [0, "&fopf;"], [0, "&gopf;"], [0, "&hopf;"], [0, "&iopf;"], [0, "&jopf;"], [0, "&kopf;"], [0, "&lopf;"], [0, "&mopf;"], [0, "&nopf;"], [0, "&oopf;"], [0, "&popf;"], [0, "&qopf;"], [0, "&ropf;"], [0, "&sopf;"], [0, "&topf;"], [0, "&uopf;"], [0, "&vopf;"], [0, "&wopf;"], [0, "&xopf;"], [0, "&yopf;"], [0, "&zopf;"]])) }], [8906, "&fflig;"], [0, "&filig;"], [0, "&fllig;"], [0, "&ffilig;"], [0, "&ffllig;"]]));
  }
});

// node_modules/entities/lib/escape.js
var require_escape = __commonJS({
  "node_modules/entities/lib/escape.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.escapeText = exports.escapeAttribute = exports.escapeUTF8 = exports.escape = exports.encodeXML = exports.getCodePoint = exports.xmlReplacer = void 0;
    exports.xmlReplacer = /["&'<>$\x80-\uFFFF]/g;
    var xmlCodeMap = /* @__PURE__ */ new Map([
      [34, "&quot;"],
      [38, "&amp;"],
      [39, "&apos;"],
      [60, "&lt;"],
      [62, "&gt;"]
    ]);
    exports.getCodePoint = // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition
    String.prototype.codePointAt != null ? function(str, index) {
      return str.codePointAt(index);
    } : (
      // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae
      function(c, index) {
        return (c.charCodeAt(index) & 64512) === 55296 ? (c.charCodeAt(index) - 55296) * 1024 + c.charCodeAt(index + 1) - 56320 + 65536 : c.charCodeAt(index);
      }
    );
    function encodeXML(str) {
      var ret = "";
      var lastIdx = 0;
      var match;
      while ((match = exports.xmlReplacer.exec(str)) !== null) {
        var i = match.index;
        var char = str.charCodeAt(i);
        var next = xmlCodeMap.get(char);
        if (next !== void 0) {
          ret += str.substring(lastIdx, i) + next;
          lastIdx = i + 1;
        } else {
          ret += "".concat(str.substring(lastIdx, i), "&#x").concat((0, exports.getCodePoint)(str, i).toString(16), ";");
          lastIdx = exports.xmlReplacer.lastIndex += Number((char & 64512) === 55296);
        }
      }
      return ret + str.substr(lastIdx);
    }
    exports.encodeXML = encodeXML;
    exports.escape = encodeXML;
    function getEscaper(regex, map) {
      return function escape(data) {
        var match;
        var lastIdx = 0;
        var result = "";
        while (match = regex.exec(data)) {
          if (lastIdx !== match.index) {
            result += data.substring(lastIdx, match.index);
          }
          result += map.get(match[0].charCodeAt(0));
          lastIdx = match.index + 1;
        }
        return result + data.substring(lastIdx);
      };
    }
    exports.escapeUTF8 = getEscaper(/[&<>'"]/g, xmlCodeMap);
    exports.escapeAttribute = getEscaper(/["&\u00A0]/g, /* @__PURE__ */ new Map([
      [34, "&quot;"],
      [38, "&amp;"],
      [160, "&nbsp;"]
    ]));
    exports.escapeText = getEscaper(/[&<>\u00A0]/g, /* @__PURE__ */ new Map([
      [38, "&amp;"],
      [60, "&lt;"],
      [62, "&gt;"],
      [160, "&nbsp;"]
    ]));
  }
});

// node_modules/entities/lib/encode.js
var require_encode = __commonJS({
  "node_modules/entities/lib/encode.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.encodeNonAsciiHTML = exports.encodeHTML = void 0;
    var encode_html_js_1 = __importDefault(require_encode_html());
    var escape_js_1 = require_escape();
    var htmlReplacer = /[\t\n!-,./:-@[-`\f{-}$\x80-\uFFFF]/g;
    function encodeHTML(data) {
      return encodeHTMLTrieRe(htmlReplacer, data);
    }
    exports.encodeHTML = encodeHTML;
    function encodeNonAsciiHTML(data) {
      return encodeHTMLTrieRe(escape_js_1.xmlReplacer, data);
    }
    exports.encodeNonAsciiHTML = encodeNonAsciiHTML;
    function encodeHTMLTrieRe(regExp, str) {
      var ret = "";
      var lastIdx = 0;
      var match;
      while ((match = regExp.exec(str)) !== null) {
        var i = match.index;
        ret += str.substring(lastIdx, i);
        var char = str.charCodeAt(i);
        var next = encode_html_js_1.default.get(char);
        if (typeof next === "object") {
          if (i + 1 < str.length) {
            var nextChar = str.charCodeAt(i + 1);
            var value = typeof next.n === "number" ? next.n === nextChar ? next.o : void 0 : next.n.get(nextChar);
            if (value !== void 0) {
              ret += value;
              lastIdx = regExp.lastIndex += 1;
              continue;
            }
          }
          next = next.v;
        }
        if (next !== void 0) {
          ret += next;
          lastIdx = i + 1;
        } else {
          var cp = (0, escape_js_1.getCodePoint)(str, i);
          ret += "&#x".concat(cp.toString(16), ";");
          lastIdx = regExp.lastIndex += Number(cp !== char);
        }
      }
      return ret + str.substr(lastIdx);
    }
  }
});

// node_modules/entities/lib/index.js
var require_lib4 = __commonJS({
  "node_modules/entities/lib/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.decodeXMLStrict = exports.decodeHTML5Strict = exports.decodeHTML4Strict = exports.decodeHTML5 = exports.decodeHTML4 = exports.decodeHTMLAttribute = exports.decodeHTMLStrict = exports.decodeHTML = exports.decodeXML = exports.DecodingMode = exports.EntityDecoder = exports.encodeHTML5 = exports.encodeHTML4 = exports.encodeNonAsciiHTML = exports.encodeHTML = exports.escapeText = exports.escapeAttribute = exports.escapeUTF8 = exports.escape = exports.encodeXML = exports.encode = exports.decodeStrict = exports.decode = exports.EncodingMode = exports.EntityLevel = void 0;
    var decode_js_1 = require_decode();
    var encode_js_1 = require_encode();
    var escape_js_1 = require_escape();
    var EntityLevel;
    (function(EntityLevel2) {
      EntityLevel2[EntityLevel2["XML"] = 0] = "XML";
      EntityLevel2[EntityLevel2["HTML"] = 1] = "HTML";
    })(EntityLevel = exports.EntityLevel || (exports.EntityLevel = {}));
    var EncodingMode;
    (function(EncodingMode2) {
      EncodingMode2[EncodingMode2["UTF8"] = 0] = "UTF8";
      EncodingMode2[EncodingMode2["ASCII"] = 1] = "ASCII";
      EncodingMode2[EncodingMode2["Extensive"] = 2] = "Extensive";
      EncodingMode2[EncodingMode2["Attribute"] = 3] = "Attribute";
      EncodingMode2[EncodingMode2["Text"] = 4] = "Text";
    })(EncodingMode = exports.EncodingMode || (exports.EncodingMode = {}));
    function decode(data, options) {
      if (options === void 0) {
        options = EntityLevel.XML;
      }
      var level = typeof options === "number" ? options : options.level;
      if (level === EntityLevel.HTML) {
        var mode = typeof options === "object" ? options.mode : void 0;
        return (0, decode_js_1.decodeHTML)(data, mode);
      }
      return (0, decode_js_1.decodeXML)(data);
    }
    exports.decode = decode;
    function decodeStrict(data, options) {
      var _a;
      if (options === void 0) {
        options = EntityLevel.XML;
      }
      var opts = typeof options === "number" ? { level: options } : options;
      (_a = opts.mode) !== null && _a !== void 0 ? _a : opts.mode = decode_js_1.DecodingMode.Strict;
      return decode(data, opts);
    }
    exports.decodeStrict = decodeStrict;
    function encode(data, options) {
      if (options === void 0) {
        options = EntityLevel.XML;
      }
      var opts = typeof options === "number" ? { level: options } : options;
      if (opts.mode === EncodingMode.UTF8)
        return (0, escape_js_1.escapeUTF8)(data);
      if (opts.mode === EncodingMode.Attribute)
        return (0, escape_js_1.escapeAttribute)(data);
      if (opts.mode === EncodingMode.Text)
        return (0, escape_js_1.escapeText)(data);
      if (opts.level === EntityLevel.HTML) {
        if (opts.mode === EncodingMode.ASCII) {
          return (0, encode_js_1.encodeNonAsciiHTML)(data);
        }
        return (0, encode_js_1.encodeHTML)(data);
      }
      return (0, escape_js_1.encodeXML)(data);
    }
    exports.encode = encode;
    var escape_js_2 = require_escape();
    Object.defineProperty(exports, "encodeXML", { enumerable: true, get: function() {
      return escape_js_2.encodeXML;
    } });
    Object.defineProperty(exports, "escape", { enumerable: true, get: function() {
      return escape_js_2.escape;
    } });
    Object.defineProperty(exports, "escapeUTF8", { enumerable: true, get: function() {
      return escape_js_2.escapeUTF8;
    } });
    Object.defineProperty(exports, "escapeAttribute", { enumerable: true, get: function() {
      return escape_js_2.escapeAttribute;
    } });
    Object.defineProperty(exports, "escapeText", { enumerable: true, get: function() {
      return escape_js_2.escapeText;
    } });
    var encode_js_2 = require_encode();
    Object.defineProperty(exports, "encodeHTML", { enumerable: true, get: function() {
      return encode_js_2.encodeHTML;
    } });
    Object.defineProperty(exports, "encodeNonAsciiHTML", { enumerable: true, get: function() {
      return encode_js_2.encodeNonAsciiHTML;
    } });
    Object.defineProperty(exports, "encodeHTML4", { enumerable: true, get: function() {
      return encode_js_2.encodeHTML;
    } });
    Object.defineProperty(exports, "encodeHTML5", { enumerable: true, get: function() {
      return encode_js_2.encodeHTML;
    } });
    var decode_js_2 = require_decode();
    Object.defineProperty(exports, "EntityDecoder", { enumerable: true, get: function() {
      return decode_js_2.EntityDecoder;
    } });
    Object.defineProperty(exports, "DecodingMode", { enumerable: true, get: function() {
      return decode_js_2.DecodingMode;
    } });
    Object.defineProperty(exports, "decodeXML", { enumerable: true, get: function() {
      return decode_js_2.decodeXML;
    } });
    Object.defineProperty(exports, "decodeHTML", { enumerable: true, get: function() {
      return decode_js_2.decodeHTML;
    } });
    Object.defineProperty(exports, "decodeHTMLStrict", { enumerable: true, get: function() {
      return decode_js_2.decodeHTMLStrict;
    } });
    Object.defineProperty(exports, "decodeHTMLAttribute", { enumerable: true, get: function() {
      return decode_js_2.decodeHTMLAttribute;
    } });
    Object.defineProperty(exports, "decodeHTML4", { enumerable: true, get: function() {
      return decode_js_2.decodeHTML;
    } });
    Object.defineProperty(exports, "decodeHTML5", { enumerable: true, get: function() {
      return decode_js_2.decodeHTML;
    } });
    Object.defineProperty(exports, "decodeHTML4Strict", { enumerable: true, get: function() {
      return decode_js_2.decodeHTMLStrict;
    } });
    Object.defineProperty(exports, "decodeHTML5Strict", { enumerable: true, get: function() {
      return decode_js_2.decodeHTMLStrict;
    } });
    Object.defineProperty(exports, "decodeXMLStrict", { enumerable: true, get: function() {
      return decode_js_2.decodeXML;
    } });
  }
});

// node_modules/dom-serializer/lib/foreignNames.js
var require_foreignNames = __commonJS({
  "node_modules/dom-serializer/lib/foreignNames.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.attributeNames = exports.elementNames = void 0;
    exports.elementNames = new Map([
      "altGlyph",
      "altGlyphDef",
      "altGlyphItem",
      "animateColor",
      "animateMotion",
      "animateTransform",
      "clipPath",
      "feBlend",
      "feColorMatrix",
      "feComponentTransfer",
      "feComposite",
      "feConvolveMatrix",
      "feDiffuseLighting",
      "feDisplacementMap",
      "feDistantLight",
      "feDropShadow",
      "feFlood",
      "feFuncA",
      "feFuncB",
      "feFuncG",
      "feFuncR",
      "feGaussianBlur",
      "feImage",
      "feMerge",
      "feMergeNode",
      "feMorphology",
      "feOffset",
      "fePointLight",
      "feSpecularLighting",
      "feSpotLight",
      "feTile",
      "feTurbulence",
      "foreignObject",
      "glyphRef",
      "linearGradient",
      "radialGradient",
      "textPath"
    ].map(function(val) {
      return [val.toLowerCase(), val];
    }));
    exports.attributeNames = new Map([
      "definitionURL",
      "attributeName",
      "attributeType",
      "baseFrequency",
      "baseProfile",
      "calcMode",
      "clipPathUnits",
      "diffuseConstant",
      "edgeMode",
      "filterUnits",
      "glyphRef",
      "gradientTransform",
      "gradientUnits",
      "kernelMatrix",
      "kernelUnitLength",
      "keyPoints",
      "keySplines",
      "keyTimes",
      "lengthAdjust",
      "limitingConeAngle",
      "markerHeight",
      "markerUnits",
      "markerWidth",
      "maskContentUnits",
      "maskUnits",
      "numOctaves",
      "pathLength",
      "patternContentUnits",
      "patternTransform",
      "patternUnits",
      "pointsAtX",
      "pointsAtY",
      "pointsAtZ",
      "preserveAlpha",
      "preserveAspectRatio",
      "primitiveUnits",
      "refX",
      "refY",
      "repeatCount",
      "repeatDur",
      "requiredExtensions",
      "requiredFeatures",
      "specularConstant",
      "specularExponent",
      "spreadMethod",
      "startOffset",
      "stdDeviation",
      "stitchTiles",
      "surfaceScale",
      "systemLanguage",
      "tableValues",
      "targetX",
      "targetY",
      "textLength",
      "viewBox",
      "viewTarget",
      "xChannelSelector",
      "yChannelSelector",
      "zoomAndPan"
    ].map(function(val) {
      return [val.toLowerCase(), val];
    }));
  }
});

// node_modules/dom-serializer/lib/index.js
var require_lib5 = __commonJS({
  "node_modules/dom-serializer/lib/index.js"(exports) {
    "use strict";
    var __assign = exports && exports.__assign || function() {
      __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p))
              t[p] = s[p];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.render = void 0;
    var ElementType = __importStar(require_lib2());
    var entities_1 = require_lib4();
    var foreignNames_js_1 = require_foreignNames();
    var unencodedElements = /* @__PURE__ */ new Set([
      "style",
      "script",
      "xmp",
      "iframe",
      "noembed",
      "noframes",
      "plaintext",
      "noscript"
    ]);
    function replaceQuotes(value) {
      return value.replace(/"/g, "&quot;");
    }
    function formatAttributes(attributes, opts) {
      var _a;
      if (!attributes)
        return;
      var encode = ((_a = opts.encodeEntities) !== null && _a !== void 0 ? _a : opts.decodeEntities) === false ? replaceQuotes : opts.xmlMode || opts.encodeEntities !== "utf8" ? entities_1.encodeXML : entities_1.escapeAttribute;
      return Object.keys(attributes).map(function(key) {
        var _a2, _b;
        var value = (_a2 = attributes[key]) !== null && _a2 !== void 0 ? _a2 : "";
        if (opts.xmlMode === "foreign") {
          key = (_b = foreignNames_js_1.attributeNames.get(key)) !== null && _b !== void 0 ? _b : key;
        }
        if (!opts.emptyAttrs && !opts.xmlMode && value === "") {
          return key;
        }
        return "".concat(key, '="').concat(encode(value), '"');
      }).join(" ");
    }
    var singleTag = /* @__PURE__ */ new Set([
      "area",
      "base",
      "basefont",
      "br",
      "col",
      "command",
      "embed",
      "frame",
      "hr",
      "img",
      "input",
      "isindex",
      "keygen",
      "link",
      "meta",
      "param",
      "source",
      "track",
      "wbr"
    ]);
    function render(node, options) {
      if (options === void 0) {
        options = {};
      }
      var nodes = "length" in node ? node : [node];
      var output = "";
      for (var i = 0; i < nodes.length; i++) {
        output += renderNode(nodes[i], options);
      }
      return output;
    }
    exports.render = render;
    exports.default = render;
    function renderNode(node, options) {
      switch (node.type) {
        case ElementType.Root:
          return render(node.children, options);
        case ElementType.Doctype:
        case ElementType.Directive:
          return renderDirective(node);
        case ElementType.Comment:
          return renderComment(node);
        case ElementType.CDATA:
          return renderCdata(node);
        case ElementType.Script:
        case ElementType.Style:
        case ElementType.Tag:
          return renderTag(node, options);
        case ElementType.Text:
          return renderText(node, options);
      }
    }
    var foreignModeIntegrationPoints = /* @__PURE__ */ new Set([
      "mi",
      "mo",
      "mn",
      "ms",
      "mtext",
      "annotation-xml",
      "foreignObject",
      "desc",
      "title"
    ]);
    var foreignElements = /* @__PURE__ */ new Set(["svg", "math"]);
    function renderTag(elem, opts) {
      var _a;
      if (opts.xmlMode === "foreign") {
        elem.name = (_a = foreignNames_js_1.elementNames.get(elem.name)) !== null && _a !== void 0 ? _a : elem.name;
        if (elem.parent && foreignModeIntegrationPoints.has(elem.parent.name)) {
          opts = __assign(__assign({}, opts), { xmlMode: false });
        }
      }
      if (!opts.xmlMode && foreignElements.has(elem.name)) {
        opts = __assign(__assign({}, opts), { xmlMode: "foreign" });
      }
      var tag = "<".concat(elem.name);
      var attribs = formatAttributes(elem.attribs, opts);
      if (attribs) {
        tag += " ".concat(attribs);
      }
      if (elem.children.length === 0 && (opts.xmlMode ? (
        // In XML mode or foreign mode, and user hasn't explicitly turned off self-closing tags
        opts.selfClosingTags !== false
      ) : (
        // User explicitly asked for self-closing tags, even in HTML mode
        opts.selfClosingTags && singleTag.has(elem.name)
      ))) {
        if (!opts.xmlMode)
          tag += " ";
        tag += "/>";
      } else {
        tag += ">";
        if (elem.children.length > 0) {
          tag += render(elem.children, opts);
        }
        if (opts.xmlMode || !singleTag.has(elem.name)) {
          tag += "</".concat(elem.name, ">");
        }
      }
      return tag;
    }
    function renderDirective(elem) {
      return "<".concat(elem.data, ">");
    }
    function renderText(elem, opts) {
      var _a;
      var data = elem.data || "";
      if (((_a = opts.encodeEntities) !== null && _a !== void 0 ? _a : opts.decodeEntities) !== false && !(!opts.xmlMode && elem.parent && unencodedElements.has(elem.parent.name))) {
        data = opts.xmlMode || opts.encodeEntities !== "utf8" ? (0, entities_1.encodeXML)(data) : (0, entities_1.escapeText)(data);
      }
      return data;
    }
    function renderCdata(elem) {
      return "<![CDATA[".concat(elem.children[0].data, "]]>");
    }
    function renderComment(elem) {
      return "<!--".concat(elem.data, "-->");
    }
  }
});

// node_modules/domutils/lib/stringify.js
var require_stringify3 = __commonJS({
  "node_modules/domutils/lib/stringify.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.innerText = exports.textContent = exports.getText = exports.getInnerHTML = exports.getOuterHTML = void 0;
    var domhandler_1 = require_lib3();
    var dom_serializer_1 = __importDefault(require_lib5());
    var domelementtype_1 = require_lib2();
    function getOuterHTML(node, options) {
      return (0, dom_serializer_1.default)(node, options);
    }
    exports.getOuterHTML = getOuterHTML;
    function getInnerHTML(node, options) {
      return (0, domhandler_1.hasChildren)(node) ? node.children.map(function(node2) {
        return getOuterHTML(node2, options);
      }).join("") : "";
    }
    exports.getInnerHTML = getInnerHTML;
    function getText(node) {
      if (Array.isArray(node))
        return node.map(getText).join("");
      if ((0, domhandler_1.isTag)(node))
        return node.name === "br" ? "\n" : getText(node.children);
      if ((0, domhandler_1.isCDATA)(node))
        return getText(node.children);
      if ((0, domhandler_1.isText)(node))
        return node.data;
      return "";
    }
    exports.getText = getText;
    function textContent(node) {
      if (Array.isArray(node))
        return node.map(textContent).join("");
      if ((0, domhandler_1.hasChildren)(node) && !(0, domhandler_1.isComment)(node)) {
        return textContent(node.children);
      }
      if ((0, domhandler_1.isText)(node))
        return node.data;
      return "";
    }
    exports.textContent = textContent;
    function innerText(node) {
      if (Array.isArray(node))
        return node.map(innerText).join("");
      if ((0, domhandler_1.hasChildren)(node) && (node.type === domelementtype_1.ElementType.Tag || (0, domhandler_1.isCDATA)(node))) {
        return innerText(node.children);
      }
      if ((0, domhandler_1.isText)(node))
        return node.data;
      return "";
    }
    exports.innerText = innerText;
  }
});

// node_modules/domutils/lib/traversal.js
var require_traversal = __commonJS({
  "node_modules/domutils/lib/traversal.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.prevElementSibling = exports.nextElementSibling = exports.getName = exports.hasAttrib = exports.getAttributeValue = exports.getSiblings = exports.getParent = exports.getChildren = void 0;
    var domhandler_1 = require_lib3();
    function getChildren(elem) {
      return (0, domhandler_1.hasChildren)(elem) ? elem.children : [];
    }
    exports.getChildren = getChildren;
    function getParent(elem) {
      return elem.parent || null;
    }
    exports.getParent = getParent;
    function getSiblings(elem) {
      var _a, _b;
      var parent = getParent(elem);
      if (parent != null)
        return getChildren(parent);
      var siblings = [elem];
      var prev = elem.prev, next = elem.next;
      while (prev != null) {
        siblings.unshift(prev);
        _a = prev, prev = _a.prev;
      }
      while (next != null) {
        siblings.push(next);
        _b = next, next = _b.next;
      }
      return siblings;
    }
    exports.getSiblings = getSiblings;
    function getAttributeValue(elem, name) {
      var _a;
      return (_a = elem.attribs) === null || _a === void 0 ? void 0 : _a[name];
    }
    exports.getAttributeValue = getAttributeValue;
    function hasAttrib(elem, name) {
      return elem.attribs != null && Object.prototype.hasOwnProperty.call(elem.attribs, name) && elem.attribs[name] != null;
    }
    exports.hasAttrib = hasAttrib;
    function getName(elem) {
      return elem.name;
    }
    exports.getName = getName;
    function nextElementSibling(elem) {
      var _a;
      var next = elem.next;
      while (next !== null && !(0, domhandler_1.isTag)(next))
        _a = next, next = _a.next;
      return next;
    }
    exports.nextElementSibling = nextElementSibling;
    function prevElementSibling(elem) {
      var _a;
      var prev = elem.prev;
      while (prev !== null && !(0, domhandler_1.isTag)(prev))
        _a = prev, prev = _a.prev;
      return prev;
    }
    exports.prevElementSibling = prevElementSibling;
  }
});

// node_modules/domutils/lib/manipulation.js
var require_manipulation = __commonJS({
  "node_modules/domutils/lib/manipulation.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.prepend = exports.prependChild = exports.append = exports.appendChild = exports.replaceElement = exports.removeElement = void 0;
    function removeElement(elem) {
      if (elem.prev)
        elem.prev.next = elem.next;
      if (elem.next)
        elem.next.prev = elem.prev;
      if (elem.parent) {
        var childs = elem.parent.children;
        childs.splice(childs.lastIndexOf(elem), 1);
      }
    }
    exports.removeElement = removeElement;
    function replaceElement(elem, replacement) {
      var prev = replacement.prev = elem.prev;
      if (prev) {
        prev.next = replacement;
      }
      var next = replacement.next = elem.next;
      if (next) {
        next.prev = replacement;
      }
      var parent = replacement.parent = elem.parent;
      if (parent) {
        var childs = parent.children;
        childs[childs.lastIndexOf(elem)] = replacement;
        elem.parent = null;
      }
    }
    exports.replaceElement = replaceElement;
    function appendChild(elem, child) {
      removeElement(child);
      child.next = null;
      child.parent = elem;
      if (elem.children.push(child) > 1) {
        var sibling = elem.children[elem.children.length - 2];
        sibling.next = child;
        child.prev = sibling;
      } else {
        child.prev = null;
      }
    }
    exports.appendChild = appendChild;
    function append(elem, next) {
      removeElement(next);
      var parent = elem.parent;
      var currNext = elem.next;
      next.next = currNext;
      next.prev = elem;
      elem.next = next;
      next.parent = parent;
      if (currNext) {
        currNext.prev = next;
        if (parent) {
          var childs = parent.children;
          childs.splice(childs.lastIndexOf(currNext), 0, next);
        }
      } else if (parent) {
        parent.children.push(next);
      }
    }
    exports.append = append;
    function prependChild(elem, child) {
      removeElement(child);
      child.parent = elem;
      child.prev = null;
      if (elem.children.unshift(child) !== 1) {
        var sibling = elem.children[1];
        sibling.prev = child;
        child.next = sibling;
      } else {
        child.next = null;
      }
    }
    exports.prependChild = prependChild;
    function prepend(elem, prev) {
      removeElement(prev);
      var parent = elem.parent;
      if (parent) {
        var childs = parent.children;
        childs.splice(childs.indexOf(elem), 0, prev);
      }
      if (elem.prev) {
        elem.prev.next = prev;
      }
      prev.parent = parent;
      prev.prev = elem.prev;
      prev.next = elem;
      elem.prev = prev;
    }
    exports.prepend = prepend;
  }
});

// node_modules/domutils/lib/querying.js
var require_querying = __commonJS({
  "node_modules/domutils/lib/querying.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.findAll = exports.existsOne = exports.findOne = exports.findOneChild = exports.find = exports.filter = void 0;
    var domhandler_1 = require_lib3();
    function filter(test, node, recurse, limit) {
      if (recurse === void 0) {
        recurse = true;
      }
      if (limit === void 0) {
        limit = Infinity;
      }
      if (!Array.isArray(node))
        node = [node];
      return find(test, node, recurse, limit);
    }
    exports.filter = filter;
    function find(test, nodes, recurse, limit) {
      var result = [];
      for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {
        var elem = nodes_1[_i];
        if (test(elem)) {
          result.push(elem);
          if (--limit <= 0)
            break;
        }
        if (recurse && (0, domhandler_1.hasChildren)(elem) && elem.children.length > 0) {
          var children = find(test, elem.children, recurse, limit);
          result.push.apply(result, children);
          limit -= children.length;
          if (limit <= 0)
            break;
        }
      }
      return result;
    }
    exports.find = find;
    function findOneChild(test, nodes) {
      return nodes.find(test);
    }
    exports.findOneChild = findOneChild;
    function findOne(test, nodes, recurse) {
      if (recurse === void 0) {
        recurse = true;
      }
      var elem = null;
      for (var i = 0; i < nodes.length && !elem; i++) {
        var checked = nodes[i];
        if (!(0, domhandler_1.isTag)(checked)) {
          continue;
        } else if (test(checked)) {
          elem = checked;
        } else if (recurse && checked.children.length > 0) {
          elem = findOne(test, checked.children, true);
        }
      }
      return elem;
    }
    exports.findOne = findOne;
    function existsOne(test, nodes) {
      return nodes.some(function(checked) {
        return (0, domhandler_1.isTag)(checked) && (test(checked) || checked.children.length > 0 && existsOne(test, checked.children));
      });
    }
    exports.existsOne = existsOne;
    function findAll(test, nodes) {
      var _a;
      var result = [];
      var stack = nodes.filter(domhandler_1.isTag);
      var elem;
      while (elem = stack.shift()) {
        var children = (_a = elem.children) === null || _a === void 0 ? void 0 : _a.filter(domhandler_1.isTag);
        if (children && children.length > 0) {
          stack.unshift.apply(stack, children);
        }
        if (test(elem))
          result.push(elem);
      }
      return result;
    }
    exports.findAll = findAll;
  }
});

// node_modules/domutils/lib/legacy.js
var require_legacy = __commonJS({
  "node_modules/domutils/lib/legacy.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.getElementsByTagType = exports.getElementsByTagName = exports.getElementById = exports.getElements = exports.testElement = void 0;
    var domhandler_1 = require_lib3();
    var querying_js_1 = require_querying();
    var Checks = {
      tag_name: function(name) {
        if (typeof name === "function") {
          return function(elem) {
            return (0, domhandler_1.isTag)(elem) && name(elem.name);
          };
        } else if (name === "*") {
          return domhandler_1.isTag;
        }
        return function(elem) {
          return (0, domhandler_1.isTag)(elem) && elem.name === name;
        };
      },
      tag_type: function(type) {
        if (typeof type === "function") {
          return function(elem) {
            return type(elem.type);
          };
        }
        return function(elem) {
          return elem.type === type;
        };
      },
      tag_contains: function(data) {
        if (typeof data === "function") {
          return function(elem) {
            return (0, domhandler_1.isText)(elem) && data(elem.data);
          };
        }
        return function(elem) {
          return (0, domhandler_1.isText)(elem) && elem.data === data;
        };
      }
    };
    function getAttribCheck(attrib, value) {
      if (typeof value === "function") {
        return function(elem) {
          return (0, domhandler_1.isTag)(elem) && value(elem.attribs[attrib]);
        };
      }
      return function(elem) {
        return (0, domhandler_1.isTag)(elem) && elem.attribs[attrib] === value;
      };
    }
    function combineFuncs(a, b) {
      return function(elem) {
        return a(elem) || b(elem);
      };
    }
    function compileTest(options) {
      var funcs = Object.keys(options).map(function(key) {
        var value = options[key];
        return Object.prototype.hasOwnProperty.call(Checks, key) ? Checks[key](value) : getAttribCheck(key, value);
      });
      return funcs.length === 0 ? null : funcs.reduce(combineFuncs);
    }
    function testElement(options, node) {
      var test = compileTest(options);
      return test ? test(node) : true;
    }
    exports.testElement = testElement;
    function getElements(options, nodes, recurse, limit) {
      if (limit === void 0) {
        limit = Infinity;
      }
      var test = compileTest(options);
      return test ? (0, querying_js_1.filter)(test, nodes, recurse, limit) : [];
    }
    exports.getElements = getElements;
    function getElementById(id, nodes, recurse) {
      if (recurse === void 0) {
        recurse = true;
      }
      if (!Array.isArray(nodes))
        nodes = [nodes];
      return (0, querying_js_1.findOne)(getAttribCheck("id", id), nodes, recurse);
    }
    exports.getElementById = getElementById;
    function getElementsByTagName(tagName, nodes, recurse, limit) {
      if (recurse === void 0) {
        recurse = true;
      }
      if (limit === void 0) {
        limit = Infinity;
      }
      return (0, querying_js_1.filter)(Checks["tag_name"](tagName), nodes, recurse, limit);
    }
    exports.getElementsByTagName = getElementsByTagName;
    function getElementsByTagType(type, nodes, recurse, limit) {
      if (recurse === void 0) {
        recurse = true;
      }
      if (limit === void 0) {
        limit = Infinity;
      }
      return (0, querying_js_1.filter)(Checks["tag_type"](type), nodes, recurse, limit);
    }
    exports.getElementsByTagType = getElementsByTagType;
  }
});

// node_modules/domutils/lib/helpers.js
var require_helpers = __commonJS({
  "node_modules/domutils/lib/helpers.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.uniqueSort = exports.compareDocumentPosition = exports.DocumentPosition = exports.removeSubsets = void 0;
    var domhandler_1 = require_lib3();
    function removeSubsets(nodes) {
      var idx = nodes.length;
      while (--idx >= 0) {
        var node = nodes[idx];
        if (idx > 0 && nodes.lastIndexOf(node, idx - 1) >= 0) {
          nodes.splice(idx, 1);
          continue;
        }
        for (var ancestor = node.parent; ancestor; ancestor = ancestor.parent) {
          if (nodes.includes(ancestor)) {
            nodes.splice(idx, 1);
            break;
          }
        }
      }
      return nodes;
    }
    exports.removeSubsets = removeSubsets;
    var DocumentPosition;
    (function(DocumentPosition2) {
      DocumentPosition2[DocumentPosition2["DISCONNECTED"] = 1] = "DISCONNECTED";
      DocumentPosition2[DocumentPosition2["PRECEDING"] = 2] = "PRECEDING";
      DocumentPosition2[DocumentPosition2["FOLLOWING"] = 4] = "FOLLOWING";
      DocumentPosition2[DocumentPosition2["CONTAINS"] = 8] = "CONTAINS";
      DocumentPosition2[DocumentPosition2["CONTAINED_BY"] = 16] = "CONTAINED_BY";
    })(DocumentPosition = exports.DocumentPosition || (exports.DocumentPosition = {}));
    function compareDocumentPosition(nodeA, nodeB) {
      var aParents = [];
      var bParents = [];
      if (nodeA === nodeB) {
        return 0;
      }
      var current = (0, domhandler_1.hasChildren)(nodeA) ? nodeA : nodeA.parent;
      while (current) {
        aParents.unshift(current);
        current = current.parent;
      }
      current = (0, domhandler_1.hasChildren)(nodeB) ? nodeB : nodeB.parent;
      while (current) {
        bParents.unshift(current);
        current = current.parent;
      }
      var maxIdx = Math.min(aParents.length, bParents.length);
      var idx = 0;
      while (idx < maxIdx && aParents[idx] === bParents[idx]) {
        idx++;
      }
      if (idx === 0) {
        return DocumentPosition.DISCONNECTED;
      }
      var sharedParent = aParents[idx - 1];
      var siblings = sharedParent.children;
      var aSibling = aParents[idx];
      var bSibling = bParents[idx];
      if (siblings.indexOf(aSibling) > siblings.indexOf(bSibling)) {
        if (sharedParent === nodeB) {
          return DocumentPosition.FOLLOWING | DocumentPosition.CONTAINED_BY;
        }
        return DocumentPosition.FOLLOWING;
      }
      if (sharedParent === nodeA) {
        return DocumentPosition.PRECEDING | DocumentPosition.CONTAINS;
      }
      return DocumentPosition.PRECEDING;
    }
    exports.compareDocumentPosition = compareDocumentPosition;
    function uniqueSort(nodes) {
      nodes = nodes.filter(function(node, i, arr) {
        return !arr.includes(node, i + 1);
      });
      nodes.sort(function(a, b) {
        var relative = compareDocumentPosition(a, b);
        if (relative & DocumentPosition.PRECEDING) {
          return -1;
        } else if (relative & DocumentPosition.FOLLOWING) {
          return 1;
        }
        return 0;
      });
      return nodes;
    }
    exports.uniqueSort = uniqueSort;
  }
});

// node_modules/domutils/lib/feeds.js
var require_feeds = __commonJS({
  "node_modules/domutils/lib/feeds.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.getFeed = void 0;
    var stringify_js_1 = require_stringify3();
    var legacy_js_1 = require_legacy();
    function getFeed(doc) {
      var feedRoot = getOneElement(isValidFeed, doc);
      return !feedRoot ? null : feedRoot.name === "feed" ? getAtomFeed(feedRoot) : getRssFeed(feedRoot);
    }
    exports.getFeed = getFeed;
    function getAtomFeed(feedRoot) {
      var _a;
      var childs = feedRoot.children;
      var feed = {
        type: "atom",
        items: (0, legacy_js_1.getElementsByTagName)("entry", childs).map(function(item) {
          var _a2;
          var children = item.children;
          var entry = { media: getMediaElements(children) };
          addConditionally(entry, "id", "id", children);
          addConditionally(entry, "title", "title", children);
          var href2 = (_a2 = getOneElement("link", children)) === null || _a2 === void 0 ? void 0 : _a2.attribs["href"];
          if (href2) {
            entry.link = href2;
          }
          var description = fetch("summary", children) || fetch("content", children);
          if (description) {
            entry.description = description;
          }
          var pubDate = fetch("updated", children);
          if (pubDate) {
            entry.pubDate = new Date(pubDate);
          }
          return entry;
        })
      };
      addConditionally(feed, "id", "id", childs);
      addConditionally(feed, "title", "title", childs);
      var href = (_a = getOneElement("link", childs)) === null || _a === void 0 ? void 0 : _a.attribs["href"];
      if (href) {
        feed.link = href;
      }
      addConditionally(feed, "description", "subtitle", childs);
      var updated = fetch("updated", childs);
      if (updated) {
        feed.updated = new Date(updated);
      }
      addConditionally(feed, "author", "email", childs, true);
      return feed;
    }
    function getRssFeed(feedRoot) {
      var _a, _b;
      var childs = (_b = (_a = getOneElement("channel", feedRoot.children)) === null || _a === void 0 ? void 0 : _a.children) !== null && _b !== void 0 ? _b : [];
      var feed = {
        type: feedRoot.name.substr(0, 3),
        id: "",
        items: (0, legacy_js_1.getElementsByTagName)("item", feedRoot.children).map(function(item) {
          var children = item.children;
          var entry = { media: getMediaElements(children) };
          addConditionally(entry, "id", "guid", children);
          addConditionally(entry, "title", "title", children);
          addConditionally(entry, "link", "link", children);
          addConditionally(entry, "description", "description", children);
          var pubDate = fetch("pubDate", children);
          if (pubDate)
            entry.pubDate = new Date(pubDate);
          return entry;
        })
      };
      addConditionally(feed, "title", "title", childs);
      addConditionally(feed, "link", "link", childs);
      addConditionally(feed, "description", "description", childs);
      var updated = fetch("lastBuildDate", childs);
      if (updated) {
        feed.updated = new Date(updated);
      }
      addConditionally(feed, "author", "managingEditor", childs, true);
      return feed;
    }
    var MEDIA_KEYS_STRING = ["url", "type", "lang"];
    var MEDIA_KEYS_INT = [
      "fileSize",
      "bitrate",
      "framerate",
      "samplingrate",
      "channels",
      "duration",
      "height",
      "width"
    ];
    function getMediaElements(where) {
      return (0, legacy_js_1.getElementsByTagName)("media:content", where).map(function(elem) {
        var attribs = elem.attribs;
        var media = {
          medium: attribs["medium"],
          isDefault: !!attribs["isDefault"]
        };
        for (var _i = 0, MEDIA_KEYS_STRING_1 = MEDIA_KEYS_STRING; _i < MEDIA_KEYS_STRING_1.length; _i++) {
          var attrib = MEDIA_KEYS_STRING_1[_i];
          if (attribs[attrib]) {
            media[attrib] = attribs[attrib];
          }
        }
        for (var _a = 0, MEDIA_KEYS_INT_1 = MEDIA_KEYS_INT; _a < MEDIA_KEYS_INT_1.length; _a++) {
          var attrib = MEDIA_KEYS_INT_1[_a];
          if (attribs[attrib]) {
            media[attrib] = parseInt(attribs[attrib], 10);
          }
        }
        if (attribs["expression"]) {
          media.expression = attribs["expression"];
        }
        return media;
      });
    }
    function getOneElement(tagName, node) {
      return (0, legacy_js_1.getElementsByTagName)(tagName, node, true, 1)[0];
    }
    function fetch(tagName, where, recurse) {
      if (recurse === void 0) {
        recurse = false;
      }
      return (0, stringify_js_1.textContent)((0, legacy_js_1.getElementsByTagName)(tagName, where, recurse, 1)).trim();
    }
    function addConditionally(obj, prop, tagName, where, recurse) {
      if (recurse === void 0) {
        recurse = false;
      }
      var val = fetch(tagName, where, recurse);
      if (val)
        obj[prop] = val;
    }
    function isValidFeed(value) {
      return value === "rss" || value === "feed" || value === "rdf:RDF";
    }
  }
});

// node_modules/domutils/lib/index.js
var require_lib6 = __commonJS({
  "node_modules/domutils/lib/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.hasChildren = exports.isDocument = exports.isComment = exports.isText = exports.isCDATA = exports.isTag = void 0;
    __exportStar(require_stringify3(), exports);
    __exportStar(require_traversal(), exports);
    __exportStar(require_manipulation(), exports);
    __exportStar(require_querying(), exports);
    __exportStar(require_legacy(), exports);
    __exportStar(require_helpers(), exports);
    __exportStar(require_feeds(), exports);
    var domhandler_1 = require_lib3();
    Object.defineProperty(exports, "isTag", { enumerable: true, get: function() {
      return domhandler_1.isTag;
    } });
    Object.defineProperty(exports, "isCDATA", { enumerable: true, get: function() {
      return domhandler_1.isCDATA;
    } });
    Object.defineProperty(exports, "isText", { enumerable: true, get: function() {
      return domhandler_1.isText;
    } });
    Object.defineProperty(exports, "isComment", { enumerable: true, get: function() {
      return domhandler_1.isComment;
    } });
    Object.defineProperty(exports, "isDocument", { enumerable: true, get: function() {
      return domhandler_1.isDocument;
    } });
    Object.defineProperty(exports, "hasChildren", { enumerable: true, get: function() {
      return domhandler_1.hasChildren;
    } });
  }
});

// node_modules/boolbase/index.js
var require_boolbase = __commonJS({
  "node_modules/boolbase/index.js"(exports, module2) {
    module2.exports = {
      trueFunc: function trueFunc() {
        return true;
      },
      falseFunc: function falseFunc() {
        return false;
      }
    };
  }
});

// node_modules/css-what/lib/commonjs/types.js
var require_types = __commonJS({
  "node_modules/css-what/lib/commonjs/types.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.AttributeAction = exports.IgnoreCaseMode = exports.SelectorType = void 0;
    var SelectorType;
    (function(SelectorType2) {
      SelectorType2["Attribute"] = "attribute";
      SelectorType2["Pseudo"] = "pseudo";
      SelectorType2["PseudoElement"] = "pseudo-element";
      SelectorType2["Tag"] = "tag";
      SelectorType2["Universal"] = "universal";
      SelectorType2["Adjacent"] = "adjacent";
      SelectorType2["Child"] = "child";
      SelectorType2["Descendant"] = "descendant";
      SelectorType2["Parent"] = "parent";
      SelectorType2["Sibling"] = "sibling";
      SelectorType2["ColumnCombinator"] = "column-combinator";
    })(SelectorType = exports.SelectorType || (exports.SelectorType = {}));
    exports.IgnoreCaseMode = {
      Unknown: null,
      QuirksMode: "quirks",
      IgnoreCase: true,
      CaseSensitive: false
    };
    var AttributeAction;
    (function(AttributeAction2) {
      AttributeAction2["Any"] = "any";
      AttributeAction2["Element"] = "element";
      AttributeAction2["End"] = "end";
      AttributeAction2["Equals"] = "equals";
      AttributeAction2["Exists"] = "exists";
      AttributeAction2["Hyphen"] = "hyphen";
      AttributeAction2["Not"] = "not";
      AttributeAction2["Start"] = "start";
    })(AttributeAction = exports.AttributeAction || (exports.AttributeAction = {}));
  }
});

// node_modules/css-what/lib/commonjs/parse.js
var require_parse4 = __commonJS({
  "node_modules/css-what/lib/commonjs/parse.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.parse = exports.isTraversal = void 0;
    var types_1 = require_types();
    var reName = /^[^\\#]?(?:\\(?:[\da-f]{1,6}\s?|.)|[\w\-\u00b0-\uFFFF])+/;
    var reEscape = /\\([\da-f]{1,6}\s?|(\s)|.)/gi;
    var actionTypes = /* @__PURE__ */ new Map([
      [126, types_1.AttributeAction.Element],
      [94, types_1.AttributeAction.Start],
      [36, types_1.AttributeAction.End],
      [42, types_1.AttributeAction.Any],
      [33, types_1.AttributeAction.Not],
      [124, types_1.AttributeAction.Hyphen]
    ]);
    var unpackPseudos = /* @__PURE__ */ new Set([
      "has",
      "not",
      "matches",
      "is",
      "where",
      "host",
      "host-context"
    ]);
    function isTraversal(selector) {
      switch (selector.type) {
        case types_1.SelectorType.Adjacent:
        case types_1.SelectorType.Child:
        case types_1.SelectorType.Descendant:
        case types_1.SelectorType.Parent:
        case types_1.SelectorType.Sibling:
        case types_1.SelectorType.ColumnCombinator:
          return true;
        default:
          return false;
      }
    }
    exports.isTraversal = isTraversal;
    var stripQuotesFromPseudos = /* @__PURE__ */ new Set(["contains", "icontains"]);
    function funescape(_, escaped, escapedWhitespace) {
      var high = parseInt(escaped, 16) - 65536;
      return high !== high || escapedWhitespace ? escaped : high < 0 ? (
        // BMP codepoint
        String.fromCharCode(high + 65536)
      ) : (
        // Supplemental Plane codepoint (surrogate pair)
        String.fromCharCode(high >> 10 | 55296, high & 1023 | 56320)
      );
    }
    function unescapeCSS(str) {
      return str.replace(reEscape, funescape);
    }
    function isQuote(c) {
      return c === 39 || c === 34;
    }
    function isWhitespace(c) {
      return c === 32 || c === 9 || c === 10 || c === 12 || c === 13;
    }
    function parse(selector) {
      var subselects = [];
      var endIndex = parseSelector(subselects, "".concat(selector), 0);
      if (endIndex < selector.length) {
        throw new Error("Unmatched selector: ".concat(selector.slice(endIndex)));
      }
      return subselects;
    }
    exports.parse = parse;
    function parseSelector(subselects, selector, selectorIndex) {
      var tokens = [];
      function getName(offset) {
        var match = selector.slice(selectorIndex + offset).match(reName);
        if (!match) {
          throw new Error("Expected name, found ".concat(selector.slice(selectorIndex)));
        }
        var name = match[0];
        selectorIndex += offset + name.length;
        return unescapeCSS(name);
      }
      function stripWhitespace(offset) {
        selectorIndex += offset;
        while (selectorIndex < selector.length && isWhitespace(selector.charCodeAt(selectorIndex))) {
          selectorIndex++;
        }
      }
      function readValueWithParenthesis() {
        selectorIndex += 1;
        var start = selectorIndex;
        var counter = 1;
        for (; counter > 0 && selectorIndex < selector.length; selectorIndex++) {
          if (selector.charCodeAt(selectorIndex) === 40 && !isEscaped(selectorIndex)) {
            counter++;
          } else if (selector.charCodeAt(selectorIndex) === 41 && !isEscaped(selectorIndex)) {
            counter--;
          }
        }
        if (counter) {
          throw new Error("Parenthesis not matched");
        }
        return unescapeCSS(selector.slice(start, selectorIndex - 1));
      }
      function isEscaped(pos) {
        var slashCount = 0;
        while (selector.charCodeAt(--pos) === 92)
          slashCount++;
        return (slashCount & 1) === 1;
      }
      function ensureNotTraversal() {
        if (tokens.length > 0 && isTraversal(tokens[tokens.length - 1])) {
          throw new Error("Did not expect successive traversals.");
        }
      }
      function addTraversal(type) {
        if (tokens.length > 0 && tokens[tokens.length - 1].type === types_1.SelectorType.Descendant) {
          tokens[tokens.length - 1].type = type;
          return;
        }
        ensureNotTraversal();
        tokens.push({ type });
      }
      function addSpecialAttribute(name, action2) {
        tokens.push({
          type: types_1.SelectorType.Attribute,
          name,
          action: action2,
          value: getName(1),
          namespace: null,
          ignoreCase: "quirks"
        });
      }
      function finalizeSubselector() {
        if (tokens.length && tokens[tokens.length - 1].type === types_1.SelectorType.Descendant) {
          tokens.pop();
        }
        if (tokens.length === 0) {
          throw new Error("Empty sub-selector");
        }
        subselects.push(tokens);
      }
      stripWhitespace(0);
      if (selector.length === selectorIndex) {
        return selectorIndex;
      }
      loop:
        while (selectorIndex < selector.length) {
          var firstChar = selector.charCodeAt(selectorIndex);
          switch (firstChar) {
            case 32:
            case 9:
            case 10:
            case 12:
            case 13: {
              if (tokens.length === 0 || tokens[0].type !== types_1.SelectorType.Descendant) {
                ensureNotTraversal();
                tokens.push({ type: types_1.SelectorType.Descendant });
              }
              stripWhitespace(1);
              break;
            }
            case 62: {
              addTraversal(types_1.SelectorType.Child);
              stripWhitespace(1);
              break;
            }
            case 60: {
              addTraversal(types_1.SelectorType.Parent);
              stripWhitespace(1);
              break;
            }
            case 126: {
              addTraversal(types_1.SelectorType.Sibling);
              stripWhitespace(1);
              break;
            }
            case 43: {
              addTraversal(types_1.SelectorType.Adjacent);
              stripWhitespace(1);
              break;
            }
            case 46: {
              addSpecialAttribute("class", types_1.AttributeAction.Element);
              break;
            }
            case 35: {
              addSpecialAttribute("id", types_1.AttributeAction.Equals);
              break;
            }
            case 91: {
              stripWhitespace(1);
              var name_1 = void 0;
              var namespace = null;
              if (selector.charCodeAt(selectorIndex) === 124) {
                name_1 = getName(1);
              } else if (selector.startsWith("*|", selectorIndex)) {
                namespace = "*";
                name_1 = getName(2);
              } else {
                name_1 = getName(0);
                if (selector.charCodeAt(selectorIndex) === 124 && selector.charCodeAt(selectorIndex + 1) !== 61) {
                  namespace = name_1;
                  name_1 = getName(1);
                }
              }
              stripWhitespace(0);
              var action = types_1.AttributeAction.Exists;
              var possibleAction = actionTypes.get(selector.charCodeAt(selectorIndex));
              if (possibleAction) {
                action = possibleAction;
                if (selector.charCodeAt(selectorIndex + 1) !== 61) {
                  throw new Error("Expected `=`");
                }
                stripWhitespace(2);
              } else if (selector.charCodeAt(selectorIndex) === 61) {
                action = types_1.AttributeAction.Equals;
                stripWhitespace(1);
              }
              var value = "";
              var ignoreCase = null;
              if (action !== "exists") {
                if (isQuote(selector.charCodeAt(selectorIndex))) {
                  var quote = selector.charCodeAt(selectorIndex);
                  var sectionEnd = selectorIndex + 1;
                  while (sectionEnd < selector.length && (selector.charCodeAt(sectionEnd) !== quote || isEscaped(sectionEnd))) {
                    sectionEnd += 1;
                  }
                  if (selector.charCodeAt(sectionEnd) !== quote) {
                    throw new Error("Attribute value didn't end");
                  }
                  value = unescapeCSS(selector.slice(selectorIndex + 1, sectionEnd));
                  selectorIndex = sectionEnd + 1;
                } else {
                  var valueStart = selectorIndex;
                  while (selectorIndex < selector.length && (!isWhitespace(selector.charCodeAt(selectorIndex)) && selector.charCodeAt(selectorIndex) !== 93 || isEscaped(selectorIndex))) {
                    selectorIndex += 1;
                  }
                  value = unescapeCSS(selector.slice(valueStart, selectorIndex));
                }
                stripWhitespace(0);
                var forceIgnore = selector.charCodeAt(selectorIndex) | 32;
                if (forceIgnore === 115) {
                  ignoreCase = false;
                  stripWhitespace(1);
                } else if (forceIgnore === 105) {
                  ignoreCase = true;
                  stripWhitespace(1);
                }
              }
              if (selector.charCodeAt(selectorIndex) !== 93) {
                throw new Error("Attribute selector didn't terminate");
              }
              selectorIndex += 1;
              var attributeSelector = {
                type: types_1.SelectorType.Attribute,
                name: name_1,
                action,
                value,
                namespace,
                ignoreCase
              };
              tokens.push(attributeSelector);
              break;
            }
            case 58: {
              if (selector.charCodeAt(selectorIndex + 1) === 58) {
                tokens.push({
                  type: types_1.SelectorType.PseudoElement,
                  name: getName(2).toLowerCase(),
                  data: selector.charCodeAt(selectorIndex) === 40 ? readValueWithParenthesis() : null
                });
                continue;
              }
              var name_2 = getName(1).toLowerCase();
              var data = null;
              if (selector.charCodeAt(selectorIndex) === 40) {
                if (unpackPseudos.has(name_2)) {
                  if (isQuote(selector.charCodeAt(selectorIndex + 1))) {
                    throw new Error("Pseudo-selector ".concat(name_2, " cannot be quoted"));
                  }
                  data = [];
                  selectorIndex = parseSelector(data, selector, selectorIndex + 1);
                  if (selector.charCodeAt(selectorIndex) !== 41) {
                    throw new Error("Missing closing parenthesis in :".concat(name_2, " (").concat(selector, ")"));
                  }
                  selectorIndex += 1;
                } else {
                  data = readValueWithParenthesis();
                  if (stripQuotesFromPseudos.has(name_2)) {
                    var quot = data.charCodeAt(0);
                    if (quot === data.charCodeAt(data.length - 1) && isQuote(quot)) {
                      data = data.slice(1, -1);
                    }
                  }
                  data = unescapeCSS(data);
                }
              }
              tokens.push({ type: types_1.SelectorType.Pseudo, name: name_2, data });
              break;
            }
            case 44: {
              finalizeSubselector();
              tokens = [];
              stripWhitespace(1);
              break;
            }
            default: {
              if (selector.startsWith("/*", selectorIndex)) {
                var endIndex = selector.indexOf("*/", selectorIndex + 2);
                if (endIndex < 0) {
                  throw new Error("Comment was not terminated");
                }
                selectorIndex = endIndex + 2;
                if (tokens.length === 0) {
                  stripWhitespace(0);
                }
                break;
              }
              var namespace = null;
              var name_3 = void 0;
              if (firstChar === 42) {
                selectorIndex += 1;
                name_3 = "*";
              } else if (firstChar === 124) {
                name_3 = "";
                if (selector.charCodeAt(selectorIndex + 1) === 124) {
                  addTraversal(types_1.SelectorType.ColumnCombinator);
                  stripWhitespace(2);
                  break;
                }
              } else if (reName.test(selector.slice(selectorIndex))) {
                name_3 = getName(0);
              } else {
                break loop;
              }
              if (selector.charCodeAt(selectorIndex) === 124 && selector.charCodeAt(selectorIndex + 1) !== 124) {
                namespace = name_3;
                if (selector.charCodeAt(selectorIndex + 1) === 42) {
                  name_3 = "*";
                  selectorIndex += 2;
                } else {
                  name_3 = getName(1);
                }
              }
              tokens.push(name_3 === "*" ? { type: types_1.SelectorType.Universal, namespace } : { type: types_1.SelectorType.Tag, name: name_3, namespace });
            }
          }
        }
      finalizeSubselector();
      return selectorIndex;
    }
  }
});

// node_modules/css-what/lib/commonjs/stringify.js
var require_stringify4 = __commonJS({
  "node_modules/css-what/lib/commonjs/stringify.js"(exports) {
    "use strict";
    var __spreadArray = exports && exports.__spreadArray || function(to, from, pack) {
      if (pack || arguments.length === 2)
        for (var i = 0, l = from.length, ar; i < l; i++) {
          if (ar || !(i in from)) {
            if (!ar)
              ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
          }
        }
      return to.concat(ar || Array.prototype.slice.call(from));
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.stringify = void 0;
    var types_1 = require_types();
    var attribValChars = ["\\", '"'];
    var pseudoValChars = __spreadArray(__spreadArray([], attribValChars, true), ["(", ")"], false);
    var charsToEscapeInAttributeValue = new Set(attribValChars.map(function(c) {
      return c.charCodeAt(0);
    }));
    var charsToEscapeInPseudoValue = new Set(pseudoValChars.map(function(c) {
      return c.charCodeAt(0);
    }));
    var charsToEscapeInName = new Set(__spreadArray(__spreadArray([], pseudoValChars, true), [
      "~",
      "^",
      "$",
      "*",
      "+",
      "!",
      "|",
      ":",
      "[",
      "]",
      " ",
      "."
    ], false).map(function(c) {
      return c.charCodeAt(0);
    }));
    function stringify(selector) {
      return selector.map(function(token) {
        return token.map(stringifyToken).join("");
      }).join(", ");
    }
    exports.stringify = stringify;
    function stringifyToken(token, index, arr) {
      switch (token.type) {
        case types_1.SelectorType.Child:
          return index === 0 ? "> " : " > ";
        case types_1.SelectorType.Parent:
          return index === 0 ? "< " : " < ";
        case types_1.SelectorType.Sibling:
          return index === 0 ? "~ " : " ~ ";
        case types_1.SelectorType.Adjacent:
          return index === 0 ? "+ " : " + ";
        case types_1.SelectorType.Descendant:
          return " ";
        case types_1.SelectorType.ColumnCombinator:
          return index === 0 ? "|| " : " || ";
        case types_1.SelectorType.Universal:
          return token.namespace === "*" && index + 1 < arr.length && "name" in arr[index + 1] ? "" : "".concat(getNamespace(token.namespace), "*");
        case types_1.SelectorType.Tag:
          return getNamespacedName(token);
        case types_1.SelectorType.PseudoElement:
          return "::".concat(escapeName(token.name, charsToEscapeInName)).concat(token.data === null ? "" : "(".concat(escapeName(token.data, charsToEscapeInPseudoValue), ")"));
        case types_1.SelectorType.Pseudo:
          return ":".concat(escapeName(token.name, charsToEscapeInName)).concat(token.data === null ? "" : "(".concat(typeof token.data === "string" ? escapeName(token.data, charsToEscapeInPseudoValue) : stringify(token.data), ")"));
        case types_1.SelectorType.Attribute: {
          if (token.name === "id" && token.action === types_1.AttributeAction.Equals && token.ignoreCase === "quirks" && !token.namespace) {
            return "#".concat(escapeName(token.value, charsToEscapeInName));
          }
          if (token.name === "class" && token.action === types_1.AttributeAction.Element && token.ignoreCase === "quirks" && !token.namespace) {
            return ".".concat(escapeName(token.value, charsToEscapeInName));
          }
          var name_1 = getNamespacedName(token);
          if (token.action === types_1.AttributeAction.Exists) {
            return "[".concat(name_1, "]");
          }
          return "[".concat(name_1).concat(getActionValue(token.action), '="').concat(escapeName(token.value, charsToEscapeInAttributeValue), '"').concat(token.ignoreCase === null ? "" : token.ignoreCase ? " i" : " s", "]");
        }
      }
    }
    function getActionValue(action) {
      switch (action) {
        case types_1.AttributeAction.Equals:
          return "";
        case types_1.AttributeAction.Element:
          return "~";
        case types_1.AttributeAction.Start:
          return "^";
        case types_1.AttributeAction.End:
          return "$";
        case types_1.AttributeAction.Any:
          return "*";
        case types_1.AttributeAction.Not:
          return "!";
        case types_1.AttributeAction.Hyphen:
          return "|";
        case types_1.AttributeAction.Exists:
          throw new Error("Shouldn't be here");
      }
    }
    function getNamespacedName(token) {
      return "".concat(getNamespace(token.namespace)).concat(escapeName(token.name, charsToEscapeInName));
    }
    function getNamespace(namespace) {
      return namespace !== null ? "".concat(namespace === "*" ? "*" : escapeName(namespace, charsToEscapeInName), "|") : "";
    }
    function escapeName(str, charsToEscape) {
      var lastIdx = 0;
      var ret = "";
      for (var i = 0; i < str.length; i++) {
        if (charsToEscape.has(str.charCodeAt(i))) {
          ret += "".concat(str.slice(lastIdx, i), "\\").concat(str.charAt(i));
          lastIdx = i + 1;
        }
      }
      return ret.length > 0 ? ret + str.slice(lastIdx) : str;
    }
  }
});

// node_modules/css-what/lib/commonjs/index.js
var require_commonjs = __commonJS({
  "node_modules/css-what/lib/commonjs/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m)
        if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
          __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.stringify = exports.parse = exports.isTraversal = void 0;
    __exportStar(require_types(), exports);
    var parse_1 = require_parse4();
    Object.defineProperty(exports, "isTraversal", { enumerable: true, get: function() {
      return parse_1.isTraversal;
    } });
    Object.defineProperty(exports, "parse", { enumerable: true, get: function() {
      return parse_1.parse;
    } });
    var stringify_1 = require_stringify4();
    Object.defineProperty(exports, "stringify", { enumerable: true, get: function() {
      return stringify_1.stringify;
    } });
  }
});

// node_modules/css-select/lib/sort.js
var require_sort = __commonJS({
  "node_modules/css-select/lib/sort.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.isTraversal = void 0;
    var css_what_1 = require_commonjs();
    var procedure = /* @__PURE__ */ new Map([
      [css_what_1.SelectorType.Universal, 50],
      [css_what_1.SelectorType.Tag, 30],
      [css_what_1.SelectorType.Attribute, 1],
      [css_what_1.SelectorType.Pseudo, 0]
    ]);
    function isTraversal(token) {
      return !procedure.has(token.type);
    }
    exports.isTraversal = isTraversal;
    var attributes = /* @__PURE__ */ new Map([
      [css_what_1.AttributeAction.Exists, 10],
      [css_what_1.AttributeAction.Equals, 8],
      [css_what_1.AttributeAction.Not, 7],
      [css_what_1.AttributeAction.Start, 6],
      [css_what_1.AttributeAction.End, 6],
      [css_what_1.AttributeAction.Any, 5]
    ]);
    function sortByProcedure(arr) {
      var procs = arr.map(getProcedure);
      for (var i = 1; i < arr.length; i++) {
        var procNew = procs[i];
        if (procNew < 0)
          continue;
        for (var j = i - 1; j >= 0 && procNew < procs[j]; j--) {
          var token = arr[j + 1];
          arr[j + 1] = arr[j];
          arr[j] = token;
          procs[j + 1] = procs[j];
          procs[j] = procNew;
        }
      }
    }
    exports.default = sortByProcedure;
    function getProcedure(token) {
      var _a, _b;
      var proc = (_a = procedure.get(token.type)) !== null && _a !== void 0 ? _a : -1;
      if (token.type === css_what_1.SelectorType.Attribute) {
        proc = (_b = attributes.get(token.action)) !== null && _b !== void 0 ? _b : 4;
        if (token.action === css_what_1.AttributeAction.Equals && token.name === "id") {
          proc = 9;
        }
        if (token.ignoreCase) {
          proc >>= 1;
        }
      } else if (token.type === css_what_1.SelectorType.Pseudo) {
        if (!token.data) {
          proc = 3;
        } else if (token.name === "has" || token.name === "contains") {
          proc = 0;
        } else if (Array.isArray(token.data)) {
          proc = Math.min.apply(Math, token.data.map(function(d) {
            return Math.min.apply(Math, d.map(getProcedure));
          }));
          if (proc < 0) {
            proc = 0;
          }
        } else {
          proc = 2;
        }
      }
      return proc;
    }
  }
});

// node_modules/css-select/lib/attributes.js
var require_attributes = __commonJS({
  "node_modules/css-select/lib/attributes.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.attributeRules = void 0;
    var boolbase_1 = __importDefault(require_boolbase());
    var reChars = /[-[\]{}()*+?.,\\^$|#\s]/g;
    function escapeRegex(value) {
      return value.replace(reChars, "\\$&");
    }
    var caseInsensitiveAttributes = /* @__PURE__ */ new Set([
      "accept",
      "accept-charset",
      "align",
      "alink",
      "axis",
      "bgcolor",
      "charset",
      "checked",
      "clear",
      "codetype",
      "color",
      "compact",
      "declare",
      "defer",
      "dir",
      "direction",
      "disabled",
      "enctype",
      "face",
      "frame",
      "hreflang",
      "http-equiv",
      "lang",
      "language",
      "link",
      "media",
      "method",
      "multiple",
      "nohref",
      "noresize",
      "noshade",
      "nowrap",
      "readonly",
      "rel",
      "rev",
      "rules",
      "scope",
      "scrolling",
      "selected",
      "shape",
      "target",
      "text",
      "type",
      "valign",
      "valuetype",
      "vlink"
    ]);
    function shouldIgnoreCase(selector, options) {
      return typeof selector.ignoreCase === "boolean" ? selector.ignoreCase : selector.ignoreCase === "quirks" ? !!options.quirksMode : !options.xmlMode && caseInsensitiveAttributes.has(selector.name);
    }
    exports.attributeRules = {
      equals: function(next, data, options) {
        var adapter = options.adapter;
        var name = data.name;
        var value = data.value;
        if (shouldIgnoreCase(data, options)) {
          value = value.toLowerCase();
          return function(elem) {
            var attr = adapter.getAttributeValue(elem, name);
            return attr != null && attr.length === value.length && attr.toLowerCase() === value && next(elem);
          };
        }
        return function(elem) {
          return adapter.getAttributeValue(elem, name) === value && next(elem);
        };
      },
      hyphen: function(next, data, options) {
        var adapter = options.adapter;
        var name = data.name;
        var value = data.value;
        var len = value.length;
        if (shouldIgnoreCase(data, options)) {
          value = value.toLowerCase();
          return function hyphenIC(elem) {
            var attr = adapter.getAttributeValue(elem, name);
            return attr != null && (attr.length === len || attr.charAt(len) === "-") && attr.substr(0, len).toLowerCase() === value && next(elem);
          };
        }
        return function hyphen(elem) {
          var attr = adapter.getAttributeValue(elem, name);
          return attr != null && (attr.length === len || attr.charAt(len) === "-") && attr.substr(0, len) === value && next(elem);
        };
      },
      element: function(next, data, options) {
        var adapter = options.adapter;
        var name = data.name, value = data.value;
        if (/\s/.test(value)) {
          return boolbase_1.default.falseFunc;
        }
        var regex = new RegExp("(?:^|\\s)".concat(escapeRegex(value), "(?:$|\\s)"), shouldIgnoreCase(data, options) ? "i" : "");
        return function element(elem) {
          var attr = adapter.getAttributeValue(elem, name);
          return attr != null && attr.length >= value.length && regex.test(attr) && next(elem);
        };
      },
      exists: function(next, _a, _b) {
        var name = _a.name;
        var adapter = _b.adapter;
        return function(elem) {
          return adapter.hasAttrib(elem, name) && next(elem);
        };
      },
      start: function(next, data, options) {
        var adapter = options.adapter;
        var name = data.name;
        var value = data.value;
        var len = value.length;
        if (len === 0) {
          return boolbase_1.default.falseFunc;
        }
        if (shouldIgnoreCase(data, options)) {
          value = value.toLowerCase();
          return function(elem) {
            var attr = adapter.getAttributeValue(elem, name);
            return attr != null && attr.length >= len && attr.substr(0, len).toLowerCase() === value && next(elem);
          };
        }
        return function(elem) {
          var _a;
          return !!((_a = adapter.getAttributeValue(elem, name)) === null || _a === void 0 ? void 0 : _a.startsWith(value)) && next(elem);
        };
      },
      end: function(next, data, options) {
        var adapter = options.adapter;
        var name = data.name;
        var value = data.value;
        var len = -value.length;
        if (len === 0) {
          return boolbase_1.default.falseFunc;
        }
        if (shouldIgnoreCase(data, options)) {
          value = value.toLowerCase();
          return function(elem) {
            var _a;
            return ((_a = adapter.getAttributeValue(elem, name)) === null || _a === void 0 ? void 0 : _a.substr(len).toLowerCase()) === value && next(elem);
          };
        }
        return function(elem) {
          var _a;
          return !!((_a = adapter.getAttributeValue(elem, name)) === null || _a === void 0 ? void 0 : _a.endsWith(value)) && next(elem);
        };
      },
      any: function(next, data, options) {
        var adapter = options.adapter;
        var name = data.name, value = data.value;
        if (value === "") {
          return boolbase_1.default.falseFunc;
        }
        if (shouldIgnoreCase(data, options)) {
          var regex_1 = new RegExp(escapeRegex(value), "i");
          return function anyIC(elem) {
            var attr = adapter.getAttributeValue(elem, name);
            return attr != null && attr.length >= value.length && regex_1.test(attr) && next(elem);
          };
        }
        return function(elem) {
          var _a;
          return !!((_a = adapter.getAttributeValue(elem, name)) === null || _a === void 0 ? void 0 : _a.includes(value)) && next(elem);
        };
      },
      not: function(next, data, options) {
        var adapter = options.adapter;
        var name = data.name;
        var value = data.value;
        if (value === "") {
          return function(elem) {
            return !!adapter.getAttributeValue(elem, name) && next(elem);
          };
        } else if (shouldIgnoreCase(data, options)) {
          value = value.toLowerCase();
          return function(elem) {
            var attr = adapter.getAttributeValue(elem, name);
            return (attr == null || attr.length !== value.length || attr.toLowerCase() !== value) && next(elem);
          };
        }
        return function(elem) {
          return adapter.getAttributeValue(elem, name) !== value && next(elem);
        };
      }
    };
  }
});

// node_modules/nth-check/lib/parse.js
var require_parse5 = __commonJS({
  "node_modules/nth-check/lib/parse.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.parse = void 0;
    var whitespace = /* @__PURE__ */ new Set([9, 10, 12, 13, 32]);
    var ZERO = "0".charCodeAt(0);
    var NINE = "9".charCodeAt(0);
    function parse(formula) {
      formula = formula.trim().toLowerCase();
      if (formula === "even") {
        return [2, 0];
      } else if (formula === "odd") {
        return [2, 1];
      }
      var idx = 0;
      var a = 0;
      var sign = readSign();
      var number = readNumber();
      if (idx < formula.length && formula.charAt(idx) === "n") {
        idx++;
        a = sign * (number !== null && number !== void 0 ? number : 1);
        skipWhitespace();
        if (idx < formula.length) {
          sign = readSign();
          skipWhitespace();
          number = readNumber();
        } else {
          sign = number = 0;
        }
      }
      if (number === null || idx < formula.length) {
        throw new Error("n-th rule couldn't be parsed ('".concat(formula, "')"));
      }
      return [a, sign * number];
      function readSign() {
        if (formula.charAt(idx) === "-") {
          idx++;
          return -1;
        }
        if (formula.charAt(idx) === "+") {
          idx++;
        }
        return 1;
      }
      function readNumber() {
        var start = idx;
        var value = 0;
        while (idx < formula.length && formula.charCodeAt(idx) >= ZERO && formula.charCodeAt(idx) <= NINE) {
          value = value * 10 + (formula.charCodeAt(idx) - ZERO);
          idx++;
        }
        return idx === start ? null : value;
      }
      function skipWhitespace() {
        while (idx < formula.length && whitespace.has(formula.charCodeAt(idx))) {
          idx++;
        }
      }
    }
    exports.parse = parse;
  }
});

// node_modules/nth-check/lib/compile.js
var require_compile = __commonJS({
  "node_modules/nth-check/lib/compile.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.generate = exports.compile = void 0;
    var boolbase_1 = __importDefault(require_boolbase());
    function compile(parsed) {
      var a = parsed[0];
      var b = parsed[1] - 1;
      if (b < 0 && a <= 0)
        return boolbase_1.default.falseFunc;
      if (a === -1)
        return function(index) {
          return index <= b;
        };
      if (a === 0)
        return function(index) {
          return index === b;
        };
      if (a === 1)
        return b < 0 ? boolbase_1.default.trueFunc : function(index) {
          return index >= b;
        };
      var absA = Math.abs(a);
      var bMod = (b % absA + absA) % absA;
      return a > 1 ? function(index) {
        return index >= b && index % absA === bMod;
      } : function(index) {
        return index <= b && index % absA === bMod;
      };
    }
    exports.compile = compile;
    function generate(parsed) {
      var a = parsed[0];
      var b = parsed[1] - 1;
      var n = 0;
      if (a < 0) {
        var aPos_1 = -a;
        var minValue_1 = (b % aPos_1 + aPos_1) % aPos_1;
        return function() {
          var val = minValue_1 + aPos_1 * n++;
          return val > b ? null : val;
        };
      }
      if (a === 0)
        return b < 0 ? (
          // There are no result — always return `null`
          function() {
            return null;
          }
        ) : (
          // Return `b` exactly once
          function() {
            return n++ === 0 ? b : null;
          }
        );
      if (b < 0) {
        b += a * Math.ceil(-b / a);
      }
      return function() {
        return a * n++ + b;
      };
    }
    exports.generate = generate;
  }
});

// node_modules/nth-check/lib/index.js
var require_lib7 = __commonJS({
  "node_modules/nth-check/lib/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.sequence = exports.generate = exports.compile = exports.parse = void 0;
    var parse_js_1 = require_parse5();
    Object.defineProperty(exports, "parse", { enumerable: true, get: function() {
      return parse_js_1.parse;
    } });
    var compile_js_1 = require_compile();
    Object.defineProperty(exports, "compile", { enumerable: true, get: function() {
      return compile_js_1.compile;
    } });
    Object.defineProperty(exports, "generate", { enumerable: true, get: function() {
      return compile_js_1.generate;
    } });
    function nthCheck(formula) {
      return (0, compile_js_1.compile)((0, parse_js_1.parse)(formula));
    }
    exports.default = nthCheck;
    function sequence(formula) {
      return (0, compile_js_1.generate)((0, parse_js_1.parse)(formula));
    }
    exports.sequence = sequence;
  }
});

// node_modules/css-select/lib/pseudo-selectors/filters.js
var require_filters = __commonJS({
  "node_modules/css-select/lib/pseudo-selectors/filters.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.filters = void 0;
    var nth_check_1 = __importDefault(require_lib7());
    var boolbase_1 = __importDefault(require_boolbase());
    function getChildFunc(next, adapter) {
      return function(elem) {
        var parent = adapter.getParent(elem);
        return parent != null && adapter.isTag(parent) && next(elem);
      };
    }
    exports.filters = {
      contains: function(next, text, _a) {
        var adapter = _a.adapter;
        return function contains(elem) {
          return next(elem) && adapter.getText(elem).includes(text);
        };
      },
      icontains: function(next, text, _a) {
        var adapter = _a.adapter;
        var itext = text.toLowerCase();
        return function icontains(elem) {
          return next(elem) && adapter.getText(elem).toLowerCase().includes(itext);
        };
      },
      // Location specific methods
      "nth-child": function(next, rule, _a) {
        var adapter = _a.adapter, equals = _a.equals;
        var func = (0, nth_check_1.default)(rule);
        if (func === boolbase_1.default.falseFunc)
          return boolbase_1.default.falseFunc;
        if (func === boolbase_1.default.trueFunc)
          return getChildFunc(next, adapter);
        return function nthChild(elem) {
          var siblings = adapter.getSiblings(elem);
          var pos = 0;
          for (var i = 0; i < siblings.length; i++) {
            if (equals(elem, siblings[i]))
              break;
            if (adapter.isTag(siblings[i])) {
              pos++;
            }
          }
          return func(pos) && next(elem);
        };
      },
      "nth-last-child": function(next, rule, _a) {
        var adapter = _a.adapter, equals = _a.equals;
        var func = (0, nth_check_1.default)(rule);
        if (func === boolbase_1.default.falseFunc)
          return boolbase_1.default.falseFunc;
        if (func === boolbase_1.default.trueFunc)
          return getChildFunc(next, adapter);
        return function nthLastChild(elem) {
          var siblings = adapter.getSiblings(elem);
          var pos = 0;
          for (var i = siblings.length - 1; i >= 0; i--) {
            if (equals(elem, siblings[i]))
              break;
            if (adapter.isTag(siblings[i])) {
              pos++;
            }
          }
          return func(pos) && next(elem);
        };
      },
      "nth-of-type": function(next, rule, _a) {
        var adapter = _a.adapter, equals = _a.equals;
        var func = (0, nth_check_1.default)(rule);
        if (func === boolbase_1.default.falseFunc)
          return boolbase_1.default.falseFunc;
        if (func === boolbase_1.default.trueFunc)
          return getChildFunc(next, adapter);
        return function nthOfType(elem) {
          var siblings = adapter.getSiblings(elem);
          var pos = 0;
          for (var i = 0; i < siblings.length; i++) {
            var currentSibling = siblings[i];
            if (equals(elem, currentSibling))
              break;
            if (adapter.isTag(currentSibling) && adapter.getName(currentSibling) === adapter.getName(elem)) {
              pos++;
            }
          }
          return func(pos) && next(elem);
        };
      },
      "nth-last-of-type": function(next, rule, _a) {
        var adapter = _a.adapter, equals = _a.equals;
        var func = (0, nth_check_1.default)(rule);
        if (func === boolbase_1.default.falseFunc)
          return boolbase_1.default.falseFunc;
        if (func === boolbase_1.default.trueFunc)
          return getChildFunc(next, adapter);
        return function nthLastOfType(elem) {
          var siblings = adapter.getSiblings(elem);
          var pos = 0;
          for (var i = siblings.length - 1; i >= 0; i--) {
            var currentSibling = siblings[i];
            if (equals(elem, currentSibling))
              break;
            if (adapter.isTag(currentSibling) && adapter.getName(currentSibling) === adapter.getName(elem)) {
              pos++;
            }
          }
          return func(pos) && next(elem);
        };
      },
      // TODO determine the actual root element
      root: function(next, _rule, _a) {
        var adapter = _a.adapter;
        return function(elem) {
          var parent = adapter.getParent(elem);
          return (parent == null || !adapter.isTag(parent)) && next(elem);
        };
      },
      scope: function(next, rule, options, context) {
        var equals = options.equals;
        if (!context || context.length === 0) {
          return exports.filters["root"](next, rule, options);
        }
        if (context.length === 1) {
          return function(elem) {
            return equals(context[0], elem) && next(elem);
          };
        }
        return function(elem) {
          return context.includes(elem) && next(elem);
        };
      },
      hover: dynamicStatePseudo("isHovered"),
      visited: dynamicStatePseudo("isVisited"),
      active: dynamicStatePseudo("isActive")
    };
    function dynamicStatePseudo(name) {
      return function dynamicPseudo(next, _rule, _a) {
        var adapter = _a.adapter;
        var func = adapter[name];
        if (typeof func !== "function") {
          return boolbase_1.default.falseFunc;
        }
        return function active(elem) {
          return func(elem) && next(elem);
        };
      };
    }
  }
});

// node_modules/css-select/lib/pseudo-selectors/pseudos.js
var require_pseudos = __commonJS({
  "node_modules/css-select/lib/pseudo-selectors/pseudos.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.verifyPseudoArgs = exports.pseudos = void 0;
    exports.pseudos = {
      empty: function(elem, _a) {
        var adapter = _a.adapter;
        return !adapter.getChildren(elem).some(function(elem2) {
          return adapter.isTag(elem2) || adapter.getText(elem2) !== "";
        });
      },
      "first-child": function(elem, _a) {
        var adapter = _a.adapter, equals = _a.equals;
        if (adapter.prevElementSibling) {
          return adapter.prevElementSibling(elem) == null;
        }
        var firstChild = adapter.getSiblings(elem).find(function(elem2) {
          return adapter.isTag(elem2);
        });
        return firstChild != null && equals(elem, firstChild);
      },
      "last-child": function(elem, _a) {
        var adapter = _a.adapter, equals = _a.equals;
        var siblings = adapter.getSiblings(elem);
        for (var i = siblings.length - 1; i >= 0; i--) {
          if (equals(elem, siblings[i]))
            return true;
          if (adapter.isTag(siblings[i]))
            break;
        }
        return false;
      },
      "first-of-type": function(elem, _a) {
        var adapter = _a.adapter, equals = _a.equals;
        var siblings = adapter.getSiblings(elem);
        var elemName = adapter.getName(elem);
        for (var i = 0; i < siblings.length; i++) {
          var currentSibling = siblings[i];
          if (equals(elem, currentSibling))
            return true;
          if (adapter.isTag(currentSibling) && adapter.getName(currentSibling) === elemName) {
            break;
          }
        }
        return false;
      },
      "last-of-type": function(elem, _a) {
        var adapter = _a.adapter, equals = _a.equals;
        var siblings = adapter.getSiblings(elem);
        var elemName = adapter.getName(elem);
        for (var i = siblings.length - 1; i >= 0; i--) {
          var currentSibling = siblings[i];
          if (equals(elem, currentSibling))
            return true;
          if (adapter.isTag(currentSibling) && adapter.getName(currentSibling) === elemName) {
            break;
          }
        }
        return false;
      },
      "only-of-type": function(elem, _a) {
        var adapter = _a.adapter, equals = _a.equals;
        var elemName = adapter.getName(elem);
        return adapter.getSiblings(elem).every(function(sibling) {
          return equals(elem, sibling) || !adapter.isTag(sibling) || adapter.getName(sibling) !== elemName;
        });
      },
      "only-child": function(elem, _a) {
        var adapter = _a.adapter, equals = _a.equals;
        return adapter.getSiblings(elem).every(function(sibling) {
          return equals(elem, sibling) || !adapter.isTag(sibling);
        });
      }
    };
    function verifyPseudoArgs(func, name, subselect, argIndex) {
      if (subselect === null) {
        if (func.length > argIndex) {
          throw new Error("Pseudo-class :".concat(name, " requires an argument"));
        }
      } else if (func.length === argIndex) {
        throw new Error("Pseudo-class :".concat(name, " doesn't have any arguments"));
      }
    }
    exports.verifyPseudoArgs = verifyPseudoArgs;
  }
});

// node_modules/css-select/lib/pseudo-selectors/aliases.js
var require_aliases = __commonJS({
  "node_modules/css-select/lib/pseudo-selectors/aliases.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.aliases = void 0;
    exports.aliases = {
      // Links
      "any-link": ":is(a, area, link)[href]",
      link: ":any-link:not(:visited)",
      // Forms
      // https://html.spec.whatwg.org/multipage/scripting.html#disabled-elements
      disabled: ":is(\n        :is(button, input, select, textarea, optgroup, option)[disabled],\n        optgroup[disabled] > option,\n        fieldset[disabled]:not(fieldset[disabled] legend:first-of-type *)\n    )",
      enabled: ":not(:disabled)",
      checked: ":is(:is(input[type=radio], input[type=checkbox])[checked], option:selected)",
      required: ":is(input, select, textarea)[required]",
      optional: ":is(input, select, textarea):not([required])",
      // JQuery extensions
      // https://html.spec.whatwg.org/multipage/form-elements.html#concept-option-selectedness
      selected: "option:is([selected], select:not([multiple]):not(:has(> option[selected])) > :first-of-type)",
      checkbox: "[type=checkbox]",
      file: "[type=file]",
      password: "[type=password]",
      radio: "[type=radio]",
      reset: "[type=reset]",
      image: "[type=image]",
      submit: "[type=submit]",
      parent: ":not(:empty)",
      header: ":is(h1, h2, h3, h4, h5, h6)",
      button: ":is(button, input[type=button])",
      input: ":is(input, textarea, select, button)",
      text: "input:is(:not([type!='']), [type=text])"
    };
  }
});

// node_modules/css-select/lib/pseudo-selectors/subselects.js
var require_subselects = __commonJS({
  "node_modules/css-select/lib/pseudo-selectors/subselects.js"(exports) {
    "use strict";
    var __spreadArray = exports && exports.__spreadArray || function(to, from, pack) {
      if (pack || arguments.length === 2)
        for (var i = 0, l = from.length, ar; i < l; i++) {
          if (ar || !(i in from)) {
            if (!ar)
              ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
          }
        }
      return to.concat(ar || Array.prototype.slice.call(from));
    };
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.subselects = exports.getNextSiblings = exports.ensureIsTag = exports.PLACEHOLDER_ELEMENT = void 0;
    var boolbase_1 = __importDefault(require_boolbase());
    var sort_js_1 = require_sort();
    exports.PLACEHOLDER_ELEMENT = {};
    function ensureIsTag(next, adapter) {
      if (next === boolbase_1.default.falseFunc)
        return boolbase_1.default.falseFunc;
      return function(elem) {
        return adapter.isTag(elem) && next(elem);
      };
    }
    exports.ensureIsTag = ensureIsTag;
    function getNextSiblings(elem, adapter) {
      var siblings = adapter.getSiblings(elem);
      if (siblings.length <= 1)
        return [];
      var elemIndex = siblings.indexOf(elem);
      if (elemIndex < 0 || elemIndex === siblings.length - 1)
        return [];
      return siblings.slice(elemIndex + 1).filter(adapter.isTag);
    }
    exports.getNextSiblings = getNextSiblings;
    function copyOptions(options) {
      return {
        xmlMode: !!options.xmlMode,
        lowerCaseAttributeNames: !!options.lowerCaseAttributeNames,
        lowerCaseTags: !!options.lowerCaseTags,
        quirksMode: !!options.quirksMode,
        cacheResults: !!options.cacheResults,
        pseudos: options.pseudos,
        adapter: options.adapter,
        equals: options.equals
      };
    }
    var is = function(next, token, options, context, compileToken) {
      var func = compileToken(token, copyOptions(options), context);
      return func === boolbase_1.default.trueFunc ? next : func === boolbase_1.default.falseFunc ? boolbase_1.default.falseFunc : function(elem) {
        return func(elem) && next(elem);
      };
    };
    exports.subselects = {
      is,
      /**
       * `:matches` and `:where` are aliases for `:is`.
       */
      matches: is,
      where: is,
      not: function(next, token, options, context, compileToken) {
        var func = compileToken(token, copyOptions(options), context);
        return func === boolbase_1.default.falseFunc ? next : func === boolbase_1.default.trueFunc ? boolbase_1.default.falseFunc : function(elem) {
          return !func(elem) && next(elem);
        };
      },
      has: function(next, subselect, options, _context, compileToken) {
        var adapter = options.adapter;
        var opts = copyOptions(options);
        opts.relativeSelector = true;
        var context = subselect.some(function(s) {
          return s.some(sort_js_1.isTraversal);
        }) ? (
          // Used as a placeholder. Will be replaced with the actual element.
          [exports.PLACEHOLDER_ELEMENT]
        ) : void 0;
        var compiled = compileToken(subselect, opts, context);
        if (compiled === boolbase_1.default.falseFunc)
          return boolbase_1.default.falseFunc;
        var hasElement = ensureIsTag(compiled, adapter);
        if (context && compiled !== boolbase_1.default.trueFunc) {
          var _a = compiled.shouldTestNextSiblings, shouldTestNextSiblings_1 = _a === void 0 ? false : _a;
          return function(elem) {
            if (!next(elem))
              return false;
            context[0] = elem;
            var childs = adapter.getChildren(elem);
            var nextElements = shouldTestNextSiblings_1 ? __spreadArray(__spreadArray([], childs, true), getNextSiblings(elem, adapter), true) : childs;
            return adapter.existsOne(hasElement, nextElements);
          };
        }
        return function(elem) {
          return next(elem) && adapter.existsOne(hasElement, adapter.getChildren(elem));
        };
      }
    };
  }
});

// node_modules/css-select/lib/pseudo-selectors/index.js
var require_pseudo_selectors = __commonJS({
  "node_modules/css-select/lib/pseudo-selectors/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.compilePseudoSelector = exports.aliases = exports.pseudos = exports.filters = void 0;
    var css_what_1 = require_commonjs();
    var filters_js_1 = require_filters();
    Object.defineProperty(exports, "filters", { enumerable: true, get: function() {
      return filters_js_1.filters;
    } });
    var pseudos_js_1 = require_pseudos();
    Object.defineProperty(exports, "pseudos", { enumerable: true, get: function() {
      return pseudos_js_1.pseudos;
    } });
    var aliases_js_1 = require_aliases();
    Object.defineProperty(exports, "aliases", { enumerable: true, get: function() {
      return aliases_js_1.aliases;
    } });
    var subselects_js_1 = require_subselects();
    function compilePseudoSelector(next, selector, options, context, compileToken) {
      var _a;
      var name = selector.name, data = selector.data;
      if (Array.isArray(data)) {
        if (!(name in subselects_js_1.subselects)) {
          throw new Error("Unknown pseudo-class :".concat(name, "(").concat(data, ")"));
        }
        return subselects_js_1.subselects[name](next, data, options, context, compileToken);
      }
      var userPseudo = (_a = options.pseudos) === null || _a === void 0 ? void 0 : _a[name];
      var stringPseudo = typeof userPseudo === "string" ? userPseudo : aliases_js_1.aliases[name];
      if (typeof stringPseudo === "string") {
        if (data != null) {
          throw new Error("Pseudo ".concat(name, " doesn't have any arguments"));
        }
        var alias = (0, css_what_1.parse)(stringPseudo);
        return subselects_js_1.subselects["is"](next, alias, options, context, compileToken);
      }
      if (typeof userPseudo === "function") {
        (0, pseudos_js_1.verifyPseudoArgs)(userPseudo, name, data, 1);
        return function(elem) {
          return userPseudo(elem, data) && next(elem);
        };
      }
      if (name in filters_js_1.filters) {
        return filters_js_1.filters[name](next, data, options, context);
      }
      if (name in pseudos_js_1.pseudos) {
        var pseudo_1 = pseudos_js_1.pseudos[name];
        (0, pseudos_js_1.verifyPseudoArgs)(pseudo_1, name, data, 2);
        return function(elem) {
          return pseudo_1(elem, options, data) && next(elem);
        };
      }
      throw new Error("Unknown pseudo-class :".concat(name));
    }
    exports.compilePseudoSelector = compilePseudoSelector;
  }
});

// node_modules/css-select/lib/general.js
var require_general = __commonJS({
  "node_modules/css-select/lib/general.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.compileGeneralSelector = void 0;
    var attributes_js_1 = require_attributes();
    var index_js_1 = require_pseudo_selectors();
    var css_what_1 = require_commonjs();
    function getElementParent(node, adapter) {
      var parent = adapter.getParent(node);
      if (parent && adapter.isTag(parent)) {
        return parent;
      }
      return null;
    }
    function compileGeneralSelector(next, selector, options, context, compileToken) {
      var adapter = options.adapter, equals = options.equals;
      switch (selector.type) {
        case css_what_1.SelectorType.PseudoElement: {
          throw new Error("Pseudo-elements are not supported by css-select");
        }
        case css_what_1.SelectorType.ColumnCombinator: {
          throw new Error("Column combinators are not yet supported by css-select");
        }
        case css_what_1.SelectorType.Attribute: {
          if (selector.namespace != null) {
            throw new Error("Namespaced attributes are not yet supported by css-select");
          }
          if (!options.xmlMode || options.lowerCaseAttributeNames) {
            selector.name = selector.name.toLowerCase();
          }
          return attributes_js_1.attributeRules[selector.action](next, selector, options);
        }
        case css_what_1.SelectorType.Pseudo: {
          return (0, index_js_1.compilePseudoSelector)(next, selector, options, context, compileToken);
        }
        case css_what_1.SelectorType.Tag: {
          if (selector.namespace != null) {
            throw new Error("Namespaced tag names are not yet supported by css-select");
          }
          var name_1 = selector.name;
          if (!options.xmlMode || options.lowerCaseTags) {
            name_1 = name_1.toLowerCase();
          }
          return function tag(elem) {
            return adapter.getName(elem) === name_1 && next(elem);
          };
        }
        case css_what_1.SelectorType.Descendant: {
          if (options.cacheResults === false || typeof WeakSet === "undefined") {
            return function descendant(elem) {
              var current = elem;
              while (current = getElementParent(current, adapter)) {
                if (next(current)) {
                  return true;
                }
              }
              return false;
            };
          }
          var isFalseCache_1 = /* @__PURE__ */ new WeakSet();
          return function cachedDescendant(elem) {
            var current = elem;
            while (current = getElementParent(current, adapter)) {
              if (!isFalseCache_1.has(current)) {
                if (adapter.isTag(current) && next(current)) {
                  return true;
                }
                isFalseCache_1.add(current);
              }
            }
            return false;
          };
        }
        case "_flexibleDescendant": {
          return function flexibleDescendant(elem) {
            var current = elem;
            do {
              if (next(current))
                return true;
            } while (current = getElementParent(current, adapter));
            return false;
          };
        }
        case css_what_1.SelectorType.Parent: {
          return function parent(elem) {
            return adapter.getChildren(elem).some(function(elem2) {
              return adapter.isTag(elem2) && next(elem2);
            });
          };
        }
        case css_what_1.SelectorType.Child: {
          return function child(elem) {
            var parent = adapter.getParent(elem);
            return parent != null && adapter.isTag(parent) && next(parent);
          };
        }
        case css_what_1.SelectorType.Sibling: {
          return function sibling(elem) {
            var siblings = adapter.getSiblings(elem);
            for (var i = 0; i < siblings.length; i++) {
              var currentSibling = siblings[i];
              if (equals(elem, currentSibling))
                break;
              if (adapter.isTag(currentSibling) && next(currentSibling)) {
                return true;
              }
            }
            return false;
          };
        }
        case css_what_1.SelectorType.Adjacent: {
          if (adapter.prevElementSibling) {
            return function adjacent(elem) {
              var previous = adapter.prevElementSibling(elem);
              return previous != null && next(previous);
            };
          }
          return function adjacent(elem) {
            var siblings = adapter.getSiblings(elem);
            var lastElement;
            for (var i = 0; i < siblings.length; i++) {
              var currentSibling = siblings[i];
              if (equals(elem, currentSibling))
                break;
              if (adapter.isTag(currentSibling)) {
                lastElement = currentSibling;
              }
            }
            return !!lastElement && next(lastElement);
          };
        }
        case css_what_1.SelectorType.Universal: {
          if (selector.namespace != null && selector.namespace !== "*") {
            throw new Error("Namespaced universal selectors are not yet supported by css-select");
          }
          return next;
        }
      }
    }
    exports.compileGeneralSelector = compileGeneralSelector;
  }
});

// node_modules/css-select/lib/compile.js
var require_compile2 = __commonJS({
  "node_modules/css-select/lib/compile.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.compileToken = exports.compileUnsafe = exports.compile = void 0;
    var css_what_1 = require_commonjs();
    var boolbase_1 = __importDefault(require_boolbase());
    var sort_js_1 = __importStar(require_sort());
    var general_js_1 = require_general();
    var subselects_js_1 = require_subselects();
    function compile(selector, options, context) {
      var next = compileUnsafe(selector, options, context);
      return (0, subselects_js_1.ensureIsTag)(next, options.adapter);
    }
    exports.compile = compile;
    function compileUnsafe(selector, options, context) {
      var token = typeof selector === "string" ? (0, css_what_1.parse)(selector) : selector;
      return compileToken(token, options, context);
    }
    exports.compileUnsafe = compileUnsafe;
    function includesScopePseudo(t) {
      return t.type === css_what_1.SelectorType.Pseudo && (t.name === "scope" || Array.isArray(t.data) && t.data.some(function(data) {
        return data.some(includesScopePseudo);
      }));
    }
    var DESCENDANT_TOKEN = { type: css_what_1.SelectorType.Descendant };
    var FLEXIBLE_DESCENDANT_TOKEN = {
      type: "_flexibleDescendant"
    };
    var SCOPE_TOKEN = {
      type: css_what_1.SelectorType.Pseudo,
      name: "scope",
      data: null
    };
    function absolutize(token, _a, context) {
      var adapter = _a.adapter;
      var hasContext = !!(context === null || context === void 0 ? void 0 : context.every(function(e) {
        var parent = adapter.isTag(e) && adapter.getParent(e);
        return e === subselects_js_1.PLACEHOLDER_ELEMENT || parent && adapter.isTag(parent);
      }));
      for (var _i = 0, token_1 = token; _i < token_1.length; _i++) {
        var t = token_1[_i];
        if (t.length > 0 && (0, sort_js_1.isTraversal)(t[0]) && t[0].type !== css_what_1.SelectorType.Descendant) {
        } else if (hasContext && !t.some(includesScopePseudo)) {
          t.unshift(DESCENDANT_TOKEN);
        } else {
          continue;
        }
        t.unshift(SCOPE_TOKEN);
      }
    }
    function compileToken(token, options, context) {
      var _a;
      token.forEach(sort_js_1.default);
      context = (_a = options.context) !== null && _a !== void 0 ? _a : context;
      var isArrayContext = Array.isArray(context);
      var finalContext = context && (Array.isArray(context) ? context : [context]);
      if (options.relativeSelector !== false) {
        absolutize(token, options, finalContext);
      } else if (token.some(function(t) {
        return t.length > 0 && (0, sort_js_1.isTraversal)(t[0]);
      })) {
        throw new Error("Relative selectors are not allowed when the `relativeSelector` option is disabled");
      }
      var shouldTestNextSiblings = false;
      var query = token.map(function(rules) {
        if (rules.length >= 2) {
          var first = rules[0], second = rules[1];
          if (first.type !== css_what_1.SelectorType.Pseudo || first.name !== "scope") {
          } else if (isArrayContext && second.type === css_what_1.SelectorType.Descendant) {
            rules[1] = FLEXIBLE_DESCENDANT_TOKEN;
          } else if (second.type === css_what_1.SelectorType.Adjacent || second.type === css_what_1.SelectorType.Sibling) {
            shouldTestNextSiblings = true;
          }
        }
        return compileRules(rules, options, finalContext);
      }).reduce(reduceRules, boolbase_1.default.falseFunc);
      query.shouldTestNextSiblings = shouldTestNextSiblings;
      return query;
    }
    exports.compileToken = compileToken;
    function compileRules(rules, options, context) {
      var _a;
      return rules.reduce(function(previous, rule) {
        return previous === boolbase_1.default.falseFunc ? boolbase_1.default.falseFunc : (0, general_js_1.compileGeneralSelector)(previous, rule, options, context, compileToken);
      }, (_a = options.rootFunc) !== null && _a !== void 0 ? _a : boolbase_1.default.trueFunc);
    }
    function reduceRules(a, b) {
      if (b === boolbase_1.default.falseFunc || a === boolbase_1.default.trueFunc) {
        return a;
      }
      if (a === boolbase_1.default.falseFunc || b === boolbase_1.default.trueFunc) {
        return b;
      }
      return function combine(elem) {
        return a(elem) || b(elem);
      };
    }
  }
});

// node_modules/css-select/lib/index.js
var require_lib8 = __commonJS({
  "node_modules/css-select/lib/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.aliases = exports.pseudos = exports.filters = exports.is = exports.selectOne = exports.selectAll = exports.prepareContext = exports._compileToken = exports._compileUnsafe = exports.compile = void 0;
    var DomUtils = __importStar(require_lib6());
    var boolbase_1 = __importDefault(require_boolbase());
    var compile_js_1 = require_compile2();
    var subselects_js_1 = require_subselects();
    var defaultEquals = function(a, b) {
      return a === b;
    };
    var defaultOptions = {
      adapter: DomUtils,
      equals: defaultEquals
    };
    function convertOptionFormats(options) {
      var _a, _b, _c, _d;
      var opts = options !== null && options !== void 0 ? options : defaultOptions;
      (_a = opts.adapter) !== null && _a !== void 0 ? _a : opts.adapter = DomUtils;
      (_b = opts.equals) !== null && _b !== void 0 ? _b : opts.equals = (_d = (_c = opts.adapter) === null || _c === void 0 ? void 0 : _c.equals) !== null && _d !== void 0 ? _d : defaultEquals;
      return opts;
    }
    function wrapCompile(func) {
      return function addAdapter(selector, options, context) {
        var opts = convertOptionFormats(options);
        return func(selector, opts, context);
      };
    }
    exports.compile = wrapCompile(compile_js_1.compile);
    exports._compileUnsafe = wrapCompile(compile_js_1.compileUnsafe);
    exports._compileToken = wrapCompile(compile_js_1.compileToken);
    function getSelectorFunc(searchFunc) {
      return function select(query, elements, options) {
        var opts = convertOptionFormats(options);
        if (typeof query !== "function") {
          query = (0, compile_js_1.compileUnsafe)(query, opts, elements);
        }
        var filteredElements = prepareContext(elements, opts.adapter, query.shouldTestNextSiblings);
        return searchFunc(query, filteredElements, opts);
      };
    }
    function prepareContext(elems, adapter, shouldTestNextSiblings) {
      if (shouldTestNextSiblings === void 0) {
        shouldTestNextSiblings = false;
      }
      if (shouldTestNextSiblings) {
        elems = appendNextSiblings(elems, adapter);
      }
      return Array.isArray(elems) ? adapter.removeSubsets(elems) : adapter.getChildren(elems);
    }
    exports.prepareContext = prepareContext;
    function appendNextSiblings(elem, adapter) {
      var elems = Array.isArray(elem) ? elem.slice(0) : [elem];
      var elemsLength = elems.length;
      for (var i = 0; i < elemsLength; i++) {
        var nextSiblings = (0, subselects_js_1.getNextSiblings)(elems[i], adapter);
        elems.push.apply(elems, nextSiblings);
      }
      return elems;
    }
    exports.selectAll = getSelectorFunc(function(query, elems, options) {
      return query === boolbase_1.default.falseFunc || !elems || elems.length === 0 ? [] : options.adapter.findAll(query, elems);
    });
    exports.selectOne = getSelectorFunc(function(query, elems, options) {
      return query === boolbase_1.default.falseFunc || !elems || elems.length === 0 ? null : options.adapter.findOne(query, elems);
    });
    function is(elem, query, options) {
      var opts = convertOptionFormats(options);
      return (typeof query === "function" ? query : (0, compile_js_1.compile)(query, opts))(elem);
    }
    exports.is = is;
    exports.default = exports.selectAll;
    var index_js_1 = require_pseudo_selectors();
    Object.defineProperty(exports, "filters", { enumerable: true, get: function() {
      return index_js_1.filters;
    } });
    Object.defineProperty(exports, "pseudos", { enumerable: true, get: function() {
      return index_js_1.pseudos;
    } });
    Object.defineProperty(exports, "aliases", { enumerable: true, get: function() {
      return index_js_1.aliases;
    } });
  }
});

// node_modules/svgo/lib/svgo/css-select-adapter.js
var require_css_select_adapter = __commonJS({
  "node_modules/svgo/lib/svgo/css-select-adapter.js"(exports, module2) {
    "use strict";
    var isTag = (node) => {
      return node.type === "element";
    };
    var existsOne = (test, elems) => {
      return elems.some((elem) => {
        if (isTag(elem)) {
          return test(elem) || existsOne(test, getChildren(elem));
        } else {
          return false;
        }
      });
    };
    var getAttributeValue = (elem, name) => {
      return elem.attributes[name];
    };
    var getChildren = (node) => {
      return node.children || [];
    };
    var getName = (elemAst) => {
      return elemAst.name;
    };
    var getParent = (node) => {
      return node.parentNode || null;
    };
    var getSiblings = (elem) => {
      var parent = getParent(elem);
      return parent ? getChildren(parent) : [];
    };
    var getText = (node) => {
      if (node.children[0].type === "text" && node.children[0].type === "cdata") {
        return node.children[0].value;
      }
      return "";
    };
    var hasAttrib = (elem, name) => {
      return elem.attributes[name] !== void 0;
    };
    var removeSubsets = (nodes) => {
      let idx = nodes.length;
      let node;
      let ancestor;
      let replace;
      while (--idx > -1) {
        node = ancestor = nodes[idx];
        nodes[idx] = null;
        replace = true;
        while (ancestor) {
          if (nodes.includes(ancestor)) {
            replace = false;
            nodes.splice(idx, 1);
            break;
          }
          ancestor = getParent(ancestor);
        }
        if (replace) {
          nodes[idx] = node;
        }
      }
      return nodes;
    };
    var findAll = (test, elems) => {
      const result = [];
      for (const elem of elems) {
        if (isTag(elem)) {
          if (test(elem)) {
            result.push(elem);
          }
          result.push(...findAll(test, getChildren(elem)));
        }
      }
      return result;
    };
    var findOne = (test, elems) => {
      for (const elem of elems) {
        if (isTag(elem)) {
          if (test(elem)) {
            return elem;
          }
          const result = findOne(test, getChildren(elem));
          if (result) {
            return result;
          }
        }
      }
      return null;
    };
    var svgoCssSelectAdapter = {
      isTag,
      existsOne,
      getAttributeValue,
      getChildren,
      getName,
      getParent,
      getSiblings,
      getText,
      hasAttrib,
      removeSubsets,
      findAll,
      findOne
    };
    module2.exports = svgoCssSelectAdapter;
  }
});

// node_modules/svgo/lib/xast.js
var require_xast = __commonJS({
  "node_modules/svgo/lib/xast.js"(exports) {
    "use strict";
    var { selectAll, selectOne, is } = require_lib8();
    var xastAdaptor = require_css_select_adapter();
    var cssSelectOptions = {
      xmlMode: true,
      adapter: xastAdaptor
    };
    var querySelectorAll = (node, selector) => {
      return selectAll(selector, node, cssSelectOptions);
    };
    exports.querySelectorAll = querySelectorAll;
    var querySelector = (node, selector) => {
      return selectOne(selector, node, cssSelectOptions);
    };
    exports.querySelector = querySelector;
    var matches = (node, selector) => {
      return is(node, selector, cssSelectOptions);
    };
    exports.matches = matches;
    var visitSkip = Symbol();
    exports.visitSkip = visitSkip;
    var visit = (node, visitor, parentNode) => {
      const callbacks = visitor[node.type];
      if (callbacks && callbacks.enter) {
        const symbol = callbacks.enter(node, parentNode);
        if (symbol === visitSkip) {
          return;
        }
      }
      if (node.type === "root") {
        for (const child of node.children) {
          visit(child, visitor, node);
        }
      }
      if (node.type === "element") {
        if (parentNode.children.includes(node)) {
          for (const child of node.children) {
            visit(child, visitor, node);
          }
        }
      }
      if (callbacks && callbacks.exit) {
        callbacks.exit(node, parentNode);
      }
    };
    exports.visit = visit;
    var detachNodeFromParent = (node, parentNode) => {
      parentNode.children = parentNode.children.filter((child) => child !== node);
    };
    exports.detachNodeFromParent = detachNodeFromParent;
  }
});

// node_modules/svgo/lib/svgo/plugins.js
var require_plugins = __commonJS({
  "node_modules/svgo/lib/svgo/plugins.js"(exports) {
    "use strict";
    var { visit } = require_xast();
    var invokePlugins = (ast, info, plugins, overrides, globalOverrides) => {
      for (const plugin of plugins) {
        const override = overrides == null ? void 0 : overrides[plugin.name];
        if (override === false) {
          continue;
        }
        const params = { ...plugin.params, ...globalOverrides, ...override };
        const visitor = plugin.fn(ast, params, info);
        if (visitor != null) {
          visit(ast, visitor);
        }
      }
    };
    exports.invokePlugins = invokePlugins;
    var createPreset = ({ name, plugins }) => {
      return {
        name,
        fn: (ast, params, info) => {
          const { floatPrecision, overrides } = params;
          const globalOverrides = {};
          if (floatPrecision != null) {
            globalOverrides.floatPrecision = floatPrecision;
          }
          if (overrides) {
            const pluginNames = plugins.map(({ name: name2 }) => name2);
            for (const pluginName of Object.keys(overrides)) {
              if (!pluginNames.includes(pluginName)) {
                console.warn(
                  `You are trying to configure ${pluginName} which is not part of ${name}.
Try to put it before or after, for example

plugins: [
  {
    name: '${name}',
  },
  '${pluginName}'
]
`
                );
              }
            }
          }
          invokePlugins(ast, info, plugins, overrides, globalOverrides);
        }
      };
    };
    exports.createPreset = createPreset;
  }
});

// node_modules/svgo/plugins/removeDoctype.js
var require_removeDoctype = __commonJS({
  "node_modules/svgo/plugins/removeDoctype.js"(exports) {
    "use strict";
    var { detachNodeFromParent } = require_xast();
    exports.name = "removeDoctype";
    exports.description = "removes doctype declaration";
    exports.fn = () => {
      return {
        doctype: {
          enter: (node, parentNode) => {
            detachNodeFromParent(node, parentNode);
          }
        }
      };
    };
  }
});

// node_modules/svgo/plugins/removeXMLProcInst.js
var require_removeXMLProcInst = __commonJS({
  "node_modules/svgo/plugins/removeXMLProcInst.js"(exports) {
    "use strict";
    var { detachNodeFromParent } = require_xast();
    exports.name = "removeXMLProcInst";
    exports.description = "removes XML processing instructions";
    exports.fn = () => {
      return {
        instruction: {
          enter: (node, parentNode) => {
            if (node.name === "xml") {
              detachNodeFromParent(node, parentNode);
            }
          }
        }
      };
    };
  }
});

// node_modules/svgo/plugins/removeComments.js
var require_removeComments = __commonJS({
  "node_modules/svgo/plugins/removeComments.js"(exports) {
    "use strict";
    var { detachNodeFromParent } = require_xast();
    exports.name = "removeComments";
    exports.description = "removes comments";
    var DEFAULT_PRESERVE_PATTERNS = [/^!/];
    exports.fn = (_root, params) => {
      const { preservePatterns = DEFAULT_PRESERVE_PATTERNS } = params;
      return {
        comment: {
          enter: (node, parentNode) => {
            if (preservePatterns) {
              if (!Array.isArray(preservePatterns)) {
                throw Error(
                  `Expected array in removeComments preservePatterns parameter but received ${preservePatterns}`
                );
              }
              const matches = preservePatterns.some((pattern) => {
                return new RegExp(pattern).test(node.value);
              });
              if (matches) {
                return;
              }
            }
            detachNodeFromParent(node, parentNode);
          }
        }
      };
    };
  }
});

// node_modules/svgo/plugins/removeMetadata.js
var require_removeMetadata = __commonJS({
  "node_modules/svgo/plugins/removeMetadata.js"(exports) {
    "use strict";
    var { detachNodeFromParent } = require_xast();
    exports.name = "removeMetadata";
    exports.description = "removes <metadata>";
    exports.fn = () => {
      return {
        element: {
          enter: (node, parentNode) => {
            if (node.name === "metadata") {
              detachNodeFromParent(node, parentNode);
            }
          }
        }
      };
    };
  }
});

// node_modules/svgo/plugins/removeEditorsNSData.js
var require_removeEditorsNSData = __commonJS({
  "node_modules/svgo/plugins/removeEditorsNSData.js"(exports) {
    "use strict";
    var { detachNodeFromParent } = require_xast();
    var { editorNamespaces } = require_collections();
    exports.name = "removeEditorsNSData";
    exports.description = "removes editors namespaces, elements and attributes";
    exports.fn = (_root, params) => {
      let namespaces = editorNamespaces;
      if (Array.isArray(params.additionalNamespaces)) {
        namespaces = [...editorNamespaces, ...params.additionalNamespaces];
      }
      const prefixes = [];
      return {
        element: {
          enter: (node, parentNode) => {
            if (node.name === "svg") {
              for (const [name, value] of Object.entries(node.attributes)) {
                if (name.startsWith("xmlns:") && namespaces.includes(value)) {
                  prefixes.push(name.slice("xmlns:".length));
                  delete node.attributes[name];
                }
              }
            }
            for (const name of Object.keys(node.attributes)) {
              if (name.includes(":")) {
                const [prefix] = name.split(":");
                if (prefixes.includes(prefix)) {
                  delete node.attributes[name];
                }
              }
            }
            if (node.name.includes(":")) {
              const [prefix] = node.name.split(":");
              if (prefixes.includes(prefix)) {
                detachNodeFromParent(node, parentNode);
              }
            }
          }
        }
      };
    };
  }
});

// node_modules/svgo/plugins/cleanupAttrs.js
var require_cleanupAttrs = __commonJS({
  "node_modules/svgo/plugins/cleanupAttrs.js"(exports) {
    "use strict";
    exports.name = "cleanupAttrs";
    exports.description = "cleanups attributes from newlines, trailing and repeating spaces";
    var regNewlinesNeedSpace = /(\S)\r?\n(\S)/g;
    var regNewlines = /\r?\n/g;
    var regSpaces = /\s{2,}/g;
    exports.fn = (root, params) => {
      const { newlines = true, trim = true, spaces = true } = params;
      return {
        element: {
          enter: (node) => {
            for (const name of Object.keys(node.attributes)) {
              if (newlines) {
                node.attributes[name] = node.attributes[name].replace(
                  regNewlinesNeedSpace,
                  (match, p1, p2) => p1 + " " + p2
                );
                node.attributes[name] = node.attributes[name].replace(
                  regNewlines,
                  ""
                );
              }
              if (trim) {
                node.attributes[name] = node.attributes[name].trim();
              }
              if (spaces) {
                node.attributes[name] = node.attributes[name].replace(
                  regSpaces,
                  " "
                );
              }
            }
          }
        }
      };
    };
  }
});

// node_modules/svgo/plugins/mergeStyles.js
var require_mergeStyles = __commonJS({
  "node_modules/svgo/plugins/mergeStyles.js"(exports) {
    "use strict";
    var { visitSkip, detachNodeFromParent } = require_xast();
    exports.name = "mergeStyles";
    exports.description = "merge multiple style elements into one";
    exports.fn = () => {
      let firstStyleElement = null;
      let collectedStyles = "";
      let styleContentType = "text";
      return {
        element: {
          enter: (node, parentNode) => {
            if (node.name === "foreignObject") {
              return visitSkip;
            }
            if (node.name !== "style") {
              return;
            }
            if (node.attributes.type != null && node.attributes.type !== "" && node.attributes.type !== "text/css") {
              return;
            }
            let css = "";
            for (const child of node.children) {
              if (child.type === "text") {
                css += child.value;
              }
              if (child.type === "cdata") {
                styleContentType = "cdata";
                css += child.value;
              }
            }
            if (css.trim().length === 0) {
              detachNodeFromParent(node, parentNode);
              return;
            }
            if (node.attributes.media == null) {
              collectedStyles += css;
            } else {
              collectedStyles += `@media ${node.attributes.media}{${css}}`;
              delete node.attributes.media;
            }
            if (firstStyleElement == null) {
              firstStyleElement = node;
            } else {
              detachNodeFromParent(node, parentNode);
              const child = { type: styleContentType, value: collectedStyles };
              Object.defineProperty(child, "parentNode", {
                writable: true,
                value: firstStyleElement
              });
              firstStyleElement.children = [child];
            }
          }
        }
      };
    };
  }
});

// node_modules/css-tree/cjs/tokenizer/types.cjs
var require_types2 = __commonJS({
  "node_modules/css-tree/cjs/tokenizer/types.cjs"(exports) {
    "use strict";
    var EOF = 0;
    var Ident = 1;
    var Function2 = 2;
    var AtKeyword = 3;
    var Hash = 4;
    var String2 = 5;
    var BadString = 6;
    var Url = 7;
    var BadUrl = 8;
    var Delim = 9;
    var Number2 = 10;
    var Percentage = 11;
    var Dimension = 12;
    var WhiteSpace = 13;
    var CDO = 14;
    var CDC = 15;
    var Colon = 16;
    var Semicolon = 17;
    var Comma = 18;
    var LeftSquareBracket = 19;
    var RightSquareBracket = 20;
    var LeftParenthesis = 21;
    var RightParenthesis = 22;
    var LeftCurlyBracket = 23;
    var RightCurlyBracket = 24;
    var Comment = 25;
    exports.AtKeyword = AtKeyword;
    exports.BadString = BadString;
    exports.BadUrl = BadUrl;
    exports.CDC = CDC;
    exports.CDO = CDO;
    exports.Colon = Colon;
    exports.Comma = Comma;
    exports.Comment = Comment;
    exports.Delim = Delim;
    exports.Dimension = Dimension;
    exports.EOF = EOF;
    exports.Function = Function2;
    exports.Hash = Hash;
    exports.Ident = Ident;
    exports.LeftCurlyBracket = LeftCurlyBracket;
    exports.LeftParenthesis = LeftParenthesis;
    exports.LeftSquareBracket = LeftSquareBracket;
    exports.Number = Number2;
    exports.Percentage = Percentage;
    exports.RightCurlyBracket = RightCurlyBracket;
    exports.RightParenthesis = RightParenthesis;
    exports.RightSquareBracket = RightSquareBracket;
    exports.Semicolon = Semicolon;
    exports.String = String2;
    exports.Url = Url;
    exports.WhiteSpace = WhiteSpace;
  }
});

// node_modules/css-tree/cjs/tokenizer/char-code-definitions.cjs
var require_char_code_definitions = __commonJS({
  "node_modules/css-tree/cjs/tokenizer/char-code-definitions.cjs"(exports) {
    "use strict";
    var EOF = 0;
    function isDigit(code) {
      return code >= 48 && code <= 57;
    }
    function isHexDigit(code) {
      return isDigit(code) || // 0 .. 9
      code >= 65 && code <= 70 || // A .. F
      code >= 97 && code <= 102;
    }
    function isUppercaseLetter(code) {
      return code >= 65 && code <= 90;
    }
    function isLowercaseLetter(code) {
      return code >= 97 && code <= 122;
    }
    function isLetter(code) {
      return isUppercaseLetter(code) || isLowercaseLetter(code);
    }
    function isNonAscii(code) {
      return code >= 128;
    }
    function isNameStart(code) {
      return isLetter(code) || isNonAscii(code) || code === 95;
    }
    function isName(code) {
      return isNameStart(code) || isDigit(code) || code === 45;
    }
    function isNonPrintable(code) {
      return code >= 0 && code <= 8 || code === 11 || code >= 14 && code <= 31 || code === 127;
    }
    function isNewline(code) {
      return code === 10 || code === 13 || code === 12;
    }
    function isWhiteSpace(code) {
      return isNewline(code) || code === 32 || code === 9;
    }
    function isValidEscape(first, second) {
      if (first !== 92) {
        return false;
      }
      if (isNewline(second) || second === EOF) {
        return false;
      }
      return true;
    }
    function isIdentifierStart(first, second, third) {
      if (first === 45) {
        return isNameStart(second) || second === 45 || isValidEscape(second, third);
      }
      if (isNameStart(first)) {
        return true;
      }
      if (first === 92) {
        return isValidEscape(first, second);
      }
      return false;
    }
    function isNumberStart(first, second, third) {
      if (first === 43 || first === 45) {
        if (isDigit(second)) {
          return 2;
        }
        return second === 46 && isDigit(third) ? 3 : 0;
      }
      if (first === 46) {
        return isDigit(second) ? 2 : 0;
      }
      if (isDigit(first)) {
        return 1;
      }
      return 0;
    }
    function isBOM(code) {
      if (code === 65279) {
        return 1;
      }
      if (code === 65534) {
        return 1;
      }
      return 0;
    }
    var CATEGORY = new Array(128);
    var EofCategory = 128;
    var WhiteSpaceCategory = 130;
    var DigitCategory = 131;
    var NameStartCategory = 132;
    var NonPrintableCategory = 133;
    for (let i = 0; i < CATEGORY.length; i++) {
      CATEGORY[i] = isWhiteSpace(i) && WhiteSpaceCategory || isDigit(i) && DigitCategory || isNameStart(i) && NameStartCategory || isNonPrintable(i) && NonPrintableCategory || i || EofCategory;
    }
    function charCodeCategory(code) {
      return code < 128 ? CATEGORY[code] : NameStartCategory;
    }
    exports.DigitCategory = DigitCategory;
    exports.EofCategory = EofCategory;
    exports.NameStartCategory = NameStartCategory;
    exports.NonPrintableCategory = NonPrintableCategory;
    exports.WhiteSpaceCategory = WhiteSpaceCategory;
    exports.charCodeCategory = charCodeCategory;
    exports.isBOM = isBOM;
    exports.isDigit = isDigit;
    exports.isHexDigit = isHexDigit;
    exports.isIdentifierStart = isIdentifierStart;
    exports.isLetter = isLetter;
    exports.isLowercaseLetter = isLowercaseLetter;
    exports.isName = isName;
    exports.isNameStart = isNameStart;
    exports.isNewline = isNewline;
    exports.isNonAscii = isNonAscii;
    exports.isNonPrintable = isNonPrintable;
    exports.isNumberStart = isNumberStart;
    exports.isUppercaseLetter = isUppercaseLetter;
    exports.isValidEscape = isValidEscape;
    exports.isWhiteSpace = isWhiteSpace;
  }
});

// node_modules/css-tree/cjs/tokenizer/utils.cjs
var require_utils2 = __commonJS({
  "node_modules/css-tree/cjs/tokenizer/utils.cjs"(exports) {
    "use strict";
    var charCodeDefinitions = require_char_code_definitions();
    function getCharCode(source, offset) {
      return offset < source.length ? source.charCodeAt(offset) : 0;
    }
    function getNewlineLength(source, offset, code) {
      if (code === 13 && getCharCode(source, offset + 1) === 10) {
        return 2;
      }
      return 1;
    }
    function cmpChar(testStr, offset, referenceCode) {
      let code = testStr.charCodeAt(offset);
      if (charCodeDefinitions.isUppercaseLetter(code)) {
        code = code | 32;
      }
      return code === referenceCode;
    }
    function cmpStr(testStr, start, end, referenceStr) {
      if (end - start !== referenceStr.length) {
        return false;
      }
      if (start < 0 || end > testStr.length) {
        return false;
      }
      for (let i = start; i < end; i++) {
        const referenceCode = referenceStr.charCodeAt(i - start);
        let testCode = testStr.charCodeAt(i);
        if (charCodeDefinitions.isUppercaseLetter(testCode)) {
          testCode = testCode | 32;
        }
        if (testCode !== referenceCode) {
          return false;
        }
      }
      return true;
    }
    function findWhiteSpaceStart(source, offset) {
      for (; offset >= 0; offset--) {
        if (!charCodeDefinitions.isWhiteSpace(source.charCodeAt(offset))) {
          break;
        }
      }
      return offset + 1;
    }
    function findWhiteSpaceEnd(source, offset) {
      for (; offset < source.length; offset++) {
        if (!charCodeDefinitions.isWhiteSpace(source.charCodeAt(offset))) {
          break;
        }
      }
      return offset;
    }
    function findDecimalNumberEnd(source, offset) {
      for (; offset < source.length; offset++) {
        if (!charCodeDefinitions.isDigit(source.charCodeAt(offset))) {
          break;
        }
      }
      return offset;
    }
    function consumeEscaped(source, offset) {
      offset += 2;
      if (charCodeDefinitions.isHexDigit(getCharCode(source, offset - 1))) {
        for (const maxOffset = Math.min(source.length, offset + 5); offset < maxOffset; offset++) {
          if (!charCodeDefinitions.isHexDigit(getCharCode(source, offset))) {
            break;
          }
        }
        const code = getCharCode(source, offset);
        if (charCodeDefinitions.isWhiteSpace(code)) {
          offset += getNewlineLength(source, offset, code);
        }
      }
      return offset;
    }
    function consumeName(source, offset) {
      for (; offset < source.length; offset++) {
        const code = source.charCodeAt(offset);
        if (charCodeDefinitions.isName(code)) {
          continue;
        }
        if (charCodeDefinitions.isValidEscape(code, getCharCode(source, offset + 1))) {
          offset = consumeEscaped(source, offset) - 1;
          continue;
        }
        break;
      }
      return offset;
    }
    function consumeNumber(source, offset) {
      let code = source.charCodeAt(offset);
      if (code === 43 || code === 45) {
        code = source.charCodeAt(offset += 1);
      }
      if (charCodeDefinitions.isDigit(code)) {
        offset = findDecimalNumberEnd(source, offset + 1);
        code = source.charCodeAt(offset);
      }
      if (code === 46 && charCodeDefinitions.isDigit(source.charCodeAt(offset + 1))) {
        offset += 2;
        offset = findDecimalNumberEnd(source, offset);
      }
      if (cmpChar(
        source,
        offset,
        101
        /* e */
      )) {
        let sign = 0;
        code = source.charCodeAt(offset + 1);
        if (code === 45 || code === 43) {
          sign = 1;
          code = source.charCodeAt(offset + 2);
        }
        if (charCodeDefinitions.isDigit(code)) {
          offset = findDecimalNumberEnd(source, offset + 1 + sign + 1);
        }
      }
      return offset;
    }
    function consumeBadUrlRemnants(source, offset) {
      for (; offset < source.length; offset++) {
        const code = source.charCodeAt(offset);
        if (code === 41) {
          offset++;
          break;
        }
        if (charCodeDefinitions.isValidEscape(code, getCharCode(source, offset + 1))) {
          offset = consumeEscaped(source, offset);
        }
      }
      return offset;
    }
    function decodeEscaped(escaped) {
      if (escaped.length === 1 && !charCodeDefinitions.isHexDigit(escaped.charCodeAt(0))) {
        return escaped[0];
      }
      let code = parseInt(escaped, 16);
      if (code === 0 || // If this number is zero,
      code >= 55296 && code <= 57343 || // or is for a surrogate,
      code > 1114111) {
        code = 65533;
      }
      return String.fromCodePoint(code);
    }
    exports.cmpChar = cmpChar;
    exports.cmpStr = cmpStr;
    exports.consumeBadUrlRemnants = consumeBadUrlRemnants;
    exports.consumeEscaped = consumeEscaped;
    exports.consumeName = consumeName;
    exports.consumeNumber = consumeNumber;
    exports.decodeEscaped = decodeEscaped;
    exports.findDecimalNumberEnd = findDecimalNumberEnd;
    exports.findWhiteSpaceEnd = findWhiteSpaceEnd;
    exports.findWhiteSpaceStart = findWhiteSpaceStart;
    exports.getNewlineLength = getNewlineLength;
  }
});

// node_modules/css-tree/cjs/tokenizer/names.cjs
var require_names2 = __commonJS({
  "node_modules/css-tree/cjs/tokenizer/names.cjs"(exports, module2) {
    "use strict";
    var tokenNames = [
      "EOF-token",
      "ident-token",
      "function-token",
      "at-keyword-token",
      "hash-token",
      "string-token",
      "bad-string-token",
      "url-token",
      "bad-url-token",
      "delim-token",
      "number-token",
      "percentage-token",
      "dimension-token",
      "whitespace-token",
      "CDO-token",
      "CDC-token",
      "colon-token",
      "semicolon-token",
      "comma-token",
      "[-token",
      "]-token",
      "(-token",
      ")-token",
      "{-token",
      "}-token"
    ];
    module2.exports = tokenNames;
  }
});

// node_modules/css-tree/cjs/tokenizer/adopt-buffer.cjs
var require_adopt_buffer = __commonJS({
  "node_modules/css-tree/cjs/tokenizer/adopt-buffer.cjs"(exports) {
    "use strict";
    var MIN_SIZE = 16 * 1024;
    function adoptBuffer(buffer = null, size) {
      if (buffer === null || buffer.length < size) {
        return new Uint32Array(Math.max(size + 1024, MIN_SIZE));
      }
      return buffer;
    }
    exports.adoptBuffer = adoptBuffer;
  }
});

// node_modules/css-tree/cjs/tokenizer/OffsetToLocation.cjs
var require_OffsetToLocation = __commonJS({
  "node_modules/css-tree/cjs/tokenizer/OffsetToLocation.cjs"(exports) {
    "use strict";
    var adoptBuffer = require_adopt_buffer();
    var charCodeDefinitions = require_char_code_definitions();
    var N = 10;
    var F = 12;
    var R = 13;
    function computeLinesAndColumns(host) {
      const source = host.source;
      const sourceLength = source.length;
      const startOffset = source.length > 0 ? charCodeDefinitions.isBOM(source.charCodeAt(0)) : 0;
      const lines = adoptBuffer.adoptBuffer(host.lines, sourceLength);
      const columns = adoptBuffer.adoptBuffer(host.columns, sourceLength);
      let line = host.startLine;
      let column = host.startColumn;
      for (let i = startOffset; i < sourceLength; i++) {
        const code = source.charCodeAt(i);
        lines[i] = line;
        columns[i] = column++;
        if (code === N || code === R || code === F) {
          if (code === R && i + 1 < sourceLength && source.charCodeAt(i + 1) === N) {
            i++;
            lines[i] = line;
            columns[i] = column;
          }
          line++;
          column = 1;
        }
      }
      lines[sourceLength] = line;
      columns[sourceLength] = column;
      host.lines = lines;
      host.columns = columns;
      host.computed = true;
    }
    var OffsetToLocation = class {
      constructor() {
        this.lines = null;
        this.columns = null;
        this.computed = false;
      }
      setSource(source, startOffset = 0, startLine = 1, startColumn = 1) {
        this.source = source;
        this.startOffset = startOffset;
        this.startLine = startLine;
        this.startColumn = startColumn;
        this.computed = false;
      }
      getLocation(offset, filename) {
        if (!this.computed) {
          computeLinesAndColumns(this);
        }
        return {
          source: filename,
          offset: this.startOffset + offset,
          line: this.lines[offset],
          column: this.columns[offset]
        };
      }
      getLocationRange(start, end, filename) {
        if (!this.computed) {
          computeLinesAndColumns(this);
        }
        return {
          source: filename,
          start: {
            offset: this.startOffset + start,
            line: this.lines[start],
            column: this.columns[start]
          },
          end: {
            offset: this.startOffset + end,
            line: this.lines[end],
            column: this.columns[end]
          }
        };
      }
    };
    exports.OffsetToLocation = OffsetToLocation;
  }
});

// node_modules/css-tree/cjs/tokenizer/TokenStream.cjs
var require_TokenStream = __commonJS({
  "node_modules/css-tree/cjs/tokenizer/TokenStream.cjs"(exports) {
    "use strict";
    var adoptBuffer = require_adopt_buffer();
    var utils = require_utils2();
    var names = require_names2();
    var types = require_types2();
    var OFFSET_MASK = 16777215;
    var TYPE_SHIFT = 24;
    var balancePair = /* @__PURE__ */ new Map([
      [types.Function, types.RightParenthesis],
      [types.LeftParenthesis, types.RightParenthesis],
      [types.LeftSquareBracket, types.RightSquareBracket],
      [types.LeftCurlyBracket, types.RightCurlyBracket]
    ]);
    var TokenStream = class {
      constructor(source, tokenize) {
        this.setSource(source, tokenize);
      }
      reset() {
        this.eof = false;
        this.tokenIndex = -1;
        this.tokenType = 0;
        this.tokenStart = this.firstCharOffset;
        this.tokenEnd = this.firstCharOffset;
      }
      setSource(source = "", tokenize = () => {
      }) {
        source = String(source || "");
        const sourceLength = source.length;
        const offsetAndType = adoptBuffer.adoptBuffer(this.offsetAndType, source.length + 1);
        const balance = adoptBuffer.adoptBuffer(this.balance, source.length + 1);
        let tokenCount = 0;
        let balanceCloseType = 0;
        let balanceStart = 0;
        let firstCharOffset = -1;
        this.offsetAndType = null;
        this.balance = null;
        tokenize(source, (type, start, end) => {
          switch (type) {
            default:
              balance[tokenCount] = sourceLength;
              break;
            case balanceCloseType: {
              let balancePrev = balanceStart & OFFSET_MASK;
              balanceStart = balance[balancePrev];
              balanceCloseType = balanceStart >> TYPE_SHIFT;
              balance[tokenCount] = balancePrev;
              balance[balancePrev++] = tokenCount;
              for (; balancePrev < tokenCount; balancePrev++) {
                if (balance[balancePrev] === sourceLength) {
                  balance[balancePrev] = tokenCount;
                }
              }
              break;
            }
            case types.LeftParenthesis:
            case types.Function:
            case types.LeftSquareBracket:
            case types.LeftCurlyBracket:
              balance[tokenCount] = balanceStart;
              balanceCloseType = balancePair.get(type);
              balanceStart = balanceCloseType << TYPE_SHIFT | tokenCount;
              break;
          }
          offsetAndType[tokenCount++] = type << TYPE_SHIFT | end;
          if (firstCharOffset === -1) {
            firstCharOffset = start;
          }
        });
        offsetAndType[tokenCount] = types.EOF << TYPE_SHIFT | sourceLength;
        balance[tokenCount] = sourceLength;
        balance[sourceLength] = sourceLength;
        while (balanceStart !== 0) {
          const balancePrev = balanceStart & OFFSET_MASK;
          balanceStart = balance[balancePrev];
          balance[balancePrev] = sourceLength;
        }
        this.source = source;
        this.firstCharOffset = firstCharOffset === -1 ? 0 : firstCharOffset;
        this.tokenCount = tokenCount;
        this.offsetAndType = offsetAndType;
        this.balance = balance;
        this.reset();
        this.next();
      }
      lookupType(offset) {
        offset += this.tokenIndex;
        if (offset < this.tokenCount) {
          return this.offsetAndType[offset] >> TYPE_SHIFT;
        }
        return types.EOF;
      }
      lookupOffset(offset) {
        offset += this.tokenIndex;
        if (offset < this.tokenCount) {
          return this.offsetAndType[offset - 1] & OFFSET_MASK;
        }
        return this.source.length;
      }
      lookupValue(offset, referenceStr) {
        offset += this.tokenIndex;
        if (offset < this.tokenCount) {
          return utils.cmpStr(
            this.source,
            this.offsetAndType[offset - 1] & OFFSET_MASK,
            this.offsetAndType[offset] & OFFSET_MASK,
            referenceStr
          );
        }
        return false;
      }
      getTokenStart(tokenIndex) {
        if (tokenIndex === this.tokenIndex) {
          return this.tokenStart;
        }
        if (tokenIndex > 0) {
          return tokenIndex < this.tokenCount ? this.offsetAndType[tokenIndex - 1] & OFFSET_MASK : this.offsetAndType[this.tokenCount] & OFFSET_MASK;
        }
        return this.firstCharOffset;
      }
      substrToCursor(start) {
        return this.source.substring(start, this.tokenStart);
      }
      isBalanceEdge(pos) {
        return this.balance[this.tokenIndex] < pos;
      }
      isDelim(code, offset) {
        if (offset) {
          return this.lookupType(offset) === types.Delim && this.source.charCodeAt(this.lookupOffset(offset)) === code;
        }
        return this.tokenType === types.Delim && this.source.charCodeAt(this.tokenStart) === code;
      }
      skip(tokenCount) {
        let next = this.tokenIndex + tokenCount;
        if (next < this.tokenCount) {
          this.tokenIndex = next;
          this.tokenStart = this.offsetAndType[next - 1] & OFFSET_MASK;
          next = this.offsetAndType[next];
          this.tokenType = next >> TYPE_SHIFT;
          this.tokenEnd = next & OFFSET_MASK;
        } else {
          this.tokenIndex = this.tokenCount;
          this.next();
        }
      }
      next() {
        let next = this.tokenIndex + 1;
        if (next < this.tokenCount) {
          this.tokenIndex = next;
          this.tokenStart = this.tokenEnd;
          next = this.offsetAndType[next];
          this.tokenType = next >> TYPE_SHIFT;
          this.tokenEnd = next & OFFSET_MASK;
        } else {
          this.eof = true;
          this.tokenIndex = this.tokenCount;
          this.tokenType = types.EOF;
          this.tokenStart = this.tokenEnd = this.source.length;
        }
      }
      skipSC() {
        while (this.tokenType === types.WhiteSpace || this.tokenType === types.Comment) {
          this.next();
        }
      }
      skipUntilBalanced(startToken, stopConsume) {
        let cursor = startToken;
        let balanceEnd;
        let offset;
        loop:
          for (; cursor < this.tokenCount; cursor++) {
            balanceEnd = this.balance[cursor];
            if (balanceEnd < startToken) {
              break loop;
            }
            offset = cursor > 0 ? this.offsetAndType[cursor - 1] & OFFSET_MASK : this.firstCharOffset;
            switch (stopConsume(this.source.charCodeAt(offset))) {
              case 1:
                break loop;
              case 2:
                cursor++;
                break loop;
              default:
                if (this.balance[balanceEnd] === cursor) {
                  cursor = balanceEnd;
                }
            }
          }
        this.skip(cursor - this.tokenIndex);
      }
      forEachToken(fn) {
        for (let i = 0, offset = this.firstCharOffset; i < this.tokenCount; i++) {
          const start = offset;
          const item = this.offsetAndType[i];
          const end = item & OFFSET_MASK;
          const type = item >> TYPE_SHIFT;
          offset = end;
          fn(type, start, end, i);
        }
      }
      dump() {
        const tokens = new Array(this.tokenCount);
        this.forEachToken((type, start, end, index) => {
          tokens[index] = {
            idx: index,
            type: names[type],
            chunk: this.source.substring(start, end),
            balance: this.balance[index]
          };
        });
        return tokens;
      }
    };
    exports.TokenStream = TokenStream;
  }
});

// node_modules/css-tree/cjs/tokenizer/index.cjs
var require_tokenizer = __commonJS({
  "node_modules/css-tree/cjs/tokenizer/index.cjs"(exports) {
    "use strict";
    var types = require_types2();
    var charCodeDefinitions = require_char_code_definitions();
    var utils = require_utils2();
    var names = require_names2();
    var OffsetToLocation = require_OffsetToLocation();
    var TokenStream = require_TokenStream();
    function tokenize(source, onToken) {
      function getCharCode(offset2) {
        return offset2 < sourceLength ? source.charCodeAt(offset2) : 0;
      }
      function consumeNumericToken() {
        offset = utils.consumeNumber(source, offset);
        if (charCodeDefinitions.isIdentifierStart(getCharCode(offset), getCharCode(offset + 1), getCharCode(offset + 2))) {
          type = types.Dimension;
          offset = utils.consumeName(source, offset);
          return;
        }
        if (getCharCode(offset) === 37) {
          type = types.Percentage;
          offset++;
          return;
        }
        type = types.Number;
      }
      function consumeIdentLikeToken() {
        const nameStartOffset = offset;
        offset = utils.consumeName(source, offset);
        if (utils.cmpStr(source, nameStartOffset, offset, "url") && getCharCode(offset) === 40) {
          offset = utils.findWhiteSpaceEnd(source, offset + 1);
          if (getCharCode(offset) === 34 || getCharCode(offset) === 39) {
            type = types.Function;
            offset = nameStartOffset + 4;
            return;
          }
          consumeUrlToken();
          return;
        }
        if (getCharCode(offset) === 40) {
          type = types.Function;
          offset++;
          return;
        }
        type = types.Ident;
      }
      function consumeStringToken(endingCodePoint) {
        if (!endingCodePoint) {
          endingCodePoint = getCharCode(offset++);
        }
        type = types.String;
        for (; offset < source.length; offset++) {
          const code = source.charCodeAt(offset);
          switch (charCodeDefinitions.charCodeCategory(code)) {
            case endingCodePoint:
              offset++;
              return;
            case charCodeDefinitions.WhiteSpaceCategory:
              if (charCodeDefinitions.isNewline(code)) {
                offset += utils.getNewlineLength(source, offset, code);
                type = types.BadString;
                return;
              }
              break;
            case 92:
              if (offset === source.length - 1) {
                break;
              }
              const nextCode = getCharCode(offset + 1);
              if (charCodeDefinitions.isNewline(nextCode)) {
                offset += utils.getNewlineLength(source, offset + 1, nextCode);
              } else if (charCodeDefinitions.isValidEscape(code, nextCode)) {
                offset = utils.consumeEscaped(source, offset) - 1;
              }
              break;
          }
        }
      }
      function consumeUrlToken() {
        type = types.Url;
        offset = utils.findWhiteSpaceEnd(source, offset);
        for (; offset < source.length; offset++) {
          const code = source.charCodeAt(offset);
          switch (charCodeDefinitions.charCodeCategory(code)) {
            case 41:
              offset++;
              return;
            case charCodeDefinitions.WhiteSpaceCategory:
              offset = utils.findWhiteSpaceEnd(source, offset);
              if (getCharCode(offset) === 41 || offset >= source.length) {
                if (offset < source.length) {
                  offset++;
                }
                return;
              }
              offset = utils.consumeBadUrlRemnants(source, offset);
              type = types.BadUrl;
              return;
            case 34:
            case 39:
            case 40:
            case charCodeDefinitions.NonPrintableCategory:
              offset = utils.consumeBadUrlRemnants(source, offset);
              type = types.BadUrl;
              return;
            case 92:
              if (charCodeDefinitions.isValidEscape(code, getCharCode(offset + 1))) {
                offset = utils.consumeEscaped(source, offset) - 1;
                break;
              }
              offset = utils.consumeBadUrlRemnants(source, offset);
              type = types.BadUrl;
              return;
          }
        }
      }
      source = String(source || "");
      const sourceLength = source.length;
      let start = charCodeDefinitions.isBOM(getCharCode(0));
      let offset = start;
      let type;
      while (offset < sourceLength) {
        const code = source.charCodeAt(offset);
        switch (charCodeDefinitions.charCodeCategory(code)) {
          case charCodeDefinitions.WhiteSpaceCategory:
            type = types.WhiteSpace;
            offset = utils.findWhiteSpaceEnd(source, offset + 1);
            break;
          case 34:
            consumeStringToken();
            break;
          case 35:
            if (charCodeDefinitions.isName(getCharCode(offset + 1)) || charCodeDefinitions.isValidEscape(getCharCode(offset + 1), getCharCode(offset + 2))) {
              type = types.Hash;
              offset = utils.consumeName(source, offset + 1);
            } else {
              type = types.Delim;
              offset++;
            }
            break;
          case 39:
            consumeStringToken();
            break;
          case 40:
            type = types.LeftParenthesis;
            offset++;
            break;
          case 41:
            type = types.RightParenthesis;
            offset++;
            break;
          case 43:
            if (charCodeDefinitions.isNumberStart(code, getCharCode(offset + 1), getCharCode(offset + 2))) {
              consumeNumericToken();
            } else {
              type = types.Delim;
              offset++;
            }
            break;
          case 44:
            type = types.Comma;
            offset++;
            break;
          case 45:
            if (charCodeDefinitions.isNumberStart(code, getCharCode(offset + 1), getCharCode(offset + 2))) {
              consumeNumericToken();
            } else {
              if (getCharCode(offset + 1) === 45 && getCharCode(offset + 2) === 62) {
                type = types.CDC;
                offset = offset + 3;
              } else {
                if (charCodeDefinitions.isIdentifierStart(code, getCharCode(offset + 1), getCharCode(offset + 2))) {
                  consumeIdentLikeToken();
                } else {
                  type = types.Delim;
                  offset++;
                }
              }
            }
            break;
          case 46:
            if (charCodeDefinitions.isNumberStart(code, getCharCode(offset + 1), getCharCode(offset + 2))) {
              consumeNumericToken();
            } else {
              type = types.Delim;
              offset++;
            }
            break;
          case 47:
            if (getCharCode(offset + 1) === 42) {
              type = types.Comment;
              offset = source.indexOf("*/", offset + 2);
              offset = offset === -1 ? source.length : offset + 2;
            } else {
              type = types.Delim;
              offset++;
            }
            break;
          case 58:
            type = types.Colon;
            offset++;
            break;
          case 59:
            type = types.Semicolon;
            offset++;
            break;
          case 60:
            if (getCharCode(offset + 1) === 33 && getCharCode(offset + 2) === 45 && getCharCode(offset + 3) === 45) {
              type = types.CDO;
              offset = offset + 4;
            } else {
              type = types.Delim;
              offset++;
            }
            break;
          case 64:
            if (charCodeDefinitions.isIdentifierStart(getCharCode(offset + 1), getCharCode(offset + 2), getCharCode(offset + 3))) {
              type = types.AtKeyword;
              offset = utils.consumeName(source, offset + 1);
            } else {
              type = types.Delim;
              offset++;
            }
            break;
          case 91:
            type = types.LeftSquareBracket;
            offset++;
            break;
          case 92:
            if (charCodeDefinitions.isValidEscape(code, getCharCode(offset + 1))) {
              consumeIdentLikeToken();
            } else {
              type = types.Delim;
              offset++;
            }
            break;
          case 93:
            type = types.RightSquareBracket;
            offset++;
            break;
          case 123:
            type = types.LeftCurlyBracket;
            offset++;
            break;
          case 125:
            type = types.RightCurlyBracket;
            offset++;
            break;
          case charCodeDefinitions.DigitCategory:
            consumeNumericToken();
            break;
          case charCodeDefinitions.NameStartCategory:
            consumeIdentLikeToken();
            break;
          default:
            type = types.Delim;
            offset++;
        }
        onToken(type, start, start = offset);
      }
    }
    exports.AtKeyword = types.AtKeyword;
    exports.BadString = types.BadString;
    exports.BadUrl = types.BadUrl;
    exports.CDC = types.CDC;
    exports.CDO = types.CDO;
    exports.Colon = types.Colon;
    exports.Comma = types.Comma;
    exports.Comment = types.Comment;
    exports.Delim = types.Delim;
    exports.Dimension = types.Dimension;
    exports.EOF = types.EOF;
    exports.Function = types.Function;
    exports.Hash = types.Hash;
    exports.Ident = types.Ident;
    exports.LeftCurlyBracket = types.LeftCurlyBracket;
    exports.LeftParenthesis = types.LeftParenthesis;
    exports.LeftSquareBracket = types.LeftSquareBracket;
    exports.Number = types.Number;
    exports.Percentage = types.Percentage;
    exports.RightCurlyBracket = types.RightCurlyBracket;
    exports.RightParenthesis = types.RightParenthesis;
    exports.RightSquareBracket = types.RightSquareBracket;
    exports.Semicolon = types.Semicolon;
    exports.String = types.String;
    exports.Url = types.Url;
    exports.WhiteSpace = types.WhiteSpace;
    exports.tokenTypes = types;
    exports.DigitCategory = charCodeDefinitions.DigitCategory;
    exports.EofCategory = charCodeDefinitions.EofCategory;
    exports.NameStartCategory = charCodeDefinitions.NameStartCategory;
    exports.NonPrintableCategory = charCodeDefinitions.NonPrintableCategory;
    exports.WhiteSpaceCategory = charCodeDefinitions.WhiteSpaceCategory;
    exports.charCodeCategory = charCodeDefinitions.charCodeCategory;
    exports.isBOM = charCodeDefinitions.isBOM;
    exports.isDigit = charCodeDefinitions.isDigit;
    exports.isHexDigit = charCodeDefinitions.isHexDigit;
    exports.isIdentifierStart = charCodeDefinitions.isIdentifierStart;
    exports.isLetter = charCodeDefinitions.isLetter;
    exports.isLowercaseLetter = charCodeDefinitions.isLowercaseLetter;
    exports.isName = charCodeDefinitions.isName;
    exports.isNameStart = charCodeDefinitions.isNameStart;
    exports.isNewline = charCodeDefinitions.isNewline;
    exports.isNonAscii = charCodeDefinitions.isNonAscii;
    exports.isNonPrintable = charCodeDefinitions.isNonPrintable;
    exports.isNumberStart = charCodeDefinitions.isNumberStart;
    exports.isUppercaseLetter = charCodeDefinitions.isUppercaseLetter;
    exports.isValidEscape = charCodeDefinitions.isValidEscape;
    exports.isWhiteSpace = charCodeDefinitions.isWhiteSpace;
    exports.cmpChar = utils.cmpChar;
    exports.cmpStr = utils.cmpStr;
    exports.consumeBadUrlRemnants = utils.consumeBadUrlRemnants;
    exports.consumeEscaped = utils.consumeEscaped;
    exports.consumeName = utils.consumeName;
    exports.consumeNumber = utils.consumeNumber;
    exports.decodeEscaped = utils.decodeEscaped;
    exports.findDecimalNumberEnd = utils.findDecimalNumberEnd;
    exports.findWhiteSpaceEnd = utils.findWhiteSpaceEnd;
    exports.findWhiteSpaceStart = utils.findWhiteSpaceStart;
    exports.getNewlineLength = utils.getNewlineLength;
    exports.tokenNames = names;
    exports.OffsetToLocation = OffsetToLocation.OffsetToLocation;
    exports.TokenStream = TokenStream.TokenStream;
    exports.tokenize = tokenize;
  }
});

// node_modules/css-tree/cjs/utils/List.cjs
var require_List = __commonJS({
  "node_modules/css-tree/cjs/utils/List.cjs"(exports) {
    "use strict";
    var releasedCursors = null;
    var List = class _List {
      static createItem(data) {
        return {
          prev: null,
          next: null,
          data
        };
      }
      constructor() {
        this.head = null;
        this.tail = null;
        this.cursor = null;
      }
      createItem(data) {
        return _List.createItem(data);
      }
      // cursor helpers
      allocateCursor(prev, next) {
        let cursor;
        if (releasedCursors !== null) {
          cursor = releasedCursors;
          releasedCursors = releasedCursors.cursor;
          cursor.prev = prev;
          cursor.next = next;
          cursor.cursor = this.cursor;
        } else {
          cursor = {
            prev,
            next,
            cursor: this.cursor
          };
        }
        this.cursor = cursor;
        return cursor;
      }
      releaseCursor() {
        const { cursor } = this;
        this.cursor = cursor.cursor;
        cursor.prev = null;
        cursor.next = null;
        cursor.cursor = releasedCursors;
        releasedCursors = cursor;
      }
      updateCursors(prevOld, prevNew, nextOld, nextNew) {
        let { cursor } = this;
        while (cursor !== null) {
          if (cursor.prev === prevOld) {
            cursor.prev = prevNew;
          }
          if (cursor.next === nextOld) {
            cursor.next = nextNew;
          }
          cursor = cursor.cursor;
        }
      }
      *[Symbol.iterator]() {
        for (let cursor = this.head; cursor !== null; cursor = cursor.next) {
          yield cursor.data;
        }
      }
      // getters
      get size() {
        let size = 0;
        for (let cursor = this.head; cursor !== null; cursor = cursor.next) {
          size++;
        }
        return size;
      }
      get isEmpty() {
        return this.head === null;
      }
      get first() {
        return this.head && this.head.data;
      }
      get last() {
        return this.tail && this.tail.data;
      }
      // convertors
      fromArray(array) {
        let cursor = null;
        this.head = null;
        for (let data of array) {
          const item = _List.createItem(data);
          if (cursor !== null) {
            cursor.next = item;
          } else {
            this.head = item;
          }
          item.prev = cursor;
          cursor = item;
        }
        this.tail = cursor;
        return this;
      }
      toArray() {
        return [...this];
      }
      toJSON() {
        return [...this];
      }
      // array-like methods
      forEach(fn, thisArg = this) {
        const cursor = this.allocateCursor(null, this.head);
        while (cursor.next !== null) {
          const item = cursor.next;
          cursor.next = item.next;
          fn.call(thisArg, item.data, item, this);
        }
        this.releaseCursor();
      }
      forEachRight(fn, thisArg = this) {
        const cursor = this.allocateCursor(this.tail, null);
        while (cursor.prev !== null) {
          const item = cursor.prev;
          cursor.prev = item.prev;
          fn.call(thisArg, item.data, item, this);
        }
        this.releaseCursor();
      }
      reduce(fn, initialValue, thisArg = this) {
        let cursor = this.allocateCursor(null, this.head);
        let acc = initialValue;
        let item;
        while (cursor.next !== null) {
          item = cursor.next;
          cursor.next = item.next;
          acc = fn.call(thisArg, acc, item.data, item, this);
        }
        this.releaseCursor();
        return acc;
      }
      reduceRight(fn, initialValue, thisArg = this) {
        let cursor = this.allocateCursor(this.tail, null);
        let acc = initialValue;
        let item;
        while (cursor.prev !== null) {
          item = cursor.prev;
          cursor.prev = item.prev;
          acc = fn.call(thisArg, acc, item.data, item, this);
        }
        this.releaseCursor();
        return acc;
      }
      some(fn, thisArg = this) {
        for (let cursor = this.head; cursor !== null; cursor = cursor.next) {
          if (fn.call(thisArg, cursor.data, cursor, this)) {
            return true;
          }
        }
        return false;
      }
      map(fn, thisArg = this) {
        const result = new _List();
        for (let cursor = this.head; cursor !== null; cursor = cursor.next) {
          result.appendData(fn.call(thisArg, cursor.data, cursor, this));
        }
        return result;
      }
      filter(fn, thisArg = this) {
        const result = new _List();
        for (let cursor = this.head; cursor !== null; cursor = cursor.next) {
          if (fn.call(thisArg, cursor.data, cursor, this)) {
            result.appendData(cursor.data);
          }
        }
        return result;
      }
      nextUntil(start, fn, thisArg = this) {
        if (start === null) {
          return;
        }
        const cursor = this.allocateCursor(null, start);
        while (cursor.next !== null) {
          const item = cursor.next;
          cursor.next = item.next;
          if (fn.call(thisArg, item.data, item, this)) {
            break;
          }
        }
        this.releaseCursor();
      }
      prevUntil(start, fn, thisArg = this) {
        if (start === null) {
          return;
        }
        const cursor = this.allocateCursor(start, null);
        while (cursor.prev !== null) {
          const item = cursor.prev;
          cursor.prev = item.prev;
          if (fn.call(thisArg, item.data, item, this)) {
            break;
          }
        }
        this.releaseCursor();
      }
      // mutation
      clear() {
        this.head = null;
        this.tail = null;
      }
      copy() {
        const result = new _List();
        for (let data of this) {
          result.appendData(data);
        }
        return result;
      }
      prepend(item) {
        this.updateCursors(null, item, this.head, item);
        if (this.head !== null) {
          this.head.prev = item;
          item.next = this.head;
        } else {
          this.tail = item;
        }
        this.head = item;
        return this;
      }
      prependData(data) {
        return this.prepend(_List.createItem(data));
      }
      append(item) {
        return this.insert(item);
      }
      appendData(data) {
        return this.insert(_List.createItem(data));
      }
      insert(item, before = null) {
        if (before !== null) {
          this.updateCursors(before.prev, item, before, item);
          if (before.prev === null) {
            if (this.head !== before) {
              throw new Error("before doesn't belong to list");
            }
            this.head = item;
            before.prev = item;
            item.next = before;
            this.updateCursors(null, item);
          } else {
            before.prev.next = item;
            item.prev = before.prev;
            before.prev = item;
            item.next = before;
          }
        } else {
          this.updateCursors(this.tail, item, null, item);
          if (this.tail !== null) {
            this.tail.next = item;
            item.prev = this.tail;
          } else {
            this.head = item;
          }
          this.tail = item;
        }
        return this;
      }
      insertData(data, before) {
        return this.insert(_List.createItem(data), before);
      }
      remove(item) {
        this.updateCursors(item, item.prev, item, item.next);
        if (item.prev !== null) {
          item.prev.next = item.next;
        } else {
          if (this.head !== item) {
            throw new Error("item doesn't belong to list");
          }
          this.head = item.next;
        }
        if (item.next !== null) {
          item.next.prev = item.prev;
        } else {
          if (this.tail !== item) {
            throw new Error("item doesn't belong to list");
          }
          this.tail = item.prev;
        }
        item.prev = null;
        item.next = null;
        return item;
      }
      push(data) {
        this.insert(_List.createItem(data));
      }
      pop() {
        return this.tail !== null ? this.remove(this.tail) : null;
      }
      unshift(data) {
        this.prepend(_List.createItem(data));
      }
      shift() {
        return this.head !== null ? this.remove(this.head) : null;
      }
      prependList(list) {
        return this.insertList(list, this.head);
      }
      appendList(list) {
        return this.insertList(list);
      }
      insertList(list, before) {
        if (list.head === null) {
          return this;
        }
        if (before !== void 0 && before !== null) {
          this.updateCursors(before.prev, list.tail, before, list.head);
          if (before.prev !== null) {
            before.prev.next = list.head;
            list.head.prev = before.prev;
          } else {
            this.head = list.head;
          }
          before.prev = list.tail;
          list.tail.next = before;
        } else {
          this.updateCursors(this.tail, list.tail, null, list.head);
          if (this.tail !== null) {
            this.tail.next = list.head;
            list.head.prev = this.tail;
          } else {
            this.head = list.head;
          }
          this.tail = list.tail;
        }
        list.head = null;
        list.tail = null;
        return this;
      }
      replace(oldItem, newItemOrList) {
        if ("head" in newItemOrList) {
          this.insertList(newItemOrList, oldItem);
        } else {
          this.insert(newItemOrList, oldItem);
        }
        this.remove(oldItem);
      }
    };
    exports.List = List;
  }
});

// node_modules/css-tree/cjs/utils/create-custom-error.cjs
var require_create_custom_error = __commonJS({
  "node_modules/css-tree/cjs/utils/create-custom-error.cjs"(exports) {
    "use strict";
    function createCustomError(name, message) {
      const error = Object.create(SyntaxError.prototype);
      const errorStack = new Error();
      return Object.assign(error, {
        name,
        message,
        get stack() {
          return (errorStack.stack || "").replace(/^(.+\n){1,3}/, `${name}: ${message}
`);
        }
      });
    }
    exports.createCustomError = createCustomError;
  }
});

// node_modules/css-tree/cjs/parser/SyntaxError.cjs
var require_SyntaxError = __commonJS({
  "node_modules/css-tree/cjs/parser/SyntaxError.cjs"(exports) {
    "use strict";
    var createCustomError = require_create_custom_error();
    var MAX_LINE_LENGTH = 100;
    var OFFSET_CORRECTION = 60;
    var TAB_REPLACEMENT = "    ";
    function sourceFragment({ source, line, column }, extraLines) {
      function processLines(start, end) {
        return lines.slice(start, end).map(
          (line2, idx) => String(start + idx + 1).padStart(maxNumLength) + " |" + line2
        ).join("\n");
      }
      const lines = source.split(/\r\n?|\n|\f/);
      const startLine = Math.max(1, line - extraLines) - 1;
      const endLine = Math.min(line + extraLines, lines.length + 1);
      const maxNumLength = Math.max(4, String(endLine).length) + 1;
      let cutLeft = 0;
      column += (TAB_REPLACEMENT.length - 1) * (lines[line - 1].substr(0, column - 1).match(/\t/g) || []).length;
      if (column > MAX_LINE_LENGTH) {
        cutLeft = column - OFFSET_CORRECTION + 3;
        column = OFFSET_CORRECTION - 2;
      }
      for (let i = startLine; i <= endLine; i++) {
        if (i >= 0 && i < lines.length) {
          lines[i] = lines[i].replace(/\t/g, TAB_REPLACEMENT);
          lines[i] = (cutLeft > 0 && lines[i].length > cutLeft ? "\u2026" : "") + lines[i].substr(cutLeft, MAX_LINE_LENGTH - 2) + (lines[i].length > cutLeft + MAX_LINE_LENGTH - 1 ? "\u2026" : "");
        }
      }
      return [
        processLines(startLine, line),
        new Array(column + maxNumLength + 2).join("-") + "^",
        processLines(line, endLine)
      ].filter(Boolean).join("\n");
    }
    function SyntaxError2(message, source, offset, line, column) {
      const error = Object.assign(createCustomError.createCustomError("SyntaxError", message), {
        source,
        offset,
        line,
        column,
        sourceFragment(extraLines) {
          return sourceFragment({ source, line, column }, isNaN(extraLines) ? 0 : extraLines);
        },
        get formattedMessage() {
          return `Parse error: ${message}
` + sourceFragment({ source, line, column }, 2);
        }
      });
      return error;
    }
    exports.SyntaxError = SyntaxError2;
  }
});

// node_modules/css-tree/cjs/parser/sequence.cjs
var require_sequence = __commonJS({
  "node_modules/css-tree/cjs/parser/sequence.cjs"(exports) {
    "use strict";
    var types = require_types2();
    function readSequence(recognizer) {
      const children = this.createList();
      let space = false;
      const context = {
        recognizer
      };
      while (!this.eof) {
        switch (this.tokenType) {
          case types.Comment:
            this.next();
            continue;
          case types.WhiteSpace:
            space = true;
            this.next();
            continue;
        }
        let child = recognizer.getNode.call(this, context);
        if (child === void 0) {
          break;
        }
        if (space) {
          if (recognizer.onWhiteSpace) {
            recognizer.onWhiteSpace.call(this, child, children, context);
          }
          space = false;
        }
        children.push(child);
      }
      if (space && recognizer.onWhiteSpace) {
        recognizer.onWhiteSpace.call(this, null, children, context);
      }
      return children;
    }
    exports.readSequence = readSequence;
  }
});

// node_modules/css-tree/cjs/parser/create.cjs
var require_create = __commonJS({
  "node_modules/css-tree/cjs/parser/create.cjs"(exports) {
    "use strict";
    var List = require_List();
    var SyntaxError2 = require_SyntaxError();
    var index = require_tokenizer();
    var sequence = require_sequence();
    var OffsetToLocation = require_OffsetToLocation();
    var TokenStream = require_TokenStream();
    var utils = require_utils2();
    var types = require_types2();
    var names = require_names2();
    var NOOP = () => {
    };
    var EXCLAMATIONMARK = 33;
    var NUMBERSIGN = 35;
    var SEMICOLON = 59;
    var LEFTCURLYBRACKET = 123;
    var NULL = 0;
    function createParseContext(name) {
      return function() {
        return this[name]();
      };
    }
    function fetchParseValues(dict) {
      const result = /* @__PURE__ */ Object.create(null);
      for (const name in dict) {
        const item = dict[name];
        const fn = item.parse || item;
        if (fn) {
          result[name] = fn;
        }
      }
      return result;
    }
    function processConfig(config) {
      const parseConfig = {
        context: /* @__PURE__ */ Object.create(null),
        scope: Object.assign(/* @__PURE__ */ Object.create(null), config.scope),
        atrule: fetchParseValues(config.atrule),
        pseudo: fetchParseValues(config.pseudo),
        node: fetchParseValues(config.node)
      };
      for (const name in config.parseContext) {
        switch (typeof config.parseContext[name]) {
          case "function":
            parseConfig.context[name] = config.parseContext[name];
            break;
          case "string":
            parseConfig.context[name] = createParseContext(config.parseContext[name]);
            break;
        }
      }
      return {
        config: parseConfig,
        ...parseConfig,
        ...parseConfig.node
      };
    }
    function createParser(config) {
      let source = "";
      let filename = "<unknown>";
      let needPositions = false;
      let onParseError = NOOP;
      let onParseErrorThrow = false;
      const locationMap = new OffsetToLocation.OffsetToLocation();
      const parser = Object.assign(new TokenStream.TokenStream(), processConfig(config || {}), {
        parseAtrulePrelude: true,
        parseRulePrelude: true,
        parseValue: true,
        parseCustomProperty: false,
        readSequence: sequence.readSequence,
        consumeUntilBalanceEnd: () => 0,
        consumeUntilLeftCurlyBracket(code) {
          return code === LEFTCURLYBRACKET ? 1 : 0;
        },
        consumeUntilLeftCurlyBracketOrSemicolon(code) {
          return code === LEFTCURLYBRACKET || code === SEMICOLON ? 1 : 0;
        },
        consumeUntilExclamationMarkOrSemicolon(code) {
          return code === EXCLAMATIONMARK || code === SEMICOLON ? 1 : 0;
        },
        consumeUntilSemicolonIncluded(code) {
          return code === SEMICOLON ? 2 : 0;
        },
        createList() {
          return new List.List();
        },
        createSingleNodeList(node) {
          return new List.List().appendData(node);
        },
        getFirstListNode(list) {
          return list && list.first;
        },
        getLastListNode(list) {
          return list && list.last;
        },
        parseWithFallback(consumer, fallback) {
          const startToken = this.tokenIndex;
          try {
            return consumer.call(this);
          } catch (e) {
            if (onParseErrorThrow) {
              throw e;
            }
            const fallbackNode = fallback.call(this, startToken);
            onParseErrorThrow = true;
            onParseError(e, fallbackNode);
            onParseErrorThrow = false;
            return fallbackNode;
          }
        },
        lookupNonWSType(offset) {
          let type;
          do {
            type = this.lookupType(offset++);
            if (type !== types.WhiteSpace) {
              return type;
            }
          } while (type !== NULL);
          return NULL;
        },
        charCodeAt(offset) {
          return offset >= 0 && offset < source.length ? source.charCodeAt(offset) : 0;
        },
        substring(offsetStart, offsetEnd) {
          return source.substring(offsetStart, offsetEnd);
        },
        substrToCursor(start) {
          return this.source.substring(start, this.tokenStart);
        },
        cmpChar(offset, charCode) {
          return utils.cmpChar(source, offset, charCode);
        },
        cmpStr(offsetStart, offsetEnd, str) {
          return utils.cmpStr(source, offsetStart, offsetEnd, str);
        },
        consume(tokenType) {
          const start = this.tokenStart;
          this.eat(tokenType);
          return this.substrToCursor(start);
        },
        consumeFunctionName() {
          const name = source.substring(this.tokenStart, this.tokenEnd - 1);
          this.eat(types.Function);
          return name;
        },
        consumeNumber(type) {
          const number = source.substring(this.tokenStart, utils.consumeNumber(source, this.tokenStart));
          this.eat(type);
          return number;
        },
        eat(tokenType) {
          if (this.tokenType !== tokenType) {
            const tokenName = names[tokenType].slice(0, -6).replace(/-/g, " ").replace(/^./, (m) => m.toUpperCase());
            let message = `${/[[\](){}]/.test(tokenName) ? `"${tokenName}"` : tokenName} is expected`;
            let offset = this.tokenStart;
            switch (tokenType) {
              case types.Ident:
                if (this.tokenType === types.Function || this.tokenType === types.Url) {
                  offset = this.tokenEnd - 1;
                  message = "Identifier is expected but function found";
                } else {
                  message = "Identifier is expected";
                }
                break;
              case types.Hash:
                if (this.isDelim(NUMBERSIGN)) {
                  this.next();
                  offset++;
                  message = "Name is expected";
                }
                break;
              case types.Percentage:
                if (this.tokenType === types.Number) {
                  offset = this.tokenEnd;
                  message = "Percent sign is expected";
                }
                break;
            }
            this.error(message, offset);
          }
          this.next();
        },
        eatIdent(name) {
          if (this.tokenType !== types.Ident || this.lookupValue(0, name) === false) {
            this.error(`Identifier "${name}" is expected`);
          }
          this.next();
        },
        eatDelim(code) {
          if (!this.isDelim(code)) {
            this.error(`Delim "${String.fromCharCode(code)}" is expected`);
          }
          this.next();
        },
        getLocation(start, end) {
          if (needPositions) {
            return locationMap.getLocationRange(
              start,
              end,
              filename
            );
          }
          return null;
        },
        getLocationFromList(list) {
          if (needPositions) {
            const head = this.getFirstListNode(list);
            const tail = this.getLastListNode(list);
            return locationMap.getLocationRange(
              head !== null ? head.loc.start.offset - locationMap.startOffset : this.tokenStart,
              tail !== null ? tail.loc.end.offset - locationMap.startOffset : this.tokenStart,
              filename
            );
          }
          return null;
        },
        error(message, offset) {
          const location = typeof offset !== "undefined" && offset < source.length ? locationMap.getLocation(offset) : this.eof ? locationMap.getLocation(utils.findWhiteSpaceStart(source, source.length - 1)) : locationMap.getLocation(this.tokenStart);
          throw new SyntaxError2.SyntaxError(
            message || "Unexpected input",
            source,
            location.offset,
            location.line,
            location.column
          );
        }
      });
      const parse = function(source_, options) {
        source = source_;
        options = options || {};
        parser.setSource(source, index.tokenize);
        locationMap.setSource(
          source,
          options.offset,
          options.line,
          options.column
        );
        filename = options.filename || "<unknown>";
        needPositions = Boolean(options.positions);
        onParseError = typeof options.onParseError === "function" ? options.onParseError : NOOP;
        onParseErrorThrow = false;
        parser.parseAtrulePrelude = "parseAtrulePrelude" in options ? Boolean(options.parseAtrulePrelude) : true;
        parser.parseRulePrelude = "parseRulePrelude" in options ? Boolean(options.parseRulePrelude) : true;
        parser.parseValue = "parseValue" in options ? Boolean(options.parseValue) : true;
        parser.parseCustomProperty = "parseCustomProperty" in options ? Boolean(options.parseCustomProperty) : false;
        const { context = "default", onComment } = options;
        if (context in parser.context === false) {
          throw new Error("Unknown context `" + context + "`");
        }
        if (typeof onComment === "function") {
          parser.forEachToken((type, start, end) => {
            if (type === types.Comment) {
              const loc = parser.getLocation(start, end);
              const value = utils.cmpStr(source, end - 2, end, "*/") ? source.slice(start + 2, end - 2) : source.slice(start + 2, end);
              onComment(value, loc);
            }
          });
        }
        const ast = parser.context[context].call(parser, options);
        if (!parser.eof) {
          parser.error();
        }
        return ast;
      };
      return Object.assign(parse, {
        SyntaxError: SyntaxError2.SyntaxError,
        config: parser.config
      });
    }
    exports.createParser = createParser;
  }
});

// node_modules/css-tree/cjs/generator/sourceMap.cjs
var require_sourceMap = __commonJS({
  "node_modules/css-tree/cjs/generator/sourceMap.cjs"(exports) {
    "use strict";
    var sourceMapGenerator_js = require_source_map_generator();
    var trackNodes = /* @__PURE__ */ new Set(["Atrule", "Selector", "Declaration"]);
    function generateSourceMap(handlers) {
      const map = new sourceMapGenerator_js.SourceMapGenerator();
      const generated = {
        line: 1,
        column: 0
      };
      const original = {
        line: 0,
        // should be zero to add first mapping
        column: 0
      };
      const activatedGenerated = {
        line: 1,
        column: 0
      };
      const activatedMapping = {
        generated: activatedGenerated
      };
      let line = 1;
      let column = 0;
      let sourceMappingActive = false;
      const origHandlersNode = handlers.node;
      handlers.node = function(node) {
        if (node.loc && node.loc.start && trackNodes.has(node.type)) {
          const nodeLine = node.loc.start.line;
          const nodeColumn = node.loc.start.column - 1;
          if (original.line !== nodeLine || original.column !== nodeColumn) {
            original.line = nodeLine;
            original.column = nodeColumn;
            generated.line = line;
            generated.column = column;
            if (sourceMappingActive) {
              sourceMappingActive = false;
              if (generated.line !== activatedGenerated.line || generated.column !== activatedGenerated.column) {
                map.addMapping(activatedMapping);
              }
            }
            sourceMappingActive = true;
            map.addMapping({
              source: node.loc.source,
              original,
              generated
            });
          }
        }
        origHandlersNode.call(this, node);
        if (sourceMappingActive && trackNodes.has(node.type)) {
          activatedGenerated.line = line;
          activatedGenerated.column = column;
        }
      };
      const origHandlersEmit = handlers.emit;
      handlers.emit = function(value, type, auto) {
        for (let i = 0; i < value.length; i++) {
          if (value.charCodeAt(i) === 10) {
            line++;
            column = 0;
          } else {
            column++;
          }
        }
        origHandlersEmit(value, type, auto);
      };
      const origHandlersResult = handlers.result;
      handlers.result = function() {
        if (sourceMappingActive) {
          map.addMapping(activatedMapping);
        }
        return {
          css: origHandlersResult(),
          map
        };
      };
      return handlers;
    }
    exports.generateSourceMap = generateSourceMap;
  }
});

// node_modules/css-tree/cjs/generator/token-before.cjs
var require_token_before = __commonJS({
  "node_modules/css-tree/cjs/generator/token-before.cjs"(exports) {
    "use strict";
    var types = require_types2();
    var PLUSSIGN = 43;
    var HYPHENMINUS = 45;
    var code = (type, value) => {
      if (type === types.Delim) {
        type = value;
      }
      if (typeof type === "string") {
        const charCode = type.charCodeAt(0);
        return charCode > 127 ? 32768 : charCode << 8;
      }
      return type;
    };
    var specPairs = [
      [types.Ident, types.Ident],
      [types.Ident, types.Function],
      [types.Ident, types.Url],
      [types.Ident, types.BadUrl],
      [types.Ident, "-"],
      [types.Ident, types.Number],
      [types.Ident, types.Percentage],
      [types.Ident, types.Dimension],
      [types.Ident, types.CDC],
      [types.Ident, types.LeftParenthesis],
      [types.AtKeyword, types.Ident],
      [types.AtKeyword, types.Function],
      [types.AtKeyword, types.Url],
      [types.AtKeyword, types.BadUrl],
      [types.AtKeyword, "-"],
      [types.AtKeyword, types.Number],
      [types.AtKeyword, types.Percentage],
      [types.AtKeyword, types.Dimension],
      [types.AtKeyword, types.CDC],
      [types.Hash, types.Ident],
      [types.Hash, types.Function],
      [types.Hash, types.Url],
      [types.Hash, types.BadUrl],
      [types.Hash, "-"],
      [types.Hash, types.Number],
      [types.Hash, types.Percentage],
      [types.Hash, types.Dimension],
      [types.Hash, types.CDC],
      [types.Dimension, types.Ident],
      [types.Dimension, types.Function],
      [types.Dimension, types.Url],
      [types.Dimension, types.BadUrl],
      [types.Dimension, "-"],
      [types.Dimension, types.Number],
      [types.Dimension, types.Percentage],
      [types.Dimension, types.Dimension],
      [types.Dimension, types.CDC],
      ["#", types.Ident],
      ["#", types.Function],
      ["#", types.Url],
      ["#", types.BadUrl],
      ["#", "-"],
      ["#", types.Number],
      ["#", types.Percentage],
      ["#", types.Dimension],
      ["#", types.CDC],
      // https://github.com/w3c/csswg-drafts/pull/6874
      ["-", types.Ident],
      ["-", types.Function],
      ["-", types.Url],
      ["-", types.BadUrl],
      ["-", "-"],
      ["-", types.Number],
      ["-", types.Percentage],
      ["-", types.Dimension],
      ["-", types.CDC],
      // https://github.com/w3c/csswg-drafts/pull/6874
      [types.Number, types.Ident],
      [types.Number, types.Function],
      [types.Number, types.Url],
      [types.Number, types.BadUrl],
      [types.Number, types.Number],
      [types.Number, types.Percentage],
      [types.Number, types.Dimension],
      [types.Number, "%"],
      [types.Number, types.CDC],
      // https://github.com/w3c/csswg-drafts/pull/6874
      ["@", types.Ident],
      ["@", types.Function],
      ["@", types.Url],
      ["@", types.BadUrl],
      ["@", "-"],
      ["@", types.CDC],
      // https://github.com/w3c/csswg-drafts/pull/6874
      [".", types.Number],
      [".", types.Percentage],
      [".", types.Dimension],
      ["+", types.Number],
      ["+", types.Percentage],
      ["+", types.Dimension],
      ["/", "*"]
    ];
    var safePairs = specPairs.concat([
      [types.Ident, types.Hash],
      [types.Dimension, types.Hash],
      [types.Hash, types.Hash],
      [types.AtKeyword, types.LeftParenthesis],
      [types.AtKeyword, types.String],
      [types.AtKeyword, types.Colon],
      [types.Percentage, types.Percentage],
      [types.Percentage, types.Dimension],
      [types.Percentage, types.Function],
      [types.Percentage, "-"],
      [types.RightParenthesis, types.Ident],
      [types.RightParenthesis, types.Function],
      [types.RightParenthesis, types.Percentage],
      [types.RightParenthesis, types.Dimension],
      [types.RightParenthesis, types.Hash],
      [types.RightParenthesis, "-"]
    ]);
    function createMap(pairs) {
      const isWhiteSpaceRequired = new Set(
        pairs.map(([prev, next]) => code(prev) << 16 | code(next))
      );
      return function(prevCode, type, value) {
        const nextCode = code(type, value);
        const nextCharCode = value.charCodeAt(0);
        const emitWs = nextCharCode === HYPHENMINUS && type !== types.Ident && type !== types.Function && type !== types.CDC || nextCharCode === PLUSSIGN ? isWhiteSpaceRequired.has(prevCode << 16 | nextCharCode << 8) : isWhiteSpaceRequired.has(prevCode << 16 | nextCode);
        if (emitWs) {
          this.emit(" ", types.WhiteSpace, true);
        }
        return nextCode;
      };
    }
    var spec = createMap(specPairs);
    var safe = createMap(safePairs);
    exports.safe = safe;
    exports.spec = spec;
  }
});

// node_modules/css-tree/cjs/generator/create.cjs
var require_create2 = __commonJS({
  "node_modules/css-tree/cjs/generator/create.cjs"(exports) {
    "use strict";
    var index = require_tokenizer();
    var sourceMap = require_sourceMap();
    var tokenBefore = require_token_before();
    var types = require_types2();
    var REVERSESOLIDUS = 92;
    function processChildren(node, delimeter) {
      if (typeof delimeter === "function") {
        let prev = null;
        node.children.forEach((node2) => {
          if (prev !== null) {
            delimeter.call(this, prev);
          }
          this.node(node2);
          prev = node2;
        });
        return;
      }
      node.children.forEach(this.node, this);
    }
    function processChunk(chunk) {
      index.tokenize(chunk, (type, start, end) => {
        this.token(type, chunk.slice(start, end));
      });
    }
    function createGenerator(config) {
      const types$1 = /* @__PURE__ */ new Map();
      for (let name in config.node) {
        const item = config.node[name];
        const fn = item.generate || item;
        if (typeof fn === "function") {
          types$1.set(name, item.generate || item);
        }
      }
      return function(node, options) {
        let buffer = "";
        let prevCode = 0;
        let handlers = {
          node(node2) {
            if (types$1.has(node2.type)) {
              types$1.get(node2.type).call(publicApi, node2);
            } else {
              throw new Error("Unknown node type: " + node2.type);
            }
          },
          tokenBefore: tokenBefore.safe,
          token(type, value) {
            prevCode = this.tokenBefore(prevCode, type, value);
            this.emit(value, type, false);
            if (type === types.Delim && value.charCodeAt(0) === REVERSESOLIDUS) {
              this.emit("\n", types.WhiteSpace, true);
            }
          },
          emit(value) {
            buffer += value;
          },
          result() {
            return buffer;
          }
        };
        if (options) {
          if (typeof options.decorator === "function") {
            handlers = options.decorator(handlers);
          }
          if (options.sourceMap) {
            handlers = sourceMap.generateSourceMap(handlers);
          }
          if (options.mode in tokenBefore) {
            handlers.tokenBefore = tokenBefore[options.mode];
          }
        }
        const publicApi = {
          node: (node2) => handlers.node(node2),
          children: processChildren,
          token: (type, value) => handlers.token(type, value),
          tokenize: processChunk
        };
        handlers.node(node);
        return handlers.result();
      };
    }
    exports.createGenerator = createGenerator;
  }
});

// node_modules/css-tree/cjs/convertor/create.cjs
var require_create3 = __commonJS({
  "node_modules/css-tree/cjs/convertor/create.cjs"(exports) {
    "use strict";
    var List = require_List();
    function createConvertor(walk) {
      return {
        fromPlainObject(ast) {
          walk(ast, {
            enter(node) {
              if (node.children && node.children instanceof List.List === false) {
                node.children = new List.List().fromArray(node.children);
              }
            }
          });
          return ast;
        },
        toPlainObject(ast) {
          walk(ast, {
            leave(node) {
              if (node.children && node.children instanceof List.List) {
                node.children = node.children.toArray();
              }
            }
          });
          return ast;
        }
      };
    }
    exports.createConvertor = createConvertor;
  }
});

// node_modules/css-tree/cjs/walker/create.cjs
var require_create4 = __commonJS({
  "node_modules/css-tree/cjs/walker/create.cjs"(exports) {
    "use strict";
    var { hasOwnProperty: hasOwnProperty2 } = Object.prototype;
    var noop = function() {
    };
    function ensureFunction(value) {
      return typeof value === "function" ? value : noop;
    }
    function invokeForType(fn, type) {
      return function(node, item, list) {
        if (node.type === type) {
          fn.call(this, node, item, list);
        }
      };
    }
    function getWalkersFromStructure(name, nodeType) {
      const structure = nodeType.structure;
      const walkers = [];
      for (const key in structure) {
        if (hasOwnProperty2.call(structure, key) === false) {
          continue;
        }
        let fieldTypes = structure[key];
        const walker = {
          name: key,
          type: false,
          nullable: false
        };
        if (!Array.isArray(fieldTypes)) {
          fieldTypes = [fieldTypes];
        }
        for (const fieldType of fieldTypes) {
          if (fieldType === null) {
            walker.nullable = true;
          } else if (typeof fieldType === "string") {
            walker.type = "node";
          } else if (Array.isArray(fieldType)) {
            walker.type = "list";
          }
        }
        if (walker.type) {
          walkers.push(walker);
        }
      }
      if (walkers.length) {
        return {
          context: nodeType.walkContext,
          fields: walkers
        };
      }
      return null;
    }
    function getTypesFromConfig(config) {
      const types = {};
      for (const name in config.node) {
        if (hasOwnProperty2.call(config.node, name)) {
          const nodeType = config.node[name];
          if (!nodeType.structure) {
            throw new Error("Missed `structure` field in `" + name + "` node type definition");
          }
          types[name] = getWalkersFromStructure(name, nodeType);
        }
      }
      return types;
    }
    function createTypeIterator(config, reverse) {
      const fields = config.fields.slice();
      const contextName = config.context;
      const useContext = typeof contextName === "string";
      if (reverse) {
        fields.reverse();
      }
      return function(node, context, walk, walkReducer) {
        let prevContextValue;
        if (useContext) {
          prevContextValue = context[contextName];
          context[contextName] = node;
        }
        for (const field of fields) {
          const ref = node[field.name];
          if (!field.nullable || ref) {
            if (field.type === "list") {
              const breakWalk = reverse ? ref.reduceRight(walkReducer, false) : ref.reduce(walkReducer, false);
              if (breakWalk) {
                return true;
              }
            } else if (walk(ref)) {
              return true;
            }
          }
        }
        if (useContext) {
          context[contextName] = prevContextValue;
        }
      };
    }
    function createFastTraveralMap({
      StyleSheet,
      Atrule,
      Rule,
      Block,
      DeclarationList
    }) {
      return {
        Atrule: {
          StyleSheet,
          Atrule,
          Rule,
          Block
        },
        Rule: {
          StyleSheet,
          Atrule,
          Rule,
          Block
        },
        Declaration: {
          StyleSheet,
          Atrule,
          Rule,
          Block,
          DeclarationList
        }
      };
    }
    function createWalker(config) {
      const types = getTypesFromConfig(config);
      const iteratorsNatural = {};
      const iteratorsReverse = {};
      const breakWalk = Symbol("break-walk");
      const skipNode = Symbol("skip-node");
      for (const name in types) {
        if (hasOwnProperty2.call(types, name) && types[name] !== null) {
          iteratorsNatural[name] = createTypeIterator(types[name], false);
          iteratorsReverse[name] = createTypeIterator(types[name], true);
        }
      }
      const fastTraversalIteratorsNatural = createFastTraveralMap(iteratorsNatural);
      const fastTraversalIteratorsReverse = createFastTraveralMap(iteratorsReverse);
      const walk = function(root, options) {
        function walkNode(node, item, list) {
          const enterRet = enter.call(context, node, item, list);
          if (enterRet === breakWalk) {
            return true;
          }
          if (enterRet === skipNode) {
            return false;
          }
          if (iterators.hasOwnProperty(node.type)) {
            if (iterators[node.type](node, context, walkNode, walkReducer)) {
              return true;
            }
          }
          if (leave.call(context, node, item, list) === breakWalk) {
            return true;
          }
          return false;
        }
        let enter = noop;
        let leave = noop;
        let iterators = iteratorsNatural;
        let walkReducer = (ret, data, item, list) => ret || walkNode(data, item, list);
        const context = {
          break: breakWalk,
          skip: skipNode,
          root,
          stylesheet: null,
          atrule: null,
          atrulePrelude: null,
          rule: null,
          selector: null,
          block: null,
          declaration: null,
          function: null
        };
        if (typeof options === "function") {
          enter = options;
        } else if (options) {
          enter = ensureFunction(options.enter);
          leave = ensureFunction(options.leave);
          if (options.reverse) {
            iterators = iteratorsReverse;
          }
          if (options.visit) {
            if (fastTraversalIteratorsNatural.hasOwnProperty(options.visit)) {
              iterators = options.reverse ? fastTraversalIteratorsReverse[options.visit] : fastTraversalIteratorsNatural[options.visit];
            } else if (!types.hasOwnProperty(options.visit)) {
              throw new Error("Bad value `" + options.visit + "` for `visit` option (should be: " + Object.keys(types).sort().join(", ") + ")");
            }
            enter = invokeForType(enter, options.visit);
            leave = invokeForType(leave, options.visit);
          }
        }
        if (enter === noop && leave === noop) {
          throw new Error("Neither `enter` nor `leave` walker handler is set or both aren't a function");
        }
        walkNode(root);
      };
      walk.break = breakWalk;
      walk.skip = skipNode;
      walk.find = function(ast, fn) {
        let found = null;
        walk(ast, function(node, item, list) {
          if (fn.call(this, node, item, list)) {
            found = node;
            return breakWalk;
          }
        });
        return found;
      };
      walk.findLast = function(ast, fn) {
        let found = null;
        walk(ast, {
          reverse: true,
          enter(node, item, list) {
            if (fn.call(this, node, item, list)) {
              found = node;
              return breakWalk;
            }
          }
        });
        return found;
      };
      walk.findAll = function(ast, fn) {
        const found = [];
        walk(ast, function(node, item, list) {
          if (fn.call(this, node, item, list)) {
            found.push(node);
          }
        });
        return found;
      };
      return walk;
    }
    exports.createWalker = createWalker;
  }
});

// node_modules/css-tree/cjs/definition-syntax/generate.cjs
var require_generate = __commonJS({
  "node_modules/css-tree/cjs/definition-syntax/generate.cjs"(exports) {
    "use strict";
    function noop(value) {
      return value;
    }
    function generateMultiplier(multiplier) {
      const { min, max, comma } = multiplier;
      if (min === 0 && max === 0) {
        return comma ? "#?" : "*";
      }
      if (min === 0 && max === 1) {
        return "?";
      }
      if (min === 1 && max === 0) {
        return comma ? "#" : "+";
      }
      if (min === 1 && max === 1) {
        return "";
      }
      return (comma ? "#" : "") + (min === max ? "{" + min + "}" : "{" + min + "," + (max !== 0 ? max : "") + "}");
    }
    function generateTypeOpts(node) {
      switch (node.type) {
        case "Range":
          return " [" + (node.min === null ? "-\u221E" : node.min) + "," + (node.max === null ? "\u221E" : node.max) + "]";
        default:
          throw new Error("Unknown node type `" + node.type + "`");
      }
    }
    function generateSequence(node, decorate, forceBraces, compact) {
      const combinator = node.combinator === " " || compact ? node.combinator : " " + node.combinator + " ";
      const result = node.terms.map((term) => internalGenerate(term, decorate, forceBraces, compact)).join(combinator);
      if (node.explicit || forceBraces) {
        return (compact || result[0] === "," ? "[" : "[ ") + result + (compact ? "]" : " ]");
      }
      return result;
    }
    function internalGenerate(node, decorate, forceBraces, compact) {
      let result;
      switch (node.type) {
        case "Group":
          result = generateSequence(node, decorate, forceBraces, compact) + (node.disallowEmpty ? "!" : "");
          break;
        case "Multiplier":
          return internalGenerate(node.term, decorate, forceBraces, compact) + decorate(generateMultiplier(node), node);
        case "Type":
          result = "<" + node.name + (node.opts ? decorate(generateTypeOpts(node.opts), node.opts) : "") + ">";
          break;
        case "Property":
          result = "<'" + node.name + "'>";
          break;
        case "Keyword":
          result = node.name;
          break;
        case "AtKeyword":
          result = "@" + node.name;
          break;
        case "Function":
          result = node.name + "(";
          break;
        case "String":
        case "Token":
          result = node.value;
          break;
        case "Comma":
          result = ",";
          break;
        default:
          throw new Error("Unknown node type `" + node.type + "`");
      }
      return decorate(result, node);
    }
    function generate(node, options) {
      let decorate = noop;
      let forceBraces = false;
      let compact = false;
      if (typeof options === "function") {
        decorate = options;
      } else if (options) {
        forceBraces = Boolean(options.forceBraces);
        compact = Boolean(options.compact);
        if (typeof options.decorate === "function") {
          decorate = options.decorate;
        }
      }
      return internalGenerate(node, decorate, forceBraces, compact);
    }
    exports.generate = generate;
  }
});

// node_modules/css-tree/cjs/lexer/error.cjs
var require_error2 = __commonJS({
  "node_modules/css-tree/cjs/lexer/error.cjs"(exports) {
    "use strict";
    var createCustomError = require_create_custom_error();
    var generate = require_generate();
    var defaultLoc = { offset: 0, line: 1, column: 1 };
    function locateMismatch(matchResult, node) {
      const tokens = matchResult.tokens;
      const longestMatch = matchResult.longestMatch;
      const mismatchNode = longestMatch < tokens.length ? tokens[longestMatch].node || null : null;
      const badNode = mismatchNode !== node ? mismatchNode : null;
      let mismatchOffset = 0;
      let mismatchLength = 0;
      let entries = 0;
      let css = "";
      let start;
      let end;
      for (let i = 0; i < tokens.length; i++) {
        const token = tokens[i].value;
        if (i === longestMatch) {
          mismatchLength = token.length;
          mismatchOffset = css.length;
        }
        if (badNode !== null && tokens[i].node === badNode) {
          if (i <= longestMatch) {
            entries++;
          } else {
            entries = 0;
          }
        }
        css += token;
      }
      if (longestMatch === tokens.length || entries > 1) {
        start = fromLoc(badNode || node, "end") || buildLoc(defaultLoc, css);
        end = buildLoc(start);
      } else {
        start = fromLoc(badNode, "start") || buildLoc(fromLoc(node, "start") || defaultLoc, css.slice(0, mismatchOffset));
        end = fromLoc(badNode, "end") || buildLoc(start, css.substr(mismatchOffset, mismatchLength));
      }
      return {
        css,
        mismatchOffset,
        mismatchLength,
        start,
        end
      };
    }
    function fromLoc(node, point) {
      const value = node && node.loc && node.loc[point];
      if (value) {
        return "line" in value ? buildLoc(value) : value;
      }
      return null;
    }
    function buildLoc({ offset, line, column }, extra) {
      const loc = {
        offset,
        line,
        column
      };
      if (extra) {
        const lines = extra.split(/\n|\r\n?|\f/);
        loc.offset += extra.length;
        loc.line += lines.length - 1;
        loc.column = lines.length === 1 ? loc.column + extra.length : lines.pop().length + 1;
      }
      return loc;
    }
    var SyntaxReferenceError = function(type, referenceName) {
      const error = createCustomError.createCustomError(
        "SyntaxReferenceError",
        type + (referenceName ? " `" + referenceName + "`" : "")
      );
      error.reference = referenceName;
      return error;
    };
    var SyntaxMatchError = function(message, syntax, node, matchResult) {
      const error = createCustomError.createCustomError("SyntaxMatchError", message);
      const {
        css,
        mismatchOffset,
        mismatchLength,
        start,
        end
      } = locateMismatch(matchResult, node);
      error.rawMessage = message;
      error.syntax = syntax ? generate.generate(syntax) : "<generic>";
      error.css = css;
      error.mismatchOffset = mismatchOffset;
      error.mismatchLength = mismatchLength;
      error.message = message + "\n  syntax: " + error.syntax + "\n   value: " + (css || "<empty string>") + "\n  --------" + new Array(error.mismatchOffset + 1).join("-") + "^";
      Object.assign(error, start);
      error.loc = {
        source: node && node.loc && node.loc.source || "<unknown>",
        start,
        end
      };
      return error;
    };
    exports.SyntaxMatchError = SyntaxMatchError;
    exports.SyntaxReferenceError = SyntaxReferenceError;
  }
});

// node_modules/css-tree/cjs/utils/names.cjs
var require_names3 = __commonJS({
  "node_modules/css-tree/cjs/utils/names.cjs"(exports) {
    "use strict";
    var keywords = /* @__PURE__ */ new Map();
    var properties = /* @__PURE__ */ new Map();
    var HYPHENMINUS = 45;
    var keyword = getKeywordDescriptor;
    var property = getPropertyDescriptor;
    var vendorPrefix = getVendorPrefix;
    function isCustomProperty(str, offset) {
      offset = offset || 0;
      return str.length - offset >= 2 && str.charCodeAt(offset) === HYPHENMINUS && str.charCodeAt(offset + 1) === HYPHENMINUS;
    }
    function getVendorPrefix(str, offset) {
      offset = offset || 0;
      if (str.length - offset >= 3) {
        if (str.charCodeAt(offset) === HYPHENMINUS && str.charCodeAt(offset + 1) !== HYPHENMINUS) {
          const secondDashIndex = str.indexOf("-", offset + 2);
          if (secondDashIndex !== -1) {
            return str.substring(offset, secondDashIndex + 1);
          }
        }
      }
      return "";
    }
    function getKeywordDescriptor(keyword2) {
      if (keywords.has(keyword2)) {
        return keywords.get(keyword2);
      }
      const name = keyword2.toLowerCase();
      let descriptor = keywords.get(name);
      if (descriptor === void 0) {
        const custom = isCustomProperty(name, 0);
        const vendor = !custom ? getVendorPrefix(name, 0) : "";
        descriptor = Object.freeze({
          basename: name.substr(vendor.length),
          name,
          prefix: vendor,
          vendor,
          custom
        });
      }
      keywords.set(keyword2, descriptor);
      return descriptor;
    }
    function getPropertyDescriptor(property2) {
      if (properties.has(property2)) {
        return properties.get(property2);
      }
      let name = property2;
      let hack = property2[0];
      if (hack === "/") {
        hack = property2[1] === "/" ? "//" : "/";
      } else if (hack !== "_" && hack !== "*" && hack !== "$" && hack !== "#" && hack !== "+" && hack !== "&") {
        hack = "";
      }
      const custom = isCustomProperty(name, hack.length);
      if (!custom) {
        name = name.toLowerCase();
        if (properties.has(name)) {
          const descriptor2 = properties.get(name);
          properties.set(property2, descriptor2);
          return descriptor2;
        }
      }
      const vendor = !custom ? getVendorPrefix(name, hack.length) : "";
      const prefix = name.substr(0, hack.length + vendor.length);
      const descriptor = Object.freeze({
        basename: name.substr(prefix.length),
        name: name.substr(hack.length),
        hack,
        vendor,
        prefix,
        custom
      });
      properties.set(property2, descriptor);
      return descriptor;
    }
    exports.isCustomProperty = isCustomProperty;
    exports.keyword = keyword;
    exports.property = property;
    exports.vendorPrefix = vendorPrefix;
  }
});

// node_modules/css-tree/cjs/lexer/generic-const.cjs
var require_generic_const = __commonJS({
  "node_modules/css-tree/cjs/lexer/generic-const.cjs"(exports) {
    "use strict";
    var cssWideKeywords = [
      "initial",
      "inherit",
      "unset",
      "revert",
      "revert-layer"
    ];
    exports.cssWideKeywords = cssWideKeywords;
  }
});

// node_modules/css-tree/cjs/lexer/generic-an-plus-b.cjs
var require_generic_an_plus_b = __commonJS({
  "node_modules/css-tree/cjs/lexer/generic-an-plus-b.cjs"(exports, module2) {
    "use strict";
    var charCodeDefinitions = require_char_code_definitions();
    var types = require_types2();
    var utils = require_utils2();
    var PLUSSIGN = 43;
    var HYPHENMINUS = 45;
    var N = 110;
    var DISALLOW_SIGN = true;
    var ALLOW_SIGN = false;
    function isDelim(token, code) {
      return token !== null && token.type === types.Delim && token.value.charCodeAt(0) === code;
    }
    function skipSC(token, offset, getNextToken) {
      while (token !== null && (token.type === types.WhiteSpace || token.type === types.Comment)) {
        token = getNextToken(++offset);
      }
      return offset;
    }
    function checkInteger(token, valueOffset, disallowSign, offset) {
      if (!token) {
        return 0;
      }
      const code = token.value.charCodeAt(valueOffset);
      if (code === PLUSSIGN || code === HYPHENMINUS) {
        if (disallowSign) {
          return 0;
        }
        valueOffset++;
      }
      for (; valueOffset < token.value.length; valueOffset++) {
        if (!charCodeDefinitions.isDigit(token.value.charCodeAt(valueOffset))) {
          return 0;
        }
      }
      return offset + 1;
    }
    function consumeB(token, offset_, getNextToken) {
      let sign = false;
      let offset = skipSC(token, offset_, getNextToken);
      token = getNextToken(offset);
      if (token === null) {
        return offset_;
      }
      if (token.type !== types.Number) {
        if (isDelim(token, PLUSSIGN) || isDelim(token, HYPHENMINUS)) {
          sign = true;
          offset = skipSC(getNextToken(++offset), offset, getNextToken);
          token = getNextToken(offset);
          if (token === null || token.type !== types.Number) {
            return 0;
          }
        } else {
          return offset_;
        }
      }
      if (!sign) {
        const code = token.value.charCodeAt(0);
        if (code !== PLUSSIGN && code !== HYPHENMINUS) {
          return 0;
        }
      }
      return checkInteger(token, sign ? 0 : 1, sign, offset);
    }
    function anPlusB(token, getNextToken) {
      let offset = 0;
      if (!token) {
        return 0;
      }
      if (token.type === types.Number) {
        return checkInteger(token, 0, ALLOW_SIGN, offset);
      } else if (token.type === types.Ident && token.value.charCodeAt(0) === HYPHENMINUS) {
        if (!utils.cmpChar(token.value, 1, N)) {
          return 0;
        }
        switch (token.value.length) {
          case 2:
            return consumeB(getNextToken(++offset), offset, getNextToken);
          case 3:
            if (token.value.charCodeAt(2) !== HYPHENMINUS) {
              return 0;
            }
            offset = skipSC(getNextToken(++offset), offset, getNextToken);
            token = getNextToken(offset);
            return checkInteger(token, 0, DISALLOW_SIGN, offset);
          default:
            if (token.value.charCodeAt(2) !== HYPHENMINUS) {
              return 0;
            }
            return checkInteger(token, 3, DISALLOW_SIGN, offset);
        }
      } else if (token.type === types.Ident || isDelim(token, PLUSSIGN) && getNextToken(offset + 1).type === types.Ident) {
        if (token.type !== types.Ident) {
          token = getNextToken(++offset);
        }
        if (token === null || !utils.cmpChar(token.value, 0, N)) {
          return 0;
        }
        switch (token.value.length) {
          case 1:
            return consumeB(getNextToken(++offset), offset, getNextToken);
          case 2:
            if (token.value.charCodeAt(1) !== HYPHENMINUS) {
              return 0;
            }
            offset = skipSC(getNextToken(++offset), offset, getNextToken);
            token = getNextToken(offset);
            return checkInteger(token, 0, DISALLOW_SIGN, offset);
          default:
            if (token.value.charCodeAt(1) !== HYPHENMINUS) {
              return 0;
            }
            return checkInteger(token, 2, DISALLOW_SIGN, offset);
        }
      } else if (token.type === types.Dimension) {
        let code = token.value.charCodeAt(0);
        let sign = code === PLUSSIGN || code === HYPHENMINUS ? 1 : 0;
        let i = sign;
        for (; i < token.value.length; i++) {
          if (!charCodeDefinitions.isDigit(token.value.charCodeAt(i))) {
            break;
          }
        }
        if (i === sign) {
          return 0;
        }
        if (!utils.cmpChar(token.value, i, N)) {
          return 0;
        }
        if (i + 1 === token.value.length) {
          return consumeB(getNextToken(++offset), offset, getNextToken);
        } else {
          if (token.value.charCodeAt(i + 1) !== HYPHENMINUS) {
            return 0;
          }
          if (i + 2 === token.value.length) {
            offset = skipSC(getNextToken(++offset), offset, getNextToken);
            token = getNextToken(offset);
            return checkInteger(token, 0, DISALLOW_SIGN, offset);
          } else {
            return checkInteger(token, i + 2, DISALLOW_SIGN, offset);
          }
        }
      }
      return 0;
    }
    module2.exports = anPlusB;
  }
});

// node_modules/css-tree/cjs/lexer/generic-urange.cjs
var require_generic_urange = __commonJS({
  "node_modules/css-tree/cjs/lexer/generic-urange.cjs"(exports, module2) {
    "use strict";
    var charCodeDefinitions = require_char_code_definitions();
    var types = require_types2();
    var utils = require_utils2();
    var PLUSSIGN = 43;
    var HYPHENMINUS = 45;
    var QUESTIONMARK = 63;
    var U = 117;
    function isDelim(token, code) {
      return token !== null && token.type === types.Delim && token.value.charCodeAt(0) === code;
    }
    function startsWith(token, code) {
      return token.value.charCodeAt(0) === code;
    }
    function hexSequence(token, offset, allowDash) {
      let hexlen = 0;
      for (let pos = offset; pos < token.value.length; pos++) {
        const code = token.value.charCodeAt(pos);
        if (code === HYPHENMINUS && allowDash && hexlen !== 0) {
          hexSequence(token, offset + hexlen + 1, false);
          return 6;
        }
        if (!charCodeDefinitions.isHexDigit(code)) {
          return 0;
        }
        if (++hexlen > 6) {
          return 0;
        }
      }
      return hexlen;
    }
    function withQuestionMarkSequence(consumed, length, getNextToken) {
      if (!consumed) {
        return 0;
      }
      while (isDelim(getNextToken(length), QUESTIONMARK)) {
        if (++consumed > 6) {
          return 0;
        }
        length++;
      }
      return length;
    }
    function urange(token, getNextToken) {
      let length = 0;
      if (token === null || token.type !== types.Ident || !utils.cmpChar(token.value, 0, U)) {
        return 0;
      }
      token = getNextToken(++length);
      if (token === null) {
        return 0;
      }
      if (isDelim(token, PLUSSIGN)) {
        token = getNextToken(++length);
        if (token === null) {
          return 0;
        }
        if (token.type === types.Ident) {
          return withQuestionMarkSequence(hexSequence(token, 0, true), ++length, getNextToken);
        }
        if (isDelim(token, QUESTIONMARK)) {
          return withQuestionMarkSequence(1, ++length, getNextToken);
        }
        return 0;
      }
      if (token.type === types.Number) {
        const consumedHexLength = hexSequence(token, 1, true);
        if (consumedHexLength === 0) {
          return 0;
        }
        token = getNextToken(++length);
        if (token === null) {
          return length;
        }
        if (token.type === types.Dimension || token.type === types.Number) {
          if (!startsWith(token, HYPHENMINUS) || !hexSequence(token, 1, false)) {
            return 0;
          }
          return length + 1;
        }
        return withQuestionMarkSequence(consumedHexLength, length, getNextToken);
      }
      if (token.type === types.Dimension) {
        return withQuestionMarkSequence(hexSequence(token, 1, true), ++length, getNextToken);
      }
      return 0;
    }
    module2.exports = urange;
  }
});

// node_modules/css-tree/cjs/lexer/generic.cjs
var require_generic = __commonJS({
  "node_modules/css-tree/cjs/lexer/generic.cjs"(exports) {
    "use strict";
    var genericConst = require_generic_const();
    var genericAnPlusB = require_generic_an_plus_b();
    var genericUrange = require_generic_urange();
    var types = require_types2();
    var charCodeDefinitions = require_char_code_definitions();
    var utils = require_utils2();
    var calcFunctionNames = ["calc(", "-moz-calc(", "-webkit-calc("];
    var balancePair = /* @__PURE__ */ new Map([
      [types.Function, types.RightParenthesis],
      [types.LeftParenthesis, types.RightParenthesis],
      [types.LeftSquareBracket, types.RightSquareBracket],
      [types.LeftCurlyBracket, types.RightCurlyBracket]
    ]);
    function charCodeAt(str, index) {
      return index < str.length ? str.charCodeAt(index) : 0;
    }
    function eqStr(actual, expected) {
      return utils.cmpStr(actual, 0, actual.length, expected);
    }
    function eqStrAny(actual, expected) {
      for (let i = 0; i < expected.length; i++) {
        if (eqStr(actual, expected[i])) {
          return true;
        }
      }
      return false;
    }
    function isPostfixIeHack(str, offset) {
      if (offset !== str.length - 2) {
        return false;
      }
      return charCodeAt(str, offset) === 92 && // U+005C REVERSE SOLIDUS (\)
      charCodeDefinitions.isDigit(charCodeAt(str, offset + 1));
    }
    function outOfRange(opts, value, numEnd) {
      if (opts && opts.type === "Range") {
        const num = Number(
          numEnd !== void 0 && numEnd !== value.length ? value.substr(0, numEnd) : value
        );
        if (isNaN(num)) {
          return true;
        }
        if (opts.min !== null && num < opts.min && typeof opts.min !== "string") {
          return true;
        }
        if (opts.max !== null && num > opts.max && typeof opts.max !== "string") {
          return true;
        }
      }
      return false;
    }
    function consumeFunction(token, getNextToken) {
      let balanceCloseType = 0;
      let balanceStash = [];
      let length = 0;
      scan:
        do {
          switch (token.type) {
            case types.RightCurlyBracket:
            case types.RightParenthesis:
            case types.RightSquareBracket:
              if (token.type !== balanceCloseType) {
                break scan;
              }
              balanceCloseType = balanceStash.pop();
              if (balanceStash.length === 0) {
                length++;
                break scan;
              }
              break;
            case types.Function:
            case types.LeftParenthesis:
            case types.LeftSquareBracket:
            case types.LeftCurlyBracket:
              balanceStash.push(balanceCloseType);
              balanceCloseType = balancePair.get(token.type);
              break;
          }
          length++;
        } while (token = getNextToken(length));
      return length;
    }
    function calc(next) {
      return function(token, getNextToken, opts) {
        if (token === null) {
          return 0;
        }
        if (token.type === types.Function && eqStrAny(token.value, calcFunctionNames)) {
          return consumeFunction(token, getNextToken);
        }
        return next(token, getNextToken, opts);
      };
    }
    function tokenType(expectedTokenType) {
      return function(token) {
        if (token === null || token.type !== expectedTokenType) {
          return 0;
        }
        return 1;
      };
    }
    function customIdent(token) {
      if (token === null || token.type !== types.Ident) {
        return 0;
      }
      const name = token.value.toLowerCase();
      if (eqStrAny(name, genericConst.cssWideKeywords)) {
        return 0;
      }
      if (eqStr(name, "default")) {
        return 0;
      }
      return 1;
    }
    function customPropertyName(token) {
      if (token === null || token.type !== types.Ident) {
        return 0;
      }
      if (charCodeAt(token.value, 0) !== 45 || charCodeAt(token.value, 1) !== 45) {
        return 0;
      }
      return 1;
    }
    function hexColor(token) {
      if (token === null || token.type !== types.Hash) {
        return 0;
      }
      const length = token.value.length;
      if (length !== 4 && length !== 5 && length !== 7 && length !== 9) {
        return 0;
      }
      for (let i = 1; i < length; i++) {
        if (!charCodeDefinitions.isHexDigit(charCodeAt(token.value, i))) {
          return 0;
        }
      }
      return 1;
    }
    function idSelector(token) {
      if (token === null || token.type !== types.Hash) {
        return 0;
      }
      if (!charCodeDefinitions.isIdentifierStart(charCodeAt(token.value, 1), charCodeAt(token.value, 2), charCodeAt(token.value, 3))) {
        return 0;
      }
      return 1;
    }
    function declarationValue(token, getNextToken) {
      if (!token) {
        return 0;
      }
      let balanceCloseType = 0;
      let balanceStash = [];
      let length = 0;
      scan:
        do {
          switch (token.type) {
            case types.BadString:
            case types.BadUrl:
              break scan;
            case types.RightCurlyBracket:
            case types.RightParenthesis:
            case types.RightSquareBracket:
              if (token.type !== balanceCloseType) {
                break scan;
              }
              balanceCloseType = balanceStash.pop();
              break;
            case types.Semicolon:
              if (balanceCloseType === 0) {
                break scan;
              }
              break;
            case types.Delim:
              if (balanceCloseType === 0 && token.value === "!") {
                break scan;
              }
              break;
            case types.Function:
            case types.LeftParenthesis:
            case types.LeftSquareBracket:
            case types.LeftCurlyBracket:
              balanceStash.push(balanceCloseType);
              balanceCloseType = balancePair.get(token.type);
              break;
          }
          length++;
        } while (token = getNextToken(length));
      return length;
    }
    function anyValue(token, getNextToken) {
      if (!token) {
        return 0;
      }
      let balanceCloseType = 0;
      let balanceStash = [];
      let length = 0;
      scan:
        do {
          switch (token.type) {
            case types.BadString:
            case types.BadUrl:
              break scan;
            case types.RightCurlyBracket:
            case types.RightParenthesis:
            case types.RightSquareBracket:
              if (token.type !== balanceCloseType) {
                break scan;
              }
              balanceCloseType = balanceStash.pop();
              break;
            case types.Function:
            case types.LeftParenthesis:
            case types.LeftSquareBracket:
            case types.LeftCurlyBracket:
              balanceStash.push(balanceCloseType);
              balanceCloseType = balancePair.get(token.type);
              break;
          }
          length++;
        } while (token = getNextToken(length));
      return length;
    }
    function dimension(type) {
      if (type) {
        type = new Set(type);
      }
      return function(token, getNextToken, opts) {
        if (token === null || token.type !== types.Dimension) {
          return 0;
        }
        const numberEnd = utils.consumeNumber(token.value, 0);
        if (type !== null) {
          const reverseSolidusOffset = token.value.indexOf("\\", numberEnd);
          const unit = reverseSolidusOffset === -1 || !isPostfixIeHack(token.value, reverseSolidusOffset) ? token.value.substr(numberEnd) : token.value.substring(numberEnd, reverseSolidusOffset);
          if (type.has(unit.toLowerCase()) === false) {
            return 0;
          }
        }
        if (outOfRange(opts, token.value, numberEnd)) {
          return 0;
        }
        return 1;
      };
    }
    function percentage(token, getNextToken, opts) {
      if (token === null || token.type !== types.Percentage) {
        return 0;
      }
      if (outOfRange(opts, token.value, token.value.length - 1)) {
        return 0;
      }
      return 1;
    }
    function zero(next) {
      if (typeof next !== "function") {
        next = function() {
          return 0;
        };
      }
      return function(token, getNextToken, opts) {
        if (token !== null && token.type === types.Number) {
          if (Number(token.value) === 0) {
            return 1;
          }
        }
        return next(token, getNextToken, opts);
      };
    }
    function number(token, getNextToken, opts) {
      if (token === null) {
        return 0;
      }
      const numberEnd = utils.consumeNumber(token.value, 0);
      const isNumber = numberEnd === token.value.length;
      if (!isNumber && !isPostfixIeHack(token.value, numberEnd)) {
        return 0;
      }
      if (outOfRange(opts, token.value, numberEnd)) {
        return 0;
      }
      return 1;
    }
    function integer(token, getNextToken, opts) {
      if (token === null || token.type !== types.Number) {
        return 0;
      }
      let i = charCodeAt(token.value, 0) === 43 || // U+002B PLUS SIGN (+)
      charCodeAt(token.value, 0) === 45 ? 1 : 0;
      for (; i < token.value.length; i++) {
        if (!charCodeDefinitions.isDigit(charCodeAt(token.value, i))) {
          return 0;
        }
      }
      if (outOfRange(opts, token.value, i)) {
        return 0;
      }
      return 1;
    }
    var tokenTypes = {
      "ident-token": tokenType(types.Ident),
      "function-token": tokenType(types.Function),
      "at-keyword-token": tokenType(types.AtKeyword),
      "hash-token": tokenType(types.Hash),
      "string-token": tokenType(types.String),
      "bad-string-token": tokenType(types.BadString),
      "url-token": tokenType(types.Url),
      "bad-url-token": tokenType(types.BadUrl),
      "delim-token": tokenType(types.Delim),
      "number-token": tokenType(types.Number),
      "percentage-token": tokenType(types.Percentage),
      "dimension-token": tokenType(types.Dimension),
      "whitespace-token": tokenType(types.WhiteSpace),
      "CDO-token": tokenType(types.CDO),
      "CDC-token": tokenType(types.CDC),
      "colon-token": tokenType(types.Colon),
      "semicolon-token": tokenType(types.Semicolon),
      "comma-token": tokenType(types.Comma),
      "[-token": tokenType(types.LeftSquareBracket),
      "]-token": tokenType(types.RightSquareBracket),
      "(-token": tokenType(types.LeftParenthesis),
      ")-token": tokenType(types.RightParenthesis),
      "{-token": tokenType(types.LeftCurlyBracket),
      "}-token": tokenType(types.RightCurlyBracket)
    };
    var productionTypes = {
      // token type aliases
      "string": tokenType(types.String),
      "ident": tokenType(types.Ident),
      // percentage
      "percentage": calc(percentage),
      // numeric
      "zero": zero(),
      "number": calc(number),
      "integer": calc(integer),
      // complex types
      "custom-ident": customIdent,
      "custom-property-name": customPropertyName,
      "hex-color": hexColor,
      "id-selector": idSelector,
      // element( <id-selector> )
      "an-plus-b": genericAnPlusB,
      "urange": genericUrange,
      "declaration-value": declarationValue,
      "any-value": anyValue
    };
    function createDemensionTypes(units) {
      const {
        angle,
        decibel,
        frequency,
        flex,
        length,
        resolution,
        semitones,
        time
      } = units || {};
      return {
        "dimension": calc(dimension(null)),
        "angle": calc(dimension(angle)),
        "decibel": calc(dimension(decibel)),
        "frequency": calc(dimension(frequency)),
        "flex": calc(dimension(flex)),
        "length": calc(zero(dimension(length))),
        "resolution": calc(dimension(resolution)),
        "semitones": calc(dimension(semitones)),
        "time": calc(dimension(time))
      };
    }
    function createGenericTypes(units) {
      return {
        ...tokenTypes,
        ...productionTypes,
        ...createDemensionTypes(units)
      };
    }
    exports.createDemensionTypes = createDemensionTypes;
    exports.createGenericTypes = createGenericTypes;
    exports.productionTypes = productionTypes;
    exports.tokenTypes = tokenTypes;
  }
});

// node_modules/css-tree/cjs/lexer/units.cjs
var require_units = __commonJS({
  "node_modules/css-tree/cjs/lexer/units.cjs"(exports) {
    "use strict";
    var length = [
      // absolute length units https://www.w3.org/TR/css-values-3/#lengths
      "cm",
      "mm",
      "q",
      "in",
      "pt",
      "pc",
      "px",
      // font-relative length units https://drafts.csswg.org/css-values-4/#font-relative-lengths
      "em",
      "rem",
      "ex",
      "rex",
      "cap",
      "rcap",
      "ch",
      "rch",
      "ic",
      "ric",
      "lh",
      "rlh",
      // viewport-percentage lengths https://drafts.csswg.org/css-values-4/#viewport-relative-lengths
      "vw",
      "svw",
      "lvw",
      "dvw",
      "vh",
      "svh",
      "lvh",
      "dvh",
      "vi",
      "svi",
      "lvi",
      "dvi",
      "vb",
      "svb",
      "lvb",
      "dvb",
      "vmin",
      "svmin",
      "lvmin",
      "dvmin",
      "vmax",
      "svmax",
      "lvmax",
      "dvmax",
      // container relative lengths https://drafts.csswg.org/css-contain-3/#container-lengths
      "cqw",
      "cqh",
      "cqi",
      "cqb",
      "cqmin",
      "cqmax"
    ];
    var angle = ["deg", "grad", "rad", "turn"];
    var time = ["s", "ms"];
    var frequency = ["hz", "khz"];
    var resolution = ["dpi", "dpcm", "dppx", "x"];
    var flex = ["fr"];
    var decibel = ["db"];
    var semitones = ["st"];
    exports.angle = angle;
    exports.decibel = decibel;
    exports.flex = flex;
    exports.frequency = frequency;
    exports.length = length;
    exports.resolution = resolution;
    exports.semitones = semitones;
    exports.time = time;
  }
});

// node_modules/css-tree/cjs/lexer/prepare-tokens.cjs
var require_prepare_tokens = __commonJS({
  "node_modules/css-tree/cjs/lexer/prepare-tokens.cjs"(exports, module2) {
    "use strict";
    var index = require_tokenizer();
    var astToTokens = {
      decorator(handlers) {
        const tokens = [];
        let curNode = null;
        return {
          ...handlers,
          node(node) {
            const tmp = curNode;
            curNode = node;
            handlers.node.call(this, node);
            curNode = tmp;
          },
          emit(value, type, auto) {
            tokens.push({
              type,
              value,
              node: auto ? null : curNode
            });
          },
          result() {
            return tokens;
          }
        };
      }
    };
    function stringToTokens(str) {
      const tokens = [];
      index.tokenize(
        str,
        (type, start, end) => tokens.push({
          type,
          value: str.slice(start, end),
          node: null
        })
      );
      return tokens;
    }
    function prepareTokens(value, syntax) {
      if (typeof value === "string") {
        return stringToTokens(value);
      }
      return syntax.generate(value, astToTokens);
    }
    module2.exports = prepareTokens;
  }
});

// node_modules/css-tree/cjs/definition-syntax/SyntaxError.cjs
var require_SyntaxError2 = __commonJS({
  "node_modules/css-tree/cjs/definition-syntax/SyntaxError.cjs"(exports) {
    "use strict";
    var createCustomError = require_create_custom_error();
    function SyntaxError2(message, input, offset) {
      return Object.assign(createCustomError.createCustomError("SyntaxError", message), {
        input,
        offset,
        rawMessage: message,
        message: message + "\n  " + input + "\n--" + new Array((offset || input.length) + 1).join("-") + "^"
      });
    }
    exports.SyntaxError = SyntaxError2;
  }
});

// node_modules/css-tree/cjs/definition-syntax/tokenizer.cjs
var require_tokenizer2 = __commonJS({
  "node_modules/css-tree/cjs/definition-syntax/tokenizer.cjs"(exports) {
    "use strict";
    var SyntaxError2 = require_SyntaxError2();
    var TAB = 9;
    var N = 10;
    var F = 12;
    var R = 13;
    var SPACE = 32;
    var Tokenizer = class {
      constructor(str) {
        this.str = str;
        this.pos = 0;
      }
      charCodeAt(pos) {
        return pos < this.str.length ? this.str.charCodeAt(pos) : 0;
      }
      charCode() {
        return this.charCodeAt(this.pos);
      }
      nextCharCode() {
        return this.charCodeAt(this.pos + 1);
      }
      nextNonWsCode(pos) {
        return this.charCodeAt(this.findWsEnd(pos));
      }
      findWsEnd(pos) {
        for (; pos < this.str.length; pos++) {
          const code = this.str.charCodeAt(pos);
          if (code !== R && code !== N && code !== F && code !== SPACE && code !== TAB) {
            break;
          }
        }
        return pos;
      }
      substringToPos(end) {
        return this.str.substring(this.pos, this.pos = end);
      }
      eat(code) {
        if (this.charCode() !== code) {
          this.error("Expect `" + String.fromCharCode(code) + "`");
        }
        this.pos++;
      }
      peek() {
        return this.pos < this.str.length ? this.str.charAt(this.pos++) : "";
      }
      error(message) {
        throw new SyntaxError2.SyntaxError(message, this.str, this.pos);
      }
    };
    exports.Tokenizer = Tokenizer;
  }
});

// node_modules/css-tree/cjs/definition-syntax/parse.cjs
var require_parse6 = __commonJS({
  "node_modules/css-tree/cjs/definition-syntax/parse.cjs"(exports) {
    "use strict";
    var tokenizer = require_tokenizer2();
    var TAB = 9;
    var N = 10;
    var F = 12;
    var R = 13;
    var SPACE = 32;
    var EXCLAMATIONMARK = 33;
    var NUMBERSIGN = 35;
    var AMPERSAND = 38;
    var APOSTROPHE = 39;
    var LEFTPARENTHESIS = 40;
    var RIGHTPARENTHESIS = 41;
    var ASTERISK = 42;
    var PLUSSIGN = 43;
    var COMMA = 44;
    var HYPERMINUS = 45;
    var LESSTHANSIGN = 60;
    var GREATERTHANSIGN = 62;
    var QUESTIONMARK = 63;
    var COMMERCIALAT = 64;
    var LEFTSQUAREBRACKET = 91;
    var RIGHTSQUAREBRACKET = 93;
    var LEFTCURLYBRACKET = 123;
    var VERTICALLINE = 124;
    var RIGHTCURLYBRACKET = 125;
    var INFINITY = 8734;
    var NAME_CHAR = new Uint8Array(128).map(
      (_, idx) => /[a-zA-Z0-9\-]/.test(String.fromCharCode(idx)) ? 1 : 0
    );
    var COMBINATOR_PRECEDENCE = {
      " ": 1,
      "&&": 2,
      "||": 3,
      "|": 4
    };
    function scanSpaces(tokenizer2) {
      return tokenizer2.substringToPos(
        tokenizer2.findWsEnd(tokenizer2.pos)
      );
    }
    function scanWord(tokenizer2) {
      let end = tokenizer2.pos;
      for (; end < tokenizer2.str.length; end++) {
        const code = tokenizer2.str.charCodeAt(end);
        if (code >= 128 || NAME_CHAR[code] === 0) {
          break;
        }
      }
      if (tokenizer2.pos === end) {
        tokenizer2.error("Expect a keyword");
      }
      return tokenizer2.substringToPos(end);
    }
    function scanNumber(tokenizer2) {
      let end = tokenizer2.pos;
      for (; end < tokenizer2.str.length; end++) {
        const code = tokenizer2.str.charCodeAt(end);
        if (code < 48 || code > 57) {
          break;
        }
      }
      if (tokenizer2.pos === end) {
        tokenizer2.error("Expect a number");
      }
      return tokenizer2.substringToPos(end);
    }
    function scanString(tokenizer2) {
      const end = tokenizer2.str.indexOf("'", tokenizer2.pos + 1);
      if (end === -1) {
        tokenizer2.pos = tokenizer2.str.length;
        tokenizer2.error("Expect an apostrophe");
      }
      return tokenizer2.substringToPos(end + 1);
    }
    function readMultiplierRange(tokenizer2) {
      let min = null;
      let max = null;
      tokenizer2.eat(LEFTCURLYBRACKET);
      min = scanNumber(tokenizer2);
      if (tokenizer2.charCode() === COMMA) {
        tokenizer2.pos++;
        if (tokenizer2.charCode() !== RIGHTCURLYBRACKET) {
          max = scanNumber(tokenizer2);
        }
      } else {
        max = min;
      }
      tokenizer2.eat(RIGHTCURLYBRACKET);
      return {
        min: Number(min),
        max: max ? Number(max) : 0
      };
    }
    function readMultiplier(tokenizer2) {
      let range = null;
      let comma = false;
      switch (tokenizer2.charCode()) {
        case ASTERISK:
          tokenizer2.pos++;
          range = {
            min: 0,
            max: 0
          };
          break;
        case PLUSSIGN:
          tokenizer2.pos++;
          range = {
            min: 1,
            max: 0
          };
          break;
        case QUESTIONMARK:
          tokenizer2.pos++;
          range = {
            min: 0,
            max: 1
          };
          break;
        case NUMBERSIGN:
          tokenizer2.pos++;
          comma = true;
          if (tokenizer2.charCode() === LEFTCURLYBRACKET) {
            range = readMultiplierRange(tokenizer2);
          } else if (tokenizer2.charCode() === QUESTIONMARK) {
            tokenizer2.pos++;
            range = {
              min: 0,
              max: 0
            };
          } else {
            range = {
              min: 1,
              max: 0
            };
          }
          break;
        case LEFTCURLYBRACKET:
          range = readMultiplierRange(tokenizer2);
          break;
        default:
          return null;
      }
      return {
        type: "Multiplier",
        comma,
        min: range.min,
        max: range.max,
        term: null
      };
    }
    function maybeMultiplied(tokenizer2, node) {
      const multiplier = readMultiplier(tokenizer2);
      if (multiplier !== null) {
        multiplier.term = node;
        if (tokenizer2.charCode() === NUMBERSIGN && tokenizer2.charCodeAt(tokenizer2.pos - 1) === PLUSSIGN) {
          return maybeMultiplied(tokenizer2, multiplier);
        }
        return multiplier;
      }
      return node;
    }
    function maybeToken(tokenizer2) {
      const ch = tokenizer2.peek();
      if (ch === "") {
        return null;
      }
      return {
        type: "Token",
        value: ch
      };
    }
    function readProperty(tokenizer2) {
      let name;
      tokenizer2.eat(LESSTHANSIGN);
      tokenizer2.eat(APOSTROPHE);
      name = scanWord(tokenizer2);
      tokenizer2.eat(APOSTROPHE);
      tokenizer2.eat(GREATERTHANSIGN);
      return maybeMultiplied(tokenizer2, {
        type: "Property",
        name
      });
    }
    function readTypeRange(tokenizer2) {
      let min = null;
      let max = null;
      let sign = 1;
      tokenizer2.eat(LEFTSQUAREBRACKET);
      if (tokenizer2.charCode() === HYPERMINUS) {
        tokenizer2.peek();
        sign = -1;
      }
      if (sign == -1 && tokenizer2.charCode() === INFINITY) {
        tokenizer2.peek();
      } else {
        min = sign * Number(scanNumber(tokenizer2));
        if (NAME_CHAR[tokenizer2.charCode()] !== 0) {
          min += scanWord(tokenizer2);
        }
      }
      scanSpaces(tokenizer2);
      tokenizer2.eat(COMMA);
      scanSpaces(tokenizer2);
      if (tokenizer2.charCode() === INFINITY) {
        tokenizer2.peek();
      } else {
        sign = 1;
        if (tokenizer2.charCode() === HYPERMINUS) {
          tokenizer2.peek();
          sign = -1;
        }
        max = sign * Number(scanNumber(tokenizer2));
        if (NAME_CHAR[tokenizer2.charCode()] !== 0) {
          max += scanWord(tokenizer2);
        }
      }
      tokenizer2.eat(RIGHTSQUAREBRACKET);
      return {
        type: "Range",
        min,
        max
      };
    }
    function readType(tokenizer2) {
      let name;
      let opts = null;
      tokenizer2.eat(LESSTHANSIGN);
      name = scanWord(tokenizer2);
      if (tokenizer2.charCode() === LEFTPARENTHESIS && tokenizer2.nextCharCode() === RIGHTPARENTHESIS) {
        tokenizer2.pos += 2;
        name += "()";
      }
      if (tokenizer2.charCodeAt(tokenizer2.findWsEnd(tokenizer2.pos)) === LEFTSQUAREBRACKET) {
        scanSpaces(tokenizer2);
        opts = readTypeRange(tokenizer2);
      }
      tokenizer2.eat(GREATERTHANSIGN);
      return maybeMultiplied(tokenizer2, {
        type: "Type",
        name,
        opts
      });
    }
    function readKeywordOrFunction(tokenizer2) {
      const name = scanWord(tokenizer2);
      if (tokenizer2.charCode() === LEFTPARENTHESIS) {
        tokenizer2.pos++;
        return {
          type: "Function",
          name
        };
      }
      return maybeMultiplied(tokenizer2, {
        type: "Keyword",
        name
      });
    }
    function regroupTerms(terms, combinators) {
      function createGroup(terms2, combinator2) {
        return {
          type: "Group",
          terms: terms2,
          combinator: combinator2,
          disallowEmpty: false,
          explicit: false
        };
      }
      let combinator;
      combinators = Object.keys(combinators).sort((a, b) => COMBINATOR_PRECEDENCE[a] - COMBINATOR_PRECEDENCE[b]);
      while (combinators.length > 0) {
        combinator = combinators.shift();
        let i = 0;
        let subgroupStart = 0;
        for (; i < terms.length; i++) {
          const term = terms[i];
          if (term.type === "Combinator") {
            if (term.value === combinator) {
              if (subgroupStart === -1) {
                subgroupStart = i - 1;
              }
              terms.splice(i, 1);
              i--;
            } else {
              if (subgroupStart !== -1 && i - subgroupStart > 1) {
                terms.splice(
                  subgroupStart,
                  i - subgroupStart,
                  createGroup(terms.slice(subgroupStart, i), combinator)
                );
                i = subgroupStart + 1;
              }
              subgroupStart = -1;
            }
          }
        }
        if (subgroupStart !== -1 && combinators.length) {
          terms.splice(
            subgroupStart,
            i - subgroupStart,
            createGroup(terms.slice(subgroupStart, i), combinator)
          );
        }
      }
      return combinator;
    }
    function readImplicitGroup(tokenizer2) {
      const terms = [];
      const combinators = {};
      let token;
      let prevToken = null;
      let prevTokenPos = tokenizer2.pos;
      while (token = peek(tokenizer2)) {
        if (token.type !== "Spaces") {
          if (token.type === "Combinator") {
            if (prevToken === null || prevToken.type === "Combinator") {
              tokenizer2.pos = prevTokenPos;
              tokenizer2.error("Unexpected combinator");
            }
            combinators[token.value] = true;
          } else if (prevToken !== null && prevToken.type !== "Combinator") {
            combinators[" "] = true;
            terms.push({
              type: "Combinator",
              value: " "
            });
          }
          terms.push(token);
          prevToken = token;
          prevTokenPos = tokenizer2.pos;
        }
      }
      if (prevToken !== null && prevToken.type === "Combinator") {
        tokenizer2.pos -= prevTokenPos;
        tokenizer2.error("Unexpected combinator");
      }
      return {
        type: "Group",
        terms,
        combinator: regroupTerms(terms, combinators) || " ",
        disallowEmpty: false,
        explicit: false
      };
    }
    function readGroup(tokenizer2) {
      let result;
      tokenizer2.eat(LEFTSQUAREBRACKET);
      result = readImplicitGroup(tokenizer2);
      tokenizer2.eat(RIGHTSQUAREBRACKET);
      result.explicit = true;
      if (tokenizer2.charCode() === EXCLAMATIONMARK) {
        tokenizer2.pos++;
        result.disallowEmpty = true;
      }
      return result;
    }
    function peek(tokenizer2) {
      let code = tokenizer2.charCode();
      if (code < 128 && NAME_CHAR[code] === 1) {
        return readKeywordOrFunction(tokenizer2);
      }
      switch (code) {
        case RIGHTSQUAREBRACKET:
          break;
        case LEFTSQUAREBRACKET:
          return maybeMultiplied(tokenizer2, readGroup(tokenizer2));
        case LESSTHANSIGN:
          return tokenizer2.nextCharCode() === APOSTROPHE ? readProperty(tokenizer2) : readType(tokenizer2);
        case VERTICALLINE:
          return {
            type: "Combinator",
            value: tokenizer2.substringToPos(
              tokenizer2.pos + (tokenizer2.nextCharCode() === VERTICALLINE ? 2 : 1)
            )
          };
        case AMPERSAND:
          tokenizer2.pos++;
          tokenizer2.eat(AMPERSAND);
          return {
            type: "Combinator",
            value: "&&"
          };
        case COMMA:
          tokenizer2.pos++;
          return {
            type: "Comma"
          };
        case APOSTROPHE:
          return maybeMultiplied(tokenizer2, {
            type: "String",
            value: scanString(tokenizer2)
          });
        case SPACE:
        case TAB:
        case N:
        case R:
        case F:
          return {
            type: "Spaces",
            value: scanSpaces(tokenizer2)
          };
        case COMMERCIALAT:
          code = tokenizer2.nextCharCode();
          if (code < 128 && NAME_CHAR[code] === 1) {
            tokenizer2.pos++;
            return {
              type: "AtKeyword",
              name: scanWord(tokenizer2)
            };
          }
          return maybeToken(tokenizer2);
        case ASTERISK:
        case PLUSSIGN:
        case QUESTIONMARK:
        case NUMBERSIGN:
        case EXCLAMATIONMARK:
          break;
        case LEFTCURLYBRACKET:
          code = tokenizer2.nextCharCode();
          if (code < 48 || code > 57) {
            return maybeToken(tokenizer2);
          }
          break;
        default:
          return maybeToken(tokenizer2);
      }
    }
    function parse(source) {
      const tokenizer$1 = new tokenizer.Tokenizer(source);
      const result = readImplicitGroup(tokenizer$1);
      if (tokenizer$1.pos !== source.length) {
        tokenizer$1.error("Unexpected input");
      }
      if (result.terms.length === 1 && result.terms[0].type === "Group") {
        return result.terms[0];
      }
      return result;
    }
    exports.parse = parse;
  }
});

// node_modules/css-tree/cjs/lexer/match-graph.cjs
var require_match_graph = __commonJS({
  "node_modules/css-tree/cjs/lexer/match-graph.cjs"(exports) {
    "use strict";
    var parse = require_parse6();
    var MATCH = { type: "Match" };
    var MISMATCH = { type: "Mismatch" };
    var DISALLOW_EMPTY = { type: "DisallowEmpty" };
    var LEFTPARENTHESIS = 40;
    var RIGHTPARENTHESIS = 41;
    function createCondition(match, thenBranch, elseBranch) {
      if (thenBranch === MATCH && elseBranch === MISMATCH) {
        return match;
      }
      if (match === MATCH && thenBranch === MATCH && elseBranch === MATCH) {
        return match;
      }
      if (match.type === "If" && match.else === MISMATCH && thenBranch === MATCH) {
        thenBranch = match.then;
        match = match.match;
      }
      return {
        type: "If",
        match,
        then: thenBranch,
        else: elseBranch
      };
    }
    function isFunctionType(name) {
      return name.length > 2 && name.charCodeAt(name.length - 2) === LEFTPARENTHESIS && name.charCodeAt(name.length - 1) === RIGHTPARENTHESIS;
    }
    function isEnumCapatible(term) {
      return term.type === "Keyword" || term.type === "AtKeyword" || term.type === "Function" || term.type === "Type" && isFunctionType(term.name);
    }
    function buildGroupMatchGraph(combinator, terms, atLeastOneTermMatched) {
      switch (combinator) {
        case " ": {
          let result = MATCH;
          for (let i = terms.length - 1; i >= 0; i--) {
            const term = terms[i];
            result = createCondition(
              term,
              result,
              MISMATCH
            );
          }
          return result;
        }
        case "|": {
          let result = MISMATCH;
          let map = null;
          for (let i = terms.length - 1; i >= 0; i--) {
            let term = terms[i];
            if (isEnumCapatible(term)) {
              if (map === null && i > 0 && isEnumCapatible(terms[i - 1])) {
                map = /* @__PURE__ */ Object.create(null);
                result = createCondition(
                  {
                    type: "Enum",
                    map
                  },
                  MATCH,
                  result
                );
              }
              if (map !== null) {
                const key = (isFunctionType(term.name) ? term.name.slice(0, -1) : term.name).toLowerCase();
                if (key in map === false) {
                  map[key] = term;
                  continue;
                }
              }
            }
            map = null;
            result = createCondition(
              term,
              MATCH,
              result
            );
          }
          return result;
        }
        case "&&": {
          if (terms.length > 5) {
            return {
              type: "MatchOnce",
              terms,
              all: true
            };
          }
          let result = MISMATCH;
          for (let i = terms.length - 1; i >= 0; i--) {
            const term = terms[i];
            let thenClause;
            if (terms.length > 1) {
              thenClause = buildGroupMatchGraph(
                combinator,
                terms.filter(function(newGroupTerm) {
                  return newGroupTerm !== term;
                }),
                false
              );
            } else {
              thenClause = MATCH;
            }
            result = createCondition(
              term,
              thenClause,
              result
            );
          }
          return result;
        }
        case "||": {
          if (terms.length > 5) {
            return {
              type: "MatchOnce",
              terms,
              all: false
            };
          }
          let result = atLeastOneTermMatched ? MATCH : MISMATCH;
          for (let i = terms.length - 1; i >= 0; i--) {
            const term = terms[i];
            let thenClause;
            if (terms.length > 1) {
              thenClause = buildGroupMatchGraph(
                combinator,
                terms.filter(function(newGroupTerm) {
                  return newGroupTerm !== term;
                }),
                true
              );
            } else {
              thenClause = MATCH;
            }
            result = createCondition(
              term,
              thenClause,
              result
            );
          }
          return result;
        }
      }
    }
    function buildMultiplierMatchGraph(node) {
      let result = MATCH;
      let matchTerm = buildMatchGraphInternal(node.term);
      if (node.max === 0) {
        matchTerm = createCondition(
          matchTerm,
          DISALLOW_EMPTY,
          MISMATCH
        );
        result = createCondition(
          matchTerm,
          null,
          // will be a loop
          MISMATCH
        );
        result.then = createCondition(
          MATCH,
          MATCH,
          result
          // make a loop
        );
        if (node.comma) {
          result.then.else = createCondition(
            { type: "Comma", syntax: node },
            result,
            MISMATCH
          );
        }
      } else {
        for (let i = node.min || 1; i <= node.max; i++) {
          if (node.comma && result !== MATCH) {
            result = createCondition(
              { type: "Comma", syntax: node },
              result,
              MISMATCH
            );
          }
          result = createCondition(
            matchTerm,
            createCondition(
              MATCH,
              MATCH,
              result
            ),
            MISMATCH
          );
        }
      }
      if (node.min === 0) {
        result = createCondition(
          MATCH,
          MATCH,
          result
        );
      } else {
        for (let i = 0; i < node.min - 1; i++) {
          if (node.comma && result !== MATCH) {
            result = createCondition(
              { type: "Comma", syntax: node },
              result,
              MISMATCH
            );
          }
          result = createCondition(
            matchTerm,
            result,
            MISMATCH
          );
        }
      }
      return result;
    }
    function buildMatchGraphInternal(node) {
      if (typeof node === "function") {
        return {
          type: "Generic",
          fn: node
        };
      }
      switch (node.type) {
        case "Group": {
          let result = buildGroupMatchGraph(
            node.combinator,
            node.terms.map(buildMatchGraphInternal),
            false
          );
          if (node.disallowEmpty) {
            result = createCondition(
              result,
              DISALLOW_EMPTY,
              MISMATCH
            );
          }
          return result;
        }
        case "Multiplier":
          return buildMultiplierMatchGraph(node);
        case "Type":
        case "Property":
          return {
            type: node.type,
            name: node.name,
            syntax: node
          };
        case "Keyword":
          return {
            type: node.type,
            name: node.name.toLowerCase(),
            syntax: node
          };
        case "AtKeyword":
          return {
            type: node.type,
            name: "@" + node.name.toLowerCase(),
            syntax: node
          };
        case "Function":
          return {
            type: node.type,
            name: node.name.toLowerCase() + "(",
            syntax: node
          };
        case "String":
          if (node.value.length === 3) {
            return {
              type: "Token",
              value: node.value.charAt(1),
              syntax: node
            };
          }
          return {
            type: node.type,
            value: node.value.substr(1, node.value.length - 2).replace(/\\'/g, "'"),
            syntax: node
          };
        case "Token":
          return {
            type: node.type,
            value: node.value,
            syntax: node
          };
        case "Comma":
          return {
            type: node.type,
            syntax: node
          };
        default:
          throw new Error("Unknown node type:", node.type);
      }
    }
    function buildMatchGraph(syntaxTree, ref) {
      if (typeof syntaxTree === "string") {
        syntaxTree = parse.parse(syntaxTree);
      }
      return {
        type: "MatchGraph",
        match: buildMatchGraphInternal(syntaxTree),
        syntax: ref || null,
        source: syntaxTree
      };
    }
    exports.DISALLOW_EMPTY = DISALLOW_EMPTY;
    exports.MATCH = MATCH;
    exports.MISMATCH = MISMATCH;
    exports.buildMatchGraph = buildMatchGraph;
  }
});

// node_modules/css-tree/cjs/lexer/match.cjs
var require_match = __commonJS({
  "node_modules/css-tree/cjs/lexer/match.cjs"(exports) {
    "use strict";
    var matchGraph = require_match_graph();
    var types = require_types2();
    var { hasOwnProperty: hasOwnProperty2 } = Object.prototype;
    var STUB = 0;
    var TOKEN = 1;
    var OPEN_SYNTAX = 2;
    var CLOSE_SYNTAX = 3;
    var EXIT_REASON_MATCH = "Match";
    var EXIT_REASON_MISMATCH = "Mismatch";
    var EXIT_REASON_ITERATION_LIMIT = "Maximum iteration number exceeded (please fill an issue on https://github.com/csstree/csstree/issues)";
    var ITERATION_LIMIT = 15e3;
    function reverseList(list) {
      let prev = null;
      let next = null;
      let item = list;
      while (item !== null) {
        next = item.prev;
        item.prev = prev;
        prev = item;
        item = next;
      }
      return prev;
    }
    function areStringsEqualCaseInsensitive(testStr, referenceStr) {
      if (testStr.length !== referenceStr.length) {
        return false;
      }
      for (let i = 0; i < testStr.length; i++) {
        const referenceCode = referenceStr.charCodeAt(i);
        let testCode = testStr.charCodeAt(i);
        if (testCode >= 65 && testCode <= 90) {
          testCode = testCode | 32;
        }
        if (testCode !== referenceCode) {
          return false;
        }
      }
      return true;
    }
    function isContextEdgeDelim(token) {
      if (token.type !== types.Delim) {
        return false;
      }
      return token.value !== "?";
    }
    function isCommaContextStart(token) {
      if (token === null) {
        return true;
      }
      return token.type === types.Comma || token.type === types.Function || token.type === types.LeftParenthesis || token.type === types.LeftSquareBracket || token.type === types.LeftCurlyBracket || isContextEdgeDelim(token);
    }
    function isCommaContextEnd(token) {
      if (token === null) {
        return true;
      }
      return token.type === types.RightParenthesis || token.type === types.RightSquareBracket || token.type === types.RightCurlyBracket || token.type === types.Delim && token.value === "/";
    }
    function internalMatch(tokens, state, syntaxes) {
      function moveToNextToken() {
        do {
          tokenIndex++;
          token = tokenIndex < tokens.length ? tokens[tokenIndex] : null;
        } while (token !== null && (token.type === types.WhiteSpace || token.type === types.Comment));
      }
      function getNextToken(offset) {
        const nextIndex = tokenIndex + offset;
        return nextIndex < tokens.length ? tokens[nextIndex] : null;
      }
      function stateSnapshotFromSyntax(nextState, prev) {
        return {
          nextState,
          matchStack,
          syntaxStack,
          thenStack,
          tokenIndex,
          prev
        };
      }
      function pushThenStack(nextState) {
        thenStack = {
          nextState,
          matchStack,
          syntaxStack,
          prev: thenStack
        };
      }
      function pushElseStack(nextState) {
        elseStack = stateSnapshotFromSyntax(nextState, elseStack);
      }
      function addTokenToMatch() {
        matchStack = {
          type: TOKEN,
          syntax: state.syntax,
          token,
          prev: matchStack
        };
        moveToNextToken();
        syntaxStash = null;
        if (tokenIndex > longestMatch) {
          longestMatch = tokenIndex;
        }
      }
      function openSyntax() {
        syntaxStack = {
          syntax: state.syntax,
          opts: state.syntax.opts || syntaxStack !== null && syntaxStack.opts || null,
          prev: syntaxStack
        };
        matchStack = {
          type: OPEN_SYNTAX,
          syntax: state.syntax,
          token: matchStack.token,
          prev: matchStack
        };
      }
      function closeSyntax() {
        if (matchStack.type === OPEN_SYNTAX) {
          matchStack = matchStack.prev;
        } else {
          matchStack = {
            type: CLOSE_SYNTAX,
            syntax: syntaxStack.syntax,
            token: matchStack.token,
            prev: matchStack
          };
        }
        syntaxStack = syntaxStack.prev;
      }
      let syntaxStack = null;
      let thenStack = null;
      let elseStack = null;
      let syntaxStash = null;
      let iterationCount = 0;
      let exitReason = null;
      let token = null;
      let tokenIndex = -1;
      let longestMatch = 0;
      let matchStack = {
        type: STUB,
        syntax: null,
        token: null,
        prev: null
      };
      moveToNextToken();
      while (exitReason === null && ++iterationCount < ITERATION_LIMIT) {
        switch (state.type) {
          case "Match":
            if (thenStack === null) {
              if (token !== null) {
                if (tokenIndex !== tokens.length - 1 || token.value !== "\\0" && token.value !== "\\9") {
                  state = matchGraph.MISMATCH;
                  break;
                }
              }
              exitReason = EXIT_REASON_MATCH;
              break;
            }
            state = thenStack.nextState;
            if (state === matchGraph.DISALLOW_EMPTY) {
              if (thenStack.matchStack === matchStack) {
                state = matchGraph.MISMATCH;
                break;
              } else {
                state = matchGraph.MATCH;
              }
            }
            while (thenStack.syntaxStack !== syntaxStack) {
              closeSyntax();
            }
            thenStack = thenStack.prev;
            break;
          case "Mismatch":
            if (syntaxStash !== null && syntaxStash !== false) {
              if (elseStack === null || tokenIndex > elseStack.tokenIndex) {
                elseStack = syntaxStash;
                syntaxStash = false;
              }
            } else if (elseStack === null) {
              exitReason = EXIT_REASON_MISMATCH;
              break;
            }
            state = elseStack.nextState;
            thenStack = elseStack.thenStack;
            syntaxStack = elseStack.syntaxStack;
            matchStack = elseStack.matchStack;
            tokenIndex = elseStack.tokenIndex;
            token = tokenIndex < tokens.length ? tokens[tokenIndex] : null;
            elseStack = elseStack.prev;
            break;
          case "MatchGraph":
            state = state.match;
            break;
          case "If":
            if (state.else !== matchGraph.MISMATCH) {
              pushElseStack(state.else);
            }
            if (state.then !== matchGraph.MATCH) {
              pushThenStack(state.then);
            }
            state = state.match;
            break;
          case "MatchOnce":
            state = {
              type: "MatchOnceBuffer",
              syntax: state,
              index: 0,
              mask: 0
            };
            break;
          case "MatchOnceBuffer": {
            const terms = state.syntax.terms;
            if (state.index === terms.length) {
              if (state.mask === 0 || state.syntax.all) {
                state = matchGraph.MISMATCH;
                break;
              }
              state = matchGraph.MATCH;
              break;
            }
            if (state.mask === (1 << terms.length) - 1) {
              state = matchGraph.MATCH;
              break;
            }
            for (; state.index < terms.length; state.index++) {
              const matchFlag = 1 << state.index;
              if ((state.mask & matchFlag) === 0) {
                pushElseStack(state);
                pushThenStack({
                  type: "AddMatchOnce",
                  syntax: state.syntax,
                  mask: state.mask | matchFlag
                });
                state = terms[state.index++];
                break;
              }
            }
            break;
          }
          case "AddMatchOnce":
            state = {
              type: "MatchOnceBuffer",
              syntax: state.syntax,
              index: 0,
              mask: state.mask
            };
            break;
          case "Enum":
            if (token !== null) {
              let name = token.value.toLowerCase();
              if (name.indexOf("\\") !== -1) {
                name = name.replace(/\\[09].*$/, "");
              }
              if (hasOwnProperty2.call(state.map, name)) {
                state = state.map[name];
                break;
              }
            }
            state = matchGraph.MISMATCH;
            break;
          case "Generic": {
            const opts = syntaxStack !== null ? syntaxStack.opts : null;
            const lastTokenIndex2 = tokenIndex + Math.floor(state.fn(token, getNextToken, opts));
            if (!isNaN(lastTokenIndex2) && lastTokenIndex2 > tokenIndex) {
              while (tokenIndex < lastTokenIndex2) {
                addTokenToMatch();
              }
              state = matchGraph.MATCH;
            } else {
              state = matchGraph.MISMATCH;
            }
            break;
          }
          case "Type":
          case "Property": {
            const syntaxDict = state.type === "Type" ? "types" : "properties";
            const dictSyntax = hasOwnProperty2.call(syntaxes, syntaxDict) ? syntaxes[syntaxDict][state.name] : null;
            if (!dictSyntax || !dictSyntax.match) {
              throw new Error(
                "Bad syntax reference: " + (state.type === "Type" ? "<" + state.name + ">" : "<'" + state.name + "'>")
              );
            }
            if (syntaxStash !== false && token !== null && state.type === "Type") {
              const lowPriorityMatching = (
                // https://drafts.csswg.org/css-values-4/#custom-idents
                // When parsing positionally-ambiguous keywords in a property value, a <custom-ident> production
                // can only claim the keyword if no other unfulfilled production can claim it.
                state.name === "custom-ident" && token.type === types.Ident || // https://drafts.csswg.org/css-values-4/#lengths
                // ... if a `0` could be parsed as either a <number> or a <length> in a property (such as line-height),
                // it must parse as a <number>
                state.name === "length" && token.value === "0"
              );
              if (lowPriorityMatching) {
                if (syntaxStash === null) {
                  syntaxStash = stateSnapshotFromSyntax(state, elseStack);
                }
                state = matchGraph.MISMATCH;
                break;
              }
            }
            openSyntax();
            state = dictSyntax.match;
            break;
          }
          case "Keyword": {
            const name = state.name;
            if (token !== null) {
              let keywordName = token.value;
              if (keywordName.indexOf("\\") !== -1) {
                keywordName = keywordName.replace(/\\[09].*$/, "");
              }
              if (areStringsEqualCaseInsensitive(keywordName, name)) {
                addTokenToMatch();
                state = matchGraph.MATCH;
                break;
              }
            }
            state = matchGraph.MISMATCH;
            break;
          }
          case "AtKeyword":
          case "Function":
            if (token !== null && areStringsEqualCaseInsensitive(token.value, state.name)) {
              addTokenToMatch();
              state = matchGraph.MATCH;
              break;
            }
            state = matchGraph.MISMATCH;
            break;
          case "Token":
            if (token !== null && token.value === state.value) {
              addTokenToMatch();
              state = matchGraph.MATCH;
              break;
            }
            state = matchGraph.MISMATCH;
            break;
          case "Comma":
            if (token !== null && token.type === types.Comma) {
              if (isCommaContextStart(matchStack.token)) {
                state = matchGraph.MISMATCH;
              } else {
                addTokenToMatch();
                state = isCommaContextEnd(token) ? matchGraph.MISMATCH : matchGraph.MATCH;
              }
            } else {
              state = isCommaContextStart(matchStack.token) || isCommaContextEnd(token) ? matchGraph.MATCH : matchGraph.MISMATCH;
            }
            break;
          case "String":
            let string = "";
            let lastTokenIndex = tokenIndex;
            for (; lastTokenIndex < tokens.length && string.length < state.value.length; lastTokenIndex++) {
              string += tokens[lastTokenIndex].value;
            }
            if (areStringsEqualCaseInsensitive(string, state.value)) {
              while (tokenIndex < lastTokenIndex) {
                addTokenToMatch();
              }
              state = matchGraph.MATCH;
            } else {
              state = matchGraph.MISMATCH;
            }
            break;
          default:
            throw new Error("Unknown node type: " + state.type);
        }
      }
      switch (exitReason) {
        case null:
          console.warn("[csstree-match] BREAK after " + ITERATION_LIMIT + " iterations");
          exitReason = EXIT_REASON_ITERATION_LIMIT;
          matchStack = null;
          break;
        case EXIT_REASON_MATCH:
          while (syntaxStack !== null) {
            closeSyntax();
          }
          break;
        default:
          matchStack = null;
      }
      return {
        tokens,
        reason: exitReason,
        iterations: iterationCount,
        match: matchStack,
        longestMatch
      };
    }
    function matchAsList(tokens, matchGraph2, syntaxes) {
      const matchResult = internalMatch(tokens, matchGraph2, syntaxes || {});
      if (matchResult.match !== null) {
        let item = reverseList(matchResult.match).prev;
        matchResult.match = [];
        while (item !== null) {
          switch (item.type) {
            case OPEN_SYNTAX:
            case CLOSE_SYNTAX:
              matchResult.match.push({
                type: item.type,
                syntax: item.syntax
              });
              break;
            default:
              matchResult.match.push({
                token: item.token.value,
                node: item.token.node
              });
              break;
          }
          item = item.prev;
        }
      }
      return matchResult;
    }
    function matchAsTree(tokens, matchGraph2, syntaxes) {
      const matchResult = internalMatch(tokens, matchGraph2, syntaxes || {});
      if (matchResult.match === null) {
        return matchResult;
      }
      let item = matchResult.match;
      let host = matchResult.match = {
        syntax: matchGraph2.syntax || null,
        match: []
      };
      const hostStack = [host];
      item = reverseList(item).prev;
      while (item !== null) {
        switch (item.type) {
          case OPEN_SYNTAX:
            host.match.push(host = {
              syntax: item.syntax,
              match: []
            });
            hostStack.push(host);
            break;
          case CLOSE_SYNTAX:
            hostStack.pop();
            host = hostStack[hostStack.length - 1];
            break;
          default:
            host.match.push({
              syntax: item.syntax || null,
              token: item.token.value,
              node: item.token.node
            });
        }
        item = item.prev;
      }
      return matchResult;
    }
    exports.matchAsList = matchAsList;
    exports.matchAsTree = matchAsTree;
  }
});

// node_modules/css-tree/cjs/lexer/trace.cjs
var require_trace = __commonJS({
  "node_modules/css-tree/cjs/lexer/trace.cjs"(exports) {
    "use strict";
    function getTrace(node) {
      function shouldPutToTrace(syntax) {
        if (syntax === null) {
          return false;
        }
        return syntax.type === "Type" || syntax.type === "Property" || syntax.type === "Keyword";
      }
      function hasMatch(matchNode) {
        if (Array.isArray(matchNode.match)) {
          for (let i = 0; i < matchNode.match.length; i++) {
            if (hasMatch(matchNode.match[i])) {
              if (shouldPutToTrace(matchNode.syntax)) {
                result.unshift(matchNode.syntax);
              }
              return true;
            }
          }
        } else if (matchNode.node === node) {
          result = shouldPutToTrace(matchNode.syntax) ? [matchNode.syntax] : [];
          return true;
        }
        return false;
      }
      let result = null;
      if (this.matched !== null) {
        hasMatch(this.matched);
      }
      return result;
    }
    function isType(node, type) {
      return testNode(this, node, (match) => match.type === "Type" && match.name === type);
    }
    function isProperty(node, property) {
      return testNode(this, node, (match) => match.type === "Property" && match.name === property);
    }
    function isKeyword(node) {
      return testNode(this, node, (match) => match.type === "Keyword");
    }
    function testNode(match, node, fn) {
      const trace = getTrace.call(match, node);
      if (trace === null) {
        return false;
      }
      return trace.some(fn);
    }
    exports.getTrace = getTrace;
    exports.isKeyword = isKeyword;
    exports.isProperty = isProperty;
    exports.isType = isType;
  }
});

// node_modules/css-tree/cjs/lexer/search.cjs
var require_search = __commonJS({
  "node_modules/css-tree/cjs/lexer/search.cjs"(exports) {
    "use strict";
    var List = require_List();
    function getFirstMatchNode(matchNode) {
      if ("node" in matchNode) {
        return matchNode.node;
      }
      return getFirstMatchNode(matchNode.match[0]);
    }
    function getLastMatchNode(matchNode) {
      if ("node" in matchNode) {
        return matchNode.node;
      }
      return getLastMatchNode(matchNode.match[matchNode.match.length - 1]);
    }
    function matchFragments(lexer, ast, match, type, name) {
      function findFragments(matchNode) {
        if (matchNode.syntax !== null && matchNode.syntax.type === type && matchNode.syntax.name === name) {
          const start = getFirstMatchNode(matchNode);
          const end = getLastMatchNode(matchNode);
          lexer.syntax.walk(ast, function(node, item, list) {
            if (node === start) {
              const nodes = new List.List();
              do {
                nodes.appendData(item.data);
                if (item.data === end) {
                  break;
                }
                item = item.next;
              } while (item !== null);
              fragments.push({
                parent: list,
                nodes
              });
            }
          });
        }
        if (Array.isArray(matchNode.match)) {
          matchNode.match.forEach(findFragments);
        }
      }
      const fragments = [];
      if (match.matched !== null) {
        findFragments(match.matched);
      }
      return fragments;
    }
    exports.matchFragments = matchFragments;
  }
});

// node_modules/css-tree/cjs/lexer/structure.cjs
var require_structure = __commonJS({
  "node_modules/css-tree/cjs/lexer/structure.cjs"(exports) {
    "use strict";
    var List = require_List();
    var { hasOwnProperty: hasOwnProperty2 } = Object.prototype;
    function isValidNumber(value) {
      return typeof value === "number" && isFinite(value) && Math.floor(value) === value && value >= 0;
    }
    function isValidLocation(loc) {
      return Boolean(loc) && isValidNumber(loc.offset) && isValidNumber(loc.line) && isValidNumber(loc.column);
    }
    function createNodeStructureChecker(type, fields) {
      return function checkNode(node, warn) {
        if (!node || node.constructor !== Object) {
          return warn(node, "Type of node should be an Object");
        }
        for (let key in node) {
          let valid = true;
          if (hasOwnProperty2.call(node, key) === false) {
            continue;
          }
          if (key === "type") {
            if (node.type !== type) {
              warn(node, "Wrong node type `" + node.type + "`, expected `" + type + "`");
            }
          } else if (key === "loc") {
            if (node.loc === null) {
              continue;
            } else if (node.loc && node.loc.constructor === Object) {
              if (typeof node.loc.source !== "string") {
                key += ".source";
              } else if (!isValidLocation(node.loc.start)) {
                key += ".start";
              } else if (!isValidLocation(node.loc.end)) {
                key += ".end";
              } else {
                continue;
              }
            }
            valid = false;
          } else if (fields.hasOwnProperty(key)) {
            valid = false;
            for (let i = 0; !valid && i < fields[key].length; i++) {
              const fieldType = fields[key][i];
              switch (fieldType) {
                case String:
                  valid = typeof node[key] === "string";
                  break;
                case Boolean:
                  valid = typeof node[key] === "boolean";
                  break;
                case null:
                  valid = node[key] === null;
                  break;
                default:
                  if (typeof fieldType === "string") {
                    valid = node[key] && node[key].type === fieldType;
                  } else if (Array.isArray(fieldType)) {
                    valid = node[key] instanceof List.List;
                  }
              }
            }
          } else {
            warn(node, "Unknown field `" + key + "` for " + type + " node type");
          }
          if (!valid) {
            warn(node, "Bad value for `" + type + "." + key + "`");
          }
        }
        for (const key in fields) {
          if (hasOwnProperty2.call(fields, key) && hasOwnProperty2.call(node, key) === false) {
            warn(node, "Field `" + type + "." + key + "` is missed");
          }
        }
      };
    }
    function processStructure(name, nodeType) {
      const structure = nodeType.structure;
      const fields = {
        type: String,
        loc: true
      };
      const docs = {
        type: '"' + name + '"'
      };
      for (const key in structure) {
        if (hasOwnProperty2.call(structure, key) === false) {
          continue;
        }
        const docsTypes = [];
        const fieldTypes = fields[key] = Array.isArray(structure[key]) ? structure[key].slice() : [structure[key]];
        for (let i = 0; i < fieldTypes.length; i++) {
          const fieldType = fieldTypes[i];
          if (fieldType === String || fieldType === Boolean) {
            docsTypes.push(fieldType.name);
          } else if (fieldType === null) {
            docsTypes.push("null");
          } else if (typeof fieldType === "string") {
            docsTypes.push("<" + fieldType + ">");
          } else if (Array.isArray(fieldType)) {
            docsTypes.push("List");
          } else {
            throw new Error("Wrong value `" + fieldType + "` in `" + name + "." + key + "` structure definition");
          }
        }
        docs[key] = docsTypes.join(" | ");
      }
      return {
        docs,
        check: createNodeStructureChecker(name, fields)
      };
    }
    function getStructureFromConfig(config) {
      const structure = {};
      if (config.node) {
        for (const name in config.node) {
          if (hasOwnProperty2.call(config.node, name)) {
            const nodeType = config.node[name];
            if (nodeType.structure) {
              structure[name] = processStructure(name, nodeType);
            } else {
              throw new Error("Missed `structure` field in `" + name + "` node type definition");
            }
          }
        }
      }
      return structure;
    }
    exports.getStructureFromConfig = getStructureFromConfig;
  }
});

// node_modules/css-tree/cjs/definition-syntax/walk.cjs
var require_walk2 = __commonJS({
  "node_modules/css-tree/cjs/definition-syntax/walk.cjs"(exports) {
    "use strict";
    var noop = function() {
    };
    function ensureFunction(value) {
      return typeof value === "function" ? value : noop;
    }
    function walk(node, options, context) {
      function walk2(node2) {
        enter.call(context, node2);
        switch (node2.type) {
          case "Group":
            node2.terms.forEach(walk2);
            break;
          case "Multiplier":
            walk2(node2.term);
            break;
          case "Type":
          case "Property":
          case "Keyword":
          case "AtKeyword":
          case "Function":
          case "String":
          case "Token":
          case "Comma":
            break;
          default:
            throw new Error("Unknown type: " + node2.type);
        }
        leave.call(context, node2);
      }
      let enter = noop;
      let leave = noop;
      if (typeof options === "function") {
        enter = options;
      } else if (options) {
        enter = ensureFunction(options.enter);
        leave = ensureFunction(options.leave);
      }
      if (enter === noop && leave === noop) {
        throw new Error("Neither `enter` nor `leave` walker handler is set or both aren't a function");
      }
      walk2(node);
    }
    exports.walk = walk;
  }
});

// node_modules/css-tree/cjs/lexer/Lexer.cjs
var require_Lexer = __commonJS({
  "node_modules/css-tree/cjs/lexer/Lexer.cjs"(exports) {
    "use strict";
    var error = require_error2();
    var names = require_names3();
    var genericConst = require_generic_const();
    var generic = require_generic();
    var units = require_units();
    var prepareTokens = require_prepare_tokens();
    var matchGraph = require_match_graph();
    var match = require_match();
    var trace = require_trace();
    var search = require_search();
    var structure = require_structure();
    var parse = require_parse6();
    var generate = require_generate();
    var walk = require_walk2();
    var cssWideKeywordsSyntax = matchGraph.buildMatchGraph(genericConst.cssWideKeywords.join(" | "));
    function dumpMapSyntax(map, compact, syntaxAsAst) {
      const result = {};
      for (const name in map) {
        if (map[name].syntax) {
          result[name] = syntaxAsAst ? map[name].syntax : generate.generate(map[name].syntax, { compact });
        }
      }
      return result;
    }
    function dumpAtruleMapSyntax(map, compact, syntaxAsAst) {
      const result = {};
      for (const [name, atrule] of Object.entries(map)) {
        result[name] = {
          prelude: atrule.prelude && (syntaxAsAst ? atrule.prelude.syntax : generate.generate(atrule.prelude.syntax, { compact })),
          descriptors: atrule.descriptors && dumpMapSyntax(atrule.descriptors, compact, syntaxAsAst)
        };
      }
      return result;
    }
    function valueHasVar(tokens) {
      for (let i = 0; i < tokens.length; i++) {
        if (tokens[i].value.toLowerCase() === "var(") {
          return true;
        }
      }
      return false;
    }
    function buildMatchResult(matched, error2, iterations) {
      return {
        matched,
        iterations,
        error: error2,
        ...trace
      };
    }
    function matchSyntax(lexer, syntax, value, useCssWideKeywords) {
      const tokens = prepareTokens(value, lexer.syntax);
      let result;
      if (valueHasVar(tokens)) {
        return buildMatchResult(null, new Error("Matching for a tree with var() is not supported"));
      }
      if (useCssWideKeywords) {
        result = match.matchAsTree(tokens, lexer.cssWideKeywordsSyntax, lexer);
      }
      if (!useCssWideKeywords || !result.match) {
        result = match.matchAsTree(tokens, syntax.match, lexer);
        if (!result.match) {
          return buildMatchResult(
            null,
            new error.SyntaxMatchError(result.reason, syntax.syntax, value, result),
            result.iterations
          );
        }
      }
      return buildMatchResult(result.match, null, result.iterations);
    }
    var Lexer = class {
      constructor(config, syntax, structure$1) {
        this.cssWideKeywordsSyntax = cssWideKeywordsSyntax;
        this.syntax = syntax;
        this.generic = false;
        this.units = { ...units };
        this.atrules = /* @__PURE__ */ Object.create(null);
        this.properties = /* @__PURE__ */ Object.create(null);
        this.types = /* @__PURE__ */ Object.create(null);
        this.structure = structure$1 || structure.getStructureFromConfig(config);
        if (config) {
          if (config.units) {
            for (const group of Object.keys(units)) {
              if (Array.isArray(config.units[group])) {
                this.units[group] = config.units[group];
              }
            }
          }
          if (config.types) {
            for (const name in config.types) {
              this.addType_(name, config.types[name]);
            }
          }
          if (config.generic) {
            this.generic = true;
            for (const [name, value] of Object.entries(generic.createGenericTypes(this.units))) {
              this.addType_(name, value);
            }
          }
          if (config.atrules) {
            for (const name in config.atrules) {
              this.addAtrule_(name, config.atrules[name]);
            }
          }
          if (config.properties) {
            for (const name in config.properties) {
              this.addProperty_(name, config.properties[name]);
            }
          }
        }
      }
      checkStructure(ast) {
        function collectWarning(node, message) {
          warns.push({ node, message });
        }
        const structure2 = this.structure;
        const warns = [];
        this.syntax.walk(ast, function(node) {
          if (structure2.hasOwnProperty(node.type)) {
            structure2[node.type].check(node, collectWarning);
          } else {
            collectWarning(node, "Unknown node type `" + node.type + "`");
          }
        });
        return warns.length ? warns : false;
      }
      createDescriptor(syntax, type, name, parent = null) {
        const ref = {
          type,
          name
        };
        const descriptor = {
          type,
          name,
          parent,
          serializable: typeof syntax === "string" || syntax && typeof syntax.type === "string",
          syntax: null,
          match: null
        };
        if (typeof syntax === "function") {
          descriptor.match = matchGraph.buildMatchGraph(syntax, ref);
        } else {
          if (typeof syntax === "string") {
            Object.defineProperty(descriptor, "syntax", {
              get() {
                Object.defineProperty(descriptor, "syntax", {
                  value: parse.parse(syntax)
                });
                return descriptor.syntax;
              }
            });
          } else {
            descriptor.syntax = syntax;
          }
          Object.defineProperty(descriptor, "match", {
            get() {
              Object.defineProperty(descriptor, "match", {
                value: matchGraph.buildMatchGraph(descriptor.syntax, ref)
              });
              return descriptor.match;
            }
          });
        }
        return descriptor;
      }
      addAtrule_(name, syntax) {
        if (!syntax) {
          return;
        }
        this.atrules[name] = {
          type: "Atrule",
          name,
          prelude: syntax.prelude ? this.createDescriptor(syntax.prelude, "AtrulePrelude", name) : null,
          descriptors: syntax.descriptors ? Object.keys(syntax.descriptors).reduce(
            (map, descName) => {
              map[descName] = this.createDescriptor(syntax.descriptors[descName], "AtruleDescriptor", descName, name);
              return map;
            },
            /* @__PURE__ */ Object.create(null)
          ) : null
        };
      }
      addProperty_(name, syntax) {
        if (!syntax) {
          return;
        }
        this.properties[name] = this.createDescriptor(syntax, "Property", name);
      }
      addType_(name, syntax) {
        if (!syntax) {
          return;
        }
        this.types[name] = this.createDescriptor(syntax, "Type", name);
      }
      checkAtruleName(atruleName) {
        if (!this.getAtrule(atruleName)) {
          return new error.SyntaxReferenceError("Unknown at-rule", "@" + atruleName);
        }
      }
      checkAtrulePrelude(atruleName, prelude) {
        const error2 = this.checkAtruleName(atruleName);
        if (error2) {
          return error2;
        }
        const atrule = this.getAtrule(atruleName);
        if (!atrule.prelude && prelude) {
          return new SyntaxError("At-rule `@" + atruleName + "` should not contain a prelude");
        }
        if (atrule.prelude && !prelude) {
          if (!matchSyntax(this, atrule.prelude, "", false).matched) {
            return new SyntaxError("At-rule `@" + atruleName + "` should contain a prelude");
          }
        }
      }
      checkAtruleDescriptorName(atruleName, descriptorName) {
        const error$1 = this.checkAtruleName(atruleName);
        if (error$1) {
          return error$1;
        }
        const atrule = this.getAtrule(atruleName);
        const descriptor = names.keyword(descriptorName);
        if (!atrule.descriptors) {
          return new SyntaxError("At-rule `@" + atruleName + "` has no known descriptors");
        }
        if (!atrule.descriptors[descriptor.name] && !atrule.descriptors[descriptor.basename]) {
          return new error.SyntaxReferenceError("Unknown at-rule descriptor", descriptorName);
        }
      }
      checkPropertyName(propertyName) {
        if (!this.getProperty(propertyName)) {
          return new error.SyntaxReferenceError("Unknown property", propertyName);
        }
      }
      matchAtrulePrelude(atruleName, prelude) {
        const error2 = this.checkAtrulePrelude(atruleName, prelude);
        if (error2) {
          return buildMatchResult(null, error2);
        }
        const atrule = this.getAtrule(atruleName);
        if (!atrule.prelude) {
          return buildMatchResult(null, null);
        }
        return matchSyntax(this, atrule.prelude, prelude || "", false);
      }
      matchAtruleDescriptor(atruleName, descriptorName, value) {
        const error2 = this.checkAtruleDescriptorName(atruleName, descriptorName);
        if (error2) {
          return buildMatchResult(null, error2);
        }
        const atrule = this.getAtrule(atruleName);
        const descriptor = names.keyword(descriptorName);
        return matchSyntax(this, atrule.descriptors[descriptor.name] || atrule.descriptors[descriptor.basename], value, false);
      }
      matchDeclaration(node) {
        if (node.type !== "Declaration") {
          return buildMatchResult(null, new Error("Not a Declaration node"));
        }
        return this.matchProperty(node.property, node.value);
      }
      matchProperty(propertyName, value) {
        if (names.property(propertyName).custom) {
          return buildMatchResult(null, new Error("Lexer matching doesn't applicable for custom properties"));
        }
        const error2 = this.checkPropertyName(propertyName);
        if (error2) {
          return buildMatchResult(null, error2);
        }
        return matchSyntax(this, this.getProperty(propertyName), value, true);
      }
      matchType(typeName, value) {
        const typeSyntax = this.getType(typeName);
        if (!typeSyntax) {
          return buildMatchResult(null, new error.SyntaxReferenceError("Unknown type", typeName));
        }
        return matchSyntax(this, typeSyntax, value, false);
      }
      match(syntax, value) {
        if (typeof syntax !== "string" && (!syntax || !syntax.type)) {
          return buildMatchResult(null, new error.SyntaxReferenceError("Bad syntax"));
        }
        if (typeof syntax === "string" || !syntax.match) {
          syntax = this.createDescriptor(syntax, "Type", "anonymous");
        }
        return matchSyntax(this, syntax, value, false);
      }
      findValueFragments(propertyName, value, type, name) {
        return search.matchFragments(this, value, this.matchProperty(propertyName, value), type, name);
      }
      findDeclarationValueFragments(declaration, type, name) {
        return search.matchFragments(this, declaration.value, this.matchDeclaration(declaration), type, name);
      }
      findAllFragments(ast, type, name) {
        const result = [];
        this.syntax.walk(ast, {
          visit: "Declaration",
          enter: (declaration) => {
            result.push.apply(result, this.findDeclarationValueFragments(declaration, type, name));
          }
        });
        return result;
      }
      getAtrule(atruleName, fallbackBasename = true) {
        const atrule = names.keyword(atruleName);
        const atruleEntry = atrule.vendor && fallbackBasename ? this.atrules[atrule.name] || this.atrules[atrule.basename] : this.atrules[atrule.name];
        return atruleEntry || null;
      }
      getAtrulePrelude(atruleName, fallbackBasename = true) {
        const atrule = this.getAtrule(atruleName, fallbackBasename);
        return atrule && atrule.prelude || null;
      }
      getAtruleDescriptor(atruleName, name) {
        return this.atrules.hasOwnProperty(atruleName) && this.atrules.declarators ? this.atrules[atruleName].declarators[name] || null : null;
      }
      getProperty(propertyName, fallbackBasename = true) {
        const property = names.property(propertyName);
        const propertyEntry = property.vendor && fallbackBasename ? this.properties[property.name] || this.properties[property.basename] : this.properties[property.name];
        return propertyEntry || null;
      }
      getType(name) {
        return hasOwnProperty.call(this.types, name) ? this.types[name] : null;
      }
      validate() {
        function validate(syntax, name, broken, descriptor) {
          if (broken.has(name)) {
            return broken.get(name);
          }
          broken.set(name, false);
          if (descriptor.syntax !== null) {
            walk.walk(descriptor.syntax, function(node) {
              if (node.type !== "Type" && node.type !== "Property") {
                return;
              }
              const map = node.type === "Type" ? syntax.types : syntax.properties;
              const brokenMap = node.type === "Type" ? brokenTypes : brokenProperties;
              if (!hasOwnProperty.call(map, node.name) || validate(syntax, node.name, brokenMap, map[node.name])) {
                broken.set(name, true);
              }
            }, this);
          }
        }
        let brokenTypes = /* @__PURE__ */ new Map();
        let brokenProperties = /* @__PURE__ */ new Map();
        for (const key in this.types) {
          validate(this, key, brokenTypes, this.types[key]);
        }
        for (const key in this.properties) {
          validate(this, key, brokenProperties, this.properties[key]);
        }
        brokenTypes = [...brokenTypes.keys()].filter((name) => brokenTypes.get(name));
        brokenProperties = [...brokenProperties.keys()].filter((name) => brokenProperties.get(name));
        if (brokenTypes.length || brokenProperties.length) {
          return {
            types: brokenTypes,
            properties: brokenProperties
          };
        }
        return null;
      }
      dump(syntaxAsAst, pretty) {
        return {
          generic: this.generic,
          units: this.units,
          types: dumpMapSyntax(this.types, !pretty, syntaxAsAst),
          properties: dumpMapSyntax(this.properties, !pretty, syntaxAsAst),
          atrules: dumpAtruleMapSyntax(this.atrules, !pretty, syntaxAsAst)
        };
      }
      toString() {
        return JSON.stringify(this.dump());
      }
    };
    exports.Lexer = Lexer;
  }
});

// node_modules/css-tree/cjs/syntax/config/mix.cjs
var require_mix = __commonJS({
  "node_modules/css-tree/cjs/syntax/config/mix.cjs"(exports, module2) {
    "use strict";
    function appendOrSet(a, b) {
      if (typeof b === "string" && /^\s*\|/.test(b)) {
        return typeof a === "string" ? a + b : b.replace(/^\s*\|\s*/, "");
      }
      return b || null;
    }
    function sliceProps(obj, props) {
      const result = /* @__PURE__ */ Object.create(null);
      for (const [key, value] of Object.entries(obj)) {
        if (value) {
          result[key] = {};
          for (const prop of Object.keys(value)) {
            if (props.includes(prop)) {
              result[key][prop] = value[prop];
            }
          }
        }
      }
      return result;
    }
    function mix(dest, src) {
      const result = { ...dest };
      for (const [prop, value] of Object.entries(src)) {
        switch (prop) {
          case "generic":
            result[prop] = Boolean(value);
            break;
          case "units":
            result[prop] = { ...dest[prop] };
            for (const [name, patch] of Object.entries(value)) {
              result[prop][name] = Array.isArray(patch) ? patch : [];
            }
            break;
          case "atrules":
            result[prop] = { ...dest[prop] };
            for (const [name, atrule] of Object.entries(value)) {
              const exists = result[prop][name] || {};
              const current = result[prop][name] = {
                prelude: exists.prelude || null,
                descriptors: {
                  ...exists.descriptors
                }
              };
              if (!atrule) {
                continue;
              }
              current.prelude = atrule.prelude ? appendOrSet(current.prelude, atrule.prelude) : current.prelude || null;
              for (const [descriptorName, descriptorValue] of Object.entries(atrule.descriptors || {})) {
                current.descriptors[descriptorName] = descriptorValue ? appendOrSet(current.descriptors[descriptorName], descriptorValue) : null;
              }
              if (!Object.keys(current.descriptors).length) {
                current.descriptors = null;
              }
            }
            break;
          case "types":
          case "properties":
            result[prop] = { ...dest[prop] };
            for (const [name, syntax] of Object.entries(value)) {
              result[prop][name] = appendOrSet(result[prop][name], syntax);
            }
            break;
          case "scope":
            result[prop] = { ...dest[prop] };
            for (const [name, props] of Object.entries(value)) {
              result[prop][name] = { ...result[prop][name], ...props };
            }
            break;
          case "parseContext":
            result[prop] = {
              ...dest[prop],
              ...value
            };
            break;
          case "atrule":
          case "pseudo":
            result[prop] = {
              ...dest[prop],
              ...sliceProps(value, ["parse"])
            };
            break;
          case "node":
            result[prop] = {
              ...dest[prop],
              ...sliceProps(value, ["name", "structure", "parse", "generate", "walkContext"])
            };
            break;
        }
      }
      return result;
    }
    module2.exports = mix;
  }
});

// node_modules/css-tree/cjs/syntax/create.cjs
var require_create5 = __commonJS({
  "node_modules/css-tree/cjs/syntax/create.cjs"(exports, module2) {
    "use strict";
    var index = require_tokenizer();
    var create = require_create();
    var create$2 = require_create2();
    var create$3 = require_create3();
    var create$1 = require_create4();
    var Lexer = require_Lexer();
    var mix = require_mix();
    function createSyntax(config) {
      const parse = create.createParser(config);
      const walk = create$1.createWalker(config);
      const generate = create$2.createGenerator(config);
      const { fromPlainObject, toPlainObject } = create$3.createConvertor(walk);
      const syntax = {
        lexer: null,
        createLexer: (config2) => new Lexer.Lexer(config2, syntax, syntax.lexer.structure),
        tokenize: index.tokenize,
        parse,
        generate,
        walk,
        find: walk.find,
        findLast: walk.findLast,
        findAll: walk.findAll,
        fromPlainObject,
        toPlainObject,
        fork(extension) {
          const base = mix({}, config);
          return createSyntax(
            typeof extension === "function" ? extension(base, Object.assign) : mix(base, extension)
          );
        }
      };
      syntax.lexer = new Lexer.Lexer({
        generic: true,
        units: config.units,
        types: config.types,
        atrules: config.atrules,
        properties: config.properties,
        node: config.node
      }, syntax);
      return syntax;
    }
    var createSyntax$1 = (config) => createSyntax(mix({}, config));
    module2.exports = createSyntax$1;
  }
});

// node_modules/css-tree/data/patch.json
var require_patch = __commonJS({
  "node_modules/css-tree/data/patch.json"(exports, module2) {
    module2.exports = {
      atrules: {
        charset: {
          prelude: "<string>"
        },
        "font-face": {
          descriptors: {
            "unicode-range": {
              comment: "replaces <unicode-range>, an old production name",
              syntax: "<urange>#"
            }
          }
        },
        nest: {
          prelude: "<complex-selector-list>"
        }
      },
      properties: {
        "-moz-background-clip": {
          comment: "deprecated syntax in old Firefox, https://developer.mozilla.org/en/docs/Web/CSS/background-clip",
          syntax: "padding | border"
        },
        "-moz-border-radius-bottomleft": {
          comment: "https://developer.mozilla.org/en-US/docs/Web/CSS/border-bottom-left-radius",
          syntax: "<'border-bottom-left-radius'>"
        },
        "-moz-border-radius-bottomright": {
          comment: "https://developer.mozilla.org/en-US/docs/Web/CSS/border-bottom-right-radius",
          syntax: "<'border-bottom-right-radius'>"
        },
        "-moz-border-radius-topleft": {
          comment: "https://developer.mozilla.org/en-US/docs/Web/CSS/border-top-left-radius",
          syntax: "<'border-top-left-radius'>"
        },
        "-moz-border-radius-topright": {
          comment: "https://developer.mozilla.org/en-US/docs/Web/CSS/border-bottom-right-radius",
          syntax: "<'border-bottom-right-radius'>"
        },
        "-moz-control-character-visibility": {
          comment: "firefox specific keywords, https://bugzilla.mozilla.org/show_bug.cgi?id=947588",
          syntax: "visible | hidden"
        },
        "-moz-osx-font-smoothing": {
          comment: "misssed old syntax https://developer.mozilla.org/en-US/docs/Web/CSS/font-smooth",
          syntax: "auto | grayscale"
        },
        "-moz-user-select": {
          comment: "https://developer.mozilla.org/en-US/docs/Web/CSS/user-select",
          syntax: "none | text | all | -moz-none"
        },
        "-ms-flex-align": {
          comment: "misssed old syntax implemented in IE, https://www.w3.org/TR/2012/WD-css3-flexbox-20120322/#flex-align",
          syntax: "start | end | center | baseline | stretch"
        },
        "-ms-flex-item-align": {
          comment: "misssed old syntax implemented in IE, https://www.w3.org/TR/2012/WD-css3-flexbox-20120322/#flex-align",
          syntax: "auto | start | end | center | baseline | stretch"
        },
        "-ms-flex-line-pack": {
          comment: "misssed old syntax implemented in IE, https://www.w3.org/TR/2012/WD-css3-flexbox-20120322/#flex-line-pack",
          syntax: "start | end | center | justify | distribute | stretch"
        },
        "-ms-flex-negative": {
          comment: "misssed old syntax implemented in IE; TODO: find references for comfirmation",
          syntax: "<'flex-shrink'>"
        },
        "-ms-flex-pack": {
          comment: "misssed old syntax implemented in IE, https://www.w3.org/TR/2012/WD-css3-flexbox-20120322/#flex-pack",
          syntax: "start | end | center | justify | distribute"
        },
        "-ms-flex-order": {
          comment: "misssed old syntax implemented in IE; https://msdn.microsoft.com/en-us/library/jj127303(v=vs.85).aspx",
          syntax: "<integer>"
        },
        "-ms-flex-positive": {
          comment: "misssed old syntax implemented in IE; TODO: find references for comfirmation",
          syntax: "<'flex-grow'>"
        },
        "-ms-flex-preferred-size": {
          comment: "misssed old syntax implemented in IE; TODO: find references for comfirmation",
          syntax: "<'flex-basis'>"
        },
        "-ms-interpolation-mode": {
          comment: "https://msdn.microsoft.com/en-us/library/ff521095(v=vs.85).aspx",
          syntax: "nearest-neighbor | bicubic"
        },
        "-ms-grid-column-align": {
          comment: "add this property first since it uses as fallback for flexbox, https://msdn.microsoft.com/en-us/library/windows/apps/hh466338.aspx",
          syntax: "start | end | center | stretch"
        },
        "-ms-grid-row-align": {
          comment: "add this property first since it uses as fallback for flexbox, https://msdn.microsoft.com/en-us/library/windows/apps/hh466348.aspx",
          syntax: "start | end | center | stretch"
        },
        "-ms-hyphenate-limit-last": {
          comment: "misssed old syntax implemented in IE; https://www.w3.org/TR/css-text-4/#hyphenate-line-limits",
          syntax: "none | always | column | page | spread"
        },
        "-webkit-appearance": {
          comment: "webkit specific keywords",
          references: [
            "http://css-infos.net/property/-webkit-appearance"
          ],
          syntax: "none | button | button-bevel | caps-lock-indicator | caret | checkbox | default-button | inner-spin-button | listbox | listitem | media-controls-background | media-controls-fullscreen-background | media-current-time-display | media-enter-fullscreen-button | media-exit-fullscreen-button | media-fullscreen-button | media-mute-button | media-overlay-play-button | media-play-button | media-seek-back-button | media-seek-forward-button | media-slider | media-sliderthumb | media-time-remaining-display | media-toggle-closed-captions-button | media-volume-slider | media-volume-slider-container | media-volume-sliderthumb | menulist | menulist-button | menulist-text | menulist-textfield | meter | progress-bar | progress-bar-value | push-button | radio | scrollbarbutton-down | scrollbarbutton-left | scrollbarbutton-right | scrollbarbutton-up | scrollbargripper-horizontal | scrollbargripper-vertical | scrollbarthumb-horizontal | scrollbarthumb-vertical | scrollbartrack-horizontal | scrollbartrack-vertical | searchfield | searchfield-cancel-button | searchfield-decoration | searchfield-results-button | searchfield-results-decoration | slider-horizontal | slider-vertical | sliderthumb-horizontal | sliderthumb-vertical | square-button | textarea | textfield | -apple-pay-button"
        },
        "-webkit-background-clip": {
          comment: "https://developer.mozilla.org/en/docs/Web/CSS/background-clip",
          syntax: "[ <box> | border | padding | content | text ]#"
        },
        "-webkit-column-break-after": {
          comment: "added, http://help.dottoro.com/lcrthhhv.php",
          syntax: "always | auto | avoid"
        },
        "-webkit-column-break-before": {
          comment: "added, http://help.dottoro.com/lcxquvkf.php",
          syntax: "always | auto | avoid"
        },
        "-webkit-column-break-inside": {
          comment: "added, http://help.dottoro.com/lclhnthl.php",
          syntax: "always | auto | avoid"
        },
        "-webkit-font-smoothing": {
          comment: "https://developer.mozilla.org/en-US/docs/Web/CSS/font-smooth",
          syntax: "auto | none | antialiased | subpixel-antialiased"
        },
        "-webkit-mask-box-image": {
          comment: "missed; https://developer.mozilla.org/en-US/docs/Web/CSS/-webkit-mask-box-image",
          syntax: "[ <url> | <gradient> | none ] [ <length-percentage>{4} <-webkit-mask-box-repeat>{2} ]?"
        },
        "-webkit-print-color-adjust": {
          comment: "missed",
          references: [
            "https://developer.mozilla.org/en/docs/Web/CSS/-webkit-print-color-adjust"
          ],
          syntax: "economy | exact"
        },
        "-webkit-text-security": {
          comment: "missed; http://help.dottoro.com/lcbkewgt.php",
          syntax: "none | circle | disc | square"
        },
        "-webkit-user-drag": {
          comment: "missed; http://help.dottoro.com/lcbixvwm.php",
          syntax: "none | element | auto"
        },
        "-webkit-user-select": {
          comment: "auto is supported by old webkit, https://developer.mozilla.org/en-US/docs/Web/CSS/user-select",
          syntax: "auto | none | text | all"
        },
        "alignment-baseline": {
          comment: "added SVG property",
          references: [
            "https://www.w3.org/TR/SVG/text.html#AlignmentBaselineProperty"
          ],
          syntax: "auto | baseline | before-edge | text-before-edge | middle | central | after-edge | text-after-edge | ideographic | alphabetic | hanging | mathematical"
        },
        "background-clip": {
          comment: "used <bg-clip> from CSS Backgrounds and Borders 4 since it adds new values",
          references: [
            "https://github.com/csstree/csstree/issues/190"
          ],
          syntax: "<bg-clip>#"
        },
        "baseline-shift": {
          comment: "added SVG property",
          references: [
            "https://www.w3.org/TR/SVG/text.html#BaselineShiftProperty"
          ],
          syntax: "baseline | sub | super | <svg-length>"
        },
        behavior: {
          comment: "added old IE property https://msdn.microsoft.com/en-us/library/ms530723(v=vs.85).aspx",
          syntax: "<url>+"
        },
        "clip-rule": {
          comment: "added SVG property",
          references: [
            "https://www.w3.org/TR/SVG/masking.html#ClipRuleProperty"
          ],
          syntax: "nonzero | evenodd"
        },
        cue: {
          comment: "https://www.w3.org/TR/css3-speech/#property-index",
          syntax: "<'cue-before'> <'cue-after'>?"
        },
        "cue-after": {
          comment: "https://www.w3.org/TR/css3-speech/#property-index",
          syntax: "<url> <decibel>? | none"
        },
        "cue-before": {
          comment: "https://www.w3.org/TR/css3-speech/#property-index",
          syntax: "<url> <decibel>? | none"
        },
        cursor: {
          comment: "added legacy keywords: hand, -webkit-grab. -webkit-grabbing, -webkit-zoom-in, -webkit-zoom-out, -moz-grab, -moz-grabbing, -moz-zoom-in, -moz-zoom-out",
          references: [
            "https://www.sitepoint.com/css3-cursor-styles/"
          ],
          syntax: "[ [ <url> [ <x> <y> ]? , ]* [ auto | default | none | context-menu | help | pointer | progress | wait | cell | crosshair | text | vertical-text | alias | copy | move | no-drop | not-allowed | e-resize | n-resize | ne-resize | nw-resize | s-resize | se-resize | sw-resize | w-resize | ew-resize | ns-resize | nesw-resize | nwse-resize | col-resize | row-resize | all-scroll | zoom-in | zoom-out | grab | grabbing | hand | -webkit-grab | -webkit-grabbing | -webkit-zoom-in | -webkit-zoom-out | -moz-grab | -moz-grabbing | -moz-zoom-in | -moz-zoom-out ] ]"
        },
        display: {
          comment: "extended with -ms-flexbox",
          syntax: "| <-non-standard-display>"
        },
        position: {
          comment: "extended with -webkit-sticky",
          syntax: "| -webkit-sticky"
        },
        "dominant-baseline": {
          comment: "added SVG property",
          references: [
            "https://www.w3.org/TR/SVG/text.html#DominantBaselineProperty"
          ],
          syntax: "auto | use-script | no-change | reset-size | ideographic | alphabetic | hanging | mathematical | central | middle | text-after-edge | text-before-edge"
        },
        "image-rendering": {
          comment: "extended with <-non-standard-image-rendering>, added SVG keywords optimizeSpeed and optimizeQuality",
          references: [
            "https://developer.mozilla.org/en/docs/Web/CSS/image-rendering",
            "https://www.w3.org/TR/SVG/painting.html#ImageRenderingProperty"
          ],
          syntax: "| optimizeSpeed | optimizeQuality | <-non-standard-image-rendering>"
        },
        fill: {
          comment: "added SVG property",
          references: [
            "https://www.w3.org/TR/SVG/painting.html#FillProperty"
          ],
          syntax: "<paint>"
        },
        "fill-opacity": {
          comment: "added SVG property",
          references: [
            "https://www.w3.org/TR/SVG/painting.html#FillProperty"
          ],
          syntax: "<number-zero-one>"
        },
        "fill-rule": {
          comment: "added SVG property",
          references: [
            "https://www.w3.org/TR/SVG/painting.html#FillProperty"
          ],
          syntax: "nonzero | evenodd"
        },
        filter: {
          comment: "extend with IE legacy syntaxes",
          syntax: "| <-ms-filter-function-list>"
        },
        "glyph-orientation-horizontal": {
          comment: "added SVG property",
          references: [
            "https://www.w3.org/TR/SVG/text.html#GlyphOrientationHorizontalProperty"
          ],
          syntax: "<angle>"
        },
        "glyph-orientation-vertical": {
          comment: "added SVG property",
          references: [
            "https://www.w3.org/TR/SVG/text.html#GlyphOrientationVerticalProperty"
          ],
          syntax: "<angle>"
        },
        kerning: {
          comment: "added SVG property",
          references: [
            "https://www.w3.org/TR/SVG/text.html#KerningProperty"
          ],
          syntax: "auto | <svg-length>"
        },
        "letter-spacing": {
          comment: "fix syntax <length> -> <length-percentage>",
          references: [
            "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/letter-spacing"
          ],
          syntax: "normal | <length-percentage>"
        },
        marker: {
          comment: "added SVG property",
          references: [
            "https://www.w3.org/TR/SVG/painting.html#MarkerProperties"
          ],
          syntax: "none | <url>"
        },
        "marker-end": {
          comment: "added SVG property",
          references: [
            "https://www.w3.org/TR/SVG/painting.html#MarkerProperties"
          ],
          syntax: "none | <url>"
        },
        "marker-mid": {
          comment: "added SVG property",
          references: [
            "https://www.w3.org/TR/SVG/painting.html#MarkerProperties"
          ],
          syntax: "none | <url>"
        },
        "marker-start": {
          comment: "added SVG property",
          references: [
            "https://www.w3.org/TR/SVG/painting.html#MarkerProperties"
          ],
          syntax: "none | <url>"
        },
        "max-width": {
          comment: "extend by non-standard width keywords https://developer.mozilla.org/en-US/docs/Web/CSS/max-width",
          syntax: "| <-non-standard-width>"
        },
        width: {
          references: [
            "https://developer.mozilla.org/en-US/docs/Web/CSS/width",
            "https://github.com/csstree/stylelint-validator/issues/29"
          ],
          syntax: "| fill | stretch | intrinsic | -moz-max-content | -webkit-max-content | -moz-fit-content | -webkit-fit-content"
        },
        "min-width": {
          comment: "extend by non-standard width keywords https://developer.mozilla.org/en-US/docs/Web/CSS/width",
          syntax: "| <-non-standard-width>"
        },
        overflow: {
          comment: "extend by vendor keywords https://developer.mozilla.org/en-US/docs/Web/CSS/overflow",
          syntax: "| <-non-standard-overflow>"
        },
        pause: {
          comment: "https://www.w3.org/TR/css3-speech/#property-index",
          syntax: "<'pause-before'> <'pause-after'>?"
        },
        "pause-after": {
          comment: "https://www.w3.org/TR/css3-speech/#property-index",
          syntax: "<time> | none | x-weak | weak | medium | strong | x-strong"
        },
        "pause-before": {
          comment: "https://www.w3.org/TR/css3-speech/#property-index",
          syntax: "<time> | none | x-weak | weak | medium | strong | x-strong"
        },
        rest: {
          comment: "https://www.w3.org/TR/css3-speech/#property-index",
          syntax: "<'rest-before'> <'rest-after'>?"
        },
        "rest-after": {
          comment: "https://www.w3.org/TR/css3-speech/#property-index",
          syntax: "<time> | none | x-weak | weak | medium | strong | x-strong"
        },
        "rest-before": {
          comment: "https://www.w3.org/TR/css3-speech/#property-index",
          syntax: "<time> | none | x-weak | weak | medium | strong | x-strong"
        },
        "shape-rendering": {
          comment: "added SVG property",
          references: [
            "https://www.w3.org/TR/SVG/painting.html#ShapeRenderingPropert"
          ],
          syntax: "auto | optimizeSpeed | crispEdges | geometricPrecision"
        },
        src: {
          comment: "added @font-face's src property https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/src",
          syntax: "[ <url> [ format( <string># ) ]? | local( <family-name> ) ]#"
        },
        speak: {
          comment: "https://www.w3.org/TR/css3-speech/#property-index",
          syntax: "auto | none | normal"
        },
        "speak-as": {
          comment: "https://www.w3.org/TR/css3-speech/#property-index",
          syntax: "normal | spell-out || digits || [ literal-punctuation | no-punctuation ]"
        },
        stroke: {
          comment: "added SVG property",
          references: [
            "https://www.w3.org/TR/SVG/painting.html#StrokeProperties"
          ],
          syntax: "<paint>"
        },
        "stroke-dasharray": {
          comment: "added SVG property; a list of comma and/or white space separated <length>s and <percentage>s",
          references: [
            "https://www.w3.org/TR/SVG/painting.html#StrokeProperties"
          ],
          syntax: "none | [ <svg-length>+ ]#"
        },
        "stroke-dashoffset": {
          comment: "added SVG property",
          references: [
            "https://www.w3.org/TR/SVG/painting.html#StrokeProperties"
          ],
          syntax: "<svg-length>"
        },
        "stroke-linecap": {
          comment: "added SVG property",
          references: [
            "https://www.w3.org/TR/SVG/painting.html#StrokeProperties"
          ],
          syntax: "butt | round | square"
        },
        "stroke-linejoin": {
          comment: "added SVG property",
          references: [
            "https://www.w3.org/TR/SVG/painting.html#StrokeProperties"
          ],
          syntax: "miter | round | bevel"
        },
        "stroke-miterlimit": {
          comment: "added SVG property (<miterlimit> = <number-one-or-greater>) ",
          references: [
            "https://www.w3.org/TR/SVG/painting.html#StrokeProperties"
          ],
          syntax: "<number-one-or-greater>"
        },
        "stroke-opacity": {
          comment: "added SVG property",
          references: [
            "https://www.w3.org/TR/SVG/painting.html#StrokeProperties"
          ],
          syntax: "<number-zero-one>"
        },
        "stroke-width": {
          comment: "added SVG property",
          references: [
            "https://www.w3.org/TR/SVG/painting.html#StrokeProperties"
          ],
          syntax: "<svg-length>"
        },
        "text-anchor": {
          comment: "added SVG property",
          references: [
            "https://www.w3.org/TR/SVG/text.html#TextAlignmentProperties"
          ],
          syntax: "start | middle | end"
        },
        "unicode-bidi": {
          comment: "added prefixed keywords https://developer.mozilla.org/en-US/docs/Web/CSS/unicode-bidi",
          syntax: "| -moz-isolate | -moz-isolate-override | -moz-plaintext | -webkit-isolate | -webkit-isolate-override | -webkit-plaintext"
        },
        "unicode-range": {
          comment: "added missed property https://developer.mozilla.org/en-US/docs/Web/CSS/%40font-face/unicode-range",
          syntax: "<urange>#"
        },
        "voice-balance": {
          comment: "https://www.w3.org/TR/css3-speech/#property-index",
          syntax: "<number> | left | center | right | leftwards | rightwards"
        },
        "voice-duration": {
          comment: "https://www.w3.org/TR/css3-speech/#property-index",
          syntax: "auto | <time>"
        },
        "voice-family": {
          comment: "<name> -> <family-name>, https://www.w3.org/TR/css3-speech/#property-index",
          syntax: "[ [ <family-name> | <generic-voice> ] , ]* [ <family-name> | <generic-voice> ] | preserve"
        },
        "voice-pitch": {
          comment: "https://www.w3.org/TR/css3-speech/#property-index",
          syntax: "<frequency> && absolute | [ [ x-low | low | medium | high | x-high ] || [ <frequency> | <semitones> | <percentage> ] ]"
        },
        "voice-range": {
          comment: "https://www.w3.org/TR/css3-speech/#property-index",
          syntax: "<frequency> && absolute | [ [ x-low | low | medium | high | x-high ] || [ <frequency> | <semitones> | <percentage> ] ]"
        },
        "voice-rate": {
          comment: "https://www.w3.org/TR/css3-speech/#property-index",
          syntax: "[ normal | x-slow | slow | medium | fast | x-fast ] || <percentage>"
        },
        "voice-stress": {
          comment: "https://www.w3.org/TR/css3-speech/#property-index",
          syntax: "normal | strong | moderate | none | reduced"
        },
        "voice-volume": {
          comment: "https://www.w3.org/TR/css3-speech/#property-index",
          syntax: "silent | [ [ x-soft | soft | medium | loud | x-loud ] || <decibel> ]"
        },
        "writing-mode": {
          comment: "extend with SVG keywords",
          syntax: "| <svg-writing-mode>"
        }
      },
      types: {
        "-legacy-gradient": {
          comment: "added collection of legacy gradient syntaxes",
          syntax: "<-webkit-gradient()> | <-legacy-linear-gradient> | <-legacy-repeating-linear-gradient> | <-legacy-radial-gradient> | <-legacy-repeating-radial-gradient>"
        },
        "-legacy-linear-gradient": {
          comment: "like standard syntax but w/o `to` keyword https://developer.mozilla.org/en-US/docs/Web/CSS/linear-gradient",
          syntax: "-moz-linear-gradient( <-legacy-linear-gradient-arguments> ) | -webkit-linear-gradient( <-legacy-linear-gradient-arguments> ) | -o-linear-gradient( <-legacy-linear-gradient-arguments> )"
        },
        "-legacy-repeating-linear-gradient": {
          comment: "like standard syntax but w/o `to` keyword https://developer.mozilla.org/en-US/docs/Web/CSS/linear-gradient",
          syntax: "-moz-repeating-linear-gradient( <-legacy-linear-gradient-arguments> ) | -webkit-repeating-linear-gradient( <-legacy-linear-gradient-arguments> ) | -o-repeating-linear-gradient( <-legacy-linear-gradient-arguments> )"
        },
        "-legacy-linear-gradient-arguments": {
          comment: "like standard syntax but w/o `to` keyword https://developer.mozilla.org/en-US/docs/Web/CSS/linear-gradient",
          syntax: "[ <angle> | <side-or-corner> ]? , <color-stop-list>"
        },
        "-legacy-radial-gradient": {
          comment: "deprecated syntax that implemented by some browsers https://www.w3.org/TR/2011/WD-css3-images-20110908/#radial-gradients",
          syntax: "-moz-radial-gradient( <-legacy-radial-gradient-arguments> ) | -webkit-radial-gradient( <-legacy-radial-gradient-arguments> ) | -o-radial-gradient( <-legacy-radial-gradient-arguments> )"
        },
        "-legacy-repeating-radial-gradient": {
          comment: "deprecated syntax that implemented by some browsers https://www.w3.org/TR/2011/WD-css3-images-20110908/#radial-gradients",
          syntax: "-moz-repeating-radial-gradient( <-legacy-radial-gradient-arguments> ) | -webkit-repeating-radial-gradient( <-legacy-radial-gradient-arguments> ) | -o-repeating-radial-gradient( <-legacy-radial-gradient-arguments> )"
        },
        "-legacy-radial-gradient-arguments": {
          comment: "deprecated syntax that implemented by some browsers https://www.w3.org/TR/2011/WD-css3-images-20110908/#radial-gradients",
          syntax: "[ <position> , ]? [ [ [ <-legacy-radial-gradient-shape> || <-legacy-radial-gradient-size> ] | [ <length> | <percentage> ]{2} ] , ]? <color-stop-list>"
        },
        "-legacy-radial-gradient-size": {
          comment: "before a standard it contains 2 extra keywords (`contain` and `cover`) https://www.w3.org/TR/2011/WD-css3-images-20110908/#ltsize",
          syntax: "closest-side | closest-corner | farthest-side | farthest-corner | contain | cover"
        },
        "-legacy-radial-gradient-shape": {
          comment: "define to double sure it doesn't extends in future https://www.w3.org/TR/2011/WD-css3-images-20110908/#ltshape",
          syntax: "circle | ellipse"
        },
        "-non-standard-font": {
          comment: "non standard fonts",
          references: [
            "https://webkit.org/blog/3709/using-the-system-font-in-web-content/"
          ],
          syntax: "-apple-system-body | -apple-system-headline | -apple-system-subheadline | -apple-system-caption1 | -apple-system-caption2 | -apple-system-footnote | -apple-system-short-body | -apple-system-short-headline | -apple-system-short-subheadline | -apple-system-short-caption1 | -apple-system-short-footnote | -apple-system-tall-body"
        },
        "-non-standard-color": {
          comment: "non standard colors",
          references: [
            "http://cssdot.ru/%D0%A1%D0%BF%D1%80%D0%B0%D0%B2%D0%BE%D1%87%D0%BD%D0%B8%D0%BA_CSS/color-i305.html",
            "https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#Mozilla_Color_Preference_Extensions"
          ],
          syntax: "-moz-ButtonDefault | -moz-ButtonHoverFace | -moz-ButtonHoverText | -moz-CellHighlight | -moz-CellHighlightText | -moz-Combobox | -moz-ComboboxText | -moz-Dialog | -moz-DialogText | -moz-dragtargetzone | -moz-EvenTreeRow | -moz-Field | -moz-FieldText | -moz-html-CellHighlight | -moz-html-CellHighlightText | -moz-mac-accentdarkestshadow | -moz-mac-accentdarkshadow | -moz-mac-accentface | -moz-mac-accentlightesthighlight | -moz-mac-accentlightshadow | -moz-mac-accentregularhighlight | -moz-mac-accentregularshadow | -moz-mac-chrome-active | -moz-mac-chrome-inactive | -moz-mac-focusring | -moz-mac-menuselect | -moz-mac-menushadow | -moz-mac-menutextselect | -moz-MenuHover | -moz-MenuHoverText | -moz-MenuBarText | -moz-MenuBarHoverText | -moz-nativehyperlinktext | -moz-OddTreeRow | -moz-win-communicationstext | -moz-win-mediatext | -moz-activehyperlinktext | -moz-default-background-color | -moz-default-color | -moz-hyperlinktext | -moz-visitedhyperlinktext | -webkit-activelink | -webkit-focus-ring-color | -webkit-link | -webkit-text"
        },
        "-non-standard-image-rendering": {
          comment: "non-standard keywords http://phrogz.net/tmp/canvas_image_zoom.html",
          syntax: "optimize-contrast | -moz-crisp-edges | -o-crisp-edges | -webkit-optimize-contrast"
        },
        "-non-standard-overflow": {
          comment: "non-standard keywords https://developer.mozilla.org/en-US/docs/Web/CSS/overflow",
          syntax: "-moz-scrollbars-none | -moz-scrollbars-horizontal | -moz-scrollbars-vertical | -moz-hidden-unscrollable"
        },
        "-non-standard-width": {
          comment: "non-standard keywords https://developer.mozilla.org/en-US/docs/Web/CSS/width",
          syntax: "fill-available | min-intrinsic | intrinsic | -moz-available | -moz-fit-content | -moz-min-content | -moz-max-content | -webkit-min-content | -webkit-max-content"
        },
        "-webkit-gradient()": {
          comment: "first Apple proposal gradient syntax https://webkit.org/blog/175/introducing-css-gradients/ - TODO: simplify when after match algorithm improvement ( [, point, radius | , point] -> [, radius]? , point )",
          syntax: "-webkit-gradient( <-webkit-gradient-type>, <-webkit-gradient-point> [, <-webkit-gradient-point> | , <-webkit-gradient-radius>, <-webkit-gradient-point> ] [, <-webkit-gradient-radius>]? [, <-webkit-gradient-color-stop>]* )"
        },
        "-webkit-gradient-color-stop": {
          comment: "first Apple proposal gradient syntax https://webkit.org/blog/175/introducing-css-gradients/",
          syntax: "from( <color> ) | color-stop( [ <number-zero-one> | <percentage> ] , <color> ) | to( <color> )"
        },
        "-webkit-gradient-point": {
          comment: "first Apple proposal gradient syntax https://webkit.org/blog/175/introducing-css-gradients/",
          syntax: "[ left | center | right | <length-percentage> ] [ top | center | bottom | <length-percentage> ]"
        },
        "-webkit-gradient-radius": {
          comment: "first Apple proposal gradient syntax https://webkit.org/blog/175/introducing-css-gradients/",
          syntax: "<length> | <percentage>"
        },
        "-webkit-gradient-type": {
          comment: "first Apple proposal gradient syntax https://webkit.org/blog/175/introducing-css-gradients/",
          syntax: "linear | radial"
        },
        "-webkit-mask-box-repeat": {
          comment: "missed; https://developer.mozilla.org/en-US/docs/Web/CSS/-webkit-mask-box-image",
          syntax: "repeat | stretch | round"
        },
        "-webkit-mask-clip-style": {
          comment: "missed; there is no enough information about `-webkit-mask-clip` property, but looks like all those keywords are working",
          syntax: "border | border-box | padding | padding-box | content | content-box | text"
        },
        "-ms-filter-function-list": {
          comment: "https://developer.mozilla.org/en-US/docs/Web/CSS/-ms-filter",
          syntax: "<-ms-filter-function>+"
        },
        "-ms-filter-function": {
          comment: "https://developer.mozilla.org/en-US/docs/Web/CSS/-ms-filter",
          syntax: "<-ms-filter-function-progid> | <-ms-filter-function-legacy>"
        },
        "-ms-filter-function-progid": {
          comment: "https://developer.mozilla.org/en-US/docs/Web/CSS/-ms-filter",
          syntax: "'progid:' [ <ident-token> '.' ]* [ <ident-token> | <function-token> <any-value>? ) ]"
        },
        "-ms-filter-function-legacy": {
          comment: "https://developer.mozilla.org/en-US/docs/Web/CSS/-ms-filter",
          syntax: "<ident-token> | <function-token> <any-value>? )"
        },
        "-ms-filter": {
          syntax: "<string>"
        },
        age: {
          comment: "https://www.w3.org/TR/css3-speech/#voice-family",
          syntax: "child | young | old"
        },
        "attr-name": {
          syntax: "<wq-name>"
        },
        "attr-fallback": {
          syntax: "<any-value>"
        },
        "bg-clip": {
          comment: "missed, https://drafts.csswg.org/css-backgrounds-4/#typedef-bg-clip",
          syntax: "<box> | border | text"
        },
        bottom: {
          comment: "missed; not sure we should add it, but no others except `shape` is using it so it's ok for now; https://drafts.fxtf.org/css-masking-1/#funcdef-clip-rect",
          syntax: "<length> | auto"
        },
        "content-list": {
          comment: "added attr(), see https://github.com/csstree/csstree/issues/201",
          syntax: "[ <string> | contents | <image> | <counter> | <quote> | <target> | <leader()> | <attr()> ]+"
        },
        "element()": {
          comment: "https://drafts.csswg.org/css-gcpm/#element-syntax & https://drafts.csswg.org/css-images-4/#element-notation",
          syntax: "element( <custom-ident> , [ first | start | last | first-except ]? ) | element( <id-selector> )"
        },
        "generic-voice": {
          comment: "https://www.w3.org/TR/css3-speech/#voice-family",
          syntax: "[ <age>? <gender> <integer>? ]"
        },
        gender: {
          comment: "https://www.w3.org/TR/css3-speech/#voice-family",
          syntax: "male | female | neutral"
        },
        "generic-family": {
          comment: "added -apple-system",
          references: [
            "https://webkit.org/blog/3709/using-the-system-font-in-web-content/"
          ],
          syntax: "| -apple-system"
        },
        gradient: {
          comment: "added legacy syntaxes support",
          syntax: "| <-legacy-gradient>"
        },
        left: {
          comment: "missed; not sure we should add it, but no others except `shape` is using it so it's ok for now; https://drafts.fxtf.org/css-masking-1/#funcdef-clip-rect",
          syntax: "<length> | auto"
        },
        "mask-image": {
          comment: "missed; https://drafts.fxtf.org/css-masking-1/#the-mask-image",
          syntax: "<mask-reference>#"
        },
        "named-color": {
          comment: "added non standard color names",
          syntax: "| <-non-standard-color>"
        },
        paint: {
          comment: "used by SVG https://www.w3.org/TR/SVG/painting.html#SpecifyingPaint",
          syntax: "none | <color> | <url> [ none | <color> ]? | context-fill | context-stroke"
        },
        right: {
          comment: "missed; not sure we should add it, but no others except `shape` is using it so it's ok for now; https://drafts.fxtf.org/css-masking-1/#funcdef-clip-rect",
          syntax: "<length> | auto"
        },
        shape: {
          comment: "missed spaces in function body and add backwards compatible syntax",
          syntax: "rect( <top>, <right>, <bottom>, <left> ) | rect( <top> <right> <bottom> <left> )"
        },
        "scroll-timeline-axis": {
          comment: "missed definition",
          syntax: "block | inline | vertical | horizontal"
        },
        "scroll-timeline-name": {
          comment: "missed definition",
          references: [
            "https://w3c.github.io/csswg-drafts/scroll-animations/#propdef-scroll-timeline-name"
          ],
          syntax: "none | <custom-ident>"
        },
        "single-animation-composition": {
          comment: "missed definition",
          references: [
            "https://w3c.github.io/csswg-drafts/css-animations-2/#typedef-single-animation-composition"
          ],
          syntax: "replace | add | accumulate"
        },
        "svg-length": {
          comment: "All coordinates and lengths in SVG can be specified with or without a unit identifier",
          references: [
            "https://www.w3.org/TR/SVG11/coords.html#Units"
          ],
          syntax: "<percentage> | <length> | <number>"
        },
        "svg-writing-mode": {
          comment: "SVG specific keywords (deprecated for CSS)",
          references: [
            "https://developer.mozilla.org/en/docs/Web/CSS/writing-mode",
            "https://www.w3.org/TR/SVG/text.html#WritingModeProperty"
          ],
          syntax: "lr-tb | rl-tb | tb-rl | lr | rl | tb"
        },
        top: {
          comment: "missed; not sure we should add it, but no others except `shape` is using it so it's ok for now; https://drafts.fxtf.org/css-masking-1/#funcdef-clip-rect",
          syntax: "<length> | auto"
        },
        x: {
          comment: "missed; not sure we should add it, but no others except `cursor` is using it so it's ok for now; https://drafts.csswg.org/css-ui-3/#cursor",
          syntax: "<number>"
        },
        y: {
          comment: "missed; not sure we should add it, but no others except `cursor` is using so it's ok for now; https://drafts.csswg.org/css-ui-3/#cursor",
          syntax: "<number>"
        },
        declaration: {
          comment: "missed, restored by https://drafts.csswg.org/css-syntax",
          syntax: "<ident-token> : <declaration-value>? [ '!' important ]?"
        },
        "declaration-list": {
          comment: "missed, restored by https://drafts.csswg.org/css-syntax",
          syntax: "[ <declaration>? ';' ]* <declaration>?"
        },
        url: {
          comment: "https://drafts.csswg.org/css-values-4/#urls",
          syntax: "url( <string> <url-modifier>* ) | <url-token>"
        },
        "url-modifier": {
          comment: "https://drafts.csswg.org/css-values-4/#typedef-url-modifier",
          syntax: "<ident> | <function-token> <any-value> )"
        },
        "number-zero-one": {
          syntax: "<number [0,1]>"
        },
        "number-one-or-greater": {
          syntax: "<number [1,\u221E]>"
        },
        "-non-standard-display": {
          syntax: "-ms-inline-flexbox | -ms-grid | -ms-inline-grid | -webkit-flex | -webkit-inline-flex | -webkit-box | -webkit-inline-box | -moz-inline-stack | -moz-box | -moz-inline-box"
        }
      }
    };
  }
});

// node_modules/css-tree/cjs/data-patch.cjs
var require_data_patch = __commonJS({
  "node_modules/css-tree/cjs/data-patch.cjs"(exports, module2) {
    "use strict";
    var patch = require_patch();
    var patch$1 = patch;
    module2.exports = patch$1;
  }
});

// node_modules/mdn-data/css/at-rules.json
var require_at_rules = __commonJS({
  "node_modules/mdn-data/css/at-rules.json"(exports, module2) {
    module2.exports = {
      "@charset": {
        syntax: '@charset "<charset>";',
        groups: [
          "CSS Charsets"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/@charset"
      },
      "@counter-style": {
        syntax: "@counter-style <counter-style-name> {\n  [ system: <counter-system>; ] ||\n  [ symbols: <counter-symbols>; ] ||\n  [ additive-symbols: <additive-symbols>; ] ||\n  [ negative: <negative-symbol>; ] ||\n  [ prefix: <prefix>; ] ||\n  [ suffix: <suffix>; ] ||\n  [ range: <range>; ] ||\n  [ pad: <padding>; ] ||\n  [ speak-as: <speak-as>; ] ||\n  [ fallback: <counter-style-name>; ]\n}",
        interfaces: [
          "CSSCounterStyleRule"
        ],
        groups: [
          "CSS Counter Styles"
        ],
        descriptors: {
          "additive-symbols": {
            syntax: "[ <integer> && <symbol> ]#",
            media: "all",
            initial: "n/a (required)",
            percentages: "no",
            computed: "asSpecified",
            order: "orderOfAppearance",
            status: "standard"
          },
          fallback: {
            syntax: "<counter-style-name>",
            media: "all",
            initial: "decimal",
            percentages: "no",
            computed: "asSpecified",
            order: "uniqueOrder",
            status: "standard"
          },
          negative: {
            syntax: "<symbol> <symbol>?",
            media: "all",
            initial: '"-" hyphen-minus',
            percentages: "no",
            computed: "asSpecified",
            order: "orderOfAppearance",
            status: "standard"
          },
          pad: {
            syntax: "<integer> && <symbol>",
            media: "all",
            initial: '0 ""',
            percentages: "no",
            computed: "asSpecified",
            order: "uniqueOrder",
            status: "standard"
          },
          prefix: {
            syntax: "<symbol>",
            media: "all",
            initial: '""',
            percentages: "no",
            computed: "asSpecified",
            order: "uniqueOrder",
            status: "standard"
          },
          range: {
            syntax: "[ [ <integer> | infinite ]{2} ]# | auto",
            media: "all",
            initial: "auto",
            percentages: "no",
            computed: "asSpecified",
            order: "orderOfAppearance",
            status: "standard"
          },
          "speak-as": {
            syntax: "auto | bullets | numbers | words | spell-out | <counter-style-name>",
            media: "all",
            initial: "auto",
            percentages: "no",
            computed: "asSpecified",
            order: "uniqueOrder",
            status: "standard"
          },
          suffix: {
            syntax: "<symbol>",
            media: "all",
            initial: '". "',
            percentages: "no",
            computed: "asSpecified",
            order: "uniqueOrder",
            status: "standard"
          },
          symbols: {
            syntax: "<symbol>+",
            media: "all",
            initial: "n/a (required)",
            percentages: "no",
            computed: "asSpecified",
            order: "orderOfAppearance",
            status: "standard"
          },
          system: {
            syntax: "cyclic | numeric | alphabetic | symbolic | additive | [ fixed <integer>? ] | [ extends <counter-style-name> ]",
            media: "all",
            initial: "symbolic",
            percentages: "no",
            computed: "asSpecified",
            order: "uniqueOrder",
            status: "standard"
          }
        },
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/@counter-style"
      },
      "@document": {
        syntax: "@document [ <url> | url-prefix(<string>) | domain(<string>) | media-document(<string>) | regexp(<string>) ]# {\n  <group-rule-body>\n}",
        interfaces: [
          "CSSGroupingRule",
          "CSSConditionRule"
        ],
        groups: [
          "CSS Conditional Rules"
        ],
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/@document"
      },
      "@font-face": {
        syntax: "@font-face {\n  [ font-family: <family-name>; ] ||\n  [ src: <src>; ] ||\n  [ unicode-range: <unicode-range>; ] ||\n  [ font-variant: <font-variant>; ] ||\n  [ font-feature-settings: <font-feature-settings>; ] ||\n  [ font-variation-settings: <font-variation-settings>; ] ||\n  [ font-stretch: <font-stretch>; ] ||\n  [ font-weight: <font-weight>; ] ||\n  [ font-style: <font-style>; ] ||\n  [ size-adjust: <size-adjust>; ] ||\n  [ ascent-override: <ascent-override>; ] ||\n  [ descent-override: <descent-override>; ] ||\n  [ line-gap-override: <line-gap-override>; ]\n}",
        interfaces: [
          "CSSFontFaceRule"
        ],
        groups: [
          "CSS Fonts"
        ],
        descriptors: {
          "ascent-override": {
            syntax: "normal | <percentage>",
            media: "all",
            initial: "normal",
            percentages: "asSpecified",
            computed: "asSpecified",
            order: "orderOfAppearance",
            status: "experimental"
          },
          "descent-override": {
            syntax: "normal | <percentage>",
            media: "all",
            initial: "normal",
            percentages: "asSpecified",
            computed: "asSpecified",
            order: "orderOfAppearance",
            status: "experimental"
          },
          "font-display": {
            syntax: "[ auto | block | swap | fallback | optional ]",
            media: "visual",
            percentages: "no",
            initial: "auto",
            computed: "asSpecified",
            order: "uniqueOrder",
            status: "experimental"
          },
          "font-family": {
            syntax: "<family-name>",
            media: "all",
            initial: "n/a (required)",
            percentages: "no",
            computed: "asSpecified",
            order: "uniqueOrder",
            status: "standard"
          },
          "font-feature-settings": {
            syntax: "normal | <feature-tag-value>#",
            media: "all",
            initial: "normal",
            percentages: "no",
            computed: "asSpecified",
            order: "orderOfAppearance",
            status: "standard"
          },
          "font-variation-settings": {
            syntax: "normal | [ <string> <number> ]#",
            media: "all",
            initial: "normal",
            percentages: "no",
            computed: "asSpecified",
            order: "orderOfAppearance",
            status: "standard"
          },
          "font-stretch": {
            syntax: "<font-stretch-absolute>{1,2}",
            media: "all",
            initial: "normal",
            percentages: "no",
            computed: "asSpecified",
            order: "uniqueOrder",
            status: "standard"
          },
          "font-style": {
            syntax: "normal | italic | oblique <angle>{0,2}",
            media: "all",
            initial: "normal",
            percentages: "no",
            computed: "asSpecified",
            order: "uniqueOrder",
            status: "standard"
          },
          "font-weight": {
            syntax: "<font-weight-absolute>{1,2}",
            media: "all",
            initial: "normal",
            percentages: "no",
            computed: "asSpecified",
            order: "uniqueOrder",
            status: "standard"
          },
          "font-variant": {
            syntax: "normal | none | [ <common-lig-values> || <discretionary-lig-values> || <historical-lig-values> || <contextual-alt-values> || stylistic(<feature-value-name>) || historical-forms || styleset(<feature-value-name>#) || character-variant(<feature-value-name>#) || swash(<feature-value-name>) || ornaments(<feature-value-name>) || annotation(<feature-value-name>) || [ small-caps | all-small-caps | petite-caps | all-petite-caps | unicase | titling-caps ] || <numeric-figure-values> || <numeric-spacing-values> || <numeric-fraction-values> || ordinal || slashed-zero || <east-asian-variant-values> || <east-asian-width-values> || ruby ]",
            media: "all",
            initial: "normal",
            percentages: "no",
            computed: "asSpecified",
            order: "orderOfAppearance",
            status: "standard"
          },
          "line-gap-override": {
            syntax: "normal | <percentage>",
            media: "all",
            initial: "normal",
            percentages: "asSpecified",
            computed: "asSpecified",
            order: "orderOfAppearance",
            status: "experimental"
          },
          "size-adjust": {
            syntax: "<percentage>",
            media: "all",
            initial: "100%",
            percentages: "asSpecified",
            computed: "asSpecified",
            order: "orderOfAppearance",
            status: "experimental"
          },
          src: {
            syntax: "[ <url> [ format( <string># ) ]? | local( <family-name> ) ]#",
            media: "all",
            initial: "n/a (required)",
            percentages: "no",
            computed: "asSpecified",
            order: "orderOfAppearance",
            status: "standard"
          },
          "unicode-range": {
            syntax: "<unicode-range>#",
            media: "all",
            initial: "U+0-10FFFF",
            percentages: "no",
            computed: "asSpecified",
            order: "orderOfAppearance",
            status: "standard"
          }
        },
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/@font-face"
      },
      "@font-feature-values": {
        syntax: "@font-feature-values <family-name># {\n  <feature-value-block-list>\n}",
        interfaces: [
          "CSSFontFeatureValuesRule"
        ],
        groups: [
          "CSS Fonts"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/@font-feature-values"
      },
      "@import": {
        syntax: "@import [ <string> | <url> ]\n        [ layer | layer(<layer-name>) ]?\n        [ supports( [ <supports-condition> | <declaration> ] ) ]?\n        <media-query-list>? ;",
        groups: [
          "CSS Conditional Rules",
          "Media Queries"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/@import"
      },
      "@keyframes": {
        syntax: "@keyframes <keyframes-name> {\n  <keyframe-block-list>\n}",
        interfaces: [
          "CSSKeyframeRule",
          "CSSKeyframesRule"
        ],
        groups: [
          "CSS Animations"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/@keyframes"
      },
      "@layer": {
        syntax: "@layer [ <layer-name># | <layer-name>?  {\n  <stylesheet>\n} ]",
        interfaces: [
          "CSSLayerBlockRule",
          "CSSLayerStatementRule"
        ],
        groups: [
          "CSS Cascading and Inheritance"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/@layer"
      },
      "@media": {
        syntax: "@media <media-query-list> {\n  <group-rule-body>\n}",
        interfaces: [
          "CSSGroupingRule",
          "CSSConditionRule",
          "CSSMediaRule",
          "CSSCustomMediaRule"
        ],
        groups: [
          "CSS Conditional Rules",
          "Media Queries"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/@media"
      },
      "@namespace": {
        syntax: "@namespace <namespace-prefix>? [ <string> | <url> ];",
        groups: [
          "CSS Namespaces"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/@namespace"
      },
      "@page": {
        syntax: "@page <page-selector-list> {\n  <page-body>\n}",
        interfaces: [
          "CSSPageRule"
        ],
        groups: [
          "CSS Pages"
        ],
        descriptors: {
          bleed: {
            syntax: "auto | <length>",
            media: [
              "visual",
              "paged"
            ],
            initial: "auto",
            percentages: "no",
            computed: "asSpecified",
            order: "uniqueOrder",
            status: "standard"
          },
          marks: {
            syntax: "none | [ crop || cross ]",
            media: [
              "visual",
              "paged"
            ],
            initial: "none",
            percentages: "no",
            computed: "asSpecified",
            order: "orderOfAppearance",
            status: "standard"
          },
          size: {
            syntax: "<length>{1,2} | auto | [ <page-size> || [ portrait | landscape ] ]",
            media: [
              "visual",
              "paged"
            ],
            initial: "auto",
            percentages: "no",
            computed: "asSpecifiedRelativeToAbsoluteLengths",
            order: "orderOfAppearance",
            status: "standard"
          }
        },
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/@page"
      },
      "@property": {
        syntax: "@property <custom-property-name> {\n  <declaration-list>\n}",
        interfaces: [
          "CSS",
          "CSSPropertyRule"
        ],
        groups: [
          "CSS Houdini"
        ],
        descriptors: {
          syntax: {
            syntax: "<string>",
            media: "all",
            percentages: "no",
            initial: "n/a (required)",
            computed: "asSpecified",
            order: "uniqueOrder",
            status: "experimental"
          },
          inherits: {
            syntax: "true | false",
            media: "all",
            percentages: "no",
            initial: "auto",
            computed: "asSpecified",
            order: "uniqueOrder",
            status: "experimental"
          },
          "initial-value": {
            syntax: "<string>",
            media: "all",
            initial: "n/a (required)",
            percentages: "no",
            computed: "asSpecified",
            order: "uniqueOrder",
            status: "experimental"
          }
        },
        status: "experimental",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/@property"
      },
      "@scroll-timeline": {
        syntax: "@scroll-timeline <timeline-name> { <declaration-list> }",
        interfaces: [
          "ScrollTimeline"
        ],
        groups: [
          "CSS Animations"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/@scroll-timeline"
      },
      "@supports": {
        syntax: "@supports <supports-condition> {\n  <group-rule-body>\n}",
        interfaces: [
          "CSSGroupingRule",
          "CSSConditionRule",
          "CSSSupportsRule"
        ],
        groups: [
          "CSS Conditional Rules"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/@supports"
      },
      "@viewport": {
        syntax: "@viewport {\n  <group-rule-body>\n}",
        interfaces: [
          "CSSViewportRule"
        ],
        groups: [
          "CSS Device Adaptation"
        ],
        descriptors: {
          height: {
            syntax: "<viewport-length>{1,2}",
            media: [
              "visual",
              "continuous"
            ],
            initial: [
              "min-height",
              "max-height"
            ],
            percentages: [
              "min-height",
              "max-height"
            ],
            computed: [
              "min-height",
              "max-height"
            ],
            order: "orderOfAppearance",
            status: "standard"
          },
          "max-height": {
            syntax: "<viewport-length>",
            media: [
              "visual",
              "continuous"
            ],
            initial: "auto",
            percentages: "referToHeightOfInitialViewport",
            computed: "lengthAbsolutePercentageAsSpecifiedOtherwiseAuto",
            order: "uniqueOrder",
            status: "standard"
          },
          "max-width": {
            syntax: "<viewport-length>",
            media: [
              "visual",
              "continuous"
            ],
            initial: "auto",
            percentages: "referToWidthOfInitialViewport",
            computed: "lengthAbsolutePercentageAsSpecifiedOtherwiseAuto",
            order: "uniqueOrder",
            status: "standard"
          },
          "max-zoom": {
            syntax: "auto | <number> | <percentage>",
            media: [
              "visual",
              "continuous"
            ],
            initial: "auto",
            percentages: "the zoom factor itself",
            computed: "autoNonNegativeOrPercentage",
            order: "uniqueOrder",
            status: "standard"
          },
          "min-height": {
            syntax: "<viewport-length>",
            media: [
              "visual",
              "continuous"
            ],
            initial: "auto",
            percentages: "referToHeightOfInitialViewport",
            computed: "lengthAbsolutePercentageAsSpecifiedOtherwiseAuto",
            order: "uniqueOrder",
            status: "standard"
          },
          "min-width": {
            syntax: "<viewport-length>",
            media: [
              "visual",
              "continuous"
            ],
            initial: "auto",
            percentages: "referToWidthOfInitialViewport",
            computed: "lengthAbsolutePercentageAsSpecifiedOtherwiseAuto",
            order: "uniqueOrder",
            status: "standard"
          },
          "min-zoom": {
            syntax: "auto | <number> | <percentage>",
            media: [
              "visual",
              "continuous"
            ],
            initial: "auto",
            percentages: "the zoom factor itself",
            computed: "autoNonNegativeOrPercentage",
            order: "uniqueOrder",
            status: "standard"
          },
          orientation: {
            syntax: "auto | portrait | landscape",
            media: [
              "visual",
              "continuous"
            ],
            initial: "auto",
            percentages: "referToSizeOfBoundingBox",
            computed: "asSpecified",
            order: "uniqueOrder",
            status: "standard"
          },
          "user-zoom": {
            syntax: "zoom | fixed",
            media: [
              "visual",
              "continuous"
            ],
            initial: "zoom",
            percentages: "referToSizeOfBoundingBox",
            computed: "asSpecified",
            order: "uniqueOrder",
            status: "standard"
          },
          "viewport-fit": {
            syntax: "auto | contain | cover",
            media: [
              "visual",
              "continuous"
            ],
            initial: "auto",
            percentages: "no",
            computed: "asSpecified",
            order: "uniqueOrder",
            status: "standard"
          },
          width: {
            syntax: "<viewport-length>{1,2}",
            media: [
              "visual",
              "continuous"
            ],
            initial: [
              "min-width",
              "max-width"
            ],
            percentages: [
              "min-width",
              "max-width"
            ],
            computed: [
              "min-width",
              "max-width"
            ],
            order: "orderOfAppearance",
            status: "standard"
          },
          zoom: {
            syntax: "auto | <number> | <percentage>",
            media: [
              "visual",
              "continuous"
            ],
            initial: "auto",
            percentages: "the zoom factor itself",
            computed: "autoNonNegativeOrPercentage",
            order: "uniqueOrder",
            status: "standard"
          }
        },
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/@viewport"
      }
    };
  }
});

// node_modules/mdn-data/css/properties.json
var require_properties = __commonJS({
  "node_modules/mdn-data/css/properties.json"(exports, module2) {
    module2.exports = {
      "--*": {
        syntax: "<declaration-value>",
        media: "all",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Variables"
        ],
        initial: "seeProse",
        appliesto: "allElements",
        computed: "asSpecifiedWithVarsSubstituted",
        order: "perGrammar",
        status: "experimental",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/--*"
      },
      "-ms-accelerator": {
        syntax: "false | true",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "false",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-accelerator"
      },
      "-ms-block-progression": {
        syntax: "tb | rl | bt | lr",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "tb",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-block-progression"
      },
      "-ms-content-zoom-chaining": {
        syntax: "none | chained",
        media: "interactive",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "none",
        appliesto: "nonReplacedBlockAndInlineBlockElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-content-zoom-chaining"
      },
      "-ms-content-zooming": {
        syntax: "none | zoom",
        media: "interactive",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "zoomForTheTopLevelNoneForTheRest",
        appliesto: "nonReplacedBlockAndInlineBlockElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-content-zooming"
      },
      "-ms-content-zoom-limit": {
        syntax: "<'-ms-content-zoom-limit-min'> <'-ms-content-zoom-limit-max'>",
        media: "interactive",
        inherited: false,
        animationType: "discrete",
        percentages: [
          "-ms-content-zoom-limit-max",
          "-ms-content-zoom-limit-min"
        ],
        groups: [
          "Microsoft Extensions"
        ],
        initial: [
          "-ms-content-zoom-limit-max",
          "-ms-content-zoom-limit-min"
        ],
        appliesto: "nonReplacedBlockAndInlineBlockElements",
        computed: [
          "-ms-content-zoom-limit-max",
          "-ms-content-zoom-limit-min"
        ],
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-content-zoom-limit"
      },
      "-ms-content-zoom-limit-max": {
        syntax: "<percentage>",
        media: "interactive",
        inherited: false,
        animationType: "discrete",
        percentages: "maxZoomFactor",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "400%",
        appliesto: "nonReplacedBlockAndInlineBlockElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-content-zoom-limit-max"
      },
      "-ms-content-zoom-limit-min": {
        syntax: "<percentage>",
        media: "interactive",
        inherited: false,
        animationType: "discrete",
        percentages: "minZoomFactor",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "100%",
        appliesto: "nonReplacedBlockAndInlineBlockElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-content-zoom-limit-min"
      },
      "-ms-content-zoom-snap": {
        syntax: "<'-ms-content-zoom-snap-type'> || <'-ms-content-zoom-snap-points'>",
        media: "interactive",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: [
          "-ms-content-zoom-snap-type",
          "-ms-content-zoom-snap-points"
        ],
        appliesto: "nonReplacedBlockAndInlineBlockElements",
        computed: [
          "-ms-content-zoom-snap-type",
          "-ms-content-zoom-snap-points"
        ],
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-content-zoom-snap"
      },
      "-ms-content-zoom-snap-points": {
        syntax: "snapInterval( <percentage>, <percentage> ) | snapList( <percentage># )",
        media: "interactive",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "snapInterval(0%, 100%)",
        appliesto: "nonReplacedBlockAndInlineBlockElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-content-zoom-snap-points"
      },
      "-ms-content-zoom-snap-type": {
        syntax: "none | proximity | mandatory",
        media: "interactive",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "none",
        appliesto: "nonReplacedBlockAndInlineBlockElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-content-zoom-snap-type"
      },
      "-ms-filter": {
        syntax: "<string>",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: '""',
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-filter"
      },
      "-ms-flow-from": {
        syntax: "[ none | <custom-ident> ]#",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "none",
        appliesto: "nonReplacedElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-flow-from"
      },
      "-ms-flow-into": {
        syntax: "[ none | <custom-ident> ]#",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "none",
        appliesto: "iframeElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-flow-into"
      },
      "-ms-grid-columns": {
        syntax: "none | <track-list> | <auto-track-list>",
        media: "visual",
        inherited: false,
        animationType: "simpleListOfLpcDifferenceLpc",
        percentages: "referToDimensionOfContentArea",
        groups: [
          "CSS Grid Layout"
        ],
        initial: "none",
        appliesto: "gridContainers",
        computed: "asSpecifiedRelativeToAbsoluteLengths",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-grid-columns"
      },
      "-ms-grid-rows": {
        syntax: "none | <track-list> | <auto-track-list>",
        media: "visual",
        inherited: false,
        animationType: "simpleListOfLpcDifferenceLpc",
        percentages: "referToDimensionOfContentArea",
        groups: [
          "CSS Grid Layout"
        ],
        initial: "none",
        appliesto: "gridContainers",
        computed: "asSpecifiedRelativeToAbsoluteLengths",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-grid-rows"
      },
      "-ms-high-contrast-adjust": {
        syntax: "auto | none",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "auto",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-high-contrast-adjust"
      },
      "-ms-hyphenate-limit-chars": {
        syntax: "auto | <integer>{1,3}",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "auto",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-hyphenate-limit-chars"
      },
      "-ms-hyphenate-limit-lines": {
        syntax: "no-limit | <integer>",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "no-limit",
        appliesto: "blockContainerElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-hyphenate-limit-lines"
      },
      "-ms-hyphenate-limit-zone": {
        syntax: "<percentage> | <length>",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "referToLineBoxWidth",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "0",
        appliesto: "blockContainerElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-hyphenate-limit-zone"
      },
      "-ms-ime-align": {
        syntax: "auto | after",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "auto",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-ime-align"
      },
      "-ms-overflow-style": {
        syntax: "auto | none | scrollbar | -ms-autohiding-scrollbar",
        media: "interactive",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "auto",
        appliesto: "nonReplacedBlockAndInlineBlockElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-overflow-style"
      },
      "-ms-scrollbar-3dlight-color": {
        syntax: "<color>",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "dependsOnUserAgent",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-scrollbar-3dlight-color"
      },
      "-ms-scrollbar-arrow-color": {
        syntax: "<color>",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "ButtonText",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-scrollbar-arrow-color"
      },
      "-ms-scrollbar-base-color": {
        syntax: "<color>",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "dependsOnUserAgent",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-scrollbar-base-color"
      },
      "-ms-scrollbar-darkshadow-color": {
        syntax: "<color>",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "ThreeDDarkShadow",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-scrollbar-darkshadow-color"
      },
      "-ms-scrollbar-face-color": {
        syntax: "<color>",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "ThreeDFace",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-scrollbar-face-color"
      },
      "-ms-scrollbar-highlight-color": {
        syntax: "<color>",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "ThreeDHighlight",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-scrollbar-highlight-color"
      },
      "-ms-scrollbar-shadow-color": {
        syntax: "<color>",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "ThreeDDarkShadow",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-scrollbar-shadow-color"
      },
      "-ms-scrollbar-track-color": {
        syntax: "<color>",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "Scrollbar",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-scrollbar-track-color"
      },
      "-ms-scroll-chaining": {
        syntax: "chained | none",
        media: "interactive",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "chained",
        appliesto: "nonReplacedBlockAndInlineBlockElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-scroll-chaining"
      },
      "-ms-scroll-limit": {
        syntax: "<'-ms-scroll-limit-x-min'> <'-ms-scroll-limit-y-min'> <'-ms-scroll-limit-x-max'> <'-ms-scroll-limit-y-max'>",
        media: "interactive",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: [
          "-ms-scroll-limit-x-min",
          "-ms-scroll-limit-y-min",
          "-ms-scroll-limit-x-max",
          "-ms-scroll-limit-y-max"
        ],
        appliesto: "nonReplacedBlockAndInlineBlockElements",
        computed: [
          "-ms-scroll-limit-x-min",
          "-ms-scroll-limit-y-min",
          "-ms-scroll-limit-x-max",
          "-ms-scroll-limit-y-max"
        ],
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-scroll-limit"
      },
      "-ms-scroll-limit-x-max": {
        syntax: "auto | <length>",
        media: "interactive",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "auto",
        appliesto: "nonReplacedBlockAndInlineBlockElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-scroll-limit-x-max"
      },
      "-ms-scroll-limit-x-min": {
        syntax: "<length>",
        media: "interactive",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "0",
        appliesto: "nonReplacedBlockAndInlineBlockElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-scroll-limit-x-min"
      },
      "-ms-scroll-limit-y-max": {
        syntax: "auto | <length>",
        media: "interactive",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "auto",
        appliesto: "nonReplacedBlockAndInlineBlockElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-scroll-limit-y-max"
      },
      "-ms-scroll-limit-y-min": {
        syntax: "<length>",
        media: "interactive",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "0",
        appliesto: "nonReplacedBlockAndInlineBlockElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-scroll-limit-y-min"
      },
      "-ms-scroll-rails": {
        syntax: "none | railed",
        media: "interactive",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "railed",
        appliesto: "nonReplacedBlockAndInlineBlockElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-scroll-rails"
      },
      "-ms-scroll-snap-points-x": {
        syntax: "snapInterval( <length-percentage>, <length-percentage> ) | snapList( <length-percentage># )",
        media: "interactive",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "snapInterval(0px, 100%)",
        appliesto: "nonReplacedBlockAndInlineBlockElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-scroll-snap-points-x"
      },
      "-ms-scroll-snap-points-y": {
        syntax: "snapInterval( <length-percentage>, <length-percentage> ) | snapList( <length-percentage># )",
        media: "interactive",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "snapInterval(0px, 100%)",
        appliesto: "nonReplacedBlockAndInlineBlockElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-scroll-snap-points-y"
      },
      "-ms-scroll-snap-type": {
        syntax: "none | proximity | mandatory",
        media: "interactive",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "none",
        appliesto: "nonReplacedBlockAndInlineBlockElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-scroll-snap-type"
      },
      "-ms-scroll-snap-x": {
        syntax: "<'-ms-scroll-snap-type'> <'-ms-scroll-snap-points-x'>",
        media: "interactive",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: [
          "-ms-scroll-snap-type",
          "-ms-scroll-snap-points-x"
        ],
        appliesto: "nonReplacedBlockAndInlineBlockElements",
        computed: [
          "-ms-scroll-snap-type",
          "-ms-scroll-snap-points-x"
        ],
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-scroll-snap-x"
      },
      "-ms-scroll-snap-y": {
        syntax: "<'-ms-scroll-snap-type'> <'-ms-scroll-snap-points-y'>",
        media: "interactive",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: [
          "-ms-scroll-snap-type",
          "-ms-scroll-snap-points-y"
        ],
        appliesto: "nonReplacedBlockAndInlineBlockElements",
        computed: [
          "-ms-scroll-snap-type",
          "-ms-scroll-snap-points-y"
        ],
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-scroll-snap-y"
      },
      "-ms-scroll-translation": {
        syntax: "none | vertical-to-horizontal",
        media: "interactive",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "none",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-scroll-translation"
      },
      "-ms-text-autospace": {
        syntax: "none | ideograph-alpha | ideograph-numeric | ideograph-parenthesis | ideograph-space",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "none",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-text-autospace"
      },
      "-ms-touch-select": {
        syntax: "grippers | none",
        media: "interactive",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "grippers",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-touch-select"
      },
      "-ms-user-select": {
        syntax: "none | element | text",
        media: "interactive",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "text",
        appliesto: "nonReplacedElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-user-select"
      },
      "-ms-wrap-flow": {
        syntax: "auto | both | start | end | maximum | clear",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "auto",
        appliesto: "blockLevelElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-wrap-flow"
      },
      "-ms-wrap-margin": {
        syntax: "<length>",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "0",
        appliesto: "exclusionElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-wrap-margin"
      },
      "-ms-wrap-through": {
        syntax: "wrap | none",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "wrap",
        appliesto: "blockLevelElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-wrap-through"
      },
      "-moz-appearance": {
        syntax: "none | button | button-arrow-down | button-arrow-next | button-arrow-previous | button-arrow-up | button-bevel | button-focus | caret | checkbox | checkbox-container | checkbox-label | checkmenuitem | dualbutton | groupbox | listbox | listitem | menuarrow | menubar | menucheckbox | menuimage | menuitem | menuitemtext | menulist | menulist-button | menulist-text | menulist-textfield | menupopup | menuradio | menuseparator | meterbar | meterchunk | progressbar | progressbar-vertical | progresschunk | progresschunk-vertical | radio | radio-container | radio-label | radiomenuitem | range | range-thumb | resizer | resizerpanel | scale-horizontal | scalethumbend | scalethumb-horizontal | scalethumbstart | scalethumbtick | scalethumb-vertical | scale-vertical | scrollbarbutton-down | scrollbarbutton-left | scrollbarbutton-right | scrollbarbutton-up | scrollbarthumb-horizontal | scrollbarthumb-vertical | scrollbartrack-horizontal | scrollbartrack-vertical | searchfield | separator | sheet | spinner | spinner-downbutton | spinner-textfield | spinner-upbutton | splitter | statusbar | statusbarpanel | tab | tabpanel | tabpanels | tab-scroll-arrow-back | tab-scroll-arrow-forward | textfield | textfield-multiline | toolbar | toolbarbutton | toolbarbutton-dropdown | toolbargripper | toolbox | tooltip | treeheader | treeheadercell | treeheadersortarrow | treeitem | treeline | treetwisty | treetwistyopen | treeview | -moz-mac-unified-toolbar | -moz-win-borderless-glass | -moz-win-browsertabbar-toolbox | -moz-win-communicationstext | -moz-win-communications-toolbox | -moz-win-exclude-glass | -moz-win-glass | -moz-win-mediatext | -moz-win-media-toolbox | -moz-window-button-box | -moz-window-button-box-maximized | -moz-window-button-close | -moz-window-button-maximize | -moz-window-button-minimize | -moz-window-button-restore | -moz-window-frame-bottom | -moz-window-frame-left | -moz-window-frame-right | -moz-window-titlebar | -moz-window-titlebar-maximized",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Mozilla Extensions",
          "WebKit Extensions"
        ],
        initial: "noneButOverriddenInUserAgentCSS",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/appearance"
      },
      "-moz-binding": {
        syntax: "<url> | none",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Mozilla Extensions"
        ],
        initial: "none",
        appliesto: "allElementsExceptGeneratedContentOrPseudoElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-moz-binding"
      },
      "-moz-border-bottom-colors": {
        syntax: "<color>+ | none",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Mozilla Extensions"
        ],
        initial: "none",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-moz-border-bottom-colors"
      },
      "-moz-border-left-colors": {
        syntax: "<color>+ | none",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Mozilla Extensions"
        ],
        initial: "none",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-moz-border-left-colors"
      },
      "-moz-border-right-colors": {
        syntax: "<color>+ | none",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Mozilla Extensions"
        ],
        initial: "none",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-moz-border-right-colors"
      },
      "-moz-border-top-colors": {
        syntax: "<color>+ | none",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Mozilla Extensions"
        ],
        initial: "none",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-moz-border-top-colors"
      },
      "-moz-context-properties": {
        syntax: "none | [ fill | fill-opacity | stroke | stroke-opacity ]#",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Mozilla Extensions"
        ],
        initial: "none",
        appliesto: "allElementsThatCanReferenceImages",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-moz-context-properties"
      },
      "-moz-float-edge": {
        syntax: "border-box | content-box | margin-box | padding-box",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Mozilla Extensions"
        ],
        initial: "content-box",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-moz-float-edge"
      },
      "-moz-force-broken-image-icon": {
        syntax: "0 | 1",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Mozilla Extensions"
        ],
        initial: "0",
        appliesto: "images",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-moz-force-broken-image-icon"
      },
      "-moz-image-region": {
        syntax: "<shape> | auto",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Mozilla Extensions"
        ],
        initial: "auto",
        appliesto: "xulImageElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-moz-image-region"
      },
      "-moz-orient": {
        syntax: "inline | block | horizontal | vertical",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Mozilla Extensions"
        ],
        initial: "inline",
        appliesto: "anyElementEffectOnProgressAndMeter",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-moz-orient"
      },
      "-moz-outline-radius": {
        syntax: "<outline-radius>{1,4} [ / <outline-radius>{1,4} ]?",
        media: "visual",
        inherited: false,
        animationType: [
          "-moz-outline-radius-topleft",
          "-moz-outline-radius-topright",
          "-moz-outline-radius-bottomright",
          "-moz-outline-radius-bottomleft"
        ],
        percentages: [
          "-moz-outline-radius-topleft",
          "-moz-outline-radius-topright",
          "-moz-outline-radius-bottomright",
          "-moz-outline-radius-bottomleft"
        ],
        groups: [
          "Mozilla Extensions"
        ],
        initial: [
          "-moz-outline-radius-topleft",
          "-moz-outline-radius-topright",
          "-moz-outline-radius-bottomright",
          "-moz-outline-radius-bottomleft"
        ],
        appliesto: "allElements",
        computed: [
          "-moz-outline-radius-topleft",
          "-moz-outline-radius-topright",
          "-moz-outline-radius-bottomright",
          "-moz-outline-radius-bottomleft"
        ],
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-moz-outline-radius"
      },
      "-moz-outline-radius-bottomleft": {
        syntax: "<outline-radius>",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "referToDimensionOfBorderBox",
        groups: [
          "Mozilla Extensions"
        ],
        initial: "0",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-moz-outline-radius-bottomleft"
      },
      "-moz-outline-radius-bottomright": {
        syntax: "<outline-radius>",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "referToDimensionOfBorderBox",
        groups: [
          "Mozilla Extensions"
        ],
        initial: "0",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-moz-outline-radius-bottomright"
      },
      "-moz-outline-radius-topleft": {
        syntax: "<outline-radius>",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "referToDimensionOfBorderBox",
        groups: [
          "Mozilla Extensions"
        ],
        initial: "0",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-moz-outline-radius-topleft"
      },
      "-moz-outline-radius-topright": {
        syntax: "<outline-radius>",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "referToDimensionOfBorderBox",
        groups: [
          "Mozilla Extensions"
        ],
        initial: "0",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-moz-outline-radius-topright"
      },
      "-moz-stack-sizing": {
        syntax: "ignore | stretch-to-fit",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Mozilla Extensions"
        ],
        initial: "stretch-to-fit",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-moz-stack-sizing"
      },
      "-moz-text-blink": {
        syntax: "none | blink",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Mozilla Extensions"
        ],
        initial: "none",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-moz-text-blink"
      },
      "-moz-user-focus": {
        syntax: "ignore | normal | select-after | select-before | select-menu | select-same | select-all | none",
        media: "interactive",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Mozilla Extensions"
        ],
        initial: "none",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-moz-user-focus"
      },
      "-moz-user-input": {
        syntax: "auto | none | enabled | disabled",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Mozilla Extensions"
        ],
        initial: "auto",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-moz-user-input"
      },
      "-moz-user-modify": {
        syntax: "read-only | read-write | write-only",
        media: "interactive",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Mozilla Extensions"
        ],
        initial: "read-only",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-moz-user-modify"
      },
      "-moz-window-dragging": {
        syntax: "drag | no-drag",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Mozilla Extensions"
        ],
        initial: "drag",
        appliesto: "allElementsCreatingNativeWindows",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-moz-window-dragging"
      },
      "-moz-window-shadow": {
        syntax: "default | menu | tooltip | sheet | none",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Mozilla Extensions"
        ],
        initial: "default",
        appliesto: "allElementsCreatingNativeWindows",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-moz-window-shadow"
      },
      "-webkit-appearance": {
        syntax: "none | button | button-bevel | caret | checkbox | default-button | inner-spin-button | listbox | listitem | media-controls-background | media-controls-fullscreen-background | media-current-time-display | media-enter-fullscreen-button | media-exit-fullscreen-button | media-fullscreen-button | media-mute-button | media-overlay-play-button | media-play-button | media-seek-back-button | media-seek-forward-button | media-slider | media-sliderthumb | media-time-remaining-display | media-toggle-closed-captions-button | media-volume-slider | media-volume-slider-container | media-volume-sliderthumb | menulist | menulist-button | menulist-text | menulist-textfield | meter | progress-bar | progress-bar-value | push-button | radio | searchfield | searchfield-cancel-button | searchfield-decoration | searchfield-results-button | searchfield-results-decoration | slider-horizontal | slider-vertical | sliderthumb-horizontal | sliderthumb-vertical | square-button | textarea | textfield | -apple-pay-button",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "WebKit Extensions"
        ],
        initial: "noneButOverriddenInUserAgentCSS",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/appearance"
      },
      "-webkit-border-before": {
        syntax: "<'border-width'> || <'border-style'> || <color>",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: [
          "-webkit-border-before-width"
        ],
        groups: [
          "WebKit Extensions"
        ],
        initial: [
          "border-width",
          "border-style",
          "color"
        ],
        appliesto: "allElements",
        computed: [
          "border-width",
          "border-style",
          "color"
        ],
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-webkit-border-before"
      },
      "-webkit-border-before-color": {
        syntax: "<color>",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "WebKit Extensions"
        ],
        initial: "currentcolor",
        appliesto: "allElements",
        computed: "computedColor",
        order: "uniqueOrder",
        status: "nonstandard"
      },
      "-webkit-border-before-style": {
        syntax: "<'border-style'>",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "WebKit Extensions"
        ],
        initial: "none",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard"
      },
      "-webkit-border-before-width": {
        syntax: "<'border-width'>",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "logicalWidthOfContainingBlock",
        groups: [
          "WebKit Extensions"
        ],
        initial: "medium",
        appliesto: "allElements",
        computed: "absoluteLengthZeroIfBorderStyleNoneOrHidden",
        order: "uniqueOrder",
        status: "nonstandard"
      },
      "-webkit-box-reflect": {
        syntax: "[ above | below | right | left ]? <length>? <image>?",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "WebKit Extensions"
        ],
        initial: "none",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-webkit-box-reflect"
      },
      "-webkit-line-clamp": {
        syntax: "none | <integer>",
        media: "visual",
        inherited: false,
        animationType: "byComputedValueType",
        percentages: "no",
        groups: [
          "WebKit Extensions",
          "CSS Overflow"
        ],
        initial: "none",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-webkit-line-clamp"
      },
      "-webkit-mask": {
        syntax: "[ <mask-reference> || <position> [ / <bg-size> ]? || <repeat-style> || [ <box> | border | padding | content | text ] || [ <box> | border | padding | content ] ]#",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "WebKit Extensions"
        ],
        initial: [
          "-webkit-mask-image",
          "-webkit-mask-repeat",
          "-webkit-mask-attachment",
          "-webkit-mask-position",
          "-webkit-mask-origin",
          "-webkit-mask-clip"
        ],
        appliesto: "allElements",
        computed: [
          "-webkit-mask-image",
          "-webkit-mask-repeat",
          "-webkit-mask-attachment",
          "-webkit-mask-position",
          "-webkit-mask-origin",
          "-webkit-mask-clip"
        ],
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/mask"
      },
      "-webkit-mask-attachment": {
        syntax: "<attachment>#",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "WebKit Extensions"
        ],
        initial: "scroll",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "orderOfAppearance",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-webkit-mask-attachment"
      },
      "-webkit-mask-clip": {
        syntax: "[ <box> | border | padding | content | text ]#",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "WebKit Extensions"
        ],
        initial: "border",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "orderOfAppearance",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/mask-clip"
      },
      "-webkit-mask-composite": {
        syntax: "<composite-style>#",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "WebKit Extensions"
        ],
        initial: "source-over",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "orderOfAppearance",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-webkit-mask-composite"
      },
      "-webkit-mask-image": {
        syntax: "<mask-reference>#",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "WebKit Extensions"
        ],
        initial: "none",
        appliesto: "allElements",
        computed: "absoluteURIOrNone",
        order: "orderOfAppearance",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/mask-image"
      },
      "-webkit-mask-origin": {
        syntax: "[ <box> | border | padding | content ]#",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "WebKit Extensions"
        ],
        initial: "padding",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "orderOfAppearance",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/mask-origin"
      },
      "-webkit-mask-position": {
        syntax: "<position>#",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "referToSizeOfElement",
        groups: [
          "WebKit Extensions"
        ],
        initial: "0% 0%",
        appliesto: "allElements",
        computed: "absoluteLengthOrPercentage",
        order: "orderOfAppearance",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/mask-position"
      },
      "-webkit-mask-position-x": {
        syntax: "[ <length-percentage> | left | center | right ]#",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "referToSizeOfElement",
        groups: [
          "WebKit Extensions"
        ],
        initial: "0%",
        appliesto: "allElements",
        computed: "absoluteLengthOrPercentage",
        order: "orderOfAppearance",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-webkit-mask-position-x"
      },
      "-webkit-mask-position-y": {
        syntax: "[ <length-percentage> | top | center | bottom ]#",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "referToSizeOfElement",
        groups: [
          "WebKit Extensions"
        ],
        initial: "0%",
        appliesto: "allElements",
        computed: "absoluteLengthOrPercentage",
        order: "orderOfAppearance",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-webkit-mask-position-y"
      },
      "-webkit-mask-repeat": {
        syntax: "<repeat-style>#",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "WebKit Extensions"
        ],
        initial: "repeat",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "orderOfAppearance",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/mask-repeat"
      },
      "-webkit-mask-repeat-x": {
        syntax: "repeat | no-repeat | space | round",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "WebKit Extensions"
        ],
        initial: "repeat",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "orderOfAppearance",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-webkit-mask-repeat-x"
      },
      "-webkit-mask-repeat-y": {
        syntax: "repeat | no-repeat | space | round",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "WebKit Extensions"
        ],
        initial: "repeat",
        appliesto: "allElements",
        computed: "absoluteLengthOrPercentage",
        order: "orderOfAppearance",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-webkit-mask-repeat-y"
      },
      "-webkit-mask-size": {
        syntax: "<bg-size>#",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "relativeToBackgroundPositioningArea",
        groups: [
          "WebKit Extensions"
        ],
        initial: "auto auto",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "orderOfAppearance",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/mask-size"
      },
      "-webkit-overflow-scrolling": {
        syntax: "auto | touch",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "WebKit Extensions"
        ],
        initial: "auto",
        appliesto: "scrollingBoxes",
        computed: "asSpecified",
        order: "orderOfAppearance",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-webkit-overflow-scrolling"
      },
      "-webkit-tap-highlight-color": {
        syntax: "<color>",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "WebKit Extensions"
        ],
        initial: "black",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-webkit-tap-highlight-color"
      },
      "-webkit-text-fill-color": {
        syntax: "<color>",
        media: "visual",
        inherited: true,
        animationType: "color",
        percentages: "no",
        groups: [
          "WebKit Extensions"
        ],
        initial: "currentcolor",
        appliesto: "allElements",
        computed: "computedColor",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-webkit-text-fill-color"
      },
      "-webkit-text-stroke": {
        syntax: "<length> || <color>",
        media: "visual",
        inherited: true,
        animationType: [
          "-webkit-text-stroke-width",
          "-webkit-text-stroke-color"
        ],
        percentages: "no",
        groups: [
          "WebKit Extensions"
        ],
        initial: [
          "-webkit-text-stroke-width",
          "-webkit-text-stroke-color"
        ],
        appliesto: "allElements",
        computed: [
          "-webkit-text-stroke-width",
          "-webkit-text-stroke-color"
        ],
        order: "canonicalOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-webkit-text-stroke"
      },
      "-webkit-text-stroke-color": {
        syntax: "<color>",
        media: "visual",
        inherited: true,
        animationType: "color",
        percentages: "no",
        groups: [
          "WebKit Extensions"
        ],
        initial: "currentcolor",
        appliesto: "allElements",
        computed: "computedColor",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-webkit-text-stroke-color"
      },
      "-webkit-text-stroke-width": {
        syntax: "<length>",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "WebKit Extensions"
        ],
        initial: "0",
        appliesto: "allElements",
        computed: "absoluteLength",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-webkit-text-stroke-width"
      },
      "-webkit-touch-callout": {
        syntax: "default | none",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "WebKit Extensions"
        ],
        initial: "default",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-webkit-touch-callout"
      },
      "-webkit-user-modify": {
        syntax: "read-only | read-write | read-write-plaintext-only",
        media: "interactive",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "WebKit Extensions"
        ],
        initial: "read-only",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard"
      },
      "accent-color": {
        syntax: "auto | <color>",
        media: "interactive",
        inherited: true,
        animationType: "byComputedValueType",
        percentages: "no",
        groups: [
          "CSS Basic User Interface"
        ],
        initial: "auto",
        appliesto: "allElements",
        computed: "asAutoOrColor",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/accent-color"
      },
      "align-content": {
        syntax: "normal | <baseline-position> | <content-distribution> | <overflow-position>? <content-position>",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Box Alignment"
        ],
        initial: "normal",
        appliesto: "multilineFlexContainers",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/align-content"
      },
      "align-items": {
        syntax: "normal | stretch | <baseline-position> | [ <overflow-position>? <self-position> ]",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Box Alignment"
        ],
        initial: "normal",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/align-items"
      },
      "align-self": {
        syntax: "auto | normal | stretch | <baseline-position> | <overflow-position>? <self-position>",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Box Alignment"
        ],
        initial: "auto",
        appliesto: "flexItemsGridItemsAndAbsolutelyPositionedBoxes",
        computed: "autoOnAbsolutelyPositionedElementsValueOfAlignItemsOnParent",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/align-self"
      },
      "align-tracks": {
        syntax: "[ normal | <baseline-position> | <content-distribution> | <overflow-position>? <content-position> ]#",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Grid Layout"
        ],
        initial: "normal",
        appliesto: "gridContainersWithMasonryLayoutInTheirBlockAxis",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "experimental",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/align-tracks"
      },
      all: {
        syntax: "initial | inherit | unset | revert | revert-layer",
        media: "noPracticalMedia",
        inherited: false,
        animationType: "eachOfShorthandPropertiesExceptUnicodeBiDiAndDirection",
        percentages: "no",
        groups: [
          "CSS Miscellaneous"
        ],
        initial: "noPracticalInitialValue",
        appliesto: "allElements",
        computed: "asSpecifiedAppliesToEachProperty",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/all"
      },
      animation: {
        syntax: "<single-animation>#",
        media: "visual",
        inherited: false,
        animationType: "notAnimatable",
        percentages: "no",
        groups: [
          "CSS Animations"
        ],
        initial: [
          "animation-name",
          "animation-duration",
          "animation-timing-function",
          "animation-delay",
          "animation-iteration-count",
          "animation-direction",
          "animation-fill-mode",
          "animation-play-state",
          "animation-timeline"
        ],
        appliesto: "allElementsAndPseudos",
        computed: [
          "animation-name",
          "animation-duration",
          "animation-timing-function",
          "animation-delay",
          "animation-direction",
          "animation-iteration-count",
          "animation-fill-mode",
          "animation-play-state",
          "animation-timeline"
        ],
        order: "orderOfAppearance",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/animation"
      },
      "animation-composition": {
        syntax: "<single-animation-composition>#",
        media: "visual",
        inherited: false,
        animationType: "notAnimatable",
        percentages: "no",
        groups: [
          "CSS Animations"
        ],
        initial: "replace",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "experimental",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/animation-composition"
      },
      "animation-delay": {
        syntax: "<time>#",
        media: "visual",
        inherited: false,
        animationType: "notAnimatable",
        percentages: "no",
        groups: [
          "CSS Animations"
        ],
        initial: "0s",
        appliesto: "allElementsAndPseudos",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/animation-delay"
      },
      "animation-direction": {
        syntax: "<single-animation-direction>#",
        media: "visual",
        inherited: false,
        animationType: "notAnimatable",
        percentages: "no",
        groups: [
          "CSS Animations"
        ],
        initial: "normal",
        appliesto: "allElementsAndPseudos",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/animation-direction"
      },
      "animation-duration": {
        syntax: "<time>#",
        media: "visual",
        inherited: false,
        animationType: "notAnimatable",
        percentages: "no",
        groups: [
          "CSS Animations"
        ],
        initial: "0s",
        appliesto: "allElementsAndPseudos",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/animation-duration"
      },
      "animation-fill-mode": {
        syntax: "<single-animation-fill-mode>#",
        media: "visual",
        inherited: false,
        animationType: "notAnimatable",
        percentages: "no",
        groups: [
          "CSS Animations"
        ],
        initial: "none",
        appliesto: "allElementsAndPseudos",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/animation-fill-mode"
      },
      "animation-iteration-count": {
        syntax: "<single-animation-iteration-count>#",
        media: "visual",
        inherited: false,
        animationType: "notAnimatable",
        percentages: "no",
        groups: [
          "CSS Animations"
        ],
        initial: "1",
        appliesto: "allElementsAndPseudos",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/animation-iteration-count"
      },
      "animation-name": {
        syntax: "[ none | <keyframes-name> ]#",
        media: "visual",
        inherited: false,
        animationType: "notAnimatable",
        percentages: "no",
        groups: [
          "CSS Animations"
        ],
        initial: "none",
        appliesto: "allElementsAndPseudos",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/animation-name"
      },
      "animation-play-state": {
        syntax: "<single-animation-play-state>#",
        media: "visual",
        inherited: false,
        animationType: "notAnimatable",
        percentages: "no",
        groups: [
          "CSS Animations"
        ],
        initial: "running",
        appliesto: "allElementsAndPseudos",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/animation-play-state"
      },
      "animation-timing-function": {
        syntax: "<easing-function>#",
        media: "visual",
        inherited: false,
        animationType: "notAnimatable",
        percentages: "no",
        groups: [
          "CSS Animations"
        ],
        initial: "ease",
        appliesto: "allElementsAndPseudos",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/animation-timing-function"
      },
      "animation-timeline": {
        syntax: "<single-animation-timeline>#",
        media: "visual",
        inherited: false,
        animationType: "notAnimatable",
        percentages: "no",
        groups: [
          "CSS Animations"
        ],
        initial: "auto",
        appliesto: "allElements",
        computed: "listEachItemIdentifyerOrNoneAuto",
        order: "uniqueOrder",
        status: "experimental",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/animation-timeline"
      },
      appearance: {
        syntax: "none | auto | textfield | menulist-button | <compat-auto>",
        media: "all",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Basic User Interface"
        ],
        initial: "none",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "perGrammar",
        status: "experimental",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/appearance"
      },
      "aspect-ratio": {
        syntax: "auto | <ratio>",
        media: "all",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Basic User Interface"
        ],
        initial: "auto",
        appliesto: "allElementsExceptInlineBoxesAndInternalRubyOrTableBoxes",
        computed: "asSpecified",
        order: "perGrammar",
        status: "experimental",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/aspect-ratio"
      },
      azimuth: {
        syntax: "<angle> | [ [ left-side | far-left | left | center-left | center | center-right | right | far-right | right-side ] || behind ] | leftwards | rightwards",
        media: "aural",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Speech"
        ],
        initial: "center",
        appliesto: "allElements",
        computed: "normalizedAngle",
        order: "orderOfAppearance",
        status: "obsolete",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/azimuth"
      },
      "backdrop-filter": {
        syntax: "none | <filter-function-list>",
        media: "visual",
        inherited: false,
        animationType: "filterList",
        percentages: "no",
        groups: [
          "Filter Effects"
        ],
        initial: "none",
        appliesto: "allElementsSVGContainerElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/backdrop-filter"
      },
      "backface-visibility": {
        syntax: "visible | hidden",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Transforms"
        ],
        initial: "visible",
        appliesto: "transformableElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/backface-visibility"
      },
      background: {
        syntax: "[ <bg-layer> , ]* <final-bg-layer>",
        media: "visual",
        inherited: false,
        animationType: [
          "background-color",
          "background-image",
          "background-clip",
          "background-position",
          "background-size",
          "background-repeat",
          "background-attachment"
        ],
        percentages: [
          "background-position",
          "background-size"
        ],
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: [
          "background-image",
          "background-position",
          "background-size",
          "background-repeat",
          "background-origin",
          "background-clip",
          "background-attachment",
          "background-color"
        ],
        appliesto: "allElements",
        computed: [
          "background-image",
          "background-position",
          "background-size",
          "background-repeat",
          "background-origin",
          "background-clip",
          "background-attachment",
          "background-color"
        ],
        order: "orderOfAppearance",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/background"
      },
      "background-attachment": {
        syntax: "<attachment>#",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: "scroll",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/background-attachment"
      },
      "background-blend-mode": {
        syntax: "<blend-mode>#",
        media: "none",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Compositing and Blending"
        ],
        initial: "normal",
        appliesto: "allElementsSVGContainerGraphicsAndGraphicsReferencingElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/background-blend-mode"
      },
      "background-clip": {
        syntax: "<box>#",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: "border-box",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/background-clip"
      },
      "background-color": {
        syntax: "<color>",
        media: "visual",
        inherited: false,
        animationType: "color",
        percentages: "no",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: "transparent",
        appliesto: "allElements",
        computed: "computedColor",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/background-color"
      },
      "background-image": {
        syntax: "<bg-image>#",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: "none",
        appliesto: "allElements",
        computed: "asSpecifiedURLsAbsolute",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/background-image"
      },
      "background-origin": {
        syntax: "<box>#",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: "padding-box",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/background-origin"
      },
      "background-position": {
        syntax: "<bg-position>#",
        media: "visual",
        inherited: false,
        animationType: "repeatableListOfSimpleListOfLpc",
        percentages: "referToSizeOfBackgroundPositioningAreaMinusBackgroundImageSize",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: "0% 0%",
        appliesto: "allElements",
        computed: [
          "background-position-x",
          "background-position-y"
        ],
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/background-position"
      },
      "background-position-x": {
        syntax: "[ center | [ [ left | right | x-start | x-end ]? <length-percentage>? ]! ]#",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "referToWidthOfBackgroundPositioningAreaMinusBackgroundImageHeight",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: "0%",
        appliesto: "allElements",
        computed: "listEachItemConsistingOfAbsoluteLengthPercentageAndOrigin",
        order: "uniqueOrder",
        status: "experimental",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/background-position-x"
      },
      "background-position-y": {
        syntax: "[ center | [ [ top | bottom | y-start | y-end ]? <length-percentage>? ]! ]#",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "referToHeightOfBackgroundPositioningAreaMinusBackgroundImageHeight",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: "0%",
        appliesto: "allElements",
        computed: "listEachItemConsistingOfAbsoluteLengthPercentageAndOrigin",
        order: "uniqueOrder",
        status: "experimental",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/background-position-y"
      },
      "background-repeat": {
        syntax: "<repeat-style>#",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: "repeat",
        appliesto: "allElements",
        computed: "listEachItemHasTwoKeywordsOnePerDimension",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/background-repeat"
      },
      "background-size": {
        syntax: "<bg-size>#",
        media: "visual",
        inherited: false,
        animationType: "repeatableListOfSimpleListOfLpc",
        percentages: "relativeToBackgroundPositioningArea",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: "auto auto",
        appliesto: "allElements",
        computed: "asSpecifiedRelativeToAbsoluteLengths",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/background-size"
      },
      "block-overflow": {
        syntax: "clip | ellipsis | <string>",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Overflow"
        ],
        initial: "clip",
        appliesto: "blockContainers",
        computed: "asSpecified",
        order: "perGrammar",
        status: "experimental"
      },
      "block-size": {
        syntax: "<'width'>",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "blockSizeOfContainingBlock",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "auto",
        appliesto: "sameAsWidthAndHeight",
        computed: "sameAsWidthAndHeight",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/block-size"
      },
      border: {
        syntax: "<line-width> || <line-style> || <color>",
        media: "visual",
        inherited: false,
        animationType: [
          "border-color",
          "border-style",
          "border-width"
        ],
        percentages: "no",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: [
          "border-width",
          "border-style",
          "border-color"
        ],
        appliesto: "allElements",
        computed: [
          "border-width",
          "border-style",
          "border-color"
        ],
        order: "orderOfAppearance",
        alsoAppliesTo: [
          "::first-letter"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border"
      },
      "border-block": {
        syntax: "<'border-top-width'> || <'border-top-style'> || <color>",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Logical Properties"
        ],
        initial: [
          "border-top-width",
          "border-top-style",
          "border-top-color"
        ],
        appliesto: "allElements",
        computed: [
          "border-top-width",
          "border-top-style",
          "border-top-color"
        ],
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-block"
      },
      "border-block-color": {
        syntax: "<'border-top-color'>{1,2}",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "currentcolor",
        appliesto: "allElements",
        computed: "computedColor",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-block-color"
      },
      "border-block-style": {
        syntax: "<'border-top-style'>",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "none",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-block-style"
      },
      "border-block-width": {
        syntax: "<'border-top-width'>",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "logicalWidthOfContainingBlock",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "medium",
        appliesto: "allElements",
        computed: "absoluteLengthZeroIfBorderStyleNoneOrHidden",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-block-width"
      },
      "border-block-end": {
        syntax: "<'border-top-width'> || <'border-top-style'> || <color>",
        media: "visual",
        inherited: false,
        animationType: [
          "border-block-end-color",
          "border-block-end-style",
          "border-block-end-width"
        ],
        percentages: "no",
        groups: [
          "CSS Logical Properties"
        ],
        initial: [
          "border-top-width",
          "border-top-style",
          "border-top-color"
        ],
        appliesto: "allElements",
        computed: [
          "border-top-width",
          "border-top-style",
          "border-top-color"
        ],
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-block-end"
      },
      "border-block-end-color": {
        syntax: "<'border-top-color'>",
        media: "visual",
        inherited: false,
        animationType: "color",
        percentages: "no",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "currentcolor",
        appliesto: "allElements",
        computed: "computedColor",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-block-end-color"
      },
      "border-block-end-style": {
        syntax: "<'border-top-style'>",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "none",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-block-end-style"
      },
      "border-block-end-width": {
        syntax: "<'border-top-width'>",
        media: "visual",
        inherited: false,
        animationType: "length",
        percentages: "logicalWidthOfContainingBlock",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "medium",
        appliesto: "allElements",
        computed: "absoluteLengthZeroIfBorderStyleNoneOrHidden",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-block-end-width"
      },
      "border-block-start": {
        syntax: "<'border-top-width'> || <'border-top-style'> || <color>",
        media: "visual",
        inherited: false,
        animationType: [
          "border-block-start-color",
          "border-block-start-style",
          "border-block-start-width"
        ],
        percentages: "no",
        groups: [
          "CSS Logical Properties"
        ],
        initial: [
          "border-width",
          "border-style",
          "color"
        ],
        appliesto: "allElements",
        computed: [
          "border-width",
          "border-style",
          "border-block-start-color"
        ],
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-block-start"
      },
      "border-block-start-color": {
        syntax: "<'border-top-color'>",
        media: "visual",
        inherited: false,
        animationType: "color",
        percentages: "no",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "currentcolor",
        appliesto: "allElements",
        computed: "computedColor",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-block-start-color"
      },
      "border-block-start-style": {
        syntax: "<'border-top-style'>",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "none",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-block-start-style"
      },
      "border-block-start-width": {
        syntax: "<'border-top-width'>",
        media: "visual",
        inherited: false,
        animationType: "length",
        percentages: "logicalWidthOfContainingBlock",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "medium",
        appliesto: "allElements",
        computed: "absoluteLengthZeroIfBorderStyleNoneOrHidden",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-block-start-width"
      },
      "border-bottom": {
        syntax: "<line-width> || <line-style> || <color>",
        media: "visual",
        inherited: false,
        animationType: [
          "border-bottom-color",
          "border-bottom-style",
          "border-bottom-width"
        ],
        percentages: "no",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: [
          "border-bottom-width",
          "border-bottom-style",
          "border-bottom-color"
        ],
        appliesto: "allElements",
        computed: [
          "border-bottom-width",
          "border-bottom-style",
          "border-bottom-color"
        ],
        order: "orderOfAppearance",
        alsoAppliesTo: [
          "::first-letter"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-bottom"
      },
      "border-bottom-color": {
        syntax: "<'border-top-color'>",
        media: "visual",
        inherited: false,
        animationType: "color",
        percentages: "no",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: "currentcolor",
        appliesto: "allElements",
        computed: "computedColor",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-bottom-color"
      },
      "border-bottom-left-radius": {
        syntax: "<length-percentage>{1,2}",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "referToDimensionOfBorderBox",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: "0",
        appliesto: "allElementsUAsNotRequiredWhenCollapse",
        computed: "twoAbsoluteLengthOrPercentages",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-bottom-left-radius"
      },
      "border-bottom-right-radius": {
        syntax: "<length-percentage>{1,2}",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "referToDimensionOfBorderBox",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: "0",
        appliesto: "allElementsUAsNotRequiredWhenCollapse",
        computed: "twoAbsoluteLengthOrPercentages",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-bottom-right-radius"
      },
      "border-bottom-style": {
        syntax: "<line-style>",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: "none",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-bottom-style"
      },
      "border-bottom-width": {
        syntax: "<line-width>",
        media: "visual",
        inherited: false,
        animationType: "length",
        percentages: "no",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: "medium",
        appliesto: "allElements",
        computed: "absoluteLengthOr0IfBorderBottomStyleNoneOrHidden",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-bottom-width"
      },
      "border-collapse": {
        syntax: "collapse | separate",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Table"
        ],
        initial: "separate",
        appliesto: "tableElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-collapse"
      },
      "border-color": {
        syntax: "<color>{1,4}",
        media: "visual",
        inherited: false,
        animationType: [
          "border-bottom-color",
          "border-left-color",
          "border-right-color",
          "border-top-color"
        ],
        percentages: "no",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: [
          "border-top-color",
          "border-right-color",
          "border-bottom-color",
          "border-left-color"
        ],
        appliesto: "allElements",
        computed: [
          "border-bottom-color",
          "border-left-color",
          "border-right-color",
          "border-top-color"
        ],
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-color"
      },
      "border-end-end-radius": {
        syntax: "<length-percentage>{1,2}",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "referToDimensionOfBorderBox",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "0",
        appliesto: "allElementsUAsNotRequiredWhenCollapse",
        computed: "twoAbsoluteLengthOrPercentages",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-end-end-radius"
      },
      "border-end-start-radius": {
        syntax: "<length-percentage>{1,2}",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "referToDimensionOfBorderBox",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "0",
        appliesto: "allElementsUAsNotRequiredWhenCollapse",
        computed: "twoAbsoluteLengthOrPercentages",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-end-start-radius"
      },
      "border-image": {
        syntax: "<'border-image-source'> || <'border-image-slice'> [ / <'border-image-width'> | / <'border-image-width'>? / <'border-image-outset'> ]? || <'border-image-repeat'>",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: [
          "border-image-slice",
          "border-image-width"
        ],
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: [
          "border-image-source",
          "border-image-slice",
          "border-image-width",
          "border-image-outset",
          "border-image-repeat"
        ],
        appliesto: "allElementsExceptTableElementsWhenCollapse",
        computed: [
          "border-image-outset",
          "border-image-repeat",
          "border-image-slice",
          "border-image-source",
          "border-image-width"
        ],
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-image"
      },
      "border-image-outset": {
        syntax: "[ <length> | <number> ]{1,4}",
        media: "visual",
        inherited: false,
        animationType: "byComputedValueType",
        percentages: "no",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: "0",
        appliesto: "allElementsExceptTableElementsWhenCollapse",
        computed: "asSpecifiedRelativeToAbsoluteLengths",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-image-outset"
      },
      "border-image-repeat": {
        syntax: "[ stretch | repeat | round | space ]{1,2}",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: "stretch",
        appliesto: "allElementsExceptTableElementsWhenCollapse",
        computed: "asSpecified",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-image-repeat"
      },
      "border-image-slice": {
        syntax: "<number-percentage>{1,4} && fill?",
        media: "visual",
        inherited: false,
        animationType: "byComputedValueType",
        percentages: "referToSizeOfBorderImage",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: "100%",
        appliesto: "allElementsExceptTableElementsWhenCollapse",
        computed: "oneToFourPercentagesOrAbsoluteLengthsPlusFill",
        order: "percentagesOrLengthsFollowedByFill",
        alsoAppliesTo: [
          "::first-letter"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-image-slice"
      },
      "border-image-source": {
        syntax: "none | <image>",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: "none",
        appliesto: "allElementsExceptTableElementsWhenCollapse",
        computed: "noneOrImageWithAbsoluteURI",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-image-source"
      },
      "border-image-width": {
        syntax: "[ <length-percentage> | <number> | auto ]{1,4}",
        media: "visual",
        inherited: false,
        animationType: "byComputedValueType",
        percentages: "referToWidthOrHeightOfBorderImageArea",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: "1",
        appliesto: "allElementsExceptTableElementsWhenCollapse",
        computed: "asSpecifiedRelativeToAbsoluteLengths",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-image-width"
      },
      "border-inline": {
        syntax: "<'border-top-width'> || <'border-top-style'> || <color>",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Logical Properties"
        ],
        initial: [
          "border-top-width",
          "border-top-style",
          "border-top-color"
        ],
        appliesto: "allElements",
        computed: [
          "border-top-width",
          "border-top-style",
          "border-top-color"
        ],
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-inline"
      },
      "border-inline-end": {
        syntax: "<'border-top-width'> || <'border-top-style'> || <color>",
        media: "visual",
        inherited: false,
        animationType: [
          "border-inline-end-color",
          "border-inline-end-style",
          "border-inline-end-width"
        ],
        percentages: "no",
        groups: [
          "CSS Logical Properties"
        ],
        initial: [
          "border-width",
          "border-style",
          "color"
        ],
        appliesto: "allElements",
        computed: [
          "border-width",
          "border-style",
          "border-inline-end-color"
        ],
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-inline-end"
      },
      "border-inline-color": {
        syntax: "<'border-top-color'>{1,2}",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "currentcolor",
        appliesto: "allElements",
        computed: "computedColor",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-inline-color"
      },
      "border-inline-style": {
        syntax: "<'border-top-style'>",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "none",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-inline-style"
      },
      "border-inline-width": {
        syntax: "<'border-top-width'>",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "logicalWidthOfContainingBlock",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "medium",
        appliesto: "allElements",
        computed: "absoluteLengthZeroIfBorderStyleNoneOrHidden",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-inline-width"
      },
      "border-inline-end-color": {
        syntax: "<'border-top-color'>",
        media: "visual",
        inherited: false,
        animationType: "color",
        percentages: "no",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "currentcolor",
        appliesto: "allElements",
        computed: "computedColor",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-inline-end-color"
      },
      "border-inline-end-style": {
        syntax: "<'border-top-style'>",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "none",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-inline-end-style"
      },
      "border-inline-end-width": {
        syntax: "<'border-top-width'>",
        media: "visual",
        inherited: false,
        animationType: "length",
        percentages: "logicalWidthOfContainingBlock",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "medium",
        appliesto: "allElements",
        computed: "absoluteLengthZeroIfBorderStyleNoneOrHidden",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-inline-end-width"
      },
      "border-inline-start": {
        syntax: "<'border-top-width'> || <'border-top-style'> || <color>",
        media: "visual",
        inherited: false,
        animationType: [
          "border-inline-start-color",
          "border-inline-start-style",
          "border-inline-start-width"
        ],
        percentages: "no",
        groups: [
          "CSS Logical Properties"
        ],
        initial: [
          "border-width",
          "border-style",
          "color"
        ],
        appliesto: "allElements",
        computed: [
          "border-width",
          "border-style",
          "border-inline-start-color"
        ],
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-inline-start"
      },
      "border-inline-start-color": {
        syntax: "<'border-top-color'>",
        media: "visual",
        inherited: false,
        animationType: "color",
        percentages: "no",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "currentcolor",
        appliesto: "allElements",
        computed: "computedColor",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-inline-start-color"
      },
      "border-inline-start-style": {
        syntax: "<'border-top-style'>",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "none",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-inline-start-style"
      },
      "border-inline-start-width": {
        syntax: "<'border-top-width'>",
        media: "visual",
        inherited: false,
        animationType: "length",
        percentages: "logicalWidthOfContainingBlock",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "medium",
        appliesto: "allElements",
        computed: "absoluteLengthZeroIfBorderStyleNoneOrHidden",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-inline-start-width"
      },
      "border-left": {
        syntax: "<line-width> || <line-style> || <color>",
        media: "visual",
        inherited: false,
        animationType: [
          "border-left-color",
          "border-left-style",
          "border-left-width"
        ],
        percentages: "no",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: [
          "border-left-width",
          "border-left-style",
          "border-left-color"
        ],
        appliesto: "allElements",
        computed: [
          "border-left-width",
          "border-left-style",
          "border-left-color"
        ],
        order: "orderOfAppearance",
        alsoAppliesTo: [
          "::first-letter"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-left"
      },
      "border-left-color": {
        syntax: "<color>",
        media: "visual",
        inherited: false,
        animationType: "color",
        percentages: "no",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: "currentcolor",
        appliesto: "allElements",
        computed: "computedColor",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-left-color"
      },
      "border-left-style": {
        syntax: "<line-style>",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: "none",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-left-style"
      },
      "border-left-width": {
        syntax: "<line-width>",
        media: "visual",
        inherited: false,
        animationType: "length",
        percentages: "no",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: "medium",
        appliesto: "allElements",
        computed: "absoluteLengthOr0IfBorderLeftStyleNoneOrHidden",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-left-width"
      },
      "border-radius": {
        syntax: "<length-percentage>{1,4} [ / <length-percentage>{1,4} ]?",
        media: "visual",
        inherited: false,
        animationType: [
          "border-top-left-radius",
          "border-top-right-radius",
          "border-bottom-right-radius",
          "border-bottom-left-radius"
        ],
        percentages: "referToDimensionOfBorderBox",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: [
          "border-top-left-radius",
          "border-top-right-radius",
          "border-bottom-right-radius",
          "border-bottom-left-radius"
        ],
        appliesto: "allElementsUAsNotRequiredWhenCollapse",
        computed: [
          "border-bottom-left-radius",
          "border-bottom-right-radius",
          "border-top-left-radius",
          "border-top-right-radius"
        ],
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-radius"
      },
      "border-right": {
        syntax: "<line-width> || <line-style> || <color>",
        media: "visual",
        inherited: false,
        animationType: [
          "border-right-color",
          "border-right-style",
          "border-right-width"
        ],
        percentages: "no",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: [
          "border-right-width",
          "border-right-style",
          "border-right-color"
        ],
        appliesto: "allElements",
        computed: [
          "border-right-width",
          "border-right-style",
          "border-right-color"
        ],
        order: "orderOfAppearance",
        alsoAppliesTo: [
          "::first-letter"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-right"
      },
      "border-right-color": {
        syntax: "<color>",
        media: "visual",
        inherited: false,
        animationType: "color",
        percentages: "no",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: "currentcolor",
        appliesto: "allElements",
        computed: "computedColor",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-right-color"
      },
      "border-right-style": {
        syntax: "<line-style>",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: "none",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-right-style"
      },
      "border-right-width": {
        syntax: "<line-width>",
        media: "visual",
        inherited: false,
        animationType: "length",
        percentages: "no",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: "medium",
        appliesto: "allElements",
        computed: "absoluteLengthOr0IfBorderRightStyleNoneOrHidden",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-right-width"
      },
      "border-spacing": {
        syntax: "<length> <length>?",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Table"
        ],
        initial: "0",
        appliesto: "tableElements",
        computed: "twoAbsoluteLengths",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-spacing"
      },
      "border-start-end-radius": {
        syntax: "<length-percentage>{1,2}",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "referToDimensionOfBorderBox",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "0",
        appliesto: "allElementsUAsNotRequiredWhenCollapse",
        computed: "twoAbsoluteLengthOrPercentages",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-start-end-radius"
      },
      "border-start-start-radius": {
        syntax: "<length-percentage>{1,2}",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "referToDimensionOfBorderBox",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "0",
        appliesto: "allElementsUAsNotRequiredWhenCollapse",
        computed: "twoAbsoluteLengthOrPercentages",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-start-start-radius"
      },
      "border-style": {
        syntax: "<line-style>{1,4}",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: [
          "border-top-style",
          "border-right-style",
          "border-bottom-style",
          "border-left-style"
        ],
        appliesto: "allElements",
        computed: [
          "border-bottom-style",
          "border-left-style",
          "border-right-style",
          "border-top-style"
        ],
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-style"
      },
      "border-top": {
        syntax: "<line-width> || <line-style> || <color>",
        media: "visual",
        inherited: false,
        animationType: [
          "border-top-color",
          "border-top-style",
          "border-top-width"
        ],
        percentages: "no",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: [
          "border-top-width",
          "border-top-style",
          "border-top-color"
        ],
        appliesto: "allElements",
        computed: [
          "border-top-width",
          "border-top-style",
          "border-top-color"
        ],
        order: "orderOfAppearance",
        alsoAppliesTo: [
          "::first-letter"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-top"
      },
      "border-top-color": {
        syntax: "<color>",
        media: "visual",
        inherited: false,
        animationType: "color",
        percentages: "no",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: "currentcolor",
        appliesto: "allElements",
        computed: "computedColor",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-top-color"
      },
      "border-top-left-radius": {
        syntax: "<length-percentage>{1,2}",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "referToDimensionOfBorderBox",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: "0",
        appliesto: "allElementsUAsNotRequiredWhenCollapse",
        computed: "twoAbsoluteLengthOrPercentages",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-top-left-radius"
      },
      "border-top-right-radius": {
        syntax: "<length-percentage>{1,2}",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "referToDimensionOfBorderBox",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: "0",
        appliesto: "allElementsUAsNotRequiredWhenCollapse",
        computed: "twoAbsoluteLengthOrPercentages",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-top-right-radius"
      },
      "border-top-style": {
        syntax: "<line-style>",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: "none",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-top-style"
      },
      "border-top-width": {
        syntax: "<line-width>",
        media: "visual",
        inherited: false,
        animationType: "length",
        percentages: "no",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: "medium",
        appliesto: "allElements",
        computed: "absoluteLengthOr0IfBorderTopStyleNoneOrHidden",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-top-width"
      },
      "border-width": {
        syntax: "<line-width>{1,4}",
        media: "visual",
        inherited: false,
        animationType: [
          "border-bottom-width",
          "border-left-width",
          "border-right-width",
          "border-top-width"
        ],
        percentages: "no",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: [
          "border-top-width",
          "border-right-width",
          "border-bottom-width",
          "border-left-width"
        ],
        appliesto: "allElements",
        computed: [
          "border-bottom-width",
          "border-left-width",
          "border-right-width",
          "border-top-width"
        ],
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-width"
      },
      bottom: {
        syntax: "<length> | <percentage> | auto",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "referToContainingBlockHeight",
        groups: [
          "CSS Positioning"
        ],
        initial: "auto",
        appliesto: "positionedElements",
        computed: "lengthAbsolutePercentageAsSpecifiedOtherwiseAuto",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/bottom"
      },
      "box-align": {
        syntax: "start | center | end | baseline | stretch",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Mozilla Extensions",
          "WebKit Extensions"
        ],
        initial: "stretch",
        appliesto: "elementsWithDisplayBoxOrInlineBox",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/box-align"
      },
      "box-decoration-break": {
        syntax: "slice | clone",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Fragmentation"
        ],
        initial: "slice",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/box-decoration-break"
      },
      "box-direction": {
        syntax: "normal | reverse | inherit",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Mozilla Extensions",
          "WebKit Extensions"
        ],
        initial: "normal",
        appliesto: "elementsWithDisplayBoxOrInlineBox",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/box-direction"
      },
      "box-flex": {
        syntax: "<number>",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Mozilla Extensions",
          "WebKit Extensions"
        ],
        initial: "0",
        appliesto: "directChildrenOfElementsWithDisplayMozBoxMozInlineBox",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/box-flex"
      },
      "box-flex-group": {
        syntax: "<integer>",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Mozilla Extensions",
          "WebKit Extensions"
        ],
        initial: "1",
        appliesto: "inFlowChildrenOfBoxElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/box-flex-group"
      },
      "box-lines": {
        syntax: "single | multiple",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Mozilla Extensions",
          "WebKit Extensions"
        ],
        initial: "single",
        appliesto: "boxElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/box-lines"
      },
      "box-ordinal-group": {
        syntax: "<integer>",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Mozilla Extensions",
          "WebKit Extensions"
        ],
        initial: "1",
        appliesto: "childrenOfBoxElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/box-ordinal-group"
      },
      "box-orient": {
        syntax: "horizontal | vertical | inline-axis | block-axis | inherit",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Mozilla Extensions",
          "WebKit Extensions"
        ],
        initial: "inlineAxisHorizontalInXUL",
        appliesto: "elementsWithDisplayBoxOrInlineBox",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/box-orient"
      },
      "box-pack": {
        syntax: "start | center | end | justify",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Mozilla Extensions",
          "WebKit Extensions"
        ],
        initial: "start",
        appliesto: "elementsWithDisplayMozBoxMozInlineBox",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/box-pack"
      },
      "box-shadow": {
        syntax: "none | <shadow>#",
        media: "visual",
        inherited: false,
        animationType: "shadowList",
        percentages: "no",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: "none",
        appliesto: "allElements",
        computed: "absoluteLengthsSpecifiedColorAsSpecified",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/box-shadow"
      },
      "box-sizing": {
        syntax: "content-box | border-box",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Box Model"
        ],
        initial: "content-box",
        appliesto: "allElementsAcceptingWidthOrHeight",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/box-sizing"
      },
      "break-after": {
        syntax: "auto | avoid | always | all | avoid-page | page | left | right | recto | verso | avoid-column | column | avoid-region | region",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Fragmentation"
        ],
        initial: "auto",
        appliesto: "blockLevelElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/break-after"
      },
      "break-before": {
        syntax: "auto | avoid | always | all | avoid-page | page | left | right | recto | verso | avoid-column | column | avoid-region | region",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Fragmentation"
        ],
        initial: "auto",
        appliesto: "blockLevelElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/break-before"
      },
      "break-inside": {
        syntax: "auto | avoid | avoid-page | avoid-column | avoid-region",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Fragmentation"
        ],
        initial: "auto",
        appliesto: "blockLevelElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/break-inside"
      },
      "caption-side": {
        syntax: "top | bottom | block-start | block-end | inline-start | inline-end",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Table"
        ],
        initial: "top",
        appliesto: "tableCaptionElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/caption-side"
      },
      caret: {
        syntax: "<'caret-color'> || <'caret-shape'>",
        media: "interactive",
        inherited: true,
        animationType: [
          "caret-color",
          "caret-shape"
        ],
        percentages: "no",
        groups: [
          "CSS Basic User Interface"
        ],
        initial: [
          "caret-color",
          "caret-shape"
        ],
        appliesto: "elementsThatAcceptInput",
        computed: [
          "caret-color",
          "caret-shape"
        ],
        order: "perGrammar",
        status: "standard"
      },
      "caret-color": {
        syntax: "auto | <color>",
        media: "interactive",
        inherited: true,
        animationType: "color",
        percentages: "no",
        groups: [
          "CSS Basic User Interface"
        ],
        initial: "auto",
        appliesto: "allElements",
        computed: "asAutoOrColor",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/caret-color"
      },
      "caret-shape": {
        syntax: "auto | bar | block | underscore",
        media: "interactive",
        inherited: true,
        animationType: "byComputedValueType",
        percentages: "no",
        groups: [
          "CSS Basic User Interface"
        ],
        initial: "auto",
        appliesto: "elementsThatAcceptInput",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard"
      },
      clear: {
        syntax: "none | left | right | both | inline-start | inline-end",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Positioning"
        ],
        initial: "none",
        appliesto: "blockLevelElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/clear"
      },
      clip: {
        syntax: "<shape> | auto",
        media: "visual",
        inherited: false,
        animationType: "rectangle",
        percentages: "no",
        groups: [
          "CSS Masking"
        ],
        initial: "auto",
        appliesto: "absolutelyPositionedElements",
        computed: "autoOrRectangle",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/clip"
      },
      "clip-path": {
        syntax: "<clip-source> | [ <basic-shape> || <geometry-box> ] | none",
        media: "visual",
        inherited: false,
        animationType: "basicShapeOtherwiseNo",
        percentages: "referToReferenceBoxWhenSpecifiedOtherwiseBorderBox",
        groups: [
          "CSS Masking"
        ],
        initial: "none",
        appliesto: "allElementsSVGContainerElements",
        computed: "asSpecifiedURLsAbsolute",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/clip-path"
      },
      color: {
        syntax: "<color>",
        media: "visual",
        inherited: true,
        animationType: "byComputedValueType",
        percentages: "no",
        groups: [
          "CSS Color"
        ],
        initial: "canvastext",
        appliesto: "allElementsAndText",
        computed: "computedColor",
        order: "perGrammar",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/color"
      },
      "print-color-adjust": {
        syntax: "economy | exact",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Color"
        ],
        initial: "economy",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/print-color-adjust"
      },
      "color-scheme": {
        syntax: "normal | [ light | dark | <custom-ident> ]+ && only?",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Color"
        ],
        initial: "normal",
        appliesto: "allElementsAndText",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/color-scheme"
      },
      "column-count": {
        syntax: "<integer> | auto",
        media: "visual",
        inherited: false,
        animationType: "integer",
        percentages: "no",
        groups: [
          "CSS Columns"
        ],
        initial: "auto",
        appliesto: "blockContainersExceptTableWrappers",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/column-count"
      },
      "column-fill": {
        syntax: "auto | balance | balance-all",
        media: "visualInContinuousMediaNoEffectInOverflowColumns",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Columns"
        ],
        initial: "balance",
        appliesto: "multicolElements",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/column-fill"
      },
      "column-gap": {
        syntax: "normal | <length-percentage>",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "referToDimensionOfContentArea",
        groups: [
          "CSS Box Alignment"
        ],
        initial: "normal",
        appliesto: "multiColumnElementsFlexContainersGridContainers",
        computed: "asSpecifiedWithLengthsAbsoluteAndNormalComputingToZeroExceptMultiColumn",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/column-gap"
      },
      "column-rule": {
        syntax: "<'column-rule-width'> || <'column-rule-style'> || <'column-rule-color'>",
        media: "visual",
        inherited: false,
        animationType: [
          "column-rule-color",
          "column-rule-style",
          "column-rule-width"
        ],
        percentages: "no",
        groups: [
          "CSS Columns"
        ],
        initial: [
          "column-rule-width",
          "column-rule-style",
          "column-rule-color"
        ],
        appliesto: "multicolElements",
        computed: [
          "column-rule-color",
          "column-rule-style",
          "column-rule-width"
        ],
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/column-rule"
      },
      "column-rule-color": {
        syntax: "<color>",
        media: "visual",
        inherited: false,
        animationType: "color",
        percentages: "no",
        groups: [
          "CSS Columns"
        ],
        initial: "currentcolor",
        appliesto: "multicolElements",
        computed: "computedColor",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/column-rule-color"
      },
      "column-rule-style": {
        syntax: "<'border-style'>",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Columns"
        ],
        initial: "none",
        appliesto: "multicolElements",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/column-rule-style"
      },
      "column-rule-width": {
        syntax: "<'border-width'>",
        media: "visual",
        inherited: false,
        animationType: "length",
        percentages: "no",
        groups: [
          "CSS Columns"
        ],
        initial: "medium",
        appliesto: "multicolElements",
        computed: "absoluteLength0IfColumnRuleStyleNoneOrHidden",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/column-rule-width"
      },
      "column-span": {
        syntax: "none | all",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Columns"
        ],
        initial: "none",
        appliesto: "inFlowBlockLevelElements",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/column-span"
      },
      "column-width": {
        syntax: "<length> | auto",
        media: "visual",
        inherited: false,
        animationType: "length",
        percentages: "no",
        groups: [
          "CSS Columns"
        ],
        initial: "auto",
        appliesto: "blockContainersExceptTableWrappers",
        computed: "absoluteLengthZeroOrLarger",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/column-width"
      },
      columns: {
        syntax: "<'column-width'> || <'column-count'>",
        media: "visual",
        inherited: false,
        animationType: [
          "column-width",
          "column-count"
        ],
        percentages: "no",
        groups: [
          "CSS Columns"
        ],
        initial: [
          "column-width",
          "column-count"
        ],
        appliesto: "blockContainersExceptTableWrappers",
        computed: [
          "column-width",
          "column-count"
        ],
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/columns"
      },
      contain: {
        syntax: "none | strict | content | [ [ size || inline-size ] || layout || style || paint ]",
        media: "all",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Containment"
        ],
        initial: "none",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/contain"
      },
      "contain-intrinsic-size": {
        syntax: "[ none | <length> | auto <length> ]{1,2}",
        media: "visual",
        inherited: false,
        animationType: [
          "contain-intrinsic-width",
          "contain-intrinsic-height"
        ],
        percentages: [
          "contain-intrinsic-width",
          "contain-intrinsic-height"
        ],
        groups: [
          "CSS Containment"
        ],
        initial: [
          "contain-intrinsic-width",
          "contain-intrinsic-height"
        ],
        appliesto: "elementsForWhichSizeContainmentCanApply",
        computed: [
          "contain-intrinsic-width",
          "contain-intrinsic-height"
        ],
        order: "perGrammar",
        status: "experimental",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/contain-intrinsic-size"
      },
      "contain-intrinsic-block-size": {
        syntax: "none | <length> | auto <length>",
        inherited: false,
        animationType: "byComputedValueType",
        percentages: "no",
        groups: [
          "CSS Containment"
        ],
        initial: "none",
        appliesto: "elementsForWhichSizeContainmentCanApply",
        computed: "asSpecifiedWithLengthValuesComputed",
        order: "perGrammar",
        status: "experimental",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/contain-intrinsic-block-size"
      },
      "contain-intrinsic-height": {
        syntax: "none | <length> | auto <length>",
        inherited: false,
        animationType: "byComputedValueType",
        percentages: "no",
        groups: [
          "CSS Containment"
        ],
        initial: "none",
        appliesto: "elementsForWhichSizeContainmentCanApply",
        computed: "asSpecifiedWithLengthValuesComputed",
        order: "perGrammar",
        status: "experimental",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/contain-intrinsic-height"
      },
      "contain-intrinsic-inline-size": {
        syntax: "none | <length> | auto <length>",
        inherited: false,
        animationType: "byComputedValueType",
        percentages: "no",
        groups: [
          "CSS Containment"
        ],
        initial: "none",
        appliesto: "elementsForWhichSizeContainmentCanApply",
        computed: "asSpecifiedWithLengthValuesComputed",
        order: "perGrammar",
        status: "experimental",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/contain-intrinsic-inline-size"
      },
      "contain-intrinsic-width": {
        syntax: "none | <length> | auto <length>",
        media: "visual",
        inherited: false,
        animationType: "byComputedValueType",
        percentages: "no",
        groups: [
          "CSS Containment"
        ],
        initial: "none",
        appliesto: "elementsForWhichSizeContainmentCanApply",
        computed: "asSpecifiedWithLengthValuesComputed",
        order: "perGrammar",
        status: "experimental",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/contain-intrinsic-width"
      },
      content: {
        syntax: "normal | none | [ <content-replacement> | <content-list> ] [/ [ <string> | <counter> ]+ ]?",
        media: "all",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Generated Content"
        ],
        initial: "normal",
        appliesto: "allElementsTreeAbidingPseudoElementsPageMarginBoxes",
        computed: "normalOnElementsForPseudosNoneAbsoluteURIStringOrAsSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/content"
      },
      "content-visibility": {
        syntax: "visible | auto | hidden",
        media: "all",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Containment"
        ],
        initial: "visible",
        appliesto: "elementsForWhichLayoutContainmentCanApply",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/content-visibility"
      },
      "counter-increment": {
        syntax: "[ <counter-name> <integer>? ]+ | none",
        media: "all",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Counter Styles"
        ],
        initial: "none",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/counter-increment"
      },
      "counter-reset": {
        syntax: "[ <counter-name> <integer>? | <reversed-counter-name> <integer>? ]+ | none",
        media: "all",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Counter Styles"
        ],
        initial: "none",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/counter-reset"
      },
      "counter-set": {
        syntax: "[ <counter-name> <integer>? ]+ | none",
        media: "all",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Counter Styles"
        ],
        initial: "none",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/counter-set"
      },
      cursor: {
        syntax: "[ [ <url> [ <x> <y> ]? , ]* [ auto | default | none | context-menu | help | pointer | progress | wait | cell | crosshair | text | vertical-text | alias | copy | move | no-drop | not-allowed | e-resize | n-resize | ne-resize | nw-resize | s-resize | se-resize | sw-resize | w-resize | ew-resize | ns-resize | nesw-resize | nwse-resize | col-resize | row-resize | all-scroll | zoom-in | zoom-out | grab | grabbing ] ]",
        media: [
          "visual",
          "interactive"
        ],
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Basic User Interface"
        ],
        initial: "auto",
        appliesto: "allElements",
        computed: "asSpecifiedURLsAbsolute",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/cursor"
      },
      direction: {
        syntax: "ltr | rtl",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Writing Modes"
        ],
        initial: "ltr",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/direction"
      },
      display: {
        syntax: "[ <display-outside> || <display-inside> ] | <display-listitem> | <display-internal> | <display-box> | <display-legacy>",
        media: "all",
        inherited: false,
        animationType: "notAnimatable",
        percentages: "no",
        groups: [
          "CSS Display"
        ],
        initial: "inline",
        appliesto: "allElements",
        computed: "asSpecifiedExceptPositionedFloatingAndRootElementsKeywordMaybeDifferent",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/display"
      },
      "empty-cells": {
        syntax: "show | hide",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Table"
        ],
        initial: "show",
        appliesto: "tableCellElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/empty-cells"
      },
      filter: {
        syntax: "none | <filter-function-list>",
        media: "visual",
        inherited: false,
        animationType: "filterList",
        percentages: "no",
        groups: [
          "Filter Effects"
        ],
        initial: "none",
        appliesto: "allElementsSVGContainerElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/filter"
      },
      flex: {
        syntax: "none | [ <'flex-grow'> <'flex-shrink'>? || <'flex-basis'> ]",
        media: "visual",
        inherited: false,
        animationType: [
          "flex-grow",
          "flex-shrink",
          "flex-basis"
        ],
        percentages: "no",
        groups: [
          "CSS Flexible Box Layout"
        ],
        initial: [
          "flex-grow",
          "flex-shrink",
          "flex-basis"
        ],
        appliesto: "flexItemsAndInFlowPseudos",
        computed: [
          "flex-grow",
          "flex-shrink",
          "flex-basis"
        ],
        order: "orderOfAppearance",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/flex"
      },
      "flex-basis": {
        syntax: "content | <'width'>",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "referToFlexContainersInnerMainSize",
        groups: [
          "CSS Flexible Box Layout"
        ],
        initial: "auto",
        appliesto: "flexItemsAndInFlowPseudos",
        computed: "asSpecifiedRelativeToAbsoluteLengths",
        order: "lengthOrPercentageBeforeKeywordIfBothPresent",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/flex-basis"
      },
      "flex-direction": {
        syntax: "row | row-reverse | column | column-reverse",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Flexible Box Layout"
        ],
        initial: "row",
        appliesto: "flexContainers",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/flex-direction"
      },
      "flex-flow": {
        syntax: "<'flex-direction'> || <'flex-wrap'>",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Flexible Box Layout"
        ],
        initial: [
          "flex-direction",
          "flex-wrap"
        ],
        appliesto: "flexContainers",
        computed: [
          "flex-direction",
          "flex-wrap"
        ],
        order: "orderOfAppearance",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/flex-flow"
      },
      "flex-grow": {
        syntax: "<number>",
        media: "visual",
        inherited: false,
        animationType: "number",
        percentages: "no",
        groups: [
          "CSS Flexible Box Layout"
        ],
        initial: "0",
        appliesto: "flexItemsAndInFlowPseudos",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/flex-grow"
      },
      "flex-shrink": {
        syntax: "<number>",
        media: "visual",
        inherited: false,
        animationType: "number",
        percentages: "no",
        groups: [
          "CSS Flexible Box Layout"
        ],
        initial: "1",
        appliesto: "flexItemsAndInFlowPseudos",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/flex-shrink"
      },
      "flex-wrap": {
        syntax: "nowrap | wrap | wrap-reverse",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Flexible Box Layout"
        ],
        initial: "nowrap",
        appliesto: "flexContainers",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/flex-wrap"
      },
      float: {
        syntax: "left | right | none | inline-start | inline-end",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Positioning"
        ],
        initial: "none",
        appliesto: "allElementsNoEffectIfDisplayNone",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/float"
      },
      font: {
        syntax: "[ [ <'font-style'> || <font-variant-css21> || <'font-weight'> || <'font-stretch'> ]? <'font-size'> [ / <'line-height'> ]? <'font-family'> ] | caption | icon | menu | message-box | small-caption | status-bar",
        media: "visual",
        inherited: true,
        animationType: [
          "font-style",
          "font-variant",
          "font-weight",
          "font-stretch",
          "font-size",
          "line-height",
          "font-family"
        ],
        percentages: [
          "font-size",
          "line-height"
        ],
        groups: [
          "CSS Fonts"
        ],
        initial: [
          "font-style",
          "font-variant",
          "font-weight",
          "font-stretch",
          "font-size",
          "line-height",
          "font-family"
        ],
        appliesto: "allElements",
        computed: [
          "font-style",
          "font-variant",
          "font-weight",
          "font-stretch",
          "font-size",
          "line-height",
          "font-family"
        ],
        order: "orderOfAppearance",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/font"
      },
      "font-family": {
        syntax: "[ <family-name> | <generic-family> ]#",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Fonts"
        ],
        initial: "dependsOnUserAgent",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/font-family"
      },
      "font-feature-settings": {
        syntax: "normal | <feature-tag-value>#",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Fonts"
        ],
        initial: "normal",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/font-feature-settings"
      },
      "font-kerning": {
        syntax: "auto | normal | none",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Fonts"
        ],
        initial: "auto",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/font-kerning"
      },
      "font-language-override": {
        syntax: "normal | <string>",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Fonts"
        ],
        initial: "normal",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/font-language-override"
      },
      "font-optical-sizing": {
        syntax: "auto | none",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Fonts"
        ],
        initial: "auto",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "perGrammar",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/font-optical-sizing"
      },
      "font-variation-settings": {
        syntax: "normal | [ <string> <number> ]#",
        media: "visual",
        inherited: true,
        animationType: "transform",
        percentages: "no",
        groups: [
          "CSS Fonts"
        ],
        initial: "normal",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "perGrammar",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/font-variation-settings"
      },
      "font-size": {
        syntax: "<absolute-size> | <relative-size> | <length-percentage>",
        media: "visual",
        inherited: true,
        animationType: "length",
        percentages: "referToParentElementsFontSize",
        groups: [
          "CSS Fonts"
        ],
        initial: "medium",
        appliesto: "allElements",
        computed: "asSpecifiedRelativeToAbsoluteLengths",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/font-size"
      },
      "font-size-adjust": {
        syntax: "none | [ ex-height | cap-height | ch-width | ic-width | ic-height ]? [ from-font | <number> ]",
        media: "visual",
        inherited: true,
        animationType: "number",
        percentages: "no",
        groups: [
          "CSS Fonts"
        ],
        initial: "none",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/font-size-adjust"
      },
      "font-smooth": {
        syntax: "auto | never | always | <absolute-size> | <length>",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Fonts"
        ],
        initial: "auto",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/font-smooth"
      },
      "font-stretch": {
        syntax: "<font-stretch-absolute>",
        media: "visual",
        inherited: true,
        animationType: "fontStretch",
        percentages: "no",
        groups: [
          "CSS Fonts"
        ],
        initial: "normal",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/font-stretch"
      },
      "font-style": {
        syntax: "normal | italic | oblique <angle>?",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Fonts"
        ],
        initial: "normal",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/font-style"
      },
      "font-synthesis": {
        syntax: "none | [ weight || style || small-caps ]",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Fonts"
        ],
        initial: "weight style",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "orderOfAppearance",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/font-synthesis"
      },
      "font-variant": {
        syntax: "normal | none | [ <common-lig-values> || <discretionary-lig-values> || <historical-lig-values> || <contextual-alt-values> || stylistic( <feature-value-name> ) || historical-forms || styleset( <feature-value-name># ) || character-variant( <feature-value-name># ) || swash( <feature-value-name> ) || ornaments( <feature-value-name> ) || annotation( <feature-value-name> ) || [ small-caps | all-small-caps | petite-caps | all-petite-caps | unicase | titling-caps ] || <numeric-figure-values> || <numeric-spacing-values> || <numeric-fraction-values> || ordinal || slashed-zero || <east-asian-variant-values> || <east-asian-width-values> || ruby ]",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Fonts"
        ],
        initial: "normal",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/font-variant"
      },
      "font-variant-alternates": {
        syntax: "normal | [ stylistic( <feature-value-name> ) || historical-forms || styleset( <feature-value-name># ) || character-variant( <feature-value-name># ) || swash( <feature-value-name> ) || ornaments( <feature-value-name> ) || annotation( <feature-value-name> ) ]",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Fonts"
        ],
        initial: "normal",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "orderOfAppearance",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/font-variant-alternates"
      },
      "font-variant-caps": {
        syntax: "normal | small-caps | all-small-caps | petite-caps | all-petite-caps | unicase | titling-caps",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Fonts"
        ],
        initial: "normal",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/font-variant-caps"
      },
      "font-variant-east-asian": {
        syntax: "normal | [ <east-asian-variant-values> || <east-asian-width-values> || ruby ]",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Fonts"
        ],
        initial: "normal",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "orderOfAppearance",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/font-variant-east-asian"
      },
      "font-variant-ligatures": {
        syntax: "normal | none | [ <common-lig-values> || <discretionary-lig-values> || <historical-lig-values> || <contextual-alt-values> ]",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Fonts"
        ],
        initial: "normal",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "orderOfAppearance",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/font-variant-ligatures"
      },
      "font-variant-numeric": {
        syntax: "normal | [ <numeric-figure-values> || <numeric-spacing-values> || <numeric-fraction-values> || ordinal || slashed-zero ]",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Fonts"
        ],
        initial: "normal",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "orderOfAppearance",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/font-variant-numeric"
      },
      "font-variant-position": {
        syntax: "normal | sub | super",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Fonts"
        ],
        initial: "normal",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/font-variant-position"
      },
      "font-weight": {
        syntax: "<font-weight-absolute> | bolder | lighter",
        media: "visual",
        inherited: true,
        animationType: "fontWeight",
        percentages: "no",
        groups: [
          "CSS Fonts"
        ],
        initial: "normal",
        appliesto: "allElements",
        computed: "keywordOrNumericalValueBolderLighterTransformedToRealValue",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/font-weight"
      },
      "forced-color-adjust": {
        syntax: "auto | none",
        media: "visual",
        inherited: true,
        animationType: "notAnimatable",
        percentages: "no",
        groups: [
          "CSS Color"
        ],
        initial: "auto",
        appliesto: "allElementsAndText",
        computed: "asSpecified",
        order: "perGrammar",
        status: "experimental",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/forced-color-adjust"
      },
      gap: {
        syntax: "<'row-gap'> <'column-gap'>?",
        media: "visual",
        inherited: false,
        animationType: [
          "row-gap",
          "column-gap"
        ],
        percentages: "no",
        groups: [
          "CSS Box Alignment"
        ],
        initial: [
          "row-gap",
          "column-gap"
        ],
        appliesto: "multiColumnElementsFlexContainersGridContainers",
        computed: [
          "row-gap",
          "column-gap"
        ],
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/gap"
      },
      grid: {
        syntax: "<'grid-template'> | <'grid-template-rows'> / [ auto-flow && dense? ] <'grid-auto-columns'>? | [ auto-flow && dense? ] <'grid-auto-rows'>? / <'grid-template-columns'>",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: [
          "grid-template-rows",
          "grid-template-columns",
          "grid-auto-rows",
          "grid-auto-columns"
        ],
        groups: [
          "CSS Grid Layout"
        ],
        initial: [
          "grid-template-rows",
          "grid-template-columns",
          "grid-template-areas",
          "grid-auto-rows",
          "grid-auto-columns",
          "grid-auto-flow",
          "grid-column-gap",
          "grid-row-gap",
          "column-gap",
          "row-gap"
        ],
        appliesto: "gridContainers",
        computed: [
          "grid-template-rows",
          "grid-template-columns",
          "grid-template-areas",
          "grid-auto-rows",
          "grid-auto-columns",
          "grid-auto-flow",
          "grid-column-gap",
          "grid-row-gap",
          "column-gap",
          "row-gap"
        ],
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/grid"
      },
      "grid-area": {
        syntax: "<grid-line> [ / <grid-line> ]{0,3}",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Grid Layout"
        ],
        initial: [
          "grid-row-start",
          "grid-column-start",
          "grid-row-end",
          "grid-column-end"
        ],
        appliesto: "gridItemsAndBoxesWithinGridContainer",
        computed: [
          "grid-row-start",
          "grid-column-start",
          "grid-row-end",
          "grid-column-end"
        ],
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/grid-area"
      },
      "grid-auto-columns": {
        syntax: "<track-size>+",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "referToDimensionOfContentArea",
        groups: [
          "CSS Grid Layout"
        ],
        initial: "auto",
        appliesto: "gridContainers",
        computed: "percentageAsSpecifiedOrAbsoluteLength",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/grid-auto-columns"
      },
      "grid-auto-flow": {
        syntax: "[ row | column ] || dense",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Grid Layout"
        ],
        initial: "row",
        appliesto: "gridContainers",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/grid-auto-flow"
      },
      "grid-auto-rows": {
        syntax: "<track-size>+",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "referToDimensionOfContentArea",
        groups: [
          "CSS Grid Layout"
        ],
        initial: "auto",
        appliesto: "gridContainers",
        computed: "percentageAsSpecifiedOrAbsoluteLength",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/grid-auto-rows"
      },
      "grid-column": {
        syntax: "<grid-line> [ / <grid-line> ]?",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Grid Layout"
        ],
        initial: [
          "grid-column-start",
          "grid-column-end"
        ],
        appliesto: "gridItemsAndBoxesWithinGridContainer",
        computed: [
          "grid-column-start",
          "grid-column-end"
        ],
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/grid-column"
      },
      "grid-column-end": {
        syntax: "<grid-line>",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Grid Layout"
        ],
        initial: "auto",
        appliesto: "gridItemsAndBoxesWithinGridContainer",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/grid-column-end"
      },
      "grid-column-gap": {
        syntax: "<length-percentage>",
        media: "visual",
        inherited: false,
        animationType: "length",
        percentages: "referToDimensionOfContentArea",
        groups: [
          "CSS Grid Layout"
        ],
        initial: "0",
        appliesto: "gridContainers",
        computed: "percentageAsSpecifiedOrAbsoluteLength",
        order: "uniqueOrder",
        status: "obsolete",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/column-gap"
      },
      "grid-column-start": {
        syntax: "<grid-line>",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Grid Layout"
        ],
        initial: "auto",
        appliesto: "gridItemsAndBoxesWithinGridContainer",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/grid-column-start"
      },
      "grid-gap": {
        syntax: "<'grid-row-gap'> <'grid-column-gap'>?",
        media: "visual",
        inherited: false,
        animationType: [
          "grid-row-gap",
          "grid-column-gap"
        ],
        percentages: "no",
        groups: [
          "CSS Grid Layout"
        ],
        initial: [
          "grid-row-gap",
          "grid-column-gap"
        ],
        appliesto: "gridContainers",
        computed: [
          "grid-row-gap",
          "grid-column-gap"
        ],
        order: "uniqueOrder",
        status: "obsolete",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/gap"
      },
      "grid-row": {
        syntax: "<grid-line> [ / <grid-line> ]?",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Grid Layout"
        ],
        initial: [
          "grid-row-start",
          "grid-row-end"
        ],
        appliesto: "gridItemsAndBoxesWithinGridContainer",
        computed: [
          "grid-row-start",
          "grid-row-end"
        ],
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/grid-row"
      },
      "grid-row-end": {
        syntax: "<grid-line>",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Grid Layout"
        ],
        initial: "auto",
        appliesto: "gridItemsAndBoxesWithinGridContainer",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/grid-row-end"
      },
      "grid-row-gap": {
        syntax: "<length-percentage>",
        media: "visual",
        inherited: false,
        animationType: "length",
        percentages: "referToDimensionOfContentArea",
        groups: [
          "CSS Grid Layout"
        ],
        initial: "0",
        appliesto: "gridContainers",
        computed: "percentageAsSpecifiedOrAbsoluteLength",
        order: "uniqueOrder",
        status: "obsolete",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/row-gap"
      },
      "grid-row-start": {
        syntax: "<grid-line>",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Grid Layout"
        ],
        initial: "auto",
        appliesto: "gridItemsAndBoxesWithinGridContainer",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/grid-row-start"
      },
      "grid-template": {
        syntax: "none | [ <'grid-template-rows'> / <'grid-template-columns'> ] | [ <line-names>? <string> <track-size>? <line-names>? ]+ [ / <explicit-track-list> ]?",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: [
          "grid-template-columns",
          "grid-template-rows"
        ],
        groups: [
          "CSS Grid Layout"
        ],
        initial: [
          "grid-template-columns",
          "grid-template-rows",
          "grid-template-areas"
        ],
        appliesto: "gridContainers",
        computed: [
          "grid-template-columns",
          "grid-template-rows",
          "grid-template-areas"
        ],
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/grid-template"
      },
      "grid-template-areas": {
        syntax: "none | <string>+",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Grid Layout"
        ],
        initial: "none",
        appliesto: "gridContainers",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/grid-template-areas"
      },
      "grid-template-columns": {
        syntax: "none | <track-list> | <auto-track-list> | subgrid <line-name-list>?",
        media: "visual",
        inherited: false,
        animationType: "simpleListOfLpcDifferenceLpc",
        percentages: "referToDimensionOfContentArea",
        groups: [
          "CSS Grid Layout"
        ],
        initial: "none",
        appliesto: "gridContainers",
        computed: "asSpecifiedRelativeToAbsoluteLengths",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/grid-template-columns"
      },
      "grid-template-rows": {
        syntax: "none | <track-list> | <auto-track-list> | subgrid <line-name-list>?",
        media: "visual",
        inherited: false,
        animationType: "simpleListOfLpcDifferenceLpc",
        percentages: "referToDimensionOfContentArea",
        groups: [
          "CSS Grid Layout"
        ],
        initial: "none",
        appliesto: "gridContainers",
        computed: "asSpecifiedRelativeToAbsoluteLengths",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/grid-template-rows"
      },
      "hanging-punctuation": {
        syntax: "none | [ first || [ force-end | allow-end ] || last ]",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Text"
        ],
        initial: "none",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/hanging-punctuation"
      },
      height: {
        syntax: "auto | <length> | <percentage> | min-content | max-content | fit-content | fit-content(<length-percentage>)",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "regardingHeightOfGeneratedBoxContainingBlockPercentagesRelativeToContainingBlock",
        groups: [
          "CSS Box Model"
        ],
        initial: "auto",
        appliesto: "allElementsButNonReplacedAndTableColumns",
        computed: "percentageAutoOrAbsoluteLength",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/height"
      },
      "hyphenate-character": {
        syntax: "auto | <string>",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Text"
        ],
        initial: "auto",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/hyphenate-character"
      },
      hyphens: {
        syntax: "none | manual | auto",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Text"
        ],
        initial: "manual",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/hyphens"
      },
      "image-orientation": {
        syntax: "from-image | <angle> | [ <angle>? flip ]",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Images"
        ],
        initial: "from-image",
        appliesto: "allElements",
        computed: "angleRoundedToNextQuarter",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/image-orientation"
      },
      "image-rendering": {
        syntax: "auto | crisp-edges | pixelated",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Images"
        ],
        initial: "auto",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/image-rendering"
      },
      "image-resolution": {
        syntax: "[ from-image || <resolution> ] && snap?",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Images"
        ],
        initial: "1dppx",
        appliesto: "allElements",
        computed: "asSpecifiedWithExceptionOfResolution",
        order: "uniqueOrder",
        status: "experimental"
      },
      "ime-mode": {
        syntax: "auto | normal | active | inactive | disabled",
        media: "interactive",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Basic User Interface"
        ],
        initial: "auto",
        appliesto: "textFields",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "obsolete",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/ime-mode"
      },
      "initial-letter": {
        syntax: "normal | [ <number> <integer>? ]",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Inline"
        ],
        initial: "normal",
        appliesto: "firstLetterPseudoElementsAndInlineLevelFirstChildren",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "experimental",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/initial-letter"
      },
      "initial-letter-align": {
        syntax: "[ auto | alphabetic | hanging | ideographic ]",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Inline"
        ],
        initial: "auto",
        appliesto: "firstLetterPseudoElementsAndInlineLevelFirstChildren",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "experimental",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/initial-letter-align"
      },
      "inline-size": {
        syntax: "<'width'>",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "inlineSizeOfContainingBlock",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "auto",
        appliesto: "sameAsWidthAndHeight",
        computed: "sameAsWidthAndHeight",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/inline-size"
      },
      "input-security": {
        syntax: "auto | none",
        media: "interactive",
        inherited: false,
        animationType: "byComputedValueType",
        percentages: "no",
        groups: [
          "CSS Basic User Interface"
        ],
        initial: "auto",
        appliesto: "sensitiveTextInputs",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard"
      },
      inset: {
        syntax: "<'top'>{1,4}",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "logicalHeightOrWidthOfContainingBlock",
        groups: [
          "CSS Logical Properties"
        ],
        initial: [
          "top",
          "bottom",
          "left",
          "right"
        ],
        appliesto: "positionedElements",
        computed: [
          "top",
          "bottom",
          "left",
          "right"
        ],
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/inset"
      },
      "inset-block": {
        syntax: "<'top'>{1,2}",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "logicalHeightOfContainingBlock",
        groups: [
          "CSS Logical Properties"
        ],
        initial: [
          "inset-block-start",
          "inset-block-end"
        ],
        appliesto: "positionedElements",
        computed: [
          "inset-block-start",
          "inset-block-end"
        ],
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/inset-block"
      },
      "inset-block-end": {
        syntax: "<'top'>",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "logicalHeightOfContainingBlock",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "auto",
        appliesto: "positionedElements",
        computed: "sameAsBoxOffsets",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/inset-block-end"
      },
      "inset-block-start": {
        syntax: "<'top'>",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "logicalHeightOfContainingBlock",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "auto",
        appliesto: "positionedElements",
        computed: "sameAsBoxOffsets",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/inset-block-start"
      },
      "inset-inline": {
        syntax: "<'top'>{1,2}",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "logicalWidthOfContainingBlock",
        groups: [
          "CSS Logical Properties"
        ],
        initial: [
          "inset-inline-start",
          "inset-inline-end"
        ],
        appliesto: "positionedElements",
        computed: [
          "inset-inline-start",
          "inset-inline-end"
        ],
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/inset-inline"
      },
      "inset-inline-end": {
        syntax: "<'top'>",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "logicalWidthOfContainingBlock",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "auto",
        appliesto: "positionedElements",
        computed: "sameAsBoxOffsets",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/inset-inline-end"
      },
      "inset-inline-start": {
        syntax: "<'top'>",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "logicalWidthOfContainingBlock",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "auto",
        appliesto: "positionedElements",
        computed: "sameAsBoxOffsets",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/inset-inline-start"
      },
      isolation: {
        syntax: "auto | isolate",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Compositing and Blending"
        ],
        initial: "auto",
        appliesto: "allElementsSVGContainerGraphicsAndGraphicsReferencingElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/isolation"
      },
      "justify-content": {
        syntax: "normal | <content-distribution> | <overflow-position>? [ <content-position> | left | right ]",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Box Alignment"
        ],
        initial: "normal",
        appliesto: "flexContainers",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/justify-content"
      },
      "justify-items": {
        syntax: "normal | stretch | <baseline-position> | <overflow-position>? [ <self-position> | left | right ] | legacy | legacy && [ left | right | center ]",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Box Alignment"
        ],
        initial: "legacy",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/justify-items"
      },
      "justify-self": {
        syntax: "auto | normal | stretch | <baseline-position> | <overflow-position>? [ <self-position> | left | right ]",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Box Alignment"
        ],
        initial: "auto",
        appliesto: "blockLevelBoxesAndAbsolutelyPositionedBoxesAndGridItems",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/justify-self"
      },
      "justify-tracks": {
        syntax: "[ normal | <content-distribution> | <overflow-position>? [ <content-position> | left | right ] ]#",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Grid Layout"
        ],
        initial: "normal",
        appliesto: "gridContainersWithMasonryLayoutInTheirInlineAxis",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "experimental",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/justify-tracks"
      },
      left: {
        syntax: "<length> | <percentage> | auto",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "referToWidthOfContainingBlock",
        groups: [
          "CSS Positioning"
        ],
        initial: "auto",
        appliesto: "positionedElements",
        computed: "lengthAbsolutePercentageAsSpecifiedOtherwiseAuto",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/left"
      },
      "letter-spacing": {
        syntax: "normal | <length>",
        media: "visual",
        inherited: true,
        animationType: "length",
        percentages: "no",
        groups: [
          "CSS Text"
        ],
        initial: "normal",
        appliesto: "allElements",
        computed: "optimumValueOfAbsoluteLengthOrNormal",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/letter-spacing"
      },
      "line-break": {
        syntax: "auto | loose | normal | strict | anywhere",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Text"
        ],
        initial: "auto",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/line-break"
      },
      "line-clamp": {
        syntax: "none | <integer>",
        media: "visual",
        inherited: false,
        animationType: "integer",
        percentages: "no",
        groups: [
          "CSS Overflow"
        ],
        initial: "none",
        appliesto: "blockContainersExceptMultiColumnContainers",
        computed: "asSpecified",
        order: "perGrammar",
        status: "experimental"
      },
      "line-height": {
        syntax: "normal | <number> | <length> | <percentage>",
        media: "visual",
        inherited: true,
        animationType: "numberOrLength",
        percentages: "referToElementFontSize",
        groups: [
          "CSS Fonts"
        ],
        initial: "normal",
        appliesto: "allElements",
        computed: "absoluteLengthOrAsSpecified",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/line-height"
      },
      "line-height-step": {
        syntax: "<length>",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Fonts"
        ],
        initial: "0",
        appliesto: "blockContainers",
        computed: "absoluteLength",
        order: "perGrammar",
        status: "experimental",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/line-height-step"
      },
      "list-style": {
        syntax: "<'list-style-type'> || <'list-style-position'> || <'list-style-image'>",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Lists and Counters"
        ],
        initial: [
          "list-style-type",
          "list-style-position",
          "list-style-image"
        ],
        appliesto: "listItems",
        computed: [
          "list-style-image",
          "list-style-position",
          "list-style-type"
        ],
        order: "orderOfAppearance",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/list-style"
      },
      "list-style-image": {
        syntax: "<image> | none",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Lists and Counters"
        ],
        initial: "none",
        appliesto: "listItems",
        computed: "theKeywordListStyleImageNoneOrComputedValue",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/list-style-image"
      },
      "list-style-position": {
        syntax: "inside | outside",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Lists and Counters"
        ],
        initial: "outside",
        appliesto: "listItems",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/list-style-position"
      },
      "list-style-type": {
        syntax: "<counter-style> | <string> | none",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Lists and Counters"
        ],
        initial: "disc",
        appliesto: "listItems",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/list-style-type"
      },
      margin: {
        syntax: "[ <length> | <percentage> | auto ]{1,4}",
        media: "visual",
        inherited: false,
        animationType: "length",
        percentages: "referToWidthOfContainingBlock",
        groups: [
          "CSS Box Model"
        ],
        initial: [
          "margin-bottom",
          "margin-left",
          "margin-right",
          "margin-top"
        ],
        appliesto: "allElementsExceptTableDisplayTypes",
        computed: [
          "margin-bottom",
          "margin-left",
          "margin-right",
          "margin-top"
        ],
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/margin"
      },
      "margin-block": {
        syntax: "<'margin-left'>{1,2}",
        media: "visual",
        inherited: false,
        animationType: "length",
        percentages: "dependsOnLayoutModel",
        groups: [
          "CSS Logical Properties"
        ],
        initial: [
          "margin-block-start",
          "margin-block-end"
        ],
        appliesto: "sameAsMargin",
        computed: [
          "margin-block-start",
          "margin-block-end"
        ],
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/margin-block"
      },
      "margin-block-end": {
        syntax: "<'margin-left'>",
        media: "visual",
        inherited: false,
        animationType: "length",
        percentages: "dependsOnLayoutModel",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "0",
        appliesto: "sameAsMargin",
        computed: "lengthAbsolutePercentageAsSpecifiedOtherwiseAuto",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/margin-block-end"
      },
      "margin-block-start": {
        syntax: "<'margin-left'>",
        media: "visual",
        inherited: false,
        animationType: "length",
        percentages: "dependsOnLayoutModel",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "0",
        appliesto: "sameAsMargin",
        computed: "lengthAbsolutePercentageAsSpecifiedOtherwiseAuto",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/margin-block-start"
      },
      "margin-bottom": {
        syntax: "<length> | <percentage> | auto",
        media: "visual",
        inherited: false,
        animationType: "length",
        percentages: "referToWidthOfContainingBlock",
        groups: [
          "CSS Box Model"
        ],
        initial: "0",
        appliesto: "allElementsExceptTableDisplayTypes",
        computed: "percentageAsSpecifiedOrAbsoluteLength",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/margin-bottom"
      },
      "margin-inline": {
        syntax: "<'margin-left'>{1,2}",
        media: "visual",
        inherited: false,
        animationType: "length",
        percentages: "dependsOnLayoutModel",
        groups: [
          "CSS Logical Properties"
        ],
        initial: [
          "margin-inline-start",
          "margin-inline-end"
        ],
        appliesto: "sameAsMargin",
        computed: [
          "margin-inline-start",
          "margin-inline-end"
        ],
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/margin-inline"
      },
      "margin-inline-end": {
        syntax: "<'margin-left'>",
        media: "visual",
        inherited: false,
        animationType: "length",
        percentages: "dependsOnLayoutModel",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "0",
        appliesto: "sameAsMargin",
        computed: "lengthAbsolutePercentageAsSpecifiedOtherwiseAuto",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/margin-inline-end"
      },
      "margin-inline-start": {
        syntax: "<'margin-left'>",
        media: "visual",
        inherited: false,
        animationType: "length",
        percentages: "dependsOnLayoutModel",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "0",
        appliesto: "sameAsMargin",
        computed: "lengthAbsolutePercentageAsSpecifiedOtherwiseAuto",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/margin-inline-start"
      },
      "margin-left": {
        syntax: "<length> | <percentage> | auto",
        media: "visual",
        inherited: false,
        animationType: "length",
        percentages: "referToWidthOfContainingBlock",
        groups: [
          "CSS Box Model"
        ],
        initial: "0",
        appliesto: "allElementsExceptTableDisplayTypes",
        computed: "percentageAsSpecifiedOrAbsoluteLength",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/margin-left"
      },
      "margin-right": {
        syntax: "<length> | <percentage> | auto",
        media: "visual",
        inherited: false,
        animationType: "length",
        percentages: "referToWidthOfContainingBlock",
        groups: [
          "CSS Box Model"
        ],
        initial: "0",
        appliesto: "allElementsExceptTableDisplayTypes",
        computed: "percentageAsSpecifiedOrAbsoluteLength",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/margin-right"
      },
      "margin-top": {
        syntax: "<length> | <percentage> | auto",
        media: "visual",
        inherited: false,
        animationType: "length",
        percentages: "referToWidthOfContainingBlock",
        groups: [
          "CSS Box Model"
        ],
        initial: "0",
        appliesto: "allElementsExceptTableDisplayTypes",
        computed: "percentageAsSpecifiedOrAbsoluteLength",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/margin-top"
      },
      "margin-trim": {
        syntax: "none | in-flow | all",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Box Model"
        ],
        initial: "none",
        appliesto: "blockContainersAndMultiColumnContainers",
        computed: "asSpecified",
        order: "perGrammar",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line"
        ],
        status: "experimental",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/margin-trim"
      },
      mask: {
        syntax: "<mask-layer>#",
        media: "visual",
        inherited: false,
        animationType: [
          "mask-image",
          "mask-mode",
          "mask-repeat",
          "mask-position",
          "mask-clip",
          "mask-origin",
          "mask-size",
          "mask-composite"
        ],
        percentages: [
          "mask-position"
        ],
        groups: [
          "CSS Masking"
        ],
        initial: [
          "mask-image",
          "mask-mode",
          "mask-repeat",
          "mask-position",
          "mask-clip",
          "mask-origin",
          "mask-size",
          "mask-composite"
        ],
        appliesto: "allElementsSVGContainerElements",
        computed: [
          "mask-image",
          "mask-mode",
          "mask-repeat",
          "mask-position",
          "mask-clip",
          "mask-origin",
          "mask-size",
          "mask-composite"
        ],
        order: "perGrammar",
        stacking: true,
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/mask"
      },
      "mask-border": {
        syntax: "<'mask-border-source'> || <'mask-border-slice'> [ / <'mask-border-width'>? [ / <'mask-border-outset'> ]? ]? || <'mask-border-repeat'> || <'mask-border-mode'>",
        media: "visual",
        inherited: false,
        animationType: [
          "mask-border-mode",
          "mask-border-outset",
          "mask-border-repeat",
          "mask-border-slice",
          "mask-border-source",
          "mask-border-width"
        ],
        percentages: [
          "mask-border-slice",
          "mask-border-width"
        ],
        groups: [
          "CSS Masking"
        ],
        initial: [
          "mask-border-mode",
          "mask-border-outset",
          "mask-border-repeat",
          "mask-border-slice",
          "mask-border-source",
          "mask-border-width"
        ],
        appliesto: "allElementsSVGContainerElements",
        computed: [
          "mask-border-mode",
          "mask-border-outset",
          "mask-border-repeat",
          "mask-border-slice",
          "mask-border-source",
          "mask-border-width"
        ],
        order: "perGrammar",
        stacking: true,
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/mask-border"
      },
      "mask-border-mode": {
        syntax: "luminance | alpha",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Masking"
        ],
        initial: "alpha",
        appliesto: "allElementsSVGContainerElements",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/mask-border-mode"
      },
      "mask-border-outset": {
        syntax: "[ <length> | <number> ]{1,4}",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Masking"
        ],
        initial: "0",
        appliesto: "allElementsSVGContainerElements",
        computed: "asSpecifiedRelativeToAbsoluteLengths",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/mask-border-outset"
      },
      "mask-border-repeat": {
        syntax: "[ stretch | repeat | round | space ]{1,2}",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Masking"
        ],
        initial: "stretch",
        appliesto: "allElementsSVGContainerElements",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/mask-border-repeat"
      },
      "mask-border-slice": {
        syntax: "<number-percentage>{1,4} fill?",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "referToSizeOfMaskBorderImage",
        groups: [
          "CSS Masking"
        ],
        initial: "0",
        appliesto: "allElementsSVGContainerElements",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/mask-border-slice"
      },
      "mask-border-source": {
        syntax: "none | <image>",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Masking"
        ],
        initial: "none",
        appliesto: "allElementsSVGContainerElements",
        computed: "asSpecifiedURLsAbsolute",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/mask-border-source"
      },
      "mask-border-width": {
        syntax: "[ <length-percentage> | <number> | auto ]{1,4}",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "relativeToMaskBorderImageArea",
        groups: [
          "CSS Masking"
        ],
        initial: "auto",
        appliesto: "allElementsSVGContainerElements",
        computed: "asSpecifiedRelativeToAbsoluteLengths",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/mask-border-width"
      },
      "mask-clip": {
        syntax: "[ <geometry-box> | no-clip ]#",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Masking"
        ],
        initial: "border-box",
        appliesto: "allElementsSVGContainerElements",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/mask-clip"
      },
      "mask-composite": {
        syntax: "<compositing-operator>#",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Masking"
        ],
        initial: "add",
        appliesto: "allElementsSVGContainerElements",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/mask-composite"
      },
      "mask-image": {
        syntax: "<mask-reference>#",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Masking"
        ],
        initial: "none",
        appliesto: "allElementsSVGContainerElements",
        computed: "asSpecifiedURLsAbsolute",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/mask-image"
      },
      "mask-mode": {
        syntax: "<masking-mode>#",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Masking"
        ],
        initial: "match-source",
        appliesto: "allElementsSVGContainerElements",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/mask-mode"
      },
      "mask-origin": {
        syntax: "<geometry-box>#",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Masking"
        ],
        initial: "border-box",
        appliesto: "allElementsSVGContainerElements",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/mask-origin"
      },
      "mask-position": {
        syntax: "<position>#",
        media: "visual",
        inherited: false,
        animationType: "repeatableListOfSimpleListOfLpc",
        percentages: "referToSizeOfMaskPaintingArea",
        groups: [
          "CSS Masking"
        ],
        initial: "center",
        appliesto: "allElementsSVGContainerElements",
        computed: "consistsOfTwoKeywordsForOriginAndOffsets",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/mask-position"
      },
      "mask-repeat": {
        syntax: "<repeat-style>#",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Masking"
        ],
        initial: "repeat",
        appliesto: "allElementsSVGContainerElements",
        computed: "consistsOfTwoDimensionKeywords",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/mask-repeat"
      },
      "mask-size": {
        syntax: "<bg-size>#",
        media: "visual",
        inherited: false,
        animationType: "repeatableListOfSimpleListOfLpc",
        percentages: "no",
        groups: [
          "CSS Masking"
        ],
        initial: "auto",
        appliesto: "allElementsSVGContainerElements",
        computed: "asSpecifiedRelativeToAbsoluteLengths",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/mask-size"
      },
      "mask-type": {
        syntax: "luminance | alpha",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Masking"
        ],
        initial: "luminance",
        appliesto: "maskElements",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/mask-type"
      },
      "masonry-auto-flow": {
        syntax: "[ pack | next ] || [ definite-first | ordered ]",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Grid Layout"
        ],
        initial: "pack",
        appliesto: "gridContainersWithMasonryLayout",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "experimental",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/masonry-auto-flow"
      },
      "math-depth": {
        syntax: "auto-add | add(<integer>) | <integer>",
        media: "visual",
        inherited: true,
        animationType: "notAnimatable",
        percentages: "no",
        groups: [
          "MathML"
        ],
        initial: "0",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/math-depth"
      },
      "math-shift": {
        syntax: "normal | compact",
        media: "visual",
        inherited: true,
        animationType: "notAnimatable",
        percentages: "no",
        groups: [
          "MathML"
        ],
        initial: "normal",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/math-shift"
      },
      "math-style": {
        syntax: "normal | compact",
        media: "visual",
        inherited: true,
        animationType: "notAnimatable",
        percentages: "no",
        groups: [
          "MathML"
        ],
        initial: "normal",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/math-style"
      },
      "max-block-size": {
        syntax: "<'max-width'>",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "blockSizeOfContainingBlock",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "none",
        appliesto: "sameAsWidthAndHeight",
        computed: "sameAsMaxWidthAndMaxHeight",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/max-block-size"
      },
      "max-height": {
        syntax: "none | <length-percentage> | min-content | max-content | fit-content | fit-content(<length-percentage>)",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "regardingHeightOfGeneratedBoxContainingBlockPercentagesNone",
        groups: [
          "CSS Box Model"
        ],
        initial: "none",
        appliesto: "allElementsButNonReplacedAndTableColumns",
        computed: "percentageAsSpecifiedAbsoluteLengthOrNone",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/max-height"
      },
      "max-inline-size": {
        syntax: "<'max-width'>",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "inlineSizeOfContainingBlock",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "none",
        appliesto: "sameAsWidthAndHeight",
        computed: "sameAsMaxWidthAndMaxHeight",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/max-inline-size"
      },
      "max-lines": {
        syntax: "none | <integer>",
        media: "visual",
        inherited: false,
        animationType: "integer",
        percentages: "no",
        groups: [
          "CSS Overflow"
        ],
        initial: "none",
        appliesto: "blockContainersExceptMultiColumnContainers",
        computed: "asSpecified",
        order: "perGrammar",
        status: "experimental"
      },
      "max-width": {
        syntax: "none | <length-percentage> | min-content | max-content | fit-content | fit-content(<length-percentage>)",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "referToWidthOfContainingBlock",
        groups: [
          "CSS Box Model"
        ],
        initial: "none",
        appliesto: "allElementsButNonReplacedAndTableRows",
        computed: "percentageAsSpecifiedAbsoluteLengthOrNone",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/max-width"
      },
      "min-block-size": {
        syntax: "<'min-width'>",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "blockSizeOfContainingBlock",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "0",
        appliesto: "sameAsWidthAndHeight",
        computed: "sameAsMinWidthAndMinHeight",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/min-block-size"
      },
      "min-height": {
        syntax: "auto | <length> | <percentage> | min-content | max-content | fit-content | fit-content(<length-percentage>)",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "regardingHeightOfGeneratedBoxContainingBlockPercentages0",
        groups: [
          "CSS Box Model"
        ],
        initial: "auto",
        appliesto: "allElementsButNonReplacedAndTableColumns",
        computed: "percentageAsSpecifiedOrAbsoluteLength",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/min-height"
      },
      "min-inline-size": {
        syntax: "<'min-width'>",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "inlineSizeOfContainingBlock",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "0",
        appliesto: "sameAsWidthAndHeight",
        computed: "sameAsMinWidthAndMinHeight",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/min-inline-size"
      },
      "min-width": {
        syntax: "auto | <length> | <percentage> | min-content | max-content | fit-content | fit-content(<length-percentage>)",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "referToWidthOfContainingBlock",
        groups: [
          "CSS Box Model"
        ],
        initial: "auto",
        appliesto: "allElementsButNonReplacedAndTableRows",
        computed: "percentageAsSpecifiedOrAbsoluteLength",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/min-width"
      },
      "mix-blend-mode": {
        syntax: "<blend-mode> | plus-lighter",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Compositing and Blending"
        ],
        initial: "normal",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        stacking: true,
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/mix-blend-mode"
      },
      "object-fit": {
        syntax: "fill | contain | cover | none | scale-down",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Images"
        ],
        initial: "fill",
        appliesto: "replacedElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/object-fit"
      },
      "object-position": {
        syntax: "<position>",
        media: "visual",
        inherited: true,
        animationType: "repeatableListOfSimpleListOfLpc",
        percentages: "referToWidthAndHeightOfElement",
        groups: [
          "CSS Images"
        ],
        initial: "50% 50%",
        appliesto: "replacedElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/object-position"
      },
      offset: {
        syntax: "[ <'offset-position'>? [ <'offset-path'> [ <'offset-distance'> || <'offset-rotate'> ]? ]? ]! [ / <'offset-anchor'> ]?",
        media: "visual",
        inherited: false,
        animationType: [
          "offset-position",
          "offset-path",
          "offset-distance",
          "offset-anchor",
          "offset-rotate"
        ],
        percentages: [
          "offset-position",
          "offset-distance",
          "offset-anchor"
        ],
        groups: [
          "CSS Motion Path"
        ],
        initial: [
          "offset-position",
          "offset-path",
          "offset-distance",
          "offset-anchor",
          "offset-rotate"
        ],
        appliesto: "transformableElements",
        computed: [
          "offset-position",
          "offset-path",
          "offset-distance",
          "offset-anchor",
          "offset-rotate"
        ],
        order: "perGrammar",
        stacking: true,
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/offset"
      },
      "offset-anchor": {
        syntax: "auto | <position>",
        media: "visual",
        inherited: false,
        animationType: "position",
        percentages: "relativeToWidthAndHeight",
        groups: [
          "CSS Motion Path"
        ],
        initial: "auto",
        appliesto: "transformableElements",
        computed: "forLengthAbsoluteValueOtherwisePercentage",
        order: "perGrammar",
        status: "standard"
      },
      "offset-distance": {
        syntax: "<length-percentage>",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "referToTotalPathLength",
        groups: [
          "CSS Motion Path"
        ],
        initial: "0",
        appliesto: "transformableElements",
        computed: "forLengthAbsoluteValueOtherwisePercentage",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/offset-distance"
      },
      "offset-path": {
        syntax: "none | ray( [ <angle> && <size> && contain? ] ) | <path()> | <url> | [ <basic-shape> || <geometry-box> ]",
        media: "visual",
        inherited: false,
        animationType: "angleOrBasicShapeOrPath",
        percentages: "no",
        groups: [
          "CSS Motion Path"
        ],
        initial: "none",
        appliesto: "transformableElements",
        computed: "asSpecified",
        order: "perGrammar",
        stacking: true,
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/offset-path"
      },
      "offset-position": {
        syntax: "auto | <position>",
        media: "visual",
        inherited: false,
        animationType: "position",
        percentages: "referToSizeOfContainingBlock",
        groups: [
          "CSS Motion Path"
        ],
        initial: "auto",
        appliesto: "transformableElements",
        computed: "forLengthAbsoluteValueOtherwisePercentage",
        order: "perGrammar",
        status: "experimental"
      },
      "offset-rotate": {
        syntax: "[ auto | reverse ] || <angle>",
        media: "visual",
        inherited: false,
        animationType: "angleOrBasicShapeOrPath",
        percentages: "no",
        groups: [
          "CSS Motion Path"
        ],
        initial: "auto",
        appliesto: "transformableElements",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/offset-rotate"
      },
      opacity: {
        syntax: "<alpha-value>",
        media: "visual",
        inherited: false,
        animationType: "byComputedValueType",
        percentages: "mapToRange0To1",
        groups: [
          "CSS Color"
        ],
        initial: "1",
        appliesto: "allElements",
        computed: "specifiedValueNumberClipped0To1",
        order: "perGrammar",
        alsoAppliesTo: [
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/opacity"
      },
      order: {
        syntax: "<integer>",
        media: "visual",
        inherited: false,
        animationType: "integer",
        percentages: "no",
        groups: [
          "CSS Flexible Box Layout"
        ],
        initial: "0",
        appliesto: "flexItemsGridItemsAbsolutelyPositionedContainerChildren",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/order"
      },
      orphans: {
        syntax: "<integer>",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Fragmentation"
        ],
        initial: "2",
        appliesto: "blockContainerElements",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/orphans"
      },
      outline: {
        syntax: "[ <'outline-color'> || <'outline-style'> || <'outline-width'> ]",
        media: [
          "visual",
          "interactive"
        ],
        inherited: false,
        animationType: [
          "outline-color",
          "outline-width",
          "outline-style"
        ],
        percentages: "no",
        groups: [
          "CSS Basic User Interface"
        ],
        initial: [
          "outline-color",
          "outline-style",
          "outline-width"
        ],
        appliesto: "allElements",
        computed: [
          "outline-color",
          "outline-width",
          "outline-style"
        ],
        order: "orderOfAppearance",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/outline"
      },
      "outline-color": {
        syntax: "<color> | invert",
        media: [
          "visual",
          "interactive"
        ],
        inherited: false,
        animationType: "color",
        percentages: "no",
        groups: [
          "CSS Basic User Interface"
        ],
        initial: "invertOrCurrentColor",
        appliesto: "allElements",
        computed: "invertForTranslucentColorRGBAOtherwiseRGB",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/outline-color"
      },
      "outline-offset": {
        syntax: "<length>",
        media: [
          "visual",
          "interactive"
        ],
        inherited: false,
        animationType: "length",
        percentages: "no",
        groups: [
          "CSS Basic User Interface"
        ],
        initial: "0",
        appliesto: "allElements",
        computed: "asSpecifiedRelativeToAbsoluteLengths",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/outline-offset"
      },
      "outline-style": {
        syntax: "auto | <'border-style'>",
        media: [
          "visual",
          "interactive"
        ],
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Basic User Interface"
        ],
        initial: "none",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/outline-style"
      },
      "outline-width": {
        syntax: "<line-width>",
        media: [
          "visual",
          "interactive"
        ],
        inherited: false,
        animationType: "length",
        percentages: "no",
        groups: [
          "CSS Basic User Interface"
        ],
        initial: "medium",
        appliesto: "allElements",
        computed: "absoluteLength0ForNone",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/outline-width"
      },
      overflow: {
        syntax: "[ visible | hidden | clip | scroll | auto ]{1,2}",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Overflow"
        ],
        initial: "visible",
        appliesto: "blockContainersFlexContainersGridContainers",
        computed: [
          "overflow-x",
          "overflow-y"
        ],
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/overflow"
      },
      "overflow-anchor": {
        syntax: "auto | none",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Scroll Anchoring"
        ],
        initial: "auto",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard"
      },
      "overflow-block": {
        syntax: "visible | hidden | clip | scroll | auto",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Overflow"
        ],
        initial: "auto",
        appliesto: "blockContainersFlexContainersGridContainers",
        computed: "asSpecifiedButVisibleOrClipReplacedToAutoOrHiddenIfOtherValueDifferent",
        order: "perGrammar",
        status: "standard"
      },
      "overflow-clip-box": {
        syntax: "padding-box | content-box",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Mozilla Extensions"
        ],
        initial: "padding-box",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Mozilla/CSS/overflow-clip-box"
      },
      "overflow-clip-margin": {
        syntax: "<visual-box> || <length [0,\u221E]>",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Overflow"
        ],
        initial: "0px",
        appliesto: "allElements",
        computed: "theComputedLength",
        order: "perGrammar",
        status: "standard"
      },
      "overflow-inline": {
        syntax: "visible | hidden | clip | scroll | auto",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Overflow"
        ],
        initial: "auto",
        appliesto: "blockContainersFlexContainersGridContainers",
        computed: "asSpecifiedButVisibleOrClipReplacedToAutoOrHiddenIfOtherValueDifferent",
        order: "perGrammar",
        status: "standard"
      },
      "overflow-wrap": {
        syntax: "normal | break-word | anywhere",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Text"
        ],
        initial: "normal",
        appliesto: "nonReplacedInlineElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/overflow-wrap"
      },
      "overflow-x": {
        syntax: "visible | hidden | clip | scroll | auto",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Overflow"
        ],
        initial: "visible",
        appliesto: "blockContainersFlexContainersGridContainers",
        computed: "asSpecifiedButVisibleOrClipReplacedToAutoOrHiddenIfOtherValueDifferent",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/overflow-x"
      },
      "overflow-y": {
        syntax: "visible | hidden | clip | scroll | auto",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Overflow"
        ],
        initial: "visible",
        appliesto: "blockContainersFlexContainersGridContainers",
        computed: "asSpecifiedButVisibleOrClipReplacedToAutoOrHiddenIfOtherValueDifferent",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/overflow-y"
      },
      "overscroll-behavior": {
        syntax: "[ contain | none | auto ]{1,2}",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Box Model"
        ],
        initial: "auto",
        appliesto: "nonReplacedBlockAndInlineBlockElements",
        computed: [
          "overscroll-behavior-x",
          "overscroll-behavior-y"
        ],
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/overscroll-behavior"
      },
      "overscroll-behavior-block": {
        syntax: "contain | none | auto",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Box Model"
        ],
        initial: "auto",
        appliesto: "nonReplacedBlockAndInlineBlockElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/overscroll-behavior-block"
      },
      "overscroll-behavior-inline": {
        syntax: "contain | none | auto",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Box Model"
        ],
        initial: "auto",
        appliesto: "nonReplacedBlockAndInlineBlockElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/overscroll-behavior-inline"
      },
      "overscroll-behavior-x": {
        syntax: "contain | none | auto",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Box Model"
        ],
        initial: "auto",
        appliesto: "nonReplacedBlockAndInlineBlockElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/overscroll-behavior-x"
      },
      "overscroll-behavior-y": {
        syntax: "contain | none | auto",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Box Model"
        ],
        initial: "auto",
        appliesto: "nonReplacedBlockAndInlineBlockElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/overscroll-behavior-y"
      },
      padding: {
        syntax: "[ <length> | <percentage> ]{1,4}",
        media: "visual",
        inherited: false,
        animationType: "length",
        percentages: "referToWidthOfContainingBlock",
        groups: [
          "CSS Box Model"
        ],
        initial: [
          "padding-bottom",
          "padding-left",
          "padding-right",
          "padding-top"
        ],
        appliesto: "allElementsExceptInternalTableDisplayTypes",
        computed: [
          "padding-bottom",
          "padding-left",
          "padding-right",
          "padding-top"
        ],
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/padding"
      },
      "padding-block": {
        syntax: "<'padding-left'>{1,2}",
        media: "visual",
        inherited: false,
        animationType: "length",
        percentages: "logicalWidthOfContainingBlock",
        groups: [
          "CSS Logical Properties"
        ],
        initial: [
          "padding-block-start",
          "padding-block-end"
        ],
        appliesto: "allElementsExceptInternalTableDisplayTypes",
        computed: [
          "padding-block-start",
          "padding-block-end"
        ],
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/padding-block"
      },
      "padding-block-end": {
        syntax: "<'padding-left'>",
        media: "visual",
        inherited: false,
        animationType: "length",
        percentages: "logicalWidthOfContainingBlock",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "0",
        appliesto: "allElementsExceptInternalTableDisplayTypes",
        computed: "asLength",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/padding-block-end"
      },
      "padding-block-start": {
        syntax: "<'padding-left'>",
        media: "visual",
        inherited: false,
        animationType: "length",
        percentages: "logicalWidthOfContainingBlock",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "0",
        appliesto: "allElementsExceptInternalTableDisplayTypes",
        computed: "asLength",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/padding-block-start"
      },
      "padding-bottom": {
        syntax: "<length> | <percentage>",
        media: "visual",
        inherited: false,
        animationType: "length",
        percentages: "referToWidthOfContainingBlock",
        groups: [
          "CSS Box Model"
        ],
        initial: "0",
        appliesto: "allElementsExceptInternalTableDisplayTypes",
        computed: "percentageAsSpecifiedOrAbsoluteLength",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/padding-bottom"
      },
      "padding-inline": {
        syntax: "<'padding-left'>{1,2}",
        media: "visual",
        inherited: false,
        animationType: "length",
        percentages: "logicalWidthOfContainingBlock",
        groups: [
          "CSS Logical Properties"
        ],
        initial: [
          "padding-inline-start",
          "padding-inline-end"
        ],
        appliesto: "allElementsExceptInternalTableDisplayTypes",
        computed: [
          "padding-inline-start",
          "padding-inline-end"
        ],
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/padding-inline"
      },
      "padding-inline-end": {
        syntax: "<'padding-left'>",
        media: "visual",
        inherited: false,
        animationType: "length",
        percentages: "logicalWidthOfContainingBlock",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "0",
        appliesto: "allElementsExceptInternalTableDisplayTypes",
        computed: "asLength",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/padding-inline-end"
      },
      "padding-inline-start": {
        syntax: "<'padding-left'>",
        media: "visual",
        inherited: false,
        animationType: "length",
        percentages: "logicalWidthOfContainingBlock",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "0",
        appliesto: "allElementsExceptInternalTableDisplayTypes",
        computed: "asLength",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/padding-inline-start"
      },
      "padding-left": {
        syntax: "<length> | <percentage>",
        media: "visual",
        inherited: false,
        animationType: "length",
        percentages: "referToWidthOfContainingBlock",
        groups: [
          "CSS Box Model"
        ],
        initial: "0",
        appliesto: "allElementsExceptInternalTableDisplayTypes",
        computed: "percentageAsSpecifiedOrAbsoluteLength",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/padding-left"
      },
      "padding-right": {
        syntax: "<length> | <percentage>",
        media: "visual",
        inherited: false,
        animationType: "length",
        percentages: "referToWidthOfContainingBlock",
        groups: [
          "CSS Box Model"
        ],
        initial: "0",
        appliesto: "allElementsExceptInternalTableDisplayTypes",
        computed: "percentageAsSpecifiedOrAbsoluteLength",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/padding-right"
      },
      "padding-top": {
        syntax: "<length> | <percentage>",
        media: "visual",
        inherited: false,
        animationType: "length",
        percentages: "referToWidthOfContainingBlock",
        groups: [
          "CSS Box Model"
        ],
        initial: "0",
        appliesto: "allElementsExceptInternalTableDisplayTypes",
        computed: "percentageAsSpecifiedOrAbsoluteLength",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/padding-top"
      },
      "page-break-after": {
        syntax: "auto | always | avoid | left | right | recto | verso",
        media: [
          "visual",
          "paged"
        ],
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Pages"
        ],
        initial: "auto",
        appliesto: "blockElementsInNormalFlow",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/page-break-after"
      },
      "page-break-before": {
        syntax: "auto | always | avoid | left | right | recto | verso",
        media: [
          "visual",
          "paged"
        ],
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Pages"
        ],
        initial: "auto",
        appliesto: "blockElementsInNormalFlow",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/page-break-before"
      },
      "page-break-inside": {
        syntax: "auto | avoid",
        media: [
          "visual",
          "paged"
        ],
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Pages"
        ],
        initial: "auto",
        appliesto: "blockElementsInNormalFlow",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/page-break-inside"
      },
      "paint-order": {
        syntax: "normal | [ fill || stroke || markers ]",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Text"
        ],
        initial: "normal",
        appliesto: "textElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/paint-order"
      },
      perspective: {
        syntax: "none | <length>",
        media: "visual",
        inherited: false,
        animationType: "length",
        percentages: "no",
        groups: [
          "CSS Transforms"
        ],
        initial: "none",
        appliesto: "transformableElements",
        computed: "absoluteLengthOrNone",
        order: "uniqueOrder",
        stacking: true,
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/perspective"
      },
      "perspective-origin": {
        syntax: "<position>",
        media: "visual",
        inherited: false,
        animationType: "simpleListOfLpc",
        percentages: "referToSizeOfBoundingBox",
        groups: [
          "CSS Transforms"
        ],
        initial: "50% 50%",
        appliesto: "transformableElements",
        computed: "forLengthAbsoluteValueOtherwisePercentage",
        order: "oneOrTwoValuesLengthAbsoluteKeywordsPercentages",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/perspective-origin"
      },
      "place-content": {
        syntax: "<'align-content'> <'justify-content'>?",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Box Alignment"
        ],
        initial: [
          "align-content",
          "justify-content"
        ],
        appliesto: "multilineFlexContainers",
        computed: [
          "align-content",
          "justify-content"
        ],
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/place-content"
      },
      "place-items": {
        syntax: "<'align-items'> <'justify-items'>?",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Box Alignment"
        ],
        initial: [
          "align-items",
          "justify-items"
        ],
        appliesto: "allElements",
        computed: [
          "align-items",
          "justify-items"
        ],
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/place-items"
      },
      "place-self": {
        syntax: "<'align-self'> <'justify-self'>?",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Box Alignment"
        ],
        initial: [
          "align-self",
          "justify-self"
        ],
        appliesto: "blockLevelBoxesAndAbsolutelyPositionedBoxesAndGridItems",
        computed: [
          "align-self",
          "justify-self"
        ],
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/place-self"
      },
      "pointer-events": {
        syntax: "auto | none | visiblePainted | visibleFill | visibleStroke | visible | painted | fill | stroke | all | inherit",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Basic User Interface"
        ],
        initial: "auto",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/pointer-events"
      },
      position: {
        syntax: "static | relative | absolute | sticky | fixed",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Positioning"
        ],
        initial: "static",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        stacking: true,
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/position"
      },
      quotes: {
        syntax: "none | auto | [ <string> <string> ]+",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Generated Content"
        ],
        initial: "dependsOnUserAgent",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/quotes"
      },
      resize: {
        syntax: "none | both | horizontal | vertical | block | inline",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Basic User Interface"
        ],
        initial: "none",
        appliesto: "elementsWithOverflowNotVisibleAndReplacedElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/resize"
      },
      right: {
        syntax: "<length> | <percentage> | auto",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "referToWidthOfContainingBlock",
        groups: [
          "CSS Positioning"
        ],
        initial: "auto",
        appliesto: "positionedElements",
        computed: "lengthAbsolutePercentageAsSpecifiedOtherwiseAuto",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/right"
      },
      rotate: {
        syntax: "none | <angle> | [ x | y | z | <number>{3} ] && <angle>",
        media: "visual",
        inherited: false,
        animationType: "transform",
        percentages: "no",
        groups: [
          "CSS Transforms"
        ],
        initial: "none",
        appliesto: "transformableElements",
        computed: "asSpecified",
        order: "perGrammar",
        stacking: true,
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/rotate"
      },
      "row-gap": {
        syntax: "normal | <length-percentage>",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "referToDimensionOfContentArea",
        groups: [
          "CSS Box Alignment"
        ],
        initial: "normal",
        appliesto: "multiColumnElementsFlexContainersGridContainers",
        computed: "asSpecifiedWithLengthsAbsoluteAndNormalComputingToZeroExceptMultiColumn",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/row-gap"
      },
      "ruby-align": {
        syntax: "start | center | space-between | space-around",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Ruby"
        ],
        initial: "space-around",
        appliesto: "rubyBasesAnnotationsBaseAnnotationContainers",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "experimental",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/ruby-align"
      },
      "ruby-merge": {
        syntax: "separate | collapse | auto",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Ruby"
        ],
        initial: "separate",
        appliesto: "rubyAnnotationsContainers",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "experimental"
      },
      "ruby-position": {
        syntax: "[ alternate || [ over | under ] ] | inter-character",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Ruby"
        ],
        initial: "alternate",
        appliesto: "rubyAnnotationsContainers",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "experimental",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/ruby-position"
      },
      scale: {
        syntax: "none | <number>{1,3}",
        media: "visual",
        inherited: false,
        animationType: "transform",
        percentages: "no",
        groups: [
          "CSS Transforms"
        ],
        initial: "none",
        appliesto: "transformableElements",
        computed: "asSpecified",
        order: "perGrammar",
        stacking: true,
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/scale"
      },
      "scrollbar-color": {
        syntax: "auto | <color>{2}",
        media: "visual",
        inherited: true,
        animationType: "color",
        percentages: "no",
        groups: [
          "CSS Scrollbars"
        ],
        initial: "auto",
        appliesto: "scrollingBoxes",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/scrollbar-color"
      },
      "scrollbar-gutter": {
        syntax: "auto | stable && both-edges?",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Overflow"
        ],
        initial: "auto",
        appliesto: "scrollingBoxes",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/scrollbar-gutter"
      },
      "scrollbar-width": {
        syntax: "auto | thin | none",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Scrollbars"
        ],
        initial: "auto",
        appliesto: "scrollingBoxes",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/scrollbar-width"
      },
      "scroll-behavior": {
        syntax: "auto | smooth",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSSOM View"
        ],
        initial: "auto",
        appliesto: "scrollingBoxes",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/scroll-behavior"
      },
      "scroll-margin": {
        syntax: "<length>{1,4}",
        media: "visual",
        inherited: false,
        animationType: "byComputedValueType",
        percentages: "no",
        groups: [
          "CSS Scroll Snap"
        ],
        initial: [
          "scroll-margin-bottom",
          "scroll-margin-left",
          "scroll-margin-right",
          "scroll-margin-top"
        ],
        appliesto: "allElements",
        computed: [
          "scroll-margin-bottom",
          "scroll-margin-left",
          "scroll-margin-right",
          "scroll-margin-top"
        ],
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/scroll-margin"
      },
      "scroll-margin-block": {
        syntax: "<length>{1,2}",
        media: "visual",
        inherited: false,
        animationType: "byComputedValueType",
        percentages: "no",
        groups: [
          "CSS Scroll Snap"
        ],
        initial: [
          "scroll-margin-block-start",
          "scroll-margin-block-end"
        ],
        appliesto: "allElements",
        computed: [
          "scroll-margin-block-start",
          "scroll-margin-block-end"
        ],
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/scroll-margin-block"
      },
      "scroll-margin-block-start": {
        syntax: "<length>",
        media: "visual",
        inherited: false,
        animationType: "byComputedValueType",
        percentages: "no",
        groups: [
          "CSS Scroll Snap"
        ],
        initial: "0",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/scroll-margin-block-start"
      },
      "scroll-margin-block-end": {
        syntax: "<length>",
        media: "visual",
        inherited: false,
        animationType: "byComputedValueType",
        percentages: "no",
        groups: [
          "CSS Scroll Snap"
        ],
        initial: "0",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/scroll-margin-block-end"
      },
      "scroll-margin-bottom": {
        syntax: "<length>",
        media: "visual",
        inherited: false,
        animationType: "byComputedValueType",
        percentages: "no",
        groups: [
          "CSS Scroll Snap"
        ],
        initial: "0",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/scroll-margin-bottom"
      },
      "scroll-margin-inline": {
        syntax: "<length>{1,2}",
        media: "visual",
        inherited: false,
        animationType: "byComputedValueType",
        percentages: "no",
        groups: [
          "CSS Scroll Snap"
        ],
        initial: [
          "scroll-margin-inline-start",
          "scroll-margin-inline-end"
        ],
        appliesto: "allElements",
        computed: [
          "scroll-margin-inline-start",
          "scroll-margin-inline-end"
        ],
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/scroll-margin-inline"
      },
      "scroll-margin-inline-start": {
        syntax: "<length>",
        media: "visual",
        inherited: false,
        animationType: "byComputedValueType",
        percentages: "no",
        groups: [
          "CSS Scroll Snap"
        ],
        initial: "0",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/scroll-margin-inline-start"
      },
      "scroll-margin-inline-end": {
        syntax: "<length>",
        media: "visual",
        inherited: false,
        animationType: "byComputedValueType",
        percentages: "no",
        groups: [
          "CSS Scroll Snap"
        ],
        initial: "0",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/scroll-margin-inline-end"
      },
      "scroll-margin-left": {
        syntax: "<length>",
        media: "visual",
        inherited: false,
        animationType: "byComputedValueType",
        percentages: "no",
        groups: [
          "CSS Scroll Snap"
        ],
        initial: "0",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/scroll-margin-left"
      },
      "scroll-margin-right": {
        syntax: "<length>",
        media: "visual",
        inherited: false,
        animationType: "byComputedValueType",
        percentages: "no",
        groups: [
          "CSS Scroll Snap"
        ],
        initial: "0",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/scroll-margin-right"
      },
      "scroll-margin-top": {
        syntax: "<length>",
        media: "visual",
        inherited: false,
        animationType: "byComputedValueType",
        percentages: "no",
        groups: [
          "CSS Scroll Snap"
        ],
        initial: "0",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/scroll-margin-top"
      },
      "scroll-padding": {
        syntax: "[ auto | <length-percentage> ]{1,4}",
        media: "visual",
        inherited: false,
        animationType: "byComputedValueType",
        percentages: "relativeToTheScrollContainersScrollport",
        groups: [
          "CSS Scroll Snap"
        ],
        initial: [
          "scroll-padding-bottom",
          "scroll-padding-left",
          "scroll-padding-right",
          "scroll-padding-top"
        ],
        appliesto: "scrollContainers",
        computed: [
          "scroll-padding-bottom",
          "scroll-padding-left",
          "scroll-padding-right",
          "scroll-padding-top"
        ],
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/scroll-padding"
      },
      "scroll-padding-block": {
        syntax: "[ auto | <length-percentage> ]{1,2}",
        media: "visual",
        inherited: false,
        animationType: "byComputedValueType",
        percentages: "relativeToTheScrollContainersScrollport",
        groups: [
          "CSS Scroll Snap"
        ],
        initial: [
          "scroll-padding-block-start",
          "scroll-padding-block-end"
        ],
        appliesto: "scrollContainers",
        computed: [
          "scroll-padding-block-start",
          "scroll-padding-block-end"
        ],
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/scroll-padding-block"
      },
      "scroll-padding-block-start": {
        syntax: "auto | <length-percentage>",
        media: "visual",
        inherited: false,
        animationType: "byComputedValueType",
        percentages: "relativeToTheScrollContainersScrollport",
        groups: [
          "CSS Scroll Snap"
        ],
        initial: "auto",
        appliesto: "scrollContainers",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/scroll-padding-block-start"
      },
      "scroll-padding-block-end": {
        syntax: "auto | <length-percentage>",
        media: "visual",
        inherited: false,
        animationType: "byComputedValueType",
        percentages: "relativeToTheScrollContainersScrollport",
        groups: [
          "CSS Scroll Snap"
        ],
        initial: "auto",
        appliesto: "scrollContainers",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/scroll-padding-block-end"
      },
      "scroll-padding-bottom": {
        syntax: "auto | <length-percentage>",
        media: "visual",
        inherited: false,
        animationType: "byComputedValueType",
        percentages: "relativeToTheScrollContainersScrollport",
        groups: [
          "CSS Scroll Snap"
        ],
        initial: "auto",
        appliesto: "scrollContainers",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/scroll-padding-bottom"
      },
      "scroll-padding-inline": {
        syntax: "[ auto | <length-percentage> ]{1,2}",
        media: "visual",
        inherited: false,
        animationType: "byComputedValueType",
        percentages: "relativeToTheScrollContainersScrollport",
        groups: [
          "CSS Scroll Snap"
        ],
        initial: [
          "scroll-padding-inline-start",
          "scroll-padding-inline-end"
        ],
        appliesto: "scrollContainers",
        computed: [
          "scroll-padding-inline-start",
          "scroll-padding-inline-end"
        ],
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/scroll-padding-inline"
      },
      "scroll-padding-inline-start": {
        syntax: "auto | <length-percentage>",
        media: "visual",
        inherited: false,
        animationType: "byComputedValueType",
        percentages: "relativeToTheScrollContainersScrollport",
        groups: [
          "CSS Scroll Snap"
        ],
        initial: "auto",
        appliesto: "scrollContainers",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/scroll-padding-inline-start"
      },
      "scroll-padding-inline-end": {
        syntax: "auto | <length-percentage>",
        media: "visual",
        inherited: false,
        animationType: "byComputedValueType",
        percentages: "relativeToTheScrollContainersScrollport",
        groups: [
          "CSS Scroll Snap"
        ],
        initial: "auto",
        appliesto: "scrollContainers",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/scroll-padding-inline-end"
      },
      "scroll-padding-left": {
        syntax: "auto | <length-percentage>",
        media: "visual",
        inherited: false,
        animationType: "byComputedValueType",
        percentages: "relativeToTheScrollContainersScrollport",
        groups: [
          "CSS Scroll Snap"
        ],
        initial: "auto",
        appliesto: "scrollContainers",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/scroll-padding-left"
      },
      "scroll-padding-right": {
        syntax: "auto | <length-percentage>",
        media: "visual",
        inherited: false,
        animationType: "byComputedValueType",
        percentages: "relativeToTheScrollContainersScrollport",
        groups: [
          "CSS Scroll Snap"
        ],
        initial: "auto",
        appliesto: "scrollContainers",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/scroll-padding-right"
      },
      "scroll-padding-top": {
        syntax: "auto | <length-percentage>",
        media: "visual",
        inherited: false,
        animationType: "byComputedValueType",
        percentages: "relativeToTheScrollContainersScrollport",
        groups: [
          "CSS Scroll Snap"
        ],
        initial: "auto",
        appliesto: "scrollContainers",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/scroll-padding-top"
      },
      "scroll-snap-align": {
        syntax: "[ none | start | end | center ]{1,2}",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Scroll Snap"
        ],
        initial: "none",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/scroll-snap-align"
      },
      "scroll-snap-coordinate": {
        syntax: "none | <position>#",
        media: "interactive",
        inherited: false,
        animationType: "position",
        percentages: "referToBorderBox",
        groups: [
          "CSS Scroll Snap"
        ],
        initial: "none",
        appliesto: "allElements",
        computed: "asSpecifiedRelativeToAbsoluteLengths",
        order: "uniqueOrder",
        status: "obsolete",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/scroll-snap-coordinate"
      },
      "scroll-snap-destination": {
        syntax: "<position>",
        media: "interactive",
        inherited: false,
        animationType: "position",
        percentages: "relativeToScrollContainerPaddingBoxAxis",
        groups: [
          "CSS Scroll Snap"
        ],
        initial: "0px 0px",
        appliesto: "scrollContainers",
        computed: "asSpecifiedRelativeToAbsoluteLengths",
        order: "uniqueOrder",
        status: "obsolete",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/scroll-snap-destination"
      },
      "scroll-snap-points-x": {
        syntax: "none | repeat( <length-percentage> )",
        media: "interactive",
        inherited: false,
        animationType: "discrete",
        percentages: "relativeToScrollContainerPaddingBoxAxis",
        groups: [
          "CSS Scroll Snap"
        ],
        initial: "none",
        appliesto: "scrollContainers",
        computed: "asSpecifiedRelativeToAbsoluteLengths",
        order: "uniqueOrder",
        status: "obsolete",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/scroll-snap-points-x"
      },
      "scroll-snap-points-y": {
        syntax: "none | repeat( <length-percentage> )",
        media: "interactive",
        inherited: false,
        animationType: "discrete",
        percentages: "relativeToScrollContainerPaddingBoxAxis",
        groups: [
          "CSS Scroll Snap"
        ],
        initial: "none",
        appliesto: "scrollContainers",
        computed: "asSpecifiedRelativeToAbsoluteLengths",
        order: "uniqueOrder",
        status: "obsolete",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/scroll-snap-points-y"
      },
      "scroll-snap-stop": {
        syntax: "normal | always",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Scroll Snap"
        ],
        initial: "normal",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/scroll-snap-stop"
      },
      "scroll-snap-type": {
        syntax: "none | [ x | y | block | inline | both ] [ mandatory | proximity ]?",
        media: "interactive",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Scroll Snap"
        ],
        initial: "none",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/scroll-snap-type"
      },
      "scroll-snap-type-x": {
        syntax: "none | mandatory | proximity",
        media: "interactive",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Scroll Snap"
        ],
        initial: "none",
        appliesto: "scrollContainers",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "obsolete",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/scroll-snap-type-x"
      },
      "scroll-snap-type-y": {
        syntax: "none | mandatory | proximity",
        media: "interactive",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Scroll Snap"
        ],
        initial: "none",
        appliesto: "scrollContainers",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "obsolete",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/scroll-snap-type-y"
      },
      "scroll-timeline": {
        syntax: "<scroll-timeline-name> || <scroll-timeline-axis>",
        media: "visual",
        inherited: false,
        animationType: [
          "scroll-timeline-name",
          "scroll-timeline-axis"
        ],
        percentages: "no",
        groups: [
          "CSS Animations"
        ],
        initial: [
          "scroll-timeline-name",
          "scroll-timeline-axis"
        ],
        appliesto: "scrollContainers",
        computed: [
          "scroll-timeline-name",
          "scroll-timeline-axis"
        ],
        order: "perGrammar",
        status: "experimental",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/scroll-timeline"
      },
      "scroll-timeline-axis": {
        syntax: "block | inline | vertical | horizontal",
        media: "interactive",
        inherited: false,
        animationType: "notAnimatable",
        percentages: "no",
        groups: [
          "CSS Animations"
        ],
        initial: "block",
        appliesto: "scrollContainers",
        computed: "asSpecified",
        order: "perGrammar",
        status: "experimental",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/scroll-timeline-axis"
      },
      "scroll-timeline-name": {
        syntax: "none | <custom-ident>",
        media: "interactive",
        inherited: false,
        animationType: "notAnimatable",
        percentages: "no",
        groups: [
          "CSS Animations"
        ],
        initial: "none",
        appliesto: "scrollContainers",
        computed: "asSpecified",
        order: "perGrammar",
        status: "experimental",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/scroll-timeline-name"
      },
      "shape-image-threshold": {
        syntax: "<alpha-value>",
        media: "visual",
        inherited: false,
        animationType: "number",
        percentages: "no",
        groups: [
          "CSS Shapes"
        ],
        initial: "0.0",
        appliesto: "floats",
        computed: "specifiedValueNumberClipped0To1",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/shape-image-threshold"
      },
      "shape-margin": {
        syntax: "<length-percentage>",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "referToWidthOfContainingBlock",
        groups: [
          "CSS Shapes"
        ],
        initial: "0",
        appliesto: "floats",
        computed: "asSpecifiedRelativeToAbsoluteLengths",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/shape-margin"
      },
      "shape-outside": {
        syntax: "none | [ <shape-box> || <basic-shape> ] | <image>",
        media: "visual",
        inherited: false,
        animationType: "basicShapeOtherwiseNo",
        percentages: "no",
        groups: [
          "CSS Shapes"
        ],
        initial: "none",
        appliesto: "floats",
        computed: "asDefinedForBasicShapeWithAbsoluteURIOtherwiseAsSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/shape-outside"
      },
      "tab-size": {
        syntax: "<integer> | <length>",
        media: "visual",
        inherited: true,
        animationType: "length",
        percentages: "no",
        groups: [
          "CSS Text"
        ],
        initial: "8",
        appliesto: "blockContainers",
        computed: "specifiedIntegerOrAbsoluteLength",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/tab-size"
      },
      "table-layout": {
        syntax: "auto | fixed",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Table"
        ],
        initial: "auto",
        appliesto: "tableElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/table-layout"
      },
      "text-align": {
        syntax: "start | end | left | right | center | justify | match-parent",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Text"
        ],
        initial: "startOrNamelessValueIfLTRRightIfRTL",
        appliesto: "blockContainers",
        computed: "asSpecifiedExceptMatchParent",
        order: "orderOfAppearance",
        alsoAppliesTo: [
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/text-align"
      },
      "text-align-last": {
        syntax: "auto | start | end | left | right | center | justify",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Text"
        ],
        initial: "auto",
        appliesto: "blockContainers",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/text-align-last"
      },
      "text-combine-upright": {
        syntax: "none | all | [ digits <integer>? ]",
        media: "visual",
        inherited: true,
        animationType: "notAnimatable",
        percentages: "no",
        groups: [
          "CSS Writing Modes"
        ],
        initial: "none",
        appliesto: "nonReplacedInlineElements",
        computed: "keywordPlusIntegerIfDigits",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/text-combine-upright"
      },
      "text-decoration": {
        syntax: "<'text-decoration-line'> || <'text-decoration-style'> || <'text-decoration-color'> || <'text-decoration-thickness'>",
        media: "visual",
        inherited: false,
        animationType: [
          "text-decoration-color",
          "text-decoration-style",
          "text-decoration-line",
          "text-decoration-thickness"
        ],
        percentages: "no",
        groups: [
          "CSS Text Decoration"
        ],
        initial: [
          "text-decoration-color",
          "text-decoration-style",
          "text-decoration-line"
        ],
        appliesto: "allElements",
        computed: [
          "text-decoration-line",
          "text-decoration-style",
          "text-decoration-color",
          "text-decoration-thickness"
        ],
        order: "orderOfAppearance",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/text-decoration"
      },
      "text-decoration-color": {
        syntax: "<color>",
        media: "visual",
        inherited: false,
        animationType: "color",
        percentages: "no",
        groups: [
          "CSS Text Decoration"
        ],
        initial: "currentcolor",
        appliesto: "allElements",
        computed: "computedColor",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/text-decoration-color"
      },
      "text-decoration-line": {
        syntax: "none | [ underline || overline || line-through || blink ] | spelling-error | grammar-error",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Text Decoration"
        ],
        initial: "none",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "orderOfAppearance",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/text-decoration-line"
      },
      "text-decoration-skip": {
        syntax: "none | [ objects || [ spaces | [ leading-spaces || trailing-spaces ] ] || edges || box-decoration ]",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Text Decoration"
        ],
        initial: "objects",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "orderOfAppearance",
        status: "experimental",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/text-decoration-skip"
      },
      "text-decoration-skip-ink": {
        syntax: "auto | all | none",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Text Decoration"
        ],
        initial: "auto",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "orderOfAppearance",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/text-decoration-skip-ink"
      },
      "text-decoration-style": {
        syntax: "solid | double | dotted | dashed | wavy",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Text Decoration"
        ],
        initial: "solid",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/text-decoration-style"
      },
      "text-decoration-thickness": {
        syntax: "auto | from-font | <length> | <percentage> ",
        media: "visual",
        inherited: false,
        animationType: "byComputedValueType",
        percentages: "referToElementFontSize",
        groups: [
          "CSS Text Decoration"
        ],
        initial: "auto",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/text-decoration-thickness"
      },
      "text-emphasis": {
        syntax: "<'text-emphasis-style'> || <'text-emphasis-color'>",
        media: "visual",
        inherited: false,
        animationType: [
          "text-emphasis-color",
          "text-emphasis-style"
        ],
        percentages: "no",
        groups: [
          "CSS Text Decoration"
        ],
        initial: [
          "text-emphasis-style",
          "text-emphasis-color"
        ],
        appliesto: "allElements",
        computed: [
          "text-emphasis-style",
          "text-emphasis-color"
        ],
        order: "orderOfAppearance",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/text-emphasis"
      },
      "text-emphasis-color": {
        syntax: "<color>",
        media: "visual",
        inherited: false,
        animationType: "color",
        percentages: "no",
        groups: [
          "CSS Text Decoration"
        ],
        initial: "currentcolor",
        appliesto: "allElements",
        computed: "computedColor",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/text-emphasis-color"
      },
      "text-emphasis-position": {
        syntax: "[ over | under ] && [ right | left ]",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Text Decoration"
        ],
        initial: "over right",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/text-emphasis-position"
      },
      "text-emphasis-style": {
        syntax: "none | [ [ filled | open ] || [ dot | circle | double-circle | triangle | sesame ] ] | <string>",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Text Decoration"
        ],
        initial: "none",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/text-emphasis-style"
      },
      "text-indent": {
        syntax: "<length-percentage> && hanging? && each-line?",
        media: "visual",
        inherited: true,
        animationType: "lpc",
        percentages: "referToWidthOfContainingBlock",
        groups: [
          "CSS Text"
        ],
        initial: "0",
        appliesto: "blockContainers",
        computed: "percentageOrAbsoluteLengthPlusKeywords",
        order: "lengthOrPercentageBeforeKeywords",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/text-indent"
      },
      "text-justify": {
        syntax: "auto | inter-character | inter-word | none",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Text"
        ],
        initial: "auto",
        appliesto: "inlineLevelAndTableCellElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/text-justify"
      },
      "text-orientation": {
        syntax: "mixed | upright | sideways",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Writing Modes"
        ],
        initial: "mixed",
        appliesto: "allElementsExceptTableRowGroupsRowsColumnGroupsAndColumns",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/text-orientation"
      },
      "text-overflow": {
        syntax: "[ clip | ellipsis | <string> ]{1,2}",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Basic User Interface"
        ],
        initial: "clip",
        appliesto: "blockContainerElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/text-overflow"
      },
      "text-rendering": {
        syntax: "auto | optimizeSpeed | optimizeLegibility | geometricPrecision",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Miscellaneous"
        ],
        initial: "auto",
        appliesto: "textElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/text-rendering"
      },
      "text-shadow": {
        syntax: "none | <shadow-t>#",
        media: "visual",
        inherited: true,
        animationType: "shadowList",
        percentages: "no",
        groups: [
          "CSS Text Decoration"
        ],
        initial: "none",
        appliesto: "allElements",
        computed: "colorPlusThreeAbsoluteLengths",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/text-shadow"
      },
      "text-size-adjust": {
        syntax: "none | auto | <percentage>",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "referToSizeOfFont",
        groups: [
          "CSS Text"
        ],
        initial: "autoForSmartphoneBrowsersSupportingInflation",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "experimental",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/text-size-adjust"
      },
      "text-transform": {
        syntax: "none | capitalize | uppercase | lowercase | full-width | full-size-kana",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Text"
        ],
        initial: "none",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/text-transform"
      },
      "text-underline-offset": {
        syntax: "auto | <length> | <percentage> ",
        media: "visual",
        inherited: true,
        animationType: "byComputedValueType",
        percentages: "referToElementFontSize",
        groups: [
          "CSS Text Decoration"
        ],
        initial: "auto",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/text-underline-offset"
      },
      "text-underline-position": {
        syntax: "auto | from-font | [ under || [ left | right ] ]",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Text Decoration"
        ],
        initial: "auto",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "orderOfAppearance",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/text-underline-position"
      },
      top: {
        syntax: "<length> | <percentage> | auto",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "referToContainingBlockHeight",
        groups: [
          "CSS Positioning"
        ],
        initial: "auto",
        appliesto: "positionedElements",
        computed: "lengthAbsolutePercentageAsSpecifiedOtherwiseAuto",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/top"
      },
      "touch-action": {
        syntax: "auto | none | [ [ pan-x | pan-left | pan-right ] || [ pan-y | pan-up | pan-down ] || pinch-zoom ] | manipulation",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Pointer Events"
        ],
        initial: "auto",
        appliesto: "allElementsExceptNonReplacedInlineElementsTableRowsColumnsRowColumnGroups",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/touch-action"
      },
      transform: {
        syntax: "none | <transform-list>",
        media: "visual",
        inherited: false,
        animationType: "transform",
        percentages: "referToSizeOfBoundingBox",
        groups: [
          "CSS Transforms"
        ],
        initial: "none",
        appliesto: "transformableElements",
        computed: "asSpecifiedRelativeToAbsoluteLengths",
        order: "uniqueOrder",
        stacking: true,
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/transform"
      },
      "transform-box": {
        syntax: "content-box | border-box | fill-box | stroke-box | view-box",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Transforms"
        ],
        initial: "view-box",
        appliesto: "transformableElements",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/transform-box"
      },
      "transform-origin": {
        syntax: "[ <length-percentage> | left | center | right | top | bottom ] | [ [ <length-percentage> | left | center | right ] && [ <length-percentage> | top | center | bottom ] ] <length>?",
        media: "visual",
        inherited: false,
        animationType: "simpleListOfLpc",
        percentages: "referToSizeOfBoundingBox",
        groups: [
          "CSS Transforms"
        ],
        initial: "50% 50% 0",
        appliesto: "transformableElements",
        computed: "forLengthAbsoluteValueOtherwisePercentage",
        order: "oneOrTwoValuesLengthAbsoluteKeywordsPercentages",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/transform-origin"
      },
      "transform-style": {
        syntax: "flat | preserve-3d",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Transforms"
        ],
        initial: "flat",
        appliesto: "transformableElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        stacking: true,
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/transform-style"
      },
      transition: {
        syntax: "<single-transition>#",
        media: "interactive",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Transitions"
        ],
        initial: [
          "transition-delay",
          "transition-duration",
          "transition-property",
          "transition-timing-function"
        ],
        appliesto: "allElementsAndPseudos",
        computed: [
          "transition-delay",
          "transition-duration",
          "transition-property",
          "transition-timing-function"
        ],
        order: "orderOfAppearance",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/transition"
      },
      "transition-delay": {
        syntax: "<time>#",
        media: "interactive",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Transitions"
        ],
        initial: "0s",
        appliesto: "allElementsAndPseudos",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/transition-delay"
      },
      "transition-duration": {
        syntax: "<time>#",
        media: "interactive",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Transitions"
        ],
        initial: "0s",
        appliesto: "allElementsAndPseudos",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/transition-duration"
      },
      "transition-property": {
        syntax: "none | <single-transition-property>#",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Transitions"
        ],
        initial: "all",
        appliesto: "allElementsAndPseudos",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/transition-property"
      },
      "transition-timing-function": {
        syntax: "<easing-function>#",
        media: "interactive",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Transitions"
        ],
        initial: "ease",
        appliesto: "allElementsAndPseudos",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/transition-timing-function"
      },
      translate: {
        syntax: "none | <length-percentage> [ <length-percentage> <length>? ]?",
        media: "visual",
        inherited: false,
        animationType: "transform",
        percentages: "referToSizeOfBoundingBox",
        groups: [
          "CSS Transforms"
        ],
        initial: "none",
        appliesto: "transformableElements",
        computed: "asSpecifiedRelativeToAbsoluteLengths",
        order: "perGrammar",
        stacking: true,
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/translate"
      },
      "unicode-bidi": {
        syntax: "normal | embed | isolate | bidi-override | isolate-override | plaintext",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Writing Modes"
        ],
        initial: "normal",
        appliesto: "allElementsSomeValuesNoEffectOnNonInlineElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/unicode-bidi"
      },
      "user-select": {
        syntax: "auto | text | none | contain | all",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Basic User Interface"
        ],
        initial: "auto",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/user-select"
      },
      "vertical-align": {
        syntax: "baseline | sub | super | text-top | text-bottom | middle | top | bottom | <percentage> | <length>",
        media: "visual",
        inherited: false,
        animationType: "length",
        percentages: "referToLineHeight",
        groups: [
          "CSS Table"
        ],
        initial: "baseline",
        appliesto: "inlineLevelAndTableCellElements",
        computed: "absoluteLengthOrKeyword",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/vertical-align"
      },
      visibility: {
        syntax: "visible | hidden | collapse",
        media: "visual",
        inherited: true,
        animationType: "visibility",
        percentages: "no",
        groups: [
          "CSS Box Model"
        ],
        initial: "visible",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/visibility"
      },
      "white-space": {
        syntax: "normal | pre | nowrap | pre-wrap | pre-line | break-spaces",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Text"
        ],
        initial: "normal",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/white-space"
      },
      widows: {
        syntax: "<integer>",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Fragmentation"
        ],
        initial: "2",
        appliesto: "blockContainerElements",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/widows"
      },
      width: {
        syntax: "auto | <length> | <percentage> | min-content | max-content | fit-content | fit-content(<length-percentage>)",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "referToWidthOfContainingBlock",
        groups: [
          "CSS Box Model"
        ],
        initial: "auto",
        appliesto: "allElementsButNonReplacedAndTableRows",
        computed: "percentageAutoOrAbsoluteLength",
        order: "lengthOrPercentageBeforeKeywordIfBothPresent",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/width"
      },
      "will-change": {
        syntax: "auto | <animateable-feature>#",
        media: "all",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Will Change"
        ],
        initial: "auto",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/will-change"
      },
      "word-break": {
        syntax: "normal | break-all | keep-all | break-word",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Text"
        ],
        initial: "normal",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/word-break"
      },
      "word-spacing": {
        syntax: "normal | <length>",
        media: "visual",
        inherited: true,
        animationType: "length",
        percentages: "referToWidthOfAffectedGlyph",
        groups: [
          "CSS Text"
        ],
        initial: "normal",
        appliesto: "allElements",
        computed: "absoluteLength",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/word-spacing"
      },
      "word-wrap": {
        syntax: "normal | break-word",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Text"
        ],
        initial: "normal",
        appliesto: "nonReplacedInlineElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/overflow-wrap"
      },
      "writing-mode": {
        syntax: "horizontal-tb | vertical-rl | vertical-lr | sideways-rl | sideways-lr",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Writing Modes"
        ],
        initial: "horizontal-tb",
        appliesto: "allElementsExceptTableRowColumnGroupsTableRowsColumns",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/writing-mode"
      },
      "z-index": {
        syntax: "auto | <integer>",
        media: "visual",
        inherited: false,
        animationType: "integer",
        percentages: "no",
        groups: [
          "CSS Positioning"
        ],
        initial: "auto",
        appliesto: "positionedElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        stacking: true,
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/z-index"
      },
      zoom: {
        syntax: "normal | reset | <number> | <percentage>",
        media: "visual",
        inherited: false,
        animationType: "integer",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "normal",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/zoom"
      }
    };
  }
});

// node_modules/mdn-data/css/syntaxes.json
var require_syntaxes = __commonJS({
  "node_modules/mdn-data/css/syntaxes.json"(exports, module2) {
    module2.exports = {
      "abs()": {
        syntax: "abs( <calc-sum> )"
      },
      "absolute-size": {
        syntax: "xx-small | x-small | small | medium | large | x-large | xx-large | xxx-large"
      },
      "acos()": {
        syntax: "acos( <calc-sum> )"
      },
      "alpha-value": {
        syntax: "<number> | <percentage>"
      },
      "angle-percentage": {
        syntax: "<angle> | <percentage>"
      },
      "angular-color-hint": {
        syntax: "<angle-percentage>"
      },
      "angular-color-stop": {
        syntax: "<color> && <color-stop-angle>?"
      },
      "angular-color-stop-list": {
        syntax: "[ <angular-color-stop> [, <angular-color-hint>]? ]# , <angular-color-stop>"
      },
      "animateable-feature": {
        syntax: "scroll-position | contents | <custom-ident>"
      },
      "asin()": {
        syntax: "asin( <calc-sum> )"
      },
      "atan()": {
        syntax: "atan( <calc-sum> )"
      },
      "atan2()": {
        syntax: "atan2( <calc-sum>, <calc-sum> )"
      },
      attachment: {
        syntax: "scroll | fixed | local"
      },
      "attr()": {
        syntax: "attr( <attr-name> <type-or-unit>? [, <attr-fallback> ]? )"
      },
      "attr-matcher": {
        syntax: "[ '~' | '|' | '^' | '$' | '*' ]? '='"
      },
      "attr-modifier": {
        syntax: "i | s"
      },
      "attribute-selector": {
        syntax: "'[' <wq-name> ']' | '[' <wq-name> <attr-matcher> [ <string-token> | <ident-token> ] <attr-modifier>? ']'"
      },
      "auto-repeat": {
        syntax: "repeat( [ auto-fill | auto-fit ] , [ <line-names>? <fixed-size> ]+ <line-names>? )"
      },
      "auto-track-list": {
        syntax: "[ <line-names>? [ <fixed-size> | <fixed-repeat> ] ]* <line-names>? <auto-repeat>\n[ <line-names>? [ <fixed-size> | <fixed-repeat> ] ]* <line-names>?"
      },
      axis: {
        syntax: "block | inline | vertical | horizontal"
      },
      "baseline-position": {
        syntax: "[ first | last ]? baseline"
      },
      "basic-shape": {
        syntax: "<inset()> | <circle()> | <ellipse()> | <polygon()> | <path()>"
      },
      "bg-image": {
        syntax: "none | <image>"
      },
      "bg-layer": {
        syntax: "<bg-image> || <bg-position> [ / <bg-size> ]? || <repeat-style> || <attachment> || <box> || <box>"
      },
      "bg-position": {
        syntax: "[ [ left | center | right | top | bottom | <length-percentage> ] | [ left | center | right | <length-percentage> ] [ top | center | bottom | <length-percentage> ] | [ center | [ left | right ] <length-percentage>? ] && [ center | [ top | bottom ] <length-percentage>? ] ]"
      },
      "bg-size": {
        syntax: "[ <length-percentage> | auto ]{1,2} | cover | contain"
      },
      "blur()": {
        syntax: "blur( <length> )"
      },
      "blend-mode": {
        syntax: "normal | multiply | screen | overlay | darken | lighten | color-dodge | color-burn | hard-light | soft-light | difference | exclusion | hue | saturation | color | luminosity"
      },
      box: {
        syntax: "border-box | padding-box | content-box"
      },
      "brightness()": {
        syntax: "brightness( <number-percentage> )"
      },
      "calc()": {
        syntax: "calc( <calc-sum> )"
      },
      "calc-sum": {
        syntax: "<calc-product> [ [ '+' | '-' ] <calc-product> ]*"
      },
      "calc-product": {
        syntax: "<calc-value> [ '*' <calc-value> | '/' <number> ]*"
      },
      "calc-value": {
        syntax: "<number> | <dimension> | <percentage> | <calc-constant> | ( <calc-sum> )"
      },
      "calc-constant": {
        syntax: "e | pi | infinity | -infinity | NaN"
      },
      "cf-final-image": {
        syntax: "<image> | <color>"
      },
      "cf-mixing-image": {
        syntax: "<percentage>? && <image>"
      },
      "circle()": {
        syntax: "circle( [ <shape-radius> ]? [ at <position> ]? )"
      },
      "clamp()": {
        syntax: "clamp( <calc-sum>#{3} )"
      },
      "class-selector": {
        syntax: "'.' <ident-token>"
      },
      "clip-source": {
        syntax: "<url>"
      },
      color: {
        syntax: "<rgb()> | <rgba()> | <hsl()> | <hsla()> | <hwb()> | <lab()> | <lch()> | <hex-color> | <named-color> | currentcolor | <deprecated-system-color>"
      },
      "color-stop": {
        syntax: "<color-stop-length> | <color-stop-angle>"
      },
      "color-stop-angle": {
        syntax: "<angle-percentage>{1,2}"
      },
      "color-stop-length": {
        syntax: "<length-percentage>{1,2}"
      },
      "color-stop-list": {
        syntax: "[ <linear-color-stop> [, <linear-color-hint>]? ]# , <linear-color-stop>"
      },
      combinator: {
        syntax: "'>' | '+' | '~' | [ '||' ]"
      },
      "common-lig-values": {
        syntax: "[ common-ligatures | no-common-ligatures ]"
      },
      "compat-auto": {
        syntax: "searchfield | textarea | push-button | slider-horizontal | checkbox | radio | square-button | menulist | listbox | meter | progress-bar | button"
      },
      "composite-style": {
        syntax: "clear | copy | source-over | source-in | source-out | source-atop | destination-over | destination-in | destination-out | destination-atop | xor"
      },
      "compositing-operator": {
        syntax: "add | subtract | intersect | exclude"
      },
      "compound-selector": {
        syntax: "[ <type-selector>? <subclass-selector>* [ <pseudo-element-selector> <pseudo-class-selector>* ]* ]!"
      },
      "compound-selector-list": {
        syntax: "<compound-selector>#"
      },
      "complex-selector": {
        syntax: "<compound-selector> [ <combinator>? <compound-selector> ]*"
      },
      "complex-selector-list": {
        syntax: "<complex-selector>#"
      },
      "conic-gradient()": {
        syntax: "conic-gradient( [ from <angle> ]? [ at <position> ]?, <angular-color-stop-list> )"
      },
      "contextual-alt-values": {
        syntax: "[ contextual | no-contextual ]"
      },
      "content-distribution": {
        syntax: "space-between | space-around | space-evenly | stretch"
      },
      "content-list": {
        syntax: "[ <string> | contents | <image> | <counter> | <quote> | <target> | <leader()> ]+"
      },
      "content-position": {
        syntax: "center | start | end | flex-start | flex-end"
      },
      "content-replacement": {
        syntax: "<image>"
      },
      "contrast()": {
        syntax: "contrast( [ <number-percentage> ] )"
      },
      "cos()": {
        syntax: "cos( <calc-sum> )"
      },
      counter: {
        syntax: "<counter()> | <counters()>"
      },
      "counter()": {
        syntax: "counter( <counter-name>, <counter-style>? )"
      },
      "counter-name": {
        syntax: "<custom-ident>"
      },
      "counter-style": {
        syntax: "<counter-style-name> | symbols()"
      },
      "counter-style-name": {
        syntax: "<custom-ident>"
      },
      "counters()": {
        syntax: "counters( <counter-name>, <string>, <counter-style>? )"
      },
      "cross-fade()": {
        syntax: "cross-fade( <cf-mixing-image> , <cf-final-image>? )"
      },
      "cubic-bezier-timing-function": {
        syntax: "ease | ease-in | ease-out | ease-in-out | cubic-bezier(<number [0,1]>, <number>, <number [0,1]>, <number>)"
      },
      "deprecated-system-color": {
        syntax: "ActiveBorder | ActiveCaption | AppWorkspace | Background | ButtonFace | ButtonHighlight | ButtonShadow | ButtonText | CaptionText | GrayText | Highlight | HighlightText | InactiveBorder | InactiveCaption | InactiveCaptionText | InfoBackground | InfoText | Menu | MenuText | Scrollbar | ThreeDDarkShadow | ThreeDFace | ThreeDHighlight | ThreeDLightShadow | ThreeDShadow | Window | WindowFrame | WindowText"
      },
      "discretionary-lig-values": {
        syntax: "[ discretionary-ligatures | no-discretionary-ligatures ]"
      },
      "display-box": {
        syntax: "contents | none"
      },
      "display-inside": {
        syntax: "flow | flow-root | table | flex | grid | ruby"
      },
      "display-internal": {
        syntax: "table-row-group | table-header-group | table-footer-group | table-row | table-cell | table-column-group | table-column | table-caption | ruby-base | ruby-text | ruby-base-container | ruby-text-container"
      },
      "display-legacy": {
        syntax: "inline-block | inline-list-item | inline-table | inline-flex | inline-grid"
      },
      "display-listitem": {
        syntax: "<display-outside>? && [ flow | flow-root ]? && list-item"
      },
      "display-outside": {
        syntax: "block | inline | run-in"
      },
      "drop-shadow()": {
        syntax: "drop-shadow( <length>{2,3} <color>? )"
      },
      "east-asian-variant-values": {
        syntax: "[ jis78 | jis83 | jis90 | jis04 | simplified | traditional ]"
      },
      "east-asian-width-values": {
        syntax: "[ full-width | proportional-width ]"
      },
      "element()": {
        syntax: "element( <id-selector> )"
      },
      "ellipse()": {
        syntax: "ellipse( [ <shape-radius>{2} ]? [ at <position> ]? )"
      },
      "ending-shape": {
        syntax: "circle | ellipse"
      },
      "env()": {
        syntax: "env( <custom-ident> , <declaration-value>? )"
      },
      "exp()": {
        syntax: "exp( <calc-sum> )"
      },
      "explicit-track-list": {
        syntax: "[ <line-names>? <track-size> ]+ <line-names>?"
      },
      "family-name": {
        syntax: "<string> | <custom-ident>+"
      },
      "feature-tag-value": {
        syntax: "<string> [ <integer> | on | off ]?"
      },
      "feature-type": {
        syntax: "@stylistic | @historical-forms | @styleset | @character-variant | @swash | @ornaments | @annotation"
      },
      "feature-value-block": {
        syntax: "<feature-type> '{' <feature-value-declaration-list> '}'"
      },
      "feature-value-block-list": {
        syntax: "<feature-value-block>+"
      },
      "feature-value-declaration": {
        syntax: "<custom-ident>: <integer>+;"
      },
      "feature-value-declaration-list": {
        syntax: "<feature-value-declaration>"
      },
      "feature-value-name": {
        syntax: "<custom-ident>"
      },
      "fill-rule": {
        syntax: "nonzero | evenodd"
      },
      "filter-function": {
        syntax: "<blur()> | <brightness()> | <contrast()> | <drop-shadow()> | <grayscale()> | <hue-rotate()> | <invert()> | <opacity()> | <saturate()> | <sepia()>"
      },
      "filter-function-list": {
        syntax: "[ <filter-function> | <url> ]+"
      },
      "final-bg-layer": {
        syntax: "<'background-color'> || <bg-image> || <bg-position> [ / <bg-size> ]? || <repeat-style> || <attachment> || <box> || <box>"
      },
      "fixed-breadth": {
        syntax: "<length-percentage>"
      },
      "fixed-repeat": {
        syntax: "repeat( [ <integer [1,\u221E]> ] , [ <line-names>? <fixed-size> ]+ <line-names>? )"
      },
      "fixed-size": {
        syntax: "<fixed-breadth> | minmax( <fixed-breadth> , <track-breadth> ) | minmax( <inflexible-breadth> , <fixed-breadth> )"
      },
      "font-stretch-absolute": {
        syntax: "normal | ultra-condensed | extra-condensed | condensed | semi-condensed | semi-expanded | expanded | extra-expanded | ultra-expanded | <percentage>"
      },
      "font-variant-css21": {
        syntax: "[ normal | small-caps ]"
      },
      "font-weight-absolute": {
        syntax: "normal | bold | <number [1,1000]>"
      },
      "frequency-percentage": {
        syntax: "<frequency> | <percentage>"
      },
      "general-enclosed": {
        syntax: "[ <function-token> <any-value> ) ] | ( <ident> <any-value> )"
      },
      "generic-family": {
        syntax: "serif | sans-serif | cursive | fantasy | monospace"
      },
      "generic-name": {
        syntax: "serif | sans-serif | cursive | fantasy | monospace"
      },
      "geometry-box": {
        syntax: "<shape-box> | fill-box | stroke-box | view-box"
      },
      gradient: {
        syntax: "<linear-gradient()> | <repeating-linear-gradient()> | <radial-gradient()> | <repeating-radial-gradient()> | <conic-gradient()> | <repeating-conic-gradient()>"
      },
      "grayscale()": {
        syntax: "grayscale( <number-percentage> )"
      },
      "grid-line": {
        syntax: "auto | <custom-ident> | [ <integer> && <custom-ident>? ] | [ span && [ <integer> || <custom-ident> ] ]"
      },
      "historical-lig-values": {
        syntax: "[ historical-ligatures | no-historical-ligatures ]"
      },
      "hsl()": {
        syntax: "hsl( <hue> <percentage> <percentage> [ / <alpha-value> ]? ) | hsl( <hue>, <percentage>, <percentage>, <alpha-value>? )"
      },
      "hsla()": {
        syntax: "hsla( <hue> <percentage> <percentage> [ / <alpha-value> ]? ) | hsla( <hue>, <percentage>, <percentage>, <alpha-value>? )"
      },
      hue: {
        syntax: "<number> | <angle>"
      },
      "hue-rotate()": {
        syntax: "hue-rotate( <angle> )"
      },
      "hwb()": {
        syntax: "hwb( [<hue> | none] [<percentage> | none] [<percentage> | none] [ / [<alpha-value> | none] ]? )"
      },
      "hypot()": {
        syntax: "hypot( <calc-sum># )"
      },
      "id-selector": {
        syntax: "<hash-token>"
      },
      image: {
        syntax: "<url> | <image()> | <image-set()> | <element()> | <paint()> | <cross-fade()> | <gradient>"
      },
      "image()": {
        syntax: "image( <image-tags>? [ <image-src>? , <color>? ]! )"
      },
      "image-set()": {
        syntax: "image-set( <image-set-option># )"
      },
      "image-set-option": {
        syntax: "[ <image> | <string> ] [ <resolution> || type(<string>) ]"
      },
      "image-src": {
        syntax: "<url> | <string>"
      },
      "image-tags": {
        syntax: "ltr | rtl"
      },
      "inflexible-breadth": {
        syntax: "<length-percentage> | min-content | max-content | auto"
      },
      "inset()": {
        syntax: "inset( <length-percentage>{1,4} [ round <'border-radius'> ]? )"
      },
      "invert()": {
        syntax: "invert( <number-percentage> )"
      },
      "keyframes-name": {
        syntax: "<custom-ident> | <string>"
      },
      "keyframe-block": {
        syntax: "<keyframe-selector># {\n  <declaration-list>\n}"
      },
      "keyframe-block-list": {
        syntax: "<keyframe-block>+"
      },
      "keyframe-selector": {
        syntax: "from | to | <percentage>"
      },
      "lab()": {
        syntax: "lab( [<percentage> | <number> | none] [ <percentage> | <number> | none] [ <percentage> | <number> | none] [ / [<alpha-value> | none] ]? )"
      },
      "layer()": {
        syntax: "layer( <layer-name> )"
      },
      "layer-name": {
        syntax: "<ident> [ '.' <ident> ]*"
      },
      "lch()": {
        syntax: "lch( [<percentage> | <number> | none] [ <percentage> | <number> | none] [ <hue> | none] [ / [<alpha-value> | none] ]? )"
      },
      "leader()": {
        syntax: "leader( <leader-type> )"
      },
      "leader-type": {
        syntax: "dotted | solid | space | <string>"
      },
      "length-percentage": {
        syntax: "<length> | <percentage>"
      },
      "line-names": {
        syntax: "'[' <custom-ident>* ']'"
      },
      "line-name-list": {
        syntax: "[ <line-names> | <name-repeat> ]+"
      },
      "line-style": {
        syntax: "none | hidden | dotted | dashed | solid | double | groove | ridge | inset | outset"
      },
      "line-width": {
        syntax: "<length> | thin | medium | thick"
      },
      "linear-color-hint": {
        syntax: "<length-percentage>"
      },
      "linear-color-stop": {
        syntax: "<color> <color-stop-length>?"
      },
      "linear-gradient()": {
        syntax: "linear-gradient( [ <angle> | to <side-or-corner> ]? , <color-stop-list> )"
      },
      "log()": {
        syntax: "log( <calc-sum>, <calc-sum>? )"
      },
      "mask-layer": {
        syntax: "<mask-reference> || <position> [ / <bg-size> ]? || <repeat-style> || <geometry-box> || [ <geometry-box> | no-clip ] || <compositing-operator> || <masking-mode>"
      },
      "mask-position": {
        syntax: "[ <length-percentage> | left | center | right ] [ <length-percentage> | top | center | bottom ]?"
      },
      "mask-reference": {
        syntax: "none | <image> | <mask-source>"
      },
      "mask-source": {
        syntax: "<url>"
      },
      "masking-mode": {
        syntax: "alpha | luminance | match-source"
      },
      "matrix()": {
        syntax: "matrix( <number>#{6} )"
      },
      "matrix3d()": {
        syntax: "matrix3d( <number>#{16} )"
      },
      "max()": {
        syntax: "max( <calc-sum># )"
      },
      "media-and": {
        syntax: "<media-in-parens> [ and <media-in-parens> ]+"
      },
      "media-condition": {
        syntax: "<media-not> | <media-and> | <media-or> | <media-in-parens>"
      },
      "media-condition-without-or": {
        syntax: "<media-not> | <media-and> | <media-in-parens>"
      },
      "media-feature": {
        syntax: "( [ <mf-plain> | <mf-boolean> | <mf-range> ] )"
      },
      "media-in-parens": {
        syntax: "( <media-condition> ) | <media-feature> | <general-enclosed>"
      },
      "media-not": {
        syntax: "not <media-in-parens>"
      },
      "media-or": {
        syntax: "<media-in-parens> [ or <media-in-parens> ]+"
      },
      "media-query": {
        syntax: "<media-condition> | [ not | only ]? <media-type> [ and <media-condition-without-or> ]?"
      },
      "media-query-list": {
        syntax: "<media-query>#"
      },
      "media-type": {
        syntax: "<ident>"
      },
      "mf-boolean": {
        syntax: "<mf-name>"
      },
      "mf-name": {
        syntax: "<ident>"
      },
      "mf-plain": {
        syntax: "<mf-name> : <mf-value>"
      },
      "mf-range": {
        syntax: "<mf-name> [ '<' | '>' ]? '='? <mf-value>\n| <mf-value> [ '<' | '>' ]? '='? <mf-name>\n| <mf-value> '<' '='? <mf-name> '<' '='? <mf-value>\n| <mf-value> '>' '='? <mf-name> '>' '='? <mf-value>"
      },
      "mf-value": {
        syntax: "<number> | <dimension> | <ident> | <ratio>"
      },
      "min()": {
        syntax: "min( <calc-sum># )"
      },
      "minmax()": {
        syntax: "minmax( [ <length-percentage> | min-content | max-content | auto ] , [ <length-percentage> | <flex> | min-content | max-content | auto ] )"
      },
      "mod()": {
        syntax: "mod( <calc-sum>, <calc-sum> )"
      },
      "name-repeat": {
        syntax: "repeat( [ <integer [1,\u221E]> | auto-fill ], <line-names>+ )"
      },
      "named-color": {
        syntax: "transparent | aliceblue | antiquewhite | aqua | aquamarine | azure | beige | bisque | black | blanchedalmond | blue | blueviolet | brown | burlywood | cadetblue | chartreuse | chocolate | coral | cornflowerblue | cornsilk | crimson | cyan | darkblue | darkcyan | darkgoldenrod | darkgray | darkgreen | darkgrey | darkkhaki | darkmagenta | darkolivegreen | darkorange | darkorchid | darkred | darksalmon | darkseagreen | darkslateblue | darkslategray | darkslategrey | darkturquoise | darkviolet | deeppink | deepskyblue | dimgray | dimgrey | dodgerblue | firebrick | floralwhite | forestgreen | fuchsia | gainsboro | ghostwhite | gold | goldenrod | gray | green | greenyellow | grey | honeydew | hotpink | indianred | indigo | ivory | khaki | lavender | lavenderblush | lawngreen | lemonchiffon | lightblue | lightcoral | lightcyan | lightgoldenrodyellow | lightgray | lightgreen | lightgrey | lightpink | lightsalmon | lightseagreen | lightskyblue | lightslategray | lightslategrey | lightsteelblue | lightyellow | lime | limegreen | linen | magenta | maroon | mediumaquamarine | mediumblue | mediumorchid | mediumpurple | mediumseagreen | mediumslateblue | mediumspringgreen | mediumturquoise | mediumvioletred | midnightblue | mintcream | mistyrose | moccasin | navajowhite | navy | oldlace | olive | olivedrab | orange | orangered | orchid | palegoldenrod | palegreen | paleturquoise | palevioletred | papayawhip | peachpuff | peru | pink | plum | powderblue | purple | rebeccapurple | red | rosybrown | royalblue | saddlebrown | salmon | sandybrown | seagreen | seashell | sienna | silver | skyblue | slateblue | slategray | slategrey | snow | springgreen | steelblue | tan | teal | thistle | tomato | turquoise | violet | wheat | white | whitesmoke | yellow | yellowgreen"
      },
      "namespace-prefix": {
        syntax: "<ident>"
      },
      "ns-prefix": {
        syntax: "[ <ident-token> | '*' ]? '|'"
      },
      "number-percentage": {
        syntax: "<number> | <percentage>"
      },
      "numeric-figure-values": {
        syntax: "[ lining-nums | oldstyle-nums ]"
      },
      "numeric-fraction-values": {
        syntax: "[ diagonal-fractions | stacked-fractions ]"
      },
      "numeric-spacing-values": {
        syntax: "[ proportional-nums | tabular-nums ]"
      },
      nth: {
        syntax: "<an-plus-b> | even | odd"
      },
      "opacity()": {
        syntax: "opacity( [ <number-percentage> ] )"
      },
      "overflow-position": {
        syntax: "unsafe | safe"
      },
      "outline-radius": {
        syntax: "<length> | <percentage>"
      },
      "page-body": {
        syntax: "<declaration>? [ ; <page-body> ]? | <page-margin-box> <page-body>"
      },
      "page-margin-box": {
        syntax: "<page-margin-box-type> '{' <declaration-list> '}'"
      },
      "page-margin-box-type": {
        syntax: "@top-left-corner | @top-left | @top-center | @top-right | @top-right-corner | @bottom-left-corner | @bottom-left | @bottom-center | @bottom-right | @bottom-right-corner | @left-top | @left-middle | @left-bottom | @right-top | @right-middle | @right-bottom"
      },
      "page-selector-list": {
        syntax: "[ <page-selector># ]?"
      },
      "page-selector": {
        syntax: "<pseudo-page>+ | <ident> <pseudo-page>*"
      },
      "page-size": {
        syntax: "A5 | A4 | A3 | B5 | B4 | JIS-B5 | JIS-B4 | letter | legal | ledger"
      },
      "path()": {
        syntax: "path( [ <fill-rule>, ]? <string> )"
      },
      "paint()": {
        syntax: "paint( <ident>, <declaration-value>? )"
      },
      "perspective()": {
        syntax: "perspective( [ <length [0,\u221E]> | none ] )"
      },
      "polygon()": {
        syntax: "polygon( <fill-rule>? , [ <length-percentage> <length-percentage> ]# )"
      },
      position: {
        syntax: "[ [ left | center | right ] || [ top | center | bottom ] | [ left | center | right | <length-percentage> ] [ top | center | bottom | <length-percentage> ]? | [ [ left | right ] <length-percentage> ] && [ [ top | bottom ] <length-percentage> ] ]"
      },
      "pow()": {
        syntax: "pow( <calc-sum>, <calc-sum> )"
      },
      "pseudo-class-selector": {
        syntax: "':' <ident-token> | ':' <function-token> <any-value> ')'"
      },
      "pseudo-element-selector": {
        syntax: "':' <pseudo-class-selector>"
      },
      "pseudo-page": {
        syntax: ": [ left | right | first | blank ]"
      },
      quote: {
        syntax: "open-quote | close-quote | no-open-quote | no-close-quote"
      },
      "radial-gradient()": {
        syntax: "radial-gradient( [ <ending-shape> || <size> ]? [ at <position> ]? , <color-stop-list> )"
      },
      ratio: {
        syntax: "<number [0,\u221E]> [ / <number [0,\u221E]> ]?"
      },
      "relative-selector": {
        syntax: "<combinator>? <complex-selector>"
      },
      "relative-selector-list": {
        syntax: "<relative-selector>#"
      },
      "relative-size": {
        syntax: "larger | smaller"
      },
      "rem()": {
        syntax: "rem( <calc-sum>, <calc-sum> )"
      },
      "repeat-style": {
        syntax: "repeat-x | repeat-y | [ repeat | space | round | no-repeat ]{1,2}"
      },
      "repeating-conic-gradient()": {
        syntax: "repeating-conic-gradient( [ from <angle> ]? [ at <position> ]?, <angular-color-stop-list> )"
      },
      "repeating-linear-gradient()": {
        syntax: "repeating-linear-gradient( [ <angle> | to <side-or-corner> ]? , <color-stop-list> )"
      },
      "repeating-radial-gradient()": {
        syntax: "repeating-radial-gradient( [ <ending-shape> || <size> ]? [ at <position> ]? , <color-stop-list> )"
      },
      "reversed-counter-name": {
        syntax: "reversed( <counter-name> )"
      },
      "rgb()": {
        syntax: "rgb( <percentage>{3} [ / <alpha-value> ]? ) | rgb( <number>{3} [ / <alpha-value> ]? ) | rgb( <percentage>#{3} , <alpha-value>? ) | rgb( <number>#{3} , <alpha-value>? )"
      },
      "rgba()": {
        syntax: "rgba( <percentage>{3} [ / <alpha-value> ]? ) | rgba( <number>{3} [ / <alpha-value> ]? ) | rgba( <percentage>#{3} , <alpha-value>? ) | rgba( <number>#{3} , <alpha-value>? )"
      },
      "rotate()": {
        syntax: "rotate( [ <angle> | <zero> ] )"
      },
      "rotate3d()": {
        syntax: "rotate3d( <number> , <number> , <number> , [ <angle> | <zero> ] )"
      },
      "rotateX()": {
        syntax: "rotateX( [ <angle> | <zero> ] )"
      },
      "rotateY()": {
        syntax: "rotateY( [ <angle> | <zero> ] )"
      },
      "rotateZ()": {
        syntax: "rotateZ( [ <angle> | <zero> ] )"
      },
      "round()": {
        syntax: "round( <rounding-strategy>?, <calc-sum>, <calc-sum> )"
      },
      "rounding-strategy": {
        syntax: "nearest | up | down | to-zero"
      },
      "saturate()": {
        syntax: "saturate( <number-percentage> )"
      },
      "scale()": {
        syntax: "scale( [ <number> | <percentage> ]#{1,2} )"
      },
      "scale3d()": {
        syntax: "scale3d( [ <number> | <percentage> ]#{3} )"
      },
      "scaleX()": {
        syntax: "scaleX( [ <number> | <percentage> ] )"
      },
      "scaleY()": {
        syntax: "scaleY( [ <number> | <percentage> ] )"
      },
      "scaleZ()": {
        syntax: "scaleZ( [ <number> | <percentage> ] )"
      },
      scroller: {
        syntax: "root | nearest"
      },
      "self-position": {
        syntax: "center | start | end | self-start | self-end | flex-start | flex-end"
      },
      "shape-radius": {
        syntax: "<length-percentage> | closest-side | farthest-side"
      },
      "sign()": {
        syntax: "sign( <calc-sum> )"
      },
      "skew()": {
        syntax: "skew( [ <angle> | <zero> ] , [ <angle> | <zero> ]? )"
      },
      "skewX()": {
        syntax: "skewX( [ <angle> | <zero> ] )"
      },
      "skewY()": {
        syntax: "skewY( [ <angle> | <zero> ] )"
      },
      "sepia()": {
        syntax: "sepia( <number-percentage> )"
      },
      shadow: {
        syntax: "inset? && <length>{2,4} && <color>?"
      },
      "shadow-t": {
        syntax: "[ <length>{2,3} && <color>? ]"
      },
      shape: {
        syntax: "rect(<top>, <right>, <bottom>, <left>)"
      },
      "shape-box": {
        syntax: "<box> | margin-box"
      },
      "side-or-corner": {
        syntax: "[ left | right ] || [ top | bottom ]"
      },
      "sin()": {
        syntax: "sin( <calc-sum> )"
      },
      "single-animation": {
        syntax: "<time> || <easing-function> || <time> || <single-animation-iteration-count> || <single-animation-direction> || <single-animation-fill-mode> || <single-animation-play-state> || [ none | <keyframes-name> ]"
      },
      "single-animation-direction": {
        syntax: "normal | reverse | alternate | alternate-reverse"
      },
      "single-animation-fill-mode": {
        syntax: "none | forwards | backwards | both"
      },
      "single-animation-iteration-count": {
        syntax: "infinite | <number>"
      },
      "single-animation-play-state": {
        syntax: "running | paused"
      },
      "single-animation-timeline": {
        syntax: "auto | none | <timeline-name> | scroll(<axis>? <scroller>?)"
      },
      "single-transition": {
        syntax: "[ none | <single-transition-property> ] || <time> || <easing-function> || <time>"
      },
      "single-transition-property": {
        syntax: "all | <custom-ident>"
      },
      size: {
        syntax: "closest-side | farthest-side | closest-corner | farthest-corner | <length> | <length-percentage>{2}"
      },
      "sqrt()": {
        syntax: "sqrt( <calc-sum> )"
      },
      "step-position": {
        syntax: "jump-start | jump-end | jump-none | jump-both | start | end"
      },
      "step-timing-function": {
        syntax: "step-start | step-end | steps(<integer>[, <step-position>]?)"
      },
      "subclass-selector": {
        syntax: "<id-selector> | <class-selector> | <attribute-selector> | <pseudo-class-selector>"
      },
      "supports-condition": {
        syntax: "not <supports-in-parens> | <supports-in-parens> [ and <supports-in-parens> ]* | <supports-in-parens> [ or <supports-in-parens> ]*"
      },
      "supports-in-parens": {
        syntax: "( <supports-condition> ) | <supports-feature> | <general-enclosed>"
      },
      "supports-feature": {
        syntax: "<supports-decl> | <supports-selector-fn>"
      },
      "supports-decl": {
        syntax: "( <declaration> )"
      },
      "supports-selector-fn": {
        syntax: "selector( <complex-selector> )"
      },
      symbol: {
        syntax: "<string> | <image> | <custom-ident>"
      },
      "tan()": {
        syntax: "tan( <calc-sum> )"
      },
      target: {
        syntax: "<target-counter()> | <target-counters()> | <target-text()>"
      },
      "target-counter()": {
        syntax: "target-counter( [ <string> | <url> ] , <custom-ident> , <counter-style>? )"
      },
      "target-counters()": {
        syntax: "target-counters( [ <string> | <url> ] , <custom-ident> , <string> , <counter-style>? )"
      },
      "target-text()": {
        syntax: "target-text( [ <string> | <url> ] , [ content | before | after | first-letter ]? )"
      },
      "time-percentage": {
        syntax: "<time> | <percentage>"
      },
      "timeline-name": {
        syntax: "<custom-ident> | <string>"
      },
      "easing-function": {
        syntax: "linear | <cubic-bezier-timing-function> | <step-timing-function>"
      },
      "track-breadth": {
        syntax: "<length-percentage> | <flex> | min-content | max-content | auto"
      },
      "track-list": {
        syntax: "[ <line-names>? [ <track-size> | <track-repeat> ] ]+ <line-names>?"
      },
      "track-repeat": {
        syntax: "repeat( [ <integer [1,\u221E]> ] , [ <line-names>? <track-size> ]+ <line-names>? )"
      },
      "track-size": {
        syntax: "<track-breadth> | minmax( <inflexible-breadth> , <track-breadth> ) | fit-content( <length-percentage> )"
      },
      "transform-function": {
        syntax: "<matrix()> | <translate()> | <translateX()> | <translateY()> | <scale()> | <scaleX()> | <scaleY()> | <rotate()> | <skew()> | <skewX()> | <skewY()> | <matrix3d()> | <translate3d()> | <translateZ()> | <scale3d()> | <scaleZ()> | <rotate3d()> | <rotateX()> | <rotateY()> | <rotateZ()> | <perspective()>"
      },
      "transform-list": {
        syntax: "<transform-function>+"
      },
      "translate()": {
        syntax: "translate( <length-percentage> , <length-percentage>? )"
      },
      "translate3d()": {
        syntax: "translate3d( <length-percentage> , <length-percentage> , <length> )"
      },
      "translateX()": {
        syntax: "translateX( <length-percentage> )"
      },
      "translateY()": {
        syntax: "translateY( <length-percentage> )"
      },
      "translateZ()": {
        syntax: "translateZ( <length> )"
      },
      "type-or-unit": {
        syntax: "string | color | url | integer | number | length | angle | time | frequency | cap | ch | em | ex | ic | lh | rlh | rem | vb | vi | vw | vh | vmin | vmax | mm | Q | cm | in | pt | pc | px | deg | grad | rad | turn | ms | s | Hz | kHz | %"
      },
      "type-selector": {
        syntax: "<wq-name> | <ns-prefix>? '*'"
      },
      "var()": {
        syntax: "var( <custom-property-name> , <declaration-value>? )"
      },
      "viewport-length": {
        syntax: "auto | <length-percentage>"
      },
      "visual-box": {
        syntax: "content-box | padding-box | border-box"
      },
      "wq-name": {
        syntax: "<ns-prefix>? <ident-token>"
      }
    };
  }
});

// node_modules/css-tree/cjs/data.cjs
var require_data = __commonJS({
  "node_modules/css-tree/cjs/data.cjs"(exports, module2) {
    "use strict";
    var dataPatch = require_data_patch();
    var mdnAtrules = require_at_rules();
    var mdnProperties = require_properties();
    var mdnSyntaxes = require_syntaxes();
    var extendSyntax = /^\s*\|\s*/;
    function preprocessAtrules(dict) {
      const result = /* @__PURE__ */ Object.create(null);
      for (const atruleName in dict) {
        const atrule = dict[atruleName];
        let descriptors = null;
        if (atrule.descriptors) {
          descriptors = /* @__PURE__ */ Object.create(null);
          for (const descriptor in atrule.descriptors) {
            descriptors[descriptor] = atrule.descriptors[descriptor].syntax;
          }
        }
        result[atruleName.substr(1)] = {
          prelude: atrule.syntax.trim().replace(/\{(.|\s)+\}/, "").match(/^@\S+\s+([^;\{]*)/)[1].trim() || null,
          descriptors
        };
      }
      return result;
    }
    function patchDictionary(dict, patchDict) {
      const result = {};
      for (const key in dict) {
        result[key] = dict[key].syntax || dict[key];
      }
      for (const key in patchDict) {
        if (key in dict) {
          if (patchDict[key].syntax) {
            result[key] = extendSyntax.test(patchDict[key].syntax) ? result[key] + " " + patchDict[key].syntax.trim() : patchDict[key].syntax;
          } else {
            delete result[key];
          }
        } else {
          if (patchDict[key].syntax) {
            result[key] = patchDict[key].syntax.replace(extendSyntax, "");
          }
        }
      }
      return result;
    }
    function patchAtrules(dict, patchDict) {
      const result = {};
      for (const key in dict) {
        const atrulePatch = patchDict[key] || {};
        result[key] = {
          prelude: key in patchDict && "prelude" in atrulePatch ? atrulePatch.prelude : dict[key].prelude || null,
          descriptors: patchDictionary(dict[key].descriptors || {}, atrulePatch.descriptors || {})
        };
      }
      for (const key in patchDict) {
        if (!hasOwnProperty.call(dict, key)) {
          const atrulePatch = patchDict[key] || {};
          result[key] = {
            prelude: atrulePatch.prelude || null,
            descriptors: atrulePatch.descriptors && patchDictionary({}, atrulePatch.descriptors)
          };
        }
      }
      return result;
    }
    var definitions = {
      types: patchDictionary(mdnSyntaxes, dataPatch.types),
      atrules: patchAtrules(preprocessAtrules(mdnAtrules), dataPatch.atrules),
      properties: patchDictionary(mdnProperties, dataPatch.properties)
    };
    module2.exports = definitions;
  }
});

// node_modules/css-tree/cjs/syntax/node/AnPlusB.cjs
var require_AnPlusB = __commonJS({
  "node_modules/css-tree/cjs/syntax/node/AnPlusB.cjs"(exports) {
    "use strict";
    var types = require_types2();
    var charCodeDefinitions = require_char_code_definitions();
    var PLUSSIGN = 43;
    var HYPHENMINUS = 45;
    var N = 110;
    var DISALLOW_SIGN = true;
    var ALLOW_SIGN = false;
    function checkInteger(offset, disallowSign) {
      let pos = this.tokenStart + offset;
      const code = this.charCodeAt(pos);
      if (code === PLUSSIGN || code === HYPHENMINUS) {
        if (disallowSign) {
          this.error("Number sign is not allowed");
        }
        pos++;
      }
      for (; pos < this.tokenEnd; pos++) {
        if (!charCodeDefinitions.isDigit(this.charCodeAt(pos))) {
          this.error("Integer is expected", pos);
        }
      }
    }
    function checkTokenIsInteger(disallowSign) {
      return checkInteger.call(this, 0, disallowSign);
    }
    function expectCharCode(offset, code) {
      if (!this.cmpChar(this.tokenStart + offset, code)) {
        let msg = "";
        switch (code) {
          case N:
            msg = "N is expected";
            break;
          case HYPHENMINUS:
            msg = "HyphenMinus is expected";
            break;
        }
        this.error(msg, this.tokenStart + offset);
      }
    }
    function consumeB() {
      let offset = 0;
      let sign = 0;
      let type = this.tokenType;
      while (type === types.WhiteSpace || type === types.Comment) {
        type = this.lookupType(++offset);
      }
      if (type !== types.Number) {
        if (this.isDelim(PLUSSIGN, offset) || this.isDelim(HYPHENMINUS, offset)) {
          sign = this.isDelim(PLUSSIGN, offset) ? PLUSSIGN : HYPHENMINUS;
          do {
            type = this.lookupType(++offset);
          } while (type === types.WhiteSpace || type === types.Comment);
          if (type !== types.Number) {
            this.skip(offset);
            checkTokenIsInteger.call(this, DISALLOW_SIGN);
          }
        } else {
          return null;
        }
      }
      if (offset > 0) {
        this.skip(offset);
      }
      if (sign === 0) {
        type = this.charCodeAt(this.tokenStart);
        if (type !== PLUSSIGN && type !== HYPHENMINUS) {
          this.error("Number sign is expected");
        }
      }
      checkTokenIsInteger.call(this, sign !== 0);
      return sign === HYPHENMINUS ? "-" + this.consume(types.Number) : this.consume(types.Number);
    }
    var name = "AnPlusB";
    var structure = {
      a: [String, null],
      b: [String, null]
    };
    function parse() {
      const start = this.tokenStart;
      let a = null;
      let b = null;
      if (this.tokenType === types.Number) {
        checkTokenIsInteger.call(this, ALLOW_SIGN);
        b = this.consume(types.Number);
      } else if (this.tokenType === types.Ident && this.cmpChar(this.tokenStart, HYPHENMINUS)) {
        a = "-1";
        expectCharCode.call(this, 1, N);
        switch (this.tokenEnd - this.tokenStart) {
          case 2:
            this.next();
            b = consumeB.call(this);
            break;
          case 3:
            expectCharCode.call(this, 2, HYPHENMINUS);
            this.next();
            this.skipSC();
            checkTokenIsInteger.call(this, DISALLOW_SIGN);
            b = "-" + this.consume(types.Number);
            break;
          default:
            expectCharCode.call(this, 2, HYPHENMINUS);
            checkInteger.call(this, 3, DISALLOW_SIGN);
            this.next();
            b = this.substrToCursor(start + 2);
        }
      } else if (this.tokenType === types.Ident || this.isDelim(PLUSSIGN) && this.lookupType(1) === types.Ident) {
        let sign = 0;
        a = "1";
        if (this.isDelim(PLUSSIGN)) {
          sign = 1;
          this.next();
        }
        expectCharCode.call(this, 0, N);
        switch (this.tokenEnd - this.tokenStart) {
          case 1:
            this.next();
            b = consumeB.call(this);
            break;
          case 2:
            expectCharCode.call(this, 1, HYPHENMINUS);
            this.next();
            this.skipSC();
            checkTokenIsInteger.call(this, DISALLOW_SIGN);
            b = "-" + this.consume(types.Number);
            break;
          default:
            expectCharCode.call(this, 1, HYPHENMINUS);
            checkInteger.call(this, 2, DISALLOW_SIGN);
            this.next();
            b = this.substrToCursor(start + sign + 1);
        }
      } else if (this.tokenType === types.Dimension) {
        const code = this.charCodeAt(this.tokenStart);
        const sign = code === PLUSSIGN || code === HYPHENMINUS;
        let i = this.tokenStart + sign;
        for (; i < this.tokenEnd; i++) {
          if (!charCodeDefinitions.isDigit(this.charCodeAt(i))) {
            break;
          }
        }
        if (i === this.tokenStart + sign) {
          this.error("Integer is expected", this.tokenStart + sign);
        }
        expectCharCode.call(this, i - this.tokenStart, N);
        a = this.substring(start, i);
        if (i + 1 === this.tokenEnd) {
          this.next();
          b = consumeB.call(this);
        } else {
          expectCharCode.call(this, i - this.tokenStart + 1, HYPHENMINUS);
          if (i + 2 === this.tokenEnd) {
            this.next();
            this.skipSC();
            checkTokenIsInteger.call(this, DISALLOW_SIGN);
            b = "-" + this.consume(types.Number);
          } else {
            checkInteger.call(this, i - this.tokenStart + 2, DISALLOW_SIGN);
            this.next();
            b = this.substrToCursor(i + 1);
          }
        }
      } else {
        this.error();
      }
      if (a !== null && a.charCodeAt(0) === PLUSSIGN) {
        a = a.substr(1);
      }
      if (b !== null && b.charCodeAt(0) === PLUSSIGN) {
        b = b.substr(1);
      }
      return {
        type: "AnPlusB",
        loc: this.getLocation(start, this.tokenStart),
        a,
        b
      };
    }
    function generate(node) {
      if (node.a) {
        const a = node.a === "+1" && "n" || node.a === "1" && "n" || node.a === "-1" && "-n" || node.a + "n";
        if (node.b) {
          const b = node.b[0] === "-" || node.b[0] === "+" ? node.b : "+" + node.b;
          this.tokenize(a + b);
        } else {
          this.tokenize(a);
        }
      } else {
        this.tokenize(node.b);
      }
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
  }
});

// node_modules/css-tree/cjs/syntax/node/Atrule.cjs
var require_Atrule = __commonJS({
  "node_modules/css-tree/cjs/syntax/node/Atrule.cjs"(exports) {
    "use strict";
    var types = require_types2();
    function consumeRaw(startToken) {
      return this.Raw(startToken, this.consumeUntilLeftCurlyBracketOrSemicolon, true);
    }
    function isDeclarationBlockAtrule() {
      for (let offset = 1, type; type = this.lookupType(offset); offset++) {
        if (type === types.RightCurlyBracket) {
          return true;
        }
        if (type === types.LeftCurlyBracket || type === types.AtKeyword) {
          return false;
        }
      }
      return false;
    }
    var name = "Atrule";
    var walkContext = "atrule";
    var structure = {
      name: String,
      prelude: ["AtrulePrelude", "Raw", null],
      block: ["Block", null]
    };
    function parse(isDeclaration = false) {
      const start = this.tokenStart;
      let name2;
      let nameLowerCase;
      let prelude = null;
      let block = null;
      this.eat(types.AtKeyword);
      name2 = this.substrToCursor(start + 1);
      nameLowerCase = name2.toLowerCase();
      this.skipSC();
      if (this.eof === false && this.tokenType !== types.LeftCurlyBracket && this.tokenType !== types.Semicolon) {
        if (this.parseAtrulePrelude) {
          prelude = this.parseWithFallback(this.AtrulePrelude.bind(this, name2, isDeclaration), consumeRaw);
        } else {
          prelude = consumeRaw.call(this, this.tokenIndex);
        }
        this.skipSC();
      }
      switch (this.tokenType) {
        case types.Semicolon:
          this.next();
          break;
        case types.LeftCurlyBracket:
          if (hasOwnProperty.call(this.atrule, nameLowerCase) && typeof this.atrule[nameLowerCase].block === "function") {
            block = this.atrule[nameLowerCase].block.call(this, isDeclaration);
          } else {
            block = this.Block(isDeclarationBlockAtrule.call(this));
          }
          break;
      }
      return {
        type: "Atrule",
        loc: this.getLocation(start, this.tokenStart),
        name: name2,
        prelude,
        block
      };
    }
    function generate(node) {
      this.token(types.AtKeyword, "@" + node.name);
      if (node.prelude !== null) {
        this.node(node.prelude);
      }
      if (node.block) {
        this.node(node.block);
      } else {
        this.token(types.Semicolon, ";");
      }
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
    exports.walkContext = walkContext;
  }
});

// node_modules/css-tree/cjs/syntax/node/AtrulePrelude.cjs
var require_AtrulePrelude = __commonJS({
  "node_modules/css-tree/cjs/syntax/node/AtrulePrelude.cjs"(exports) {
    "use strict";
    var types = require_types2();
    var name = "AtrulePrelude";
    var walkContext = "atrulePrelude";
    var structure = {
      children: [[]]
    };
    function parse(name2) {
      let children = null;
      if (name2 !== null) {
        name2 = name2.toLowerCase();
      }
      this.skipSC();
      if (hasOwnProperty.call(this.atrule, name2) && typeof this.atrule[name2].prelude === "function") {
        children = this.atrule[name2].prelude.call(this);
      } else {
        children = this.readSequence(this.scope.AtrulePrelude);
      }
      this.skipSC();
      if (this.eof !== true && this.tokenType !== types.LeftCurlyBracket && this.tokenType !== types.Semicolon) {
        this.error("Semicolon or block is expected");
      }
      return {
        type: "AtrulePrelude",
        loc: this.getLocationFromList(children),
        children
      };
    }
    function generate(node) {
      this.children(node);
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
    exports.walkContext = walkContext;
  }
});

// node_modules/css-tree/cjs/syntax/node/AttributeSelector.cjs
var require_AttributeSelector = __commonJS({
  "node_modules/css-tree/cjs/syntax/node/AttributeSelector.cjs"(exports) {
    "use strict";
    var types = require_types2();
    var DOLLARSIGN = 36;
    var ASTERISK = 42;
    var EQUALSSIGN = 61;
    var CIRCUMFLEXACCENT = 94;
    var VERTICALLINE = 124;
    var TILDE = 126;
    function getAttributeName() {
      if (this.eof) {
        this.error("Unexpected end of input");
      }
      const start = this.tokenStart;
      let expectIdent = false;
      if (this.isDelim(ASTERISK)) {
        expectIdent = true;
        this.next();
      } else if (!this.isDelim(VERTICALLINE)) {
        this.eat(types.Ident);
      }
      if (this.isDelim(VERTICALLINE)) {
        if (this.charCodeAt(this.tokenStart + 1) !== EQUALSSIGN) {
          this.next();
          this.eat(types.Ident);
        } else if (expectIdent) {
          this.error("Identifier is expected", this.tokenEnd);
        }
      } else if (expectIdent) {
        this.error("Vertical line is expected");
      }
      return {
        type: "Identifier",
        loc: this.getLocation(start, this.tokenStart),
        name: this.substrToCursor(start)
      };
    }
    function getOperator() {
      const start = this.tokenStart;
      const code = this.charCodeAt(start);
      if (code !== EQUALSSIGN && // =
      code !== TILDE && // ~=
      code !== CIRCUMFLEXACCENT && // ^=
      code !== DOLLARSIGN && // $=
      code !== ASTERISK && // *=
      code !== VERTICALLINE) {
        this.error("Attribute selector (=, ~=, ^=, $=, *=, |=) is expected");
      }
      this.next();
      if (code !== EQUALSSIGN) {
        if (!this.isDelim(EQUALSSIGN)) {
          this.error("Equal sign is expected");
        }
        this.next();
      }
      return this.substrToCursor(start);
    }
    var name = "AttributeSelector";
    var structure = {
      name: "Identifier",
      matcher: [String, null],
      value: ["String", "Identifier", null],
      flags: [String, null]
    };
    function parse() {
      const start = this.tokenStart;
      let name2;
      let matcher = null;
      let value = null;
      let flags = null;
      this.eat(types.LeftSquareBracket);
      this.skipSC();
      name2 = getAttributeName.call(this);
      this.skipSC();
      if (this.tokenType !== types.RightSquareBracket) {
        if (this.tokenType !== types.Ident) {
          matcher = getOperator.call(this);
          this.skipSC();
          value = this.tokenType === types.String ? this.String() : this.Identifier();
          this.skipSC();
        }
        if (this.tokenType === types.Ident) {
          flags = this.consume(types.Ident);
          this.skipSC();
        }
      }
      this.eat(types.RightSquareBracket);
      return {
        type: "AttributeSelector",
        loc: this.getLocation(start, this.tokenStart),
        name: name2,
        matcher,
        value,
        flags
      };
    }
    function generate(node) {
      this.token(types.Delim, "[");
      this.node(node.name);
      if (node.matcher !== null) {
        this.tokenize(node.matcher);
        this.node(node.value);
      }
      if (node.flags !== null) {
        this.token(types.Ident, node.flags);
      }
      this.token(types.Delim, "]");
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
  }
});

// node_modules/css-tree/cjs/syntax/node/Block.cjs
var require_Block = __commonJS({
  "node_modules/css-tree/cjs/syntax/node/Block.cjs"(exports) {
    "use strict";
    var types = require_types2();
    var AMPERSAND = 38;
    function consumeRaw(startToken) {
      return this.Raw(startToken, null, true);
    }
    function consumeRule() {
      return this.parseWithFallback(this.Rule, consumeRaw);
    }
    function consumeRawDeclaration(startToken) {
      return this.Raw(startToken, this.consumeUntilSemicolonIncluded, true);
    }
    function consumeDeclaration() {
      if (this.tokenType === types.Semicolon) {
        return consumeRawDeclaration.call(this, this.tokenIndex);
      }
      const node = this.parseWithFallback(this.Declaration, consumeRawDeclaration);
      if (this.tokenType === types.Semicolon) {
        this.next();
      }
      return node;
    }
    var name = "Block";
    var walkContext = "block";
    var structure = {
      children: [[
        "Atrule",
        "Rule",
        "Declaration"
      ]]
    };
    function parse(isStyleBlock) {
      const consumer = isStyleBlock ? consumeDeclaration : consumeRule;
      const start = this.tokenStart;
      let children = this.createList();
      this.eat(types.LeftCurlyBracket);
      scan:
        while (!this.eof) {
          switch (this.tokenType) {
            case types.RightCurlyBracket:
              break scan;
            case types.WhiteSpace:
            case types.Comment:
              this.next();
              break;
            case types.AtKeyword:
              children.push(this.parseWithFallback(this.Atrule.bind(this, isStyleBlock), consumeRaw));
              break;
            default:
              if (isStyleBlock && this.isDelim(AMPERSAND)) {
                children.push(consumeRule.call(this));
              } else {
                children.push(consumer.call(this));
              }
          }
        }
      if (!this.eof) {
        this.eat(types.RightCurlyBracket);
      }
      return {
        type: "Block",
        loc: this.getLocation(start, this.tokenStart),
        children
      };
    }
    function generate(node) {
      this.token(types.LeftCurlyBracket, "{");
      this.children(node, (prev) => {
        if (prev.type === "Declaration") {
          this.token(types.Semicolon, ";");
        }
      });
      this.token(types.RightCurlyBracket, "}");
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
    exports.walkContext = walkContext;
  }
});

// node_modules/css-tree/cjs/syntax/node/Brackets.cjs
var require_Brackets = __commonJS({
  "node_modules/css-tree/cjs/syntax/node/Brackets.cjs"(exports) {
    "use strict";
    var types = require_types2();
    var name = "Brackets";
    var structure = {
      children: [[]]
    };
    function parse(readSequence, recognizer) {
      const start = this.tokenStart;
      let children = null;
      this.eat(types.LeftSquareBracket);
      children = readSequence.call(this, recognizer);
      if (!this.eof) {
        this.eat(types.RightSquareBracket);
      }
      return {
        type: "Brackets",
        loc: this.getLocation(start, this.tokenStart),
        children
      };
    }
    function generate(node) {
      this.token(types.Delim, "[");
      this.children(node);
      this.token(types.Delim, "]");
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
  }
});

// node_modules/css-tree/cjs/syntax/node/CDC.cjs
var require_CDC = __commonJS({
  "node_modules/css-tree/cjs/syntax/node/CDC.cjs"(exports) {
    "use strict";
    var types = require_types2();
    var name = "CDC";
    var structure = [];
    function parse() {
      const start = this.tokenStart;
      this.eat(types.CDC);
      return {
        type: "CDC",
        loc: this.getLocation(start, this.tokenStart)
      };
    }
    function generate() {
      this.token(types.CDC, "-->");
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
  }
});

// node_modules/css-tree/cjs/syntax/node/CDO.cjs
var require_CDO = __commonJS({
  "node_modules/css-tree/cjs/syntax/node/CDO.cjs"(exports) {
    "use strict";
    var types = require_types2();
    var name = "CDO";
    var structure = [];
    function parse() {
      const start = this.tokenStart;
      this.eat(types.CDO);
      return {
        type: "CDO",
        loc: this.getLocation(start, this.tokenStart)
      };
    }
    function generate() {
      this.token(types.CDO, "<!--");
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
  }
});

// node_modules/css-tree/cjs/syntax/node/ClassSelector.cjs
var require_ClassSelector = __commonJS({
  "node_modules/css-tree/cjs/syntax/node/ClassSelector.cjs"(exports) {
    "use strict";
    var types = require_types2();
    var FULLSTOP = 46;
    var name = "ClassSelector";
    var structure = {
      name: String
    };
    function parse() {
      this.eatDelim(FULLSTOP);
      return {
        type: "ClassSelector",
        loc: this.getLocation(this.tokenStart - 1, this.tokenEnd),
        name: this.consume(types.Ident)
      };
    }
    function generate(node) {
      this.token(types.Delim, ".");
      this.token(types.Ident, node.name);
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
  }
});

// node_modules/css-tree/cjs/syntax/node/Combinator.cjs
var require_Combinator = __commonJS({
  "node_modules/css-tree/cjs/syntax/node/Combinator.cjs"(exports) {
    "use strict";
    var types = require_types2();
    var PLUSSIGN = 43;
    var SOLIDUS = 47;
    var GREATERTHANSIGN = 62;
    var TILDE = 126;
    var name = "Combinator";
    var structure = {
      name: String
    };
    function parse() {
      const start = this.tokenStart;
      let name2;
      switch (this.tokenType) {
        case types.WhiteSpace:
          name2 = " ";
          break;
        case types.Delim:
          switch (this.charCodeAt(this.tokenStart)) {
            case GREATERTHANSIGN:
            case PLUSSIGN:
            case TILDE:
              this.next();
              break;
            case SOLIDUS:
              this.next();
              this.eatIdent("deep");
              this.eatDelim(SOLIDUS);
              break;
            default:
              this.error("Combinator is expected");
          }
          name2 = this.substrToCursor(start);
          break;
      }
      return {
        type: "Combinator",
        loc: this.getLocation(start, this.tokenStart),
        name: name2
      };
    }
    function generate(node) {
      this.tokenize(node.name);
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
  }
});

// node_modules/css-tree/cjs/syntax/node/Comment.cjs
var require_Comment = __commonJS({
  "node_modules/css-tree/cjs/syntax/node/Comment.cjs"(exports) {
    "use strict";
    var types = require_types2();
    var ASTERISK = 42;
    var SOLIDUS = 47;
    var name = "Comment";
    var structure = {
      value: String
    };
    function parse() {
      const start = this.tokenStart;
      let end = this.tokenEnd;
      this.eat(types.Comment);
      if (end - start + 2 >= 2 && this.charCodeAt(end - 2) === ASTERISK && this.charCodeAt(end - 1) === SOLIDUS) {
        end -= 2;
      }
      return {
        type: "Comment",
        loc: this.getLocation(start, this.tokenStart),
        value: this.substring(start + 2, end)
      };
    }
    function generate(node) {
      this.token(types.Comment, "/*" + node.value + "*/");
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
  }
});

// node_modules/css-tree/cjs/syntax/node/Declaration.cjs
var require_Declaration = __commonJS({
  "node_modules/css-tree/cjs/syntax/node/Declaration.cjs"(exports) {
    "use strict";
    var names = require_names3();
    var types = require_types2();
    var EXCLAMATIONMARK = 33;
    var NUMBERSIGN = 35;
    var DOLLARSIGN = 36;
    var AMPERSAND = 38;
    var ASTERISK = 42;
    var PLUSSIGN = 43;
    var SOLIDUS = 47;
    function consumeValueRaw(startToken) {
      return this.Raw(startToken, this.consumeUntilExclamationMarkOrSemicolon, true);
    }
    function consumeCustomPropertyRaw(startToken) {
      return this.Raw(startToken, this.consumeUntilExclamationMarkOrSemicolon, false);
    }
    function consumeValue() {
      const startValueToken = this.tokenIndex;
      const value = this.Value();
      if (value.type !== "Raw" && this.eof === false && this.tokenType !== types.Semicolon && this.isDelim(EXCLAMATIONMARK) === false && this.isBalanceEdge(startValueToken) === false) {
        this.error();
      }
      return value;
    }
    var name = "Declaration";
    var walkContext = "declaration";
    var structure = {
      important: [Boolean, String],
      property: String,
      value: ["Value", "Raw"]
    };
    function parse() {
      const start = this.tokenStart;
      const startToken = this.tokenIndex;
      const property = readProperty.call(this);
      const customProperty = names.isCustomProperty(property);
      const parseValue = customProperty ? this.parseCustomProperty : this.parseValue;
      const consumeRaw = customProperty ? consumeCustomPropertyRaw : consumeValueRaw;
      let important = false;
      let value;
      this.skipSC();
      this.eat(types.Colon);
      const valueStart = this.tokenIndex;
      if (!customProperty) {
        this.skipSC();
      }
      if (parseValue) {
        value = this.parseWithFallback(consumeValue, consumeRaw);
      } else {
        value = consumeRaw.call(this, this.tokenIndex);
      }
      if (customProperty && value.type === "Value" && value.children.isEmpty) {
        for (let offset = valueStart - this.tokenIndex; offset <= 0; offset++) {
          if (this.lookupType(offset) === types.WhiteSpace) {
            value.children.appendData({
              type: "WhiteSpace",
              loc: null,
              value: " "
            });
            break;
          }
        }
      }
      if (this.isDelim(EXCLAMATIONMARK)) {
        important = getImportant.call(this);
        this.skipSC();
      }
      if (this.eof === false && this.tokenType !== types.Semicolon && this.isBalanceEdge(startToken) === false) {
        this.error();
      }
      return {
        type: "Declaration",
        loc: this.getLocation(start, this.tokenStart),
        important,
        property,
        value
      };
    }
    function generate(node) {
      this.token(types.Ident, node.property);
      this.token(types.Colon, ":");
      this.node(node.value);
      if (node.important) {
        this.token(types.Delim, "!");
        this.token(types.Ident, node.important === true ? "important" : node.important);
      }
    }
    function readProperty() {
      const start = this.tokenStart;
      if (this.tokenType === types.Delim) {
        switch (this.charCodeAt(this.tokenStart)) {
          case ASTERISK:
          case DOLLARSIGN:
          case PLUSSIGN:
          case NUMBERSIGN:
          case AMPERSAND:
            this.next();
            break;
          case SOLIDUS:
            this.next();
            if (this.isDelim(SOLIDUS)) {
              this.next();
            }
            break;
        }
      }
      if (this.tokenType === types.Hash) {
        this.eat(types.Hash);
      } else {
        this.eat(types.Ident);
      }
      return this.substrToCursor(start);
    }
    function getImportant() {
      this.eat(types.Delim);
      this.skipSC();
      const important = this.consume(types.Ident);
      return important === "important" ? true : important;
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
    exports.walkContext = walkContext;
  }
});

// node_modules/css-tree/cjs/syntax/node/DeclarationList.cjs
var require_DeclarationList = __commonJS({
  "node_modules/css-tree/cjs/syntax/node/DeclarationList.cjs"(exports) {
    "use strict";
    var types = require_types2();
    var AMPERSAND = 38;
    function consumeRaw(startToken) {
      return this.Raw(startToken, this.consumeUntilSemicolonIncluded, true);
    }
    var name = "DeclarationList";
    var structure = {
      children: [[
        "Declaration",
        "Atrule",
        "Rule"
      ]]
    };
    function parse() {
      const children = this.createList();
      while (!this.eof) {
        switch (this.tokenType) {
          case types.WhiteSpace:
          case types.Comment:
          case types.Semicolon:
            this.next();
            break;
          case types.AtKeyword:
            children.push(this.parseWithFallback(this.Atrule.bind(this, true), consumeRaw));
            break;
          default:
            if (this.isDelim(AMPERSAND)) {
              children.push(this.parseWithFallback(this.Rule, consumeRaw));
            } else {
              children.push(this.parseWithFallback(this.Declaration, consumeRaw));
            }
        }
      }
      return {
        type: "DeclarationList",
        loc: this.getLocationFromList(children),
        children
      };
    }
    function generate(node) {
      this.children(node, (prev) => {
        if (prev.type === "Declaration") {
          this.token(types.Semicolon, ";");
        }
      });
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
  }
});

// node_modules/css-tree/cjs/syntax/node/Dimension.cjs
var require_Dimension = __commonJS({
  "node_modules/css-tree/cjs/syntax/node/Dimension.cjs"(exports) {
    "use strict";
    var types = require_types2();
    var name = "Dimension";
    var structure = {
      value: String,
      unit: String
    };
    function parse() {
      const start = this.tokenStart;
      const value = this.consumeNumber(types.Dimension);
      return {
        type: "Dimension",
        loc: this.getLocation(start, this.tokenStart),
        value,
        unit: this.substring(start + value.length, this.tokenStart)
      };
    }
    function generate(node) {
      this.token(types.Dimension, node.value + node.unit);
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
  }
});

// node_modules/css-tree/cjs/syntax/node/Function.cjs
var require_Function = __commonJS({
  "node_modules/css-tree/cjs/syntax/node/Function.cjs"(exports) {
    "use strict";
    var types = require_types2();
    var name = "Function";
    var walkContext = "function";
    var structure = {
      name: String,
      children: [[]]
    };
    function parse(readSequence, recognizer) {
      const start = this.tokenStart;
      const name2 = this.consumeFunctionName();
      const nameLowerCase = name2.toLowerCase();
      let children;
      children = recognizer.hasOwnProperty(nameLowerCase) ? recognizer[nameLowerCase].call(this, recognizer) : readSequence.call(this, recognizer);
      if (!this.eof) {
        this.eat(types.RightParenthesis);
      }
      return {
        type: "Function",
        loc: this.getLocation(start, this.tokenStart),
        name: name2,
        children
      };
    }
    function generate(node) {
      this.token(types.Function, node.name + "(");
      this.children(node);
      this.token(types.RightParenthesis, ")");
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
    exports.walkContext = walkContext;
  }
});

// node_modules/css-tree/cjs/syntax/node/Hash.cjs
var require_Hash = __commonJS({
  "node_modules/css-tree/cjs/syntax/node/Hash.cjs"(exports) {
    "use strict";
    var types = require_types2();
    var xxx = "XXX";
    var name = "Hash";
    var structure = {
      value: String
    };
    function parse() {
      const start = this.tokenStart;
      this.eat(types.Hash);
      return {
        type: "Hash",
        loc: this.getLocation(start, this.tokenStart),
        value: this.substrToCursor(start + 1)
      };
    }
    function generate(node) {
      this.token(types.Hash, "#" + node.value);
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
    exports.xxx = xxx;
  }
});

// node_modules/css-tree/cjs/syntax/node/Identifier.cjs
var require_Identifier = __commonJS({
  "node_modules/css-tree/cjs/syntax/node/Identifier.cjs"(exports) {
    "use strict";
    var types = require_types2();
    var name = "Identifier";
    var structure = {
      name: String
    };
    function parse() {
      return {
        type: "Identifier",
        loc: this.getLocation(this.tokenStart, this.tokenEnd),
        name: this.consume(types.Ident)
      };
    }
    function generate(node) {
      this.token(types.Ident, node.name);
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
  }
});

// node_modules/css-tree/cjs/syntax/node/IdSelector.cjs
var require_IdSelector = __commonJS({
  "node_modules/css-tree/cjs/syntax/node/IdSelector.cjs"(exports) {
    "use strict";
    var types = require_types2();
    var name = "IdSelector";
    var structure = {
      name: String
    };
    function parse() {
      const start = this.tokenStart;
      this.eat(types.Hash);
      return {
        type: "IdSelector",
        loc: this.getLocation(start, this.tokenStart),
        name: this.substrToCursor(start + 1)
      };
    }
    function generate(node) {
      this.token(types.Delim, "#" + node.name);
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
  }
});

// node_modules/css-tree/cjs/syntax/node/MediaFeature.cjs
var require_MediaFeature = __commonJS({
  "node_modules/css-tree/cjs/syntax/node/MediaFeature.cjs"(exports) {
    "use strict";
    var types = require_types2();
    var name = "MediaFeature";
    var structure = {
      name: String,
      value: ["Identifier", "Number", "Dimension", "Ratio", null]
    };
    function parse() {
      const start = this.tokenStart;
      let name2;
      let value = null;
      this.eat(types.LeftParenthesis);
      this.skipSC();
      name2 = this.consume(types.Ident);
      this.skipSC();
      if (this.tokenType !== types.RightParenthesis) {
        this.eat(types.Colon);
        this.skipSC();
        switch (this.tokenType) {
          case types.Number:
            if (this.lookupNonWSType(1) === types.Delim) {
              value = this.Ratio();
            } else {
              value = this.Number();
            }
            break;
          case types.Dimension:
            value = this.Dimension();
            break;
          case types.Ident:
            value = this.Identifier();
            break;
          default:
            this.error("Number, dimension, ratio or identifier is expected");
        }
        this.skipSC();
      }
      this.eat(types.RightParenthesis);
      return {
        type: "MediaFeature",
        loc: this.getLocation(start, this.tokenStart),
        name: name2,
        value
      };
    }
    function generate(node) {
      this.token(types.LeftParenthesis, "(");
      this.token(types.Ident, node.name);
      if (node.value !== null) {
        this.token(types.Colon, ":");
        this.node(node.value);
      }
      this.token(types.RightParenthesis, ")");
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
  }
});

// node_modules/css-tree/cjs/syntax/node/MediaQuery.cjs
var require_MediaQuery = __commonJS({
  "node_modules/css-tree/cjs/syntax/node/MediaQuery.cjs"(exports) {
    "use strict";
    var types = require_types2();
    var name = "MediaQuery";
    var structure = {
      children: [[
        "Identifier",
        "MediaFeature",
        "WhiteSpace"
      ]]
    };
    function parse() {
      const children = this.createList();
      let child = null;
      this.skipSC();
      scan:
        while (!this.eof) {
          switch (this.tokenType) {
            case types.Comment:
            case types.WhiteSpace:
              this.next();
              continue;
            case types.Ident:
              child = this.Identifier();
              break;
            case types.LeftParenthesis:
              child = this.MediaFeature();
              break;
            default:
              break scan;
          }
          children.push(child);
        }
      if (child === null) {
        this.error("Identifier or parenthesis is expected");
      }
      return {
        type: "MediaQuery",
        loc: this.getLocationFromList(children),
        children
      };
    }
    function generate(node) {
      this.children(node);
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
  }
});

// node_modules/css-tree/cjs/syntax/node/MediaQueryList.cjs
var require_MediaQueryList = __commonJS({
  "node_modules/css-tree/cjs/syntax/node/MediaQueryList.cjs"(exports) {
    "use strict";
    var types = require_types2();
    var name = "MediaQueryList";
    var structure = {
      children: [[
        "MediaQuery"
      ]]
    };
    function parse() {
      const children = this.createList();
      this.skipSC();
      while (!this.eof) {
        children.push(this.MediaQuery());
        if (this.tokenType !== types.Comma) {
          break;
        }
        this.next();
      }
      return {
        type: "MediaQueryList",
        loc: this.getLocationFromList(children),
        children
      };
    }
    function generate(node) {
      this.children(node, () => this.token(types.Comma, ","));
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
  }
});

// node_modules/css-tree/cjs/syntax/node/NestingSelector.cjs
var require_NestingSelector = __commonJS({
  "node_modules/css-tree/cjs/syntax/node/NestingSelector.cjs"(exports) {
    "use strict";
    var types = require_types2();
    var AMPERSAND = 38;
    var name = "NestingSelector";
    var structure = {};
    function parse() {
      const start = this.tokenStart;
      this.eatDelim(AMPERSAND);
      return {
        type: "NestingSelector",
        loc: this.getLocation(start, this.tokenStart)
      };
    }
    function generate() {
      this.token(types.Delim, "&");
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
  }
});

// node_modules/css-tree/cjs/syntax/node/Nth.cjs
var require_Nth = __commonJS({
  "node_modules/css-tree/cjs/syntax/node/Nth.cjs"(exports) {
    "use strict";
    var types = require_types2();
    var name = "Nth";
    var structure = {
      nth: ["AnPlusB", "Identifier"],
      selector: ["SelectorList", null]
    };
    function parse() {
      this.skipSC();
      const start = this.tokenStart;
      let end = start;
      let selector = null;
      let nth;
      if (this.lookupValue(0, "odd") || this.lookupValue(0, "even")) {
        nth = this.Identifier();
      } else {
        nth = this.AnPlusB();
      }
      end = this.tokenStart;
      this.skipSC();
      if (this.lookupValue(0, "of")) {
        this.next();
        selector = this.SelectorList();
        end = this.tokenStart;
      }
      return {
        type: "Nth",
        loc: this.getLocation(start, end),
        nth,
        selector
      };
    }
    function generate(node) {
      this.node(node.nth);
      if (node.selector !== null) {
        this.token(types.Ident, "of");
        this.node(node.selector);
      }
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
  }
});

// node_modules/css-tree/cjs/syntax/node/Number.cjs
var require_Number = __commonJS({
  "node_modules/css-tree/cjs/syntax/node/Number.cjs"(exports) {
    "use strict";
    var types = require_types2();
    var name = "Number";
    var structure = {
      value: String
    };
    function parse() {
      return {
        type: "Number",
        loc: this.getLocation(this.tokenStart, this.tokenEnd),
        value: this.consume(types.Number)
      };
    }
    function generate(node) {
      this.token(types.Number, node.value);
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
  }
});

// node_modules/css-tree/cjs/syntax/node/Operator.cjs
var require_Operator = __commonJS({
  "node_modules/css-tree/cjs/syntax/node/Operator.cjs"(exports) {
    "use strict";
    var name = "Operator";
    var structure = {
      value: String
    };
    function parse() {
      const start = this.tokenStart;
      this.next();
      return {
        type: "Operator",
        loc: this.getLocation(start, this.tokenStart),
        value: this.substrToCursor(start)
      };
    }
    function generate(node) {
      this.tokenize(node.value);
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
  }
});

// node_modules/css-tree/cjs/syntax/node/Parentheses.cjs
var require_Parentheses = __commonJS({
  "node_modules/css-tree/cjs/syntax/node/Parentheses.cjs"(exports) {
    "use strict";
    var types = require_types2();
    var name = "Parentheses";
    var structure = {
      children: [[]]
    };
    function parse(readSequence, recognizer) {
      const start = this.tokenStart;
      let children = null;
      this.eat(types.LeftParenthesis);
      children = readSequence.call(this, recognizer);
      if (!this.eof) {
        this.eat(types.RightParenthesis);
      }
      return {
        type: "Parentheses",
        loc: this.getLocation(start, this.tokenStart),
        children
      };
    }
    function generate(node) {
      this.token(types.LeftParenthesis, "(");
      this.children(node);
      this.token(types.RightParenthesis, ")");
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
  }
});

// node_modules/css-tree/cjs/syntax/node/Percentage.cjs
var require_Percentage = __commonJS({
  "node_modules/css-tree/cjs/syntax/node/Percentage.cjs"(exports) {
    "use strict";
    var types = require_types2();
    var name = "Percentage";
    var structure = {
      value: String
    };
    function parse() {
      return {
        type: "Percentage",
        loc: this.getLocation(this.tokenStart, this.tokenEnd),
        value: this.consumeNumber(types.Percentage)
      };
    }
    function generate(node) {
      this.token(types.Percentage, node.value + "%");
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
  }
});

// node_modules/css-tree/cjs/syntax/node/PseudoClassSelector.cjs
var require_PseudoClassSelector = __commonJS({
  "node_modules/css-tree/cjs/syntax/node/PseudoClassSelector.cjs"(exports) {
    "use strict";
    var types = require_types2();
    var name = "PseudoClassSelector";
    var walkContext = "function";
    var structure = {
      name: String,
      children: [["Raw"], null]
    };
    function parse() {
      const start = this.tokenStart;
      let children = null;
      let name2;
      let nameLowerCase;
      this.eat(types.Colon);
      if (this.tokenType === types.Function) {
        name2 = this.consumeFunctionName();
        nameLowerCase = name2.toLowerCase();
        if (hasOwnProperty.call(this.pseudo, nameLowerCase)) {
          this.skipSC();
          children = this.pseudo[nameLowerCase].call(this);
          this.skipSC();
        } else {
          children = this.createList();
          children.push(
            this.Raw(this.tokenIndex, null, false)
          );
        }
        this.eat(types.RightParenthesis);
      } else {
        name2 = this.consume(types.Ident);
      }
      return {
        type: "PseudoClassSelector",
        loc: this.getLocation(start, this.tokenStart),
        name: name2,
        children
      };
    }
    function generate(node) {
      this.token(types.Colon, ":");
      if (node.children === null) {
        this.token(types.Ident, node.name);
      } else {
        this.token(types.Function, node.name + "(");
        this.children(node);
        this.token(types.RightParenthesis, ")");
      }
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
    exports.walkContext = walkContext;
  }
});

// node_modules/css-tree/cjs/syntax/node/PseudoElementSelector.cjs
var require_PseudoElementSelector = __commonJS({
  "node_modules/css-tree/cjs/syntax/node/PseudoElementSelector.cjs"(exports) {
    "use strict";
    var types = require_types2();
    var name = "PseudoElementSelector";
    var walkContext = "function";
    var structure = {
      name: String,
      children: [["Raw"], null]
    };
    function parse() {
      const start = this.tokenStart;
      let children = null;
      let name2;
      let nameLowerCase;
      this.eat(types.Colon);
      this.eat(types.Colon);
      if (this.tokenType === types.Function) {
        name2 = this.consumeFunctionName();
        nameLowerCase = name2.toLowerCase();
        if (hasOwnProperty.call(this.pseudo, nameLowerCase)) {
          this.skipSC();
          children = this.pseudo[nameLowerCase].call(this);
          this.skipSC();
        } else {
          children = this.createList();
          children.push(
            this.Raw(this.tokenIndex, null, false)
          );
        }
        this.eat(types.RightParenthesis);
      } else {
        name2 = this.consume(types.Ident);
      }
      return {
        type: "PseudoElementSelector",
        loc: this.getLocation(start, this.tokenStart),
        name: name2,
        children
      };
    }
    function generate(node) {
      this.token(types.Colon, ":");
      this.token(types.Colon, ":");
      if (node.children === null) {
        this.token(types.Ident, node.name);
      } else {
        this.token(types.Function, node.name + "(");
        this.children(node);
        this.token(types.RightParenthesis, ")");
      }
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
    exports.walkContext = walkContext;
  }
});

// node_modules/css-tree/cjs/syntax/node/Ratio.cjs
var require_Ratio = __commonJS({
  "node_modules/css-tree/cjs/syntax/node/Ratio.cjs"(exports) {
    "use strict";
    var types = require_types2();
    var charCodeDefinitions = require_char_code_definitions();
    var SOLIDUS = 47;
    var FULLSTOP = 46;
    function consumeNumber() {
      this.skipSC();
      const value = this.consume(types.Number);
      for (let i = 0; i < value.length; i++) {
        const code = value.charCodeAt(i);
        if (!charCodeDefinitions.isDigit(code) && code !== FULLSTOP) {
          this.error("Unsigned number is expected", this.tokenStart - value.length + i);
        }
      }
      if (Number(value) === 0) {
        this.error("Zero number is not allowed", this.tokenStart - value.length);
      }
      return value;
    }
    var name = "Ratio";
    var structure = {
      left: String,
      right: String
    };
    function parse() {
      const start = this.tokenStart;
      const left = consumeNumber.call(this);
      let right;
      this.skipSC();
      this.eatDelim(SOLIDUS);
      right = consumeNumber.call(this);
      return {
        type: "Ratio",
        loc: this.getLocation(start, this.tokenStart),
        left,
        right
      };
    }
    function generate(node) {
      this.token(types.Number, node.left);
      this.token(types.Delim, "/");
      this.token(types.Number, node.right);
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
  }
});

// node_modules/css-tree/cjs/syntax/node/Raw.cjs
var require_Raw = __commonJS({
  "node_modules/css-tree/cjs/syntax/node/Raw.cjs"(exports) {
    "use strict";
    var types = require_types2();
    function getOffsetExcludeWS() {
      if (this.tokenIndex > 0) {
        if (this.lookupType(-1) === types.WhiteSpace) {
          return this.tokenIndex > 1 ? this.getTokenStart(this.tokenIndex - 1) : this.firstCharOffset;
        }
      }
      return this.tokenStart;
    }
    var name = "Raw";
    var structure = {
      value: String
    };
    function parse(startToken, consumeUntil, excludeWhiteSpace) {
      const startOffset = this.getTokenStart(startToken);
      let endOffset;
      this.skipUntilBalanced(startToken, consumeUntil || this.consumeUntilBalanceEnd);
      if (excludeWhiteSpace && this.tokenStart > startOffset) {
        endOffset = getOffsetExcludeWS.call(this);
      } else {
        endOffset = this.tokenStart;
      }
      return {
        type: "Raw",
        loc: this.getLocation(startOffset, endOffset),
        value: this.substring(startOffset, endOffset)
      };
    }
    function generate(node) {
      this.tokenize(node.value);
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
  }
});

// node_modules/css-tree/cjs/syntax/node/Rule.cjs
var require_Rule = __commonJS({
  "node_modules/css-tree/cjs/syntax/node/Rule.cjs"(exports) {
    "use strict";
    var types = require_types2();
    function consumeRaw(startToken) {
      return this.Raw(startToken, this.consumeUntilLeftCurlyBracket, true);
    }
    function consumePrelude() {
      const prelude = this.SelectorList();
      if (prelude.type !== "Raw" && this.eof === false && this.tokenType !== types.LeftCurlyBracket) {
        this.error();
      }
      return prelude;
    }
    var name = "Rule";
    var walkContext = "rule";
    var structure = {
      prelude: ["SelectorList", "Raw"],
      block: ["Block"]
    };
    function parse() {
      const startToken = this.tokenIndex;
      const startOffset = this.tokenStart;
      let prelude;
      let block;
      if (this.parseRulePrelude) {
        prelude = this.parseWithFallback(consumePrelude, consumeRaw);
      } else {
        prelude = consumeRaw.call(this, startToken);
      }
      block = this.Block(true);
      return {
        type: "Rule",
        loc: this.getLocation(startOffset, this.tokenStart),
        prelude,
        block
      };
    }
    function generate(node) {
      this.node(node.prelude);
      this.node(node.block);
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
    exports.walkContext = walkContext;
  }
});

// node_modules/css-tree/cjs/syntax/node/Selector.cjs
var require_Selector = __commonJS({
  "node_modules/css-tree/cjs/syntax/node/Selector.cjs"(exports) {
    "use strict";
    var name = "Selector";
    var structure = {
      children: [[
        "TypeSelector",
        "IdSelector",
        "ClassSelector",
        "AttributeSelector",
        "PseudoClassSelector",
        "PseudoElementSelector",
        "Combinator",
        "WhiteSpace"
      ]]
    };
    function parse() {
      const children = this.readSequence(this.scope.Selector);
      if (this.getFirstListNode(children) === null) {
        this.error("Selector is expected");
      }
      return {
        type: "Selector",
        loc: this.getLocationFromList(children),
        children
      };
    }
    function generate(node) {
      this.children(node);
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
  }
});

// node_modules/css-tree/cjs/syntax/node/SelectorList.cjs
var require_SelectorList = __commonJS({
  "node_modules/css-tree/cjs/syntax/node/SelectorList.cjs"(exports) {
    "use strict";
    var types = require_types2();
    var name = "SelectorList";
    var walkContext = "selector";
    var structure = {
      children: [[
        "Selector",
        "Raw"
      ]]
    };
    function parse() {
      const children = this.createList();
      while (!this.eof) {
        children.push(this.Selector());
        if (this.tokenType === types.Comma) {
          this.next();
          continue;
        }
        break;
      }
      return {
        type: "SelectorList",
        loc: this.getLocationFromList(children),
        children
      };
    }
    function generate(node) {
      this.children(node, () => this.token(types.Comma, ","));
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
    exports.walkContext = walkContext;
  }
});

// node_modules/css-tree/cjs/utils/string.cjs
var require_string = __commonJS({
  "node_modules/css-tree/cjs/utils/string.cjs"(exports) {
    "use strict";
    var charCodeDefinitions = require_char_code_definitions();
    var utils = require_utils2();
    var REVERSE_SOLIDUS = 92;
    var QUOTATION_MARK = 34;
    var APOSTROPHE = 39;
    function decode(str) {
      const len = str.length;
      const firstChar = str.charCodeAt(0);
      const start = firstChar === QUOTATION_MARK || firstChar === APOSTROPHE ? 1 : 0;
      const end = start === 1 && len > 1 && str.charCodeAt(len - 1) === firstChar ? len - 2 : len - 1;
      let decoded = "";
      for (let i = start; i <= end; i++) {
        let code = str.charCodeAt(i);
        if (code === REVERSE_SOLIDUS) {
          if (i === end) {
            if (i !== len - 1) {
              decoded = str.substr(i + 1);
            }
            break;
          }
          code = str.charCodeAt(++i);
          if (charCodeDefinitions.isValidEscape(REVERSE_SOLIDUS, code)) {
            const escapeStart = i - 1;
            const escapeEnd = utils.consumeEscaped(str, escapeStart);
            i = escapeEnd - 1;
            decoded += utils.decodeEscaped(str.substring(escapeStart + 1, escapeEnd));
          } else {
            if (code === 13 && str.charCodeAt(i + 1) === 10) {
              i++;
            }
          }
        } else {
          decoded += str[i];
        }
      }
      return decoded;
    }
    function encode(str, apostrophe) {
      const quote = apostrophe ? "'" : '"';
      const quoteCode = apostrophe ? APOSTROPHE : QUOTATION_MARK;
      let encoded = "";
      let wsBeforeHexIsNeeded = false;
      for (let i = 0; i < str.length; i++) {
        const code = str.charCodeAt(i);
        if (code === 0) {
          encoded += "\uFFFD";
          continue;
        }
        if (code <= 31 || code === 127) {
          encoded += "\\" + code.toString(16);
          wsBeforeHexIsNeeded = true;
          continue;
        }
        if (code === quoteCode || code === REVERSE_SOLIDUS) {
          encoded += "\\" + str.charAt(i);
          wsBeforeHexIsNeeded = false;
        } else {
          if (wsBeforeHexIsNeeded && (charCodeDefinitions.isHexDigit(code) || charCodeDefinitions.isWhiteSpace(code))) {
            encoded += " ";
          }
          encoded += str.charAt(i);
          wsBeforeHexIsNeeded = false;
        }
      }
      return quote + encoded + quote;
    }
    exports.decode = decode;
    exports.encode = encode;
  }
});

// node_modules/css-tree/cjs/syntax/node/String.cjs
var require_String = __commonJS({
  "node_modules/css-tree/cjs/syntax/node/String.cjs"(exports) {
    "use strict";
    var string = require_string();
    var types = require_types2();
    var name = "String";
    var structure = {
      value: String
    };
    function parse() {
      return {
        type: "String",
        loc: this.getLocation(this.tokenStart, this.tokenEnd),
        value: string.decode(this.consume(types.String))
      };
    }
    function generate(node) {
      this.token(types.String, string.encode(node.value));
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
  }
});

// node_modules/css-tree/cjs/syntax/node/StyleSheet.cjs
var require_StyleSheet = __commonJS({
  "node_modules/css-tree/cjs/syntax/node/StyleSheet.cjs"(exports) {
    "use strict";
    var types = require_types2();
    var EXCLAMATIONMARK = 33;
    function consumeRaw(startToken) {
      return this.Raw(startToken, null, false);
    }
    var name = "StyleSheet";
    var walkContext = "stylesheet";
    var structure = {
      children: [[
        "Comment",
        "CDO",
        "CDC",
        "Atrule",
        "Rule",
        "Raw"
      ]]
    };
    function parse() {
      const start = this.tokenStart;
      const children = this.createList();
      let child;
      while (!this.eof) {
        switch (this.tokenType) {
          case types.WhiteSpace:
            this.next();
            continue;
          case types.Comment:
            if (this.charCodeAt(this.tokenStart + 2) !== EXCLAMATIONMARK) {
              this.next();
              continue;
            }
            child = this.Comment();
            break;
          case types.CDO:
            child = this.CDO();
            break;
          case types.CDC:
            child = this.CDC();
            break;
          case types.AtKeyword:
            child = this.parseWithFallback(this.Atrule, consumeRaw);
            break;
          default:
            child = this.parseWithFallback(this.Rule, consumeRaw);
        }
        children.push(child);
      }
      return {
        type: "StyleSheet",
        loc: this.getLocation(start, this.tokenStart),
        children
      };
    }
    function generate(node) {
      this.children(node);
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
    exports.walkContext = walkContext;
  }
});

// node_modules/css-tree/cjs/syntax/node/TypeSelector.cjs
var require_TypeSelector = __commonJS({
  "node_modules/css-tree/cjs/syntax/node/TypeSelector.cjs"(exports) {
    "use strict";
    var types = require_types2();
    var ASTERISK = 42;
    var VERTICALLINE = 124;
    function eatIdentifierOrAsterisk() {
      if (this.tokenType !== types.Ident && this.isDelim(ASTERISK) === false) {
        this.error("Identifier or asterisk is expected");
      }
      this.next();
    }
    var name = "TypeSelector";
    var structure = {
      name: String
    };
    function parse() {
      const start = this.tokenStart;
      if (this.isDelim(VERTICALLINE)) {
        this.next();
        eatIdentifierOrAsterisk.call(this);
      } else {
        eatIdentifierOrAsterisk.call(this);
        if (this.isDelim(VERTICALLINE)) {
          this.next();
          eatIdentifierOrAsterisk.call(this);
        }
      }
      return {
        type: "TypeSelector",
        loc: this.getLocation(start, this.tokenStart),
        name: this.substrToCursor(start)
      };
    }
    function generate(node) {
      this.tokenize(node.name);
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
  }
});

// node_modules/css-tree/cjs/syntax/node/UnicodeRange.cjs
var require_UnicodeRange = __commonJS({
  "node_modules/css-tree/cjs/syntax/node/UnicodeRange.cjs"(exports) {
    "use strict";
    var types = require_types2();
    var charCodeDefinitions = require_char_code_definitions();
    var PLUSSIGN = 43;
    var HYPHENMINUS = 45;
    var QUESTIONMARK = 63;
    function eatHexSequence(offset, allowDash) {
      let len = 0;
      for (let pos = this.tokenStart + offset; pos < this.tokenEnd; pos++) {
        const code = this.charCodeAt(pos);
        if (code === HYPHENMINUS && allowDash && len !== 0) {
          eatHexSequence.call(this, offset + len + 1, false);
          return -1;
        }
        if (!charCodeDefinitions.isHexDigit(code)) {
          this.error(
            allowDash && len !== 0 ? "Hyphen minus" + (len < 6 ? " or hex digit" : "") + " is expected" : len < 6 ? "Hex digit is expected" : "Unexpected input",
            pos
          );
        }
        if (++len > 6) {
          this.error("Too many hex digits", pos);
        }
      }
      this.next();
      return len;
    }
    function eatQuestionMarkSequence(max) {
      let count = 0;
      while (this.isDelim(QUESTIONMARK)) {
        if (++count > max) {
          this.error("Too many question marks");
        }
        this.next();
      }
    }
    function startsWith(code) {
      if (this.charCodeAt(this.tokenStart) !== code) {
        this.error((code === PLUSSIGN ? "Plus sign" : "Hyphen minus") + " is expected");
      }
    }
    function scanUnicodeRange() {
      let hexLength = 0;
      switch (this.tokenType) {
        case types.Number:
          hexLength = eatHexSequence.call(this, 1, true);
          if (this.isDelim(QUESTIONMARK)) {
            eatQuestionMarkSequence.call(this, 6 - hexLength);
            break;
          }
          if (this.tokenType === types.Dimension || this.tokenType === types.Number) {
            startsWith.call(this, HYPHENMINUS);
            eatHexSequence.call(this, 1, false);
            break;
          }
          break;
        case types.Dimension:
          hexLength = eatHexSequence.call(this, 1, true);
          if (hexLength > 0) {
            eatQuestionMarkSequence.call(this, 6 - hexLength);
          }
          break;
        default:
          this.eatDelim(PLUSSIGN);
          if (this.tokenType === types.Ident) {
            hexLength = eatHexSequence.call(this, 0, true);
            if (hexLength > 0) {
              eatQuestionMarkSequence.call(this, 6 - hexLength);
            }
            break;
          }
          if (this.isDelim(QUESTIONMARK)) {
            this.next();
            eatQuestionMarkSequence.call(this, 5);
            break;
          }
          this.error("Hex digit or question mark is expected");
      }
    }
    var name = "UnicodeRange";
    var structure = {
      value: String
    };
    function parse() {
      const start = this.tokenStart;
      this.eatIdent("u");
      scanUnicodeRange.call(this);
      return {
        type: "UnicodeRange",
        loc: this.getLocation(start, this.tokenStart),
        value: this.substrToCursor(start)
      };
    }
    function generate(node) {
      this.tokenize(node.value);
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
  }
});

// node_modules/css-tree/cjs/utils/url.cjs
var require_url2 = __commonJS({
  "node_modules/css-tree/cjs/utils/url.cjs"(exports) {
    "use strict";
    var charCodeDefinitions = require_char_code_definitions();
    var utils = require_utils2();
    var SPACE = 32;
    var REVERSE_SOLIDUS = 92;
    var QUOTATION_MARK = 34;
    var APOSTROPHE = 39;
    var LEFTPARENTHESIS = 40;
    var RIGHTPARENTHESIS = 41;
    function decode(str) {
      const len = str.length;
      let start = 4;
      let end = str.charCodeAt(len - 1) === RIGHTPARENTHESIS ? len - 2 : len - 1;
      let decoded = "";
      while (start < end && charCodeDefinitions.isWhiteSpace(str.charCodeAt(start))) {
        start++;
      }
      while (start < end && charCodeDefinitions.isWhiteSpace(str.charCodeAt(end))) {
        end--;
      }
      for (let i = start; i <= end; i++) {
        let code = str.charCodeAt(i);
        if (code === REVERSE_SOLIDUS) {
          if (i === end) {
            if (i !== len - 1) {
              decoded = str.substr(i + 1);
            }
            break;
          }
          code = str.charCodeAt(++i);
          if (charCodeDefinitions.isValidEscape(REVERSE_SOLIDUS, code)) {
            const escapeStart = i - 1;
            const escapeEnd = utils.consumeEscaped(str, escapeStart);
            i = escapeEnd - 1;
            decoded += utils.decodeEscaped(str.substring(escapeStart + 1, escapeEnd));
          } else {
            if (code === 13 && str.charCodeAt(i + 1) === 10) {
              i++;
            }
          }
        } else {
          decoded += str[i];
        }
      }
      return decoded;
    }
    function encode(str) {
      let encoded = "";
      let wsBeforeHexIsNeeded = false;
      for (let i = 0; i < str.length; i++) {
        const code = str.charCodeAt(i);
        if (code === 0) {
          encoded += "\uFFFD";
          continue;
        }
        if (code <= 31 || code === 127) {
          encoded += "\\" + code.toString(16);
          wsBeforeHexIsNeeded = true;
          continue;
        }
        if (code === SPACE || code === REVERSE_SOLIDUS || code === QUOTATION_MARK || code === APOSTROPHE || code === LEFTPARENTHESIS || code === RIGHTPARENTHESIS) {
          encoded += "\\" + str.charAt(i);
          wsBeforeHexIsNeeded = false;
        } else {
          if (wsBeforeHexIsNeeded && charCodeDefinitions.isHexDigit(code)) {
            encoded += " ";
          }
          encoded += str.charAt(i);
          wsBeforeHexIsNeeded = false;
        }
      }
      return "url(" + encoded + ")";
    }
    exports.decode = decode;
    exports.encode = encode;
  }
});

// node_modules/css-tree/cjs/syntax/node/Url.cjs
var require_Url = __commonJS({
  "node_modules/css-tree/cjs/syntax/node/Url.cjs"(exports) {
    "use strict";
    var url = require_url2();
    var string = require_string();
    var types = require_types2();
    var name = "Url";
    var structure = {
      value: String
    };
    function parse() {
      const start = this.tokenStart;
      let value;
      switch (this.tokenType) {
        case types.Url:
          value = url.decode(this.consume(types.Url));
          break;
        case types.Function:
          if (!this.cmpStr(this.tokenStart, this.tokenEnd, "url(")) {
            this.error("Function name must be `url`");
          }
          this.eat(types.Function);
          this.skipSC();
          value = string.decode(this.consume(types.String));
          this.skipSC();
          if (!this.eof) {
            this.eat(types.RightParenthesis);
          }
          break;
        default:
          this.error("Url or Function is expected");
      }
      return {
        type: "Url",
        loc: this.getLocation(start, this.tokenStart),
        value
      };
    }
    function generate(node) {
      this.token(types.Url, url.encode(node.value));
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
  }
});

// node_modules/css-tree/cjs/syntax/node/Value.cjs
var require_Value = __commonJS({
  "node_modules/css-tree/cjs/syntax/node/Value.cjs"(exports) {
    "use strict";
    var name = "Value";
    var structure = {
      children: [[]]
    };
    function parse() {
      const start = this.tokenStart;
      const children = this.readSequence(this.scope.Value);
      return {
        type: "Value",
        loc: this.getLocation(start, this.tokenStart),
        children
      };
    }
    function generate(node) {
      this.children(node);
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
  }
});

// node_modules/css-tree/cjs/syntax/node/WhiteSpace.cjs
var require_WhiteSpace = __commonJS({
  "node_modules/css-tree/cjs/syntax/node/WhiteSpace.cjs"(exports) {
    "use strict";
    var types = require_types2();
    var SPACE = Object.freeze({
      type: "WhiteSpace",
      loc: null,
      value: " "
    });
    var name = "WhiteSpace";
    var structure = {
      value: String
    };
    function parse() {
      this.eat(types.WhiteSpace);
      return SPACE;
    }
    function generate(node) {
      this.token(types.WhiteSpace, node.value);
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
  }
});

// node_modules/css-tree/cjs/syntax/node/index.cjs
var require_node4 = __commonJS({
  "node_modules/css-tree/cjs/syntax/node/index.cjs"(exports) {
    "use strict";
    var AnPlusB = require_AnPlusB();
    var Atrule = require_Atrule();
    var AtrulePrelude = require_AtrulePrelude();
    var AttributeSelector = require_AttributeSelector();
    var Block = require_Block();
    var Brackets = require_Brackets();
    var CDC = require_CDC();
    var CDO = require_CDO();
    var ClassSelector = require_ClassSelector();
    var Combinator = require_Combinator();
    var Comment = require_Comment();
    var Declaration = require_Declaration();
    var DeclarationList = require_DeclarationList();
    var Dimension = require_Dimension();
    var Function2 = require_Function();
    var Hash = require_Hash();
    var Identifier = require_Identifier();
    var IdSelector = require_IdSelector();
    var MediaFeature = require_MediaFeature();
    var MediaQuery = require_MediaQuery();
    var MediaQueryList = require_MediaQueryList();
    var NestingSelector = require_NestingSelector();
    var Nth = require_Nth();
    var Number$1 = require_Number();
    var Operator = require_Operator();
    var Parentheses = require_Parentheses();
    var Percentage = require_Percentage();
    var PseudoClassSelector = require_PseudoClassSelector();
    var PseudoElementSelector = require_PseudoElementSelector();
    var Ratio = require_Ratio();
    var Raw = require_Raw();
    var Rule = require_Rule();
    var Selector = require_Selector();
    var SelectorList = require_SelectorList();
    var String$1 = require_String();
    var StyleSheet = require_StyleSheet();
    var TypeSelector = require_TypeSelector();
    var UnicodeRange = require_UnicodeRange();
    var Url = require_Url();
    var Value = require_Value();
    var WhiteSpace = require_WhiteSpace();
    exports.AnPlusB = AnPlusB;
    exports.Atrule = Atrule;
    exports.AtrulePrelude = AtrulePrelude;
    exports.AttributeSelector = AttributeSelector;
    exports.Block = Block;
    exports.Brackets = Brackets;
    exports.CDC = CDC;
    exports.CDO = CDO;
    exports.ClassSelector = ClassSelector;
    exports.Combinator = Combinator;
    exports.Comment = Comment;
    exports.Declaration = Declaration;
    exports.DeclarationList = DeclarationList;
    exports.Dimension = Dimension;
    exports.Function = Function2;
    exports.Hash = Hash;
    exports.Identifier = Identifier;
    exports.IdSelector = IdSelector;
    exports.MediaFeature = MediaFeature;
    exports.MediaQuery = MediaQuery;
    exports.MediaQueryList = MediaQueryList;
    exports.NestingSelector = NestingSelector;
    exports.Nth = Nth;
    exports.Number = Number$1;
    exports.Operator = Operator;
    exports.Parentheses = Parentheses;
    exports.Percentage = Percentage;
    exports.PseudoClassSelector = PseudoClassSelector;
    exports.PseudoElementSelector = PseudoElementSelector;
    exports.Ratio = Ratio;
    exports.Raw = Raw;
    exports.Rule = Rule;
    exports.Selector = Selector;
    exports.SelectorList = SelectorList;
    exports.String = String$1;
    exports.StyleSheet = StyleSheet;
    exports.TypeSelector = TypeSelector;
    exports.UnicodeRange = UnicodeRange;
    exports.Url = Url;
    exports.Value = Value;
    exports.WhiteSpace = WhiteSpace;
  }
});

// node_modules/css-tree/cjs/syntax/config/lexer.cjs
var require_lexer = __commonJS({
  "node_modules/css-tree/cjs/syntax/config/lexer.cjs"(exports, module2) {
    "use strict";
    var data = require_data();
    var index = require_node4();
    var lexerConfig = {
      generic: true,
      ...data,
      node: index
    };
    module2.exports = lexerConfig;
  }
});

// node_modules/css-tree/cjs/syntax/scope/default.cjs
var require_default = __commonJS({
  "node_modules/css-tree/cjs/syntax/scope/default.cjs"(exports, module2) {
    "use strict";
    var types = require_types2();
    var NUMBERSIGN = 35;
    var ASTERISK = 42;
    var PLUSSIGN = 43;
    var HYPHENMINUS = 45;
    var SOLIDUS = 47;
    var U = 117;
    function defaultRecognizer(context) {
      switch (this.tokenType) {
        case types.Hash:
          return this.Hash();
        case types.Comma:
          return this.Operator();
        case types.LeftParenthesis:
          return this.Parentheses(this.readSequence, context.recognizer);
        case types.LeftSquareBracket:
          return this.Brackets(this.readSequence, context.recognizer);
        case types.String:
          return this.String();
        case types.Dimension:
          return this.Dimension();
        case types.Percentage:
          return this.Percentage();
        case types.Number:
          return this.Number();
        case types.Function:
          return this.cmpStr(this.tokenStart, this.tokenEnd, "url(") ? this.Url() : this.Function(this.readSequence, context.recognizer);
        case types.Url:
          return this.Url();
        case types.Ident:
          if (this.cmpChar(this.tokenStart, U) && this.cmpChar(this.tokenStart + 1, PLUSSIGN)) {
            return this.UnicodeRange();
          } else {
            return this.Identifier();
          }
        case types.Delim: {
          const code = this.charCodeAt(this.tokenStart);
          if (code === SOLIDUS || code === ASTERISK || code === PLUSSIGN || code === HYPHENMINUS) {
            return this.Operator();
          }
          if (code === NUMBERSIGN) {
            this.error("Hex or identifier is expected", this.tokenStart + 1);
          }
          break;
        }
      }
    }
    module2.exports = defaultRecognizer;
  }
});

// node_modules/css-tree/cjs/syntax/scope/atrulePrelude.cjs
var require_atrulePrelude = __commonJS({
  "node_modules/css-tree/cjs/syntax/scope/atrulePrelude.cjs"(exports, module2) {
    "use strict";
    var _default = require_default();
    var atrulePrelude = {
      getNode: _default
    };
    module2.exports = atrulePrelude;
  }
});

// node_modules/css-tree/cjs/syntax/scope/selector.cjs
var require_selector = __commonJS({
  "node_modules/css-tree/cjs/syntax/scope/selector.cjs"(exports, module2) {
    "use strict";
    var types = require_types2();
    var NUMBERSIGN = 35;
    var AMPERSAND = 38;
    var ASTERISK = 42;
    var PLUSSIGN = 43;
    var SOLIDUS = 47;
    var FULLSTOP = 46;
    var GREATERTHANSIGN = 62;
    var VERTICALLINE = 124;
    var TILDE = 126;
    function onWhiteSpace(next, children) {
      if (children.last !== null && children.last.type !== "Combinator" && next !== null && next.type !== "Combinator") {
        children.push({
          // FIXME: this.Combinator() should be used instead
          type: "Combinator",
          loc: null,
          name: " "
        });
      }
    }
    function getNode() {
      switch (this.tokenType) {
        case types.LeftSquareBracket:
          return this.AttributeSelector();
        case types.Hash:
          return this.IdSelector();
        case types.Colon:
          if (this.lookupType(1) === types.Colon) {
            return this.PseudoElementSelector();
          } else {
            return this.PseudoClassSelector();
          }
        case types.Ident:
          return this.TypeSelector();
        case types.Number:
        case types.Percentage:
          return this.Percentage();
        case types.Dimension:
          if (this.charCodeAt(this.tokenStart) === FULLSTOP) {
            this.error("Identifier is expected", this.tokenStart + 1);
          }
          break;
        case types.Delim: {
          const code = this.charCodeAt(this.tokenStart);
          switch (code) {
            case PLUSSIGN:
            case GREATERTHANSIGN:
            case TILDE:
            case SOLIDUS:
              return this.Combinator();
            case FULLSTOP:
              return this.ClassSelector();
            case ASTERISK:
            case VERTICALLINE:
              return this.TypeSelector();
            case NUMBERSIGN:
              return this.IdSelector();
            case AMPERSAND:
              return this.NestingSelector();
          }
          break;
        }
      }
    }
    var Selector = {
      onWhiteSpace,
      getNode
    };
    module2.exports = Selector;
  }
});

// node_modules/css-tree/cjs/syntax/function/expression.cjs
var require_expression = __commonJS({
  "node_modules/css-tree/cjs/syntax/function/expression.cjs"(exports, module2) {
    "use strict";
    function expressionFn() {
      return this.createSingleNodeList(
        this.Raw(this.tokenIndex, null, false)
      );
    }
    module2.exports = expressionFn;
  }
});

// node_modules/css-tree/cjs/syntax/function/var.cjs
var require_var = __commonJS({
  "node_modules/css-tree/cjs/syntax/function/var.cjs"(exports, module2) {
    "use strict";
    var types = require_types2();
    function varFn() {
      const children = this.createList();
      this.skipSC();
      children.push(this.Identifier());
      this.skipSC();
      if (this.tokenType === types.Comma) {
        children.push(this.Operator());
        const startIndex = this.tokenIndex;
        const value = this.parseCustomProperty ? this.Value(null) : this.Raw(this.tokenIndex, this.consumeUntilExclamationMarkOrSemicolon, false);
        if (value.type === "Value" && value.children.isEmpty) {
          for (let offset = startIndex - this.tokenIndex; offset <= 0; offset++) {
            if (this.lookupType(offset) === types.WhiteSpace) {
              value.children.appendData({
                type: "WhiteSpace",
                loc: null,
                value: " "
              });
              break;
            }
          }
        }
        children.push(value);
      }
      return children;
    }
    module2.exports = varFn;
  }
});

// node_modules/css-tree/cjs/syntax/scope/value.cjs
var require_value = __commonJS({
  "node_modules/css-tree/cjs/syntax/scope/value.cjs"(exports, module2) {
    "use strict";
    var _default = require_default();
    var expression = require_expression();
    var _var = require_var();
    function isPlusMinusOperator(node) {
      return node !== null && node.type === "Operator" && (node.value[node.value.length - 1] === "-" || node.value[node.value.length - 1] === "+");
    }
    var value = {
      getNode: _default,
      onWhiteSpace(next, children) {
        if (isPlusMinusOperator(next)) {
          next.value = " " + next.value;
        }
        if (isPlusMinusOperator(children.last)) {
          children.last.value += " ";
        }
      },
      "expression": expression,
      "var": _var
    };
    module2.exports = value;
  }
});

// node_modules/css-tree/cjs/syntax/scope/index.cjs
var require_scope = __commonJS({
  "node_modules/css-tree/cjs/syntax/scope/index.cjs"(exports) {
    "use strict";
    var atrulePrelude = require_atrulePrelude();
    var selector = require_selector();
    var value = require_value();
    exports.AtrulePrelude = atrulePrelude;
    exports.Selector = selector;
    exports.Value = value;
  }
});

// node_modules/css-tree/cjs/syntax/atrule/font-face.cjs
var require_font_face = __commonJS({
  "node_modules/css-tree/cjs/syntax/atrule/font-face.cjs"(exports, module2) {
    "use strict";
    var fontFace = {
      parse: {
        prelude: null,
        block() {
          return this.Block(true);
        }
      }
    };
    module2.exports = fontFace;
  }
});

// node_modules/css-tree/cjs/syntax/atrule/import.cjs
var require_import = __commonJS({
  "node_modules/css-tree/cjs/syntax/atrule/import.cjs"(exports, module2) {
    "use strict";
    var types = require_types2();
    var importAtrule = {
      parse: {
        prelude() {
          const children = this.createList();
          this.skipSC();
          switch (this.tokenType) {
            case types.String:
              children.push(this.String());
              break;
            case types.Url:
            case types.Function:
              children.push(this.Url());
              break;
            default:
              this.error("String or url() is expected");
          }
          if (this.lookupNonWSType(0) === types.Ident || this.lookupNonWSType(0) === types.LeftParenthesis) {
            children.push(this.MediaQueryList());
          }
          return children;
        },
        block: null
      }
    };
    module2.exports = importAtrule;
  }
});

// node_modules/css-tree/cjs/syntax/atrule/media.cjs
var require_media = __commonJS({
  "node_modules/css-tree/cjs/syntax/atrule/media.cjs"(exports, module2) {
    "use strict";
    var media = {
      parse: {
        prelude() {
          return this.createSingleNodeList(
            this.MediaQueryList()
          );
        },
        block(isStyleBlock = false) {
          return this.Block(isStyleBlock);
        }
      }
    };
    module2.exports = media;
  }
});

// node_modules/css-tree/cjs/syntax/atrule/nest.cjs
var require_nest = __commonJS({
  "node_modules/css-tree/cjs/syntax/atrule/nest.cjs"(exports, module2) {
    "use strict";
    var nest = {
      parse: {
        prelude() {
          return this.createSingleNodeList(
            this.SelectorList()
          );
        },
        block() {
          return this.Block(true);
        }
      }
    };
    module2.exports = nest;
  }
});

// node_modules/css-tree/cjs/syntax/atrule/page.cjs
var require_page = __commonJS({
  "node_modules/css-tree/cjs/syntax/atrule/page.cjs"(exports, module2) {
    "use strict";
    var page = {
      parse: {
        prelude() {
          return this.createSingleNodeList(
            this.SelectorList()
          );
        },
        block() {
          return this.Block(true);
        }
      }
    };
    module2.exports = page;
  }
});

// node_modules/css-tree/cjs/syntax/atrule/supports.cjs
var require_supports = __commonJS({
  "node_modules/css-tree/cjs/syntax/atrule/supports.cjs"(exports, module2) {
    "use strict";
    var types = require_types2();
    function consumeRaw() {
      return this.createSingleNodeList(
        this.Raw(this.tokenIndex, null, false)
      );
    }
    function parentheses() {
      this.skipSC();
      if (this.tokenType === types.Ident && this.lookupNonWSType(1) === types.Colon) {
        return this.createSingleNodeList(
          this.Declaration()
        );
      }
      return readSequence.call(this);
    }
    function readSequence() {
      const children = this.createList();
      let child;
      this.skipSC();
      scan:
        while (!this.eof) {
          switch (this.tokenType) {
            case types.Comment:
            case types.WhiteSpace:
              this.next();
              continue;
            case types.Function:
              child = this.Function(consumeRaw, this.scope.AtrulePrelude);
              break;
            case types.Ident:
              child = this.Identifier();
              break;
            case types.LeftParenthesis:
              child = this.Parentheses(parentheses, this.scope.AtrulePrelude);
              break;
            default:
              break scan;
          }
          children.push(child);
        }
      return children;
    }
    var supports = {
      parse: {
        prelude() {
          const children = readSequence.call(this);
          if (this.getFirstListNode(children) === null) {
            this.error("Condition is expected");
          }
          return children;
        },
        block(isStyleBlock = false) {
          return this.Block(isStyleBlock);
        }
      }
    };
    module2.exports = supports;
  }
});

// node_modules/css-tree/cjs/syntax/atrule/index.cjs
var require_atrule = __commonJS({
  "node_modules/css-tree/cjs/syntax/atrule/index.cjs"(exports, module2) {
    "use strict";
    var fontFace = require_font_face();
    var _import = require_import();
    var media = require_media();
    var nest = require_nest();
    var page = require_page();
    var supports = require_supports();
    var atrule = {
      "font-face": fontFace,
      "import": _import,
      media,
      nest,
      page,
      supports
    };
    module2.exports = atrule;
  }
});

// node_modules/css-tree/cjs/syntax/pseudo/index.cjs
var require_pseudo = __commonJS({
  "node_modules/css-tree/cjs/syntax/pseudo/index.cjs"(exports, module2) {
    "use strict";
    var selectorList = {
      parse() {
        return this.createSingleNodeList(
          this.SelectorList()
        );
      }
    };
    var selector = {
      parse() {
        return this.createSingleNodeList(
          this.Selector()
        );
      }
    };
    var identList = {
      parse() {
        return this.createSingleNodeList(
          this.Identifier()
        );
      }
    };
    var nth = {
      parse() {
        return this.createSingleNodeList(
          this.Nth()
        );
      }
    };
    var pseudo = {
      "dir": identList,
      "has": selectorList,
      "lang": identList,
      "matches": selectorList,
      "is": selectorList,
      "-moz-any": selectorList,
      "-webkit-any": selectorList,
      "where": selectorList,
      "not": selectorList,
      "nth-child": nth,
      "nth-last-child": nth,
      "nth-last-of-type": nth,
      "nth-of-type": nth,
      "slotted": selector,
      "host": selector,
      "host-context": selector
    };
    module2.exports = pseudo;
  }
});

// node_modules/css-tree/cjs/syntax/node/index-parse.cjs
var require_index_parse = __commonJS({
  "node_modules/css-tree/cjs/syntax/node/index-parse.cjs"(exports) {
    "use strict";
    var AnPlusB = require_AnPlusB();
    var Atrule = require_Atrule();
    var AtrulePrelude = require_AtrulePrelude();
    var AttributeSelector = require_AttributeSelector();
    var Block = require_Block();
    var Brackets = require_Brackets();
    var CDC = require_CDC();
    var CDO = require_CDO();
    var ClassSelector = require_ClassSelector();
    var Combinator = require_Combinator();
    var Comment = require_Comment();
    var Declaration = require_Declaration();
    var DeclarationList = require_DeclarationList();
    var Dimension = require_Dimension();
    var Function2 = require_Function();
    var Hash = require_Hash();
    var Identifier = require_Identifier();
    var IdSelector = require_IdSelector();
    var MediaFeature = require_MediaFeature();
    var MediaQuery = require_MediaQuery();
    var MediaQueryList = require_MediaQueryList();
    var NestingSelector = require_NestingSelector();
    var Nth = require_Nth();
    var Number2 = require_Number();
    var Operator = require_Operator();
    var Parentheses = require_Parentheses();
    var Percentage = require_Percentage();
    var PseudoClassSelector = require_PseudoClassSelector();
    var PseudoElementSelector = require_PseudoElementSelector();
    var Ratio = require_Ratio();
    var Raw = require_Raw();
    var Rule = require_Rule();
    var Selector = require_Selector();
    var SelectorList = require_SelectorList();
    var String2 = require_String();
    var StyleSheet = require_StyleSheet();
    var TypeSelector = require_TypeSelector();
    var UnicodeRange = require_UnicodeRange();
    var Url = require_Url();
    var Value = require_Value();
    var WhiteSpace = require_WhiteSpace();
    exports.AnPlusB = AnPlusB.parse;
    exports.Atrule = Atrule.parse;
    exports.AtrulePrelude = AtrulePrelude.parse;
    exports.AttributeSelector = AttributeSelector.parse;
    exports.Block = Block.parse;
    exports.Brackets = Brackets.parse;
    exports.CDC = CDC.parse;
    exports.CDO = CDO.parse;
    exports.ClassSelector = ClassSelector.parse;
    exports.Combinator = Combinator.parse;
    exports.Comment = Comment.parse;
    exports.Declaration = Declaration.parse;
    exports.DeclarationList = DeclarationList.parse;
    exports.Dimension = Dimension.parse;
    exports.Function = Function2.parse;
    exports.Hash = Hash.parse;
    exports.Identifier = Identifier.parse;
    exports.IdSelector = IdSelector.parse;
    exports.MediaFeature = MediaFeature.parse;
    exports.MediaQuery = MediaQuery.parse;
    exports.MediaQueryList = MediaQueryList.parse;
    exports.NestingSelector = NestingSelector.parse;
    exports.Nth = Nth.parse;
    exports.Number = Number2.parse;
    exports.Operator = Operator.parse;
    exports.Parentheses = Parentheses.parse;
    exports.Percentage = Percentage.parse;
    exports.PseudoClassSelector = PseudoClassSelector.parse;
    exports.PseudoElementSelector = PseudoElementSelector.parse;
    exports.Ratio = Ratio.parse;
    exports.Raw = Raw.parse;
    exports.Rule = Rule.parse;
    exports.Selector = Selector.parse;
    exports.SelectorList = SelectorList.parse;
    exports.String = String2.parse;
    exports.StyleSheet = StyleSheet.parse;
    exports.TypeSelector = TypeSelector.parse;
    exports.UnicodeRange = UnicodeRange.parse;
    exports.Url = Url.parse;
    exports.Value = Value.parse;
    exports.WhiteSpace = WhiteSpace.parse;
  }
});

// node_modules/css-tree/cjs/syntax/config/parser.cjs
var require_parser3 = __commonJS({
  "node_modules/css-tree/cjs/syntax/config/parser.cjs"(exports, module2) {
    "use strict";
    var index = require_scope();
    var index$1 = require_atrule();
    var index$2 = require_pseudo();
    var indexParse = require_index_parse();
    var config = {
      parseContext: {
        default: "StyleSheet",
        stylesheet: "StyleSheet",
        atrule: "Atrule",
        atrulePrelude(options) {
          return this.AtrulePrelude(options.atrule ? String(options.atrule) : null);
        },
        mediaQueryList: "MediaQueryList",
        mediaQuery: "MediaQuery",
        rule: "Rule",
        selectorList: "SelectorList",
        selector: "Selector",
        block() {
          return this.Block(true);
        },
        declarationList: "DeclarationList",
        declaration: "Declaration",
        value: "Value"
      },
      scope: index,
      atrule: index$1,
      pseudo: index$2,
      node: indexParse
    };
    module2.exports = config;
  }
});

// node_modules/css-tree/cjs/syntax/config/walker.cjs
var require_walker = __commonJS({
  "node_modules/css-tree/cjs/syntax/config/walker.cjs"(exports, module2) {
    "use strict";
    var index = require_node4();
    var config = {
      node: index
    };
    module2.exports = config;
  }
});

// node_modules/css-tree/cjs/syntax/index.cjs
var require_syntax = __commonJS({
  "node_modules/css-tree/cjs/syntax/index.cjs"(exports, module2) {
    "use strict";
    var create = require_create5();
    var lexer = require_lexer();
    var parser = require_parser3();
    var walker = require_walker();
    var syntax = create({
      ...lexer,
      ...parser,
      ...walker
    });
    module2.exports = syntax;
  }
});

// node_modules/css-tree/package.json
var require_package = __commonJS({
  "node_modules/css-tree/package.json"(exports, module2) {
    module2.exports = {
      name: "css-tree",
      version: "2.3.1",
      description: "A tool set for CSS: fast detailed parser (CSS \u2192 AST), walker (AST traversal), generator (AST \u2192 CSS) and lexer (validation and matching) based on specs and browser implementations",
      author: "Roman Dvornov <rdvornov@gmail.com> (https://github.com/lahmatiy)",
      license: "MIT",
      repository: "csstree/csstree",
      keywords: [
        "css",
        "ast",
        "tokenizer",
        "parser",
        "walker",
        "lexer",
        "generator",
        "utils",
        "syntax",
        "validation"
      ],
      type: "module",
      module: "./lib/index.js",
      main: "./cjs/index.cjs",
      exports: {
        ".": {
          import: "./lib/index.js",
          require: "./cjs/index.cjs"
        },
        "./dist/*": "./dist/*.js",
        "./package.json": "./package.json",
        "./tokenizer": {
          import: "./lib/tokenizer/index.js",
          require: "./cjs/tokenizer/index.cjs"
        },
        "./parser": {
          import: "./lib/parser/index.js",
          require: "./cjs/parser/index.cjs"
        },
        "./selector-parser": {
          import: "./lib/parser/parse-selector.js",
          require: "./cjs/parser/parse-selector.cjs"
        },
        "./generator": {
          import: "./lib/generator/index.js",
          require: "./cjs/generator/index.cjs"
        },
        "./walker": {
          import: "./lib/walker/index.js",
          require: "./cjs/walker/index.cjs"
        },
        "./convertor": {
          import: "./lib/convertor/index.js",
          require: "./cjs/convertor/index.cjs"
        },
        "./lexer": {
          import: "./lib/lexer/index.js",
          require: "./cjs/lexer/index.cjs"
        },
        "./definition-syntax": {
          import: "./lib/definition-syntax/index.js",
          require: "./cjs/definition-syntax/index.cjs"
        },
        "./definition-syntax-data": {
          import: "./lib/data.js",
          require: "./cjs/data.cjs"
        },
        "./definition-syntax-data-patch": {
          import: "./lib/data-patch.js",
          require: "./cjs/data-patch.cjs"
        },
        "./utils": {
          import: "./lib/utils/index.js",
          require: "./cjs/utils/index.cjs"
        }
      },
      browser: {
        "./cjs/data.cjs": "./dist/data.cjs",
        "./cjs/version.cjs": "./dist/version.cjs",
        "./lib/data.js": "./dist/data.js",
        "./lib/version.js": "./dist/version.js"
      },
      unpkg: "dist/csstree.esm.js",
      jsdelivr: "dist/csstree.esm.js",
      scripts: {
        watch: "npm run build -- --watch",
        build: "npm run bundle && npm run esm-to-cjs --",
        "build-and-test": "npm run build && npm run test:dist && npm run test:cjs",
        bundle: "node scripts/bundle",
        "bundle-and-test": "npm run bundle && npm run test:dist",
        "esm-to-cjs": "node scripts/esm-to-cjs.cjs",
        "esm-to-cjs-and-test": "npm run esm-to-cjs && npm run test:cjs",
        lint: "eslint lib scripts && node scripts/review-syntax-patch --lint && node scripts/update-docs --lint",
        "lint-and-test": "npm run lint && npm test",
        "update:docs": "node scripts/update-docs",
        "review:syntax-patch": "node scripts/review-syntax-patch",
        test: "mocha lib/__tests --reporter ${REPORTER:-progress}",
        "test:cjs": "mocha cjs/__tests --reporter ${REPORTER:-progress}",
        "test:dist": "mocha dist/__tests --reporter ${REPORTER:-progress}",
        coverage: "c8 --exclude lib/__tests --reporter=lcovonly npm test",
        prepublishOnly: "npm run lint-and-test && npm run build-and-test",
        hydrogen: "node --trace-hydrogen --trace-phase=Z --trace-deopt --code-comments --hydrogen-track-positions --redirect-code-traces --redirect-code-traces-to=code.asm --trace_hydrogen_file=code.cfg --print-opt-code bin/parse --stat -o /dev/null"
      },
      dependencies: {
        "mdn-data": "2.0.30",
        "source-map-js": "^1.0.1"
      },
      devDependencies: {
        c8: "^7.12.0",
        clap: "^2.0.1",
        esbuild: "^0.14.53",
        eslint: "^8.4.1",
        "json-to-ast": "^2.1.0",
        mocha: "^9.2.2",
        rollup: "^2.68.0"
      },
      engines: {
        node: "^10 || ^12.20.0 || ^14.13.0 || >=15.0.0"
      },
      files: [
        "data",
        "dist",
        "cjs",
        "!cjs/__tests",
        "lib",
        "!lib/__tests"
      ]
    };
  }
});

// node_modules/css-tree/cjs/version.cjs
var require_version = __commonJS({
  "node_modules/css-tree/cjs/version.cjs"(exports) {
    "use strict";
    var { version } = require_package();
    exports.version = version;
  }
});

// node_modules/css-tree/cjs/definition-syntax/index.cjs
var require_definition_syntax = __commonJS({
  "node_modules/css-tree/cjs/definition-syntax/index.cjs"(exports) {
    "use strict";
    var SyntaxError2 = require_SyntaxError2();
    var generate = require_generate();
    var parse = require_parse6();
    var walk = require_walk2();
    exports.SyntaxError = SyntaxError2.SyntaxError;
    exports.generate = generate.generate;
    exports.parse = parse.parse;
    exports.walk = walk.walk;
  }
});

// node_modules/css-tree/cjs/utils/clone.cjs
var require_clone = __commonJS({
  "node_modules/css-tree/cjs/utils/clone.cjs"(exports) {
    "use strict";
    var List = require_List();
    function clone(node) {
      const result = {};
      for (const key in node) {
        let value = node[key];
        if (value) {
          if (Array.isArray(value) || value instanceof List.List) {
            value = value.map(clone);
          } else if (value.constructor === Object) {
            value = clone(value);
          }
        }
        result[key] = value;
      }
      return result;
    }
    exports.clone = clone;
  }
});

// node_modules/css-tree/cjs/utils/ident.cjs
var require_ident = __commonJS({
  "node_modules/css-tree/cjs/utils/ident.cjs"(exports) {
    "use strict";
    var charCodeDefinitions = require_char_code_definitions();
    var utils = require_utils2();
    var REVERSE_SOLIDUS = 92;
    function decode(str) {
      const end = str.length - 1;
      let decoded = "";
      for (let i = 0; i < str.length; i++) {
        let code = str.charCodeAt(i);
        if (code === REVERSE_SOLIDUS) {
          if (i === end) {
            break;
          }
          code = str.charCodeAt(++i);
          if (charCodeDefinitions.isValidEscape(REVERSE_SOLIDUS, code)) {
            const escapeStart = i - 1;
            const escapeEnd = utils.consumeEscaped(str, escapeStart);
            i = escapeEnd - 1;
            decoded += utils.decodeEscaped(str.substring(escapeStart + 1, escapeEnd));
          } else {
            if (code === 13 && str.charCodeAt(i + 1) === 10) {
              i++;
            }
          }
        } else {
          decoded += str[i];
        }
      }
      return decoded;
    }
    function encode(str) {
      let encoded = "";
      if (str.length === 1 && str.charCodeAt(0) === 45) {
        return "\\-";
      }
      for (let i = 0; i < str.length; i++) {
        const code = str.charCodeAt(i);
        if (code === 0) {
          encoded += "\uFFFD";
          continue;
        }
        if (
          // If the character is in the range [\1-\1f] (U+0001 to U+001F) or is U+007F ...
          // Note: Do not compare with 0x0001 since 0x0000 is precessed before
          code <= 31 || code === 127 || // [or] ... is in the range [0-9] (U+0030 to U+0039),
          code >= 48 && code <= 57 && // If the character is the first character ...
          (i === 0 || // If the character is the second character ... and the first character is a "-" (U+002D)
          i === 1 && str.charCodeAt(0) === 45)
        ) {
          encoded += "\\" + code.toString(16) + " ";
          continue;
        }
        if (charCodeDefinitions.isName(code)) {
          encoded += str.charAt(i);
        } else {
          encoded += "\\" + str.charAt(i);
        }
      }
      return encoded;
    }
    exports.decode = decode;
    exports.encode = encode;
  }
});

// node_modules/css-tree/cjs/index.cjs
var require_cjs = __commonJS({
  "node_modules/css-tree/cjs/index.cjs"(exports) {
    "use strict";
    var index$1 = require_syntax();
    var version = require_version();
    var create = require_create5();
    var List = require_List();
    var Lexer = require_Lexer();
    var index = require_definition_syntax();
    var clone = require_clone();
    var names$1 = require_names3();
    var ident = require_ident();
    var string = require_string();
    var url = require_url2();
    var types = require_types2();
    var names = require_names2();
    var TokenStream = require_TokenStream();
    var {
      tokenize,
      parse,
      generate,
      lexer,
      createLexer,
      walk,
      find,
      findLast,
      findAll,
      toPlainObject,
      fromPlainObject,
      fork
    } = index$1;
    exports.version = version.version;
    exports.createSyntax = create;
    exports.List = List.List;
    exports.Lexer = Lexer.Lexer;
    exports.definitionSyntax = index;
    exports.clone = clone.clone;
    exports.isCustomProperty = names$1.isCustomProperty;
    exports.keyword = names$1.keyword;
    exports.property = names$1.property;
    exports.vendorPrefix = names$1.vendorPrefix;
    exports.ident = ident;
    exports.string = string;
    exports.url = url;
    exports.tokenTypes = types;
    exports.tokenNames = names;
    exports.TokenStream = TokenStream.TokenStream;
    exports.createLexer = createLexer;
    exports.find = find;
    exports.findAll = findAll;
    exports.findLast = findLast;
    exports.fork = fork;
    exports.fromPlainObject = fromPlainObject;
    exports.generate = generate;
    exports.lexer = lexer;
    exports.parse = parse;
    exports.toPlainObject = toPlainObject;
    exports.tokenize = tokenize;
    exports.walk = walk;
  }
});

// node_modules/csso/package.json
var require_package2 = __commonJS({
  "node_modules/csso/package.json"(exports, module2) {
    module2.exports = {
      name: "csso",
      version: "5.0.5",
      description: "CSS minifier with structural optimisations",
      author: "Sergey Kryzhanovsky <skryzhanovsky@ya.ru> (https://github.com/afelix)",
      maintainers: [
        {
          name: "Roman Dvornov",
          email: "rdvornov@gmail.com",
          "github-username": "lahmatiy"
        }
      ],
      repository: "css/csso",
      license: "MIT",
      keywords: [
        "css",
        "compress",
        "minifier",
        "minify",
        "optimise",
        "optimisation",
        "csstree"
      ],
      type: "module",
      unpkg: "dist/csso.esm.js",
      jsdelivr: "dist/csso.esm.js",
      browser: {
        "./cjs/version.cjs": "./dist/version.cjs",
        "./lib/version.js": "./dist/version.js"
      },
      main: "./cjs/index.cjs",
      module: "./lib/index.js",
      exports: {
        ".": {
          import: "./lib/index.js",
          require: "./cjs/index.cjs"
        },
        "./syntax": {
          import: "./lib/syntax.js",
          require: "./cjs/syntax.cjs"
        },
        "./dist/*": "./dist/*.js",
        "./package.json": "./package.json"
      },
      scripts: {
        test: "mocha test --reporter ${REPORTER:-progress}",
        "test:cjs": "mocha cjs-test --reporter ${REPORTER:-progress}",
        "test:dist": "mocha dist/test --reporter ${REPORTER:-progress}",
        lint: "eslint lib scripts test",
        "lint-and-test": "npm run lint && npm test",
        build: "npm run bundle && npm run esm-to-cjs",
        "build-and-test": "npm run build && npm run test:dist && npm run test:cjs",
        bundle: "node scripts/bundle",
        "bundle-and-test": "npm run bundle && npm run test:dist",
        "esm-to-cjs": "node scripts/esm-to-cjs.cjs",
        "esm-to-cjs-and-test": "npm run esm-to-cjs && npm run test:cjs",
        coverage: "c8 --reporter=lcovonly npm test",
        prepublishOnly: "npm run lint-and-test && npm run build-and-test",
        hydrogen: "node --trace-hydrogen --trace-phase=Z --trace-deopt --code-comments --hydrogen-track-positions --redirect-code-traces --redirect-code-traces-to=code.asm --trace_hydrogen_file=code.cfg --print-opt-code bin/csso --stat -o /dev/null"
      },
      dependencies: {
        "css-tree": "~2.2.0"
      },
      devDependencies: {
        c8: "^7.10.0",
        esbuild: "^0.14.54",
        eslint: "^7.24.0",
        mocha: "^9.2.2",
        rollup: "^2.60.2",
        "source-map-js": "^1.0.1"
      },
      engines: {
        node: "^10 || ^12.20.0 || ^14.13.0 || >=15.0.0",
        npm: ">=7.0.0"
      },
      files: [
        "dist",
        "!dist/test",
        "cjs",
        "lib"
      ]
    };
  }
});

// node_modules/csso/cjs/version.cjs
var require_version2 = __commonJS({
  "node_modules/csso/cjs/version.cjs"(exports) {
    "use strict";
    var { version } = require_package2();
    exports.version = version;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/tokenizer/types.cjs
var require_types3 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/tokenizer/types.cjs"(exports) {
    "use strict";
    var EOF = 0;
    var Ident = 1;
    var Function2 = 2;
    var AtKeyword = 3;
    var Hash = 4;
    var String2 = 5;
    var BadString = 6;
    var Url = 7;
    var BadUrl = 8;
    var Delim = 9;
    var Number2 = 10;
    var Percentage = 11;
    var Dimension = 12;
    var WhiteSpace = 13;
    var CDO = 14;
    var CDC = 15;
    var Colon = 16;
    var Semicolon = 17;
    var Comma = 18;
    var LeftSquareBracket = 19;
    var RightSquareBracket = 20;
    var LeftParenthesis = 21;
    var RightParenthesis = 22;
    var LeftCurlyBracket = 23;
    var RightCurlyBracket = 24;
    var Comment = 25;
    exports.AtKeyword = AtKeyword;
    exports.BadString = BadString;
    exports.BadUrl = BadUrl;
    exports.CDC = CDC;
    exports.CDO = CDO;
    exports.Colon = Colon;
    exports.Comma = Comma;
    exports.Comment = Comment;
    exports.Delim = Delim;
    exports.Dimension = Dimension;
    exports.EOF = EOF;
    exports.Function = Function2;
    exports.Hash = Hash;
    exports.Ident = Ident;
    exports.LeftCurlyBracket = LeftCurlyBracket;
    exports.LeftParenthesis = LeftParenthesis;
    exports.LeftSquareBracket = LeftSquareBracket;
    exports.Number = Number2;
    exports.Percentage = Percentage;
    exports.RightCurlyBracket = RightCurlyBracket;
    exports.RightParenthesis = RightParenthesis;
    exports.RightSquareBracket = RightSquareBracket;
    exports.Semicolon = Semicolon;
    exports.String = String2;
    exports.Url = Url;
    exports.WhiteSpace = WhiteSpace;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/tokenizer/char-code-definitions.cjs
var require_char_code_definitions2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/tokenizer/char-code-definitions.cjs"(exports) {
    "use strict";
    var EOF = 0;
    function isDigit(code) {
      return code >= 48 && code <= 57;
    }
    function isHexDigit(code) {
      return isDigit(code) || // 0 .. 9
      code >= 65 && code <= 70 || // A .. F
      code >= 97 && code <= 102;
    }
    function isUppercaseLetter(code) {
      return code >= 65 && code <= 90;
    }
    function isLowercaseLetter(code) {
      return code >= 97 && code <= 122;
    }
    function isLetter(code) {
      return isUppercaseLetter(code) || isLowercaseLetter(code);
    }
    function isNonAscii(code) {
      return code >= 128;
    }
    function isNameStart(code) {
      return isLetter(code) || isNonAscii(code) || code === 95;
    }
    function isName(code) {
      return isNameStart(code) || isDigit(code) || code === 45;
    }
    function isNonPrintable(code) {
      return code >= 0 && code <= 8 || code === 11 || code >= 14 && code <= 31 || code === 127;
    }
    function isNewline(code) {
      return code === 10 || code === 13 || code === 12;
    }
    function isWhiteSpace(code) {
      return isNewline(code) || code === 32 || code === 9;
    }
    function isValidEscape(first, second) {
      if (first !== 92) {
        return false;
      }
      if (isNewline(second) || second === EOF) {
        return false;
      }
      return true;
    }
    function isIdentifierStart(first, second, third) {
      if (first === 45) {
        return isNameStart(second) || second === 45 || isValidEscape(second, third);
      }
      if (isNameStart(first)) {
        return true;
      }
      if (first === 92) {
        return isValidEscape(first, second);
      }
      return false;
    }
    function isNumberStart(first, second, third) {
      if (first === 43 || first === 45) {
        if (isDigit(second)) {
          return 2;
        }
        return second === 46 && isDigit(third) ? 3 : 0;
      }
      if (first === 46) {
        return isDigit(second) ? 2 : 0;
      }
      if (isDigit(first)) {
        return 1;
      }
      return 0;
    }
    function isBOM(code) {
      if (code === 65279) {
        return 1;
      }
      if (code === 65534) {
        return 1;
      }
      return 0;
    }
    var CATEGORY = new Array(128);
    var EofCategory = 128;
    var WhiteSpaceCategory = 130;
    var DigitCategory = 131;
    var NameStartCategory = 132;
    var NonPrintableCategory = 133;
    for (let i = 0; i < CATEGORY.length; i++) {
      CATEGORY[i] = isWhiteSpace(i) && WhiteSpaceCategory || isDigit(i) && DigitCategory || isNameStart(i) && NameStartCategory || isNonPrintable(i) && NonPrintableCategory || i || EofCategory;
    }
    function charCodeCategory(code) {
      return code < 128 ? CATEGORY[code] : NameStartCategory;
    }
    exports.DigitCategory = DigitCategory;
    exports.EofCategory = EofCategory;
    exports.NameStartCategory = NameStartCategory;
    exports.NonPrintableCategory = NonPrintableCategory;
    exports.WhiteSpaceCategory = WhiteSpaceCategory;
    exports.charCodeCategory = charCodeCategory;
    exports.isBOM = isBOM;
    exports.isDigit = isDigit;
    exports.isHexDigit = isHexDigit;
    exports.isIdentifierStart = isIdentifierStart;
    exports.isLetter = isLetter;
    exports.isLowercaseLetter = isLowercaseLetter;
    exports.isName = isName;
    exports.isNameStart = isNameStart;
    exports.isNewline = isNewline;
    exports.isNonAscii = isNonAscii;
    exports.isNonPrintable = isNonPrintable;
    exports.isNumberStart = isNumberStart;
    exports.isUppercaseLetter = isUppercaseLetter;
    exports.isValidEscape = isValidEscape;
    exports.isWhiteSpace = isWhiteSpace;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/tokenizer/utils.cjs
var require_utils3 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/tokenizer/utils.cjs"(exports) {
    "use strict";
    var charCodeDefinitions = require_char_code_definitions2();
    function getCharCode(source, offset) {
      return offset < source.length ? source.charCodeAt(offset) : 0;
    }
    function getNewlineLength(source, offset, code) {
      if (code === 13 && getCharCode(source, offset + 1) === 10) {
        return 2;
      }
      return 1;
    }
    function cmpChar(testStr, offset, referenceCode) {
      let code = testStr.charCodeAt(offset);
      if (charCodeDefinitions.isUppercaseLetter(code)) {
        code = code | 32;
      }
      return code === referenceCode;
    }
    function cmpStr(testStr, start, end, referenceStr) {
      if (end - start !== referenceStr.length) {
        return false;
      }
      if (start < 0 || end > testStr.length) {
        return false;
      }
      for (let i = start; i < end; i++) {
        const referenceCode = referenceStr.charCodeAt(i - start);
        let testCode = testStr.charCodeAt(i);
        if (charCodeDefinitions.isUppercaseLetter(testCode)) {
          testCode = testCode | 32;
        }
        if (testCode !== referenceCode) {
          return false;
        }
      }
      return true;
    }
    function findWhiteSpaceStart(source, offset) {
      for (; offset >= 0; offset--) {
        if (!charCodeDefinitions.isWhiteSpace(source.charCodeAt(offset))) {
          break;
        }
      }
      return offset + 1;
    }
    function findWhiteSpaceEnd(source, offset) {
      for (; offset < source.length; offset++) {
        if (!charCodeDefinitions.isWhiteSpace(source.charCodeAt(offset))) {
          break;
        }
      }
      return offset;
    }
    function findDecimalNumberEnd(source, offset) {
      for (; offset < source.length; offset++) {
        if (!charCodeDefinitions.isDigit(source.charCodeAt(offset))) {
          break;
        }
      }
      return offset;
    }
    function consumeEscaped(source, offset) {
      offset += 2;
      if (charCodeDefinitions.isHexDigit(getCharCode(source, offset - 1))) {
        for (const maxOffset = Math.min(source.length, offset + 5); offset < maxOffset; offset++) {
          if (!charCodeDefinitions.isHexDigit(getCharCode(source, offset))) {
            break;
          }
        }
        const code = getCharCode(source, offset);
        if (charCodeDefinitions.isWhiteSpace(code)) {
          offset += getNewlineLength(source, offset, code);
        }
      }
      return offset;
    }
    function consumeName(source, offset) {
      for (; offset < source.length; offset++) {
        const code = source.charCodeAt(offset);
        if (charCodeDefinitions.isName(code)) {
          continue;
        }
        if (charCodeDefinitions.isValidEscape(code, getCharCode(source, offset + 1))) {
          offset = consumeEscaped(source, offset) - 1;
          continue;
        }
        break;
      }
      return offset;
    }
    function consumeNumber(source, offset) {
      let code = source.charCodeAt(offset);
      if (code === 43 || code === 45) {
        code = source.charCodeAt(offset += 1);
      }
      if (charCodeDefinitions.isDigit(code)) {
        offset = findDecimalNumberEnd(source, offset + 1);
        code = source.charCodeAt(offset);
      }
      if (code === 46 && charCodeDefinitions.isDigit(source.charCodeAt(offset + 1))) {
        offset += 2;
        offset = findDecimalNumberEnd(source, offset);
      }
      if (cmpChar(
        source,
        offset,
        101
        /* e */
      )) {
        let sign = 0;
        code = source.charCodeAt(offset + 1);
        if (code === 45 || code === 43) {
          sign = 1;
          code = source.charCodeAt(offset + 2);
        }
        if (charCodeDefinitions.isDigit(code)) {
          offset = findDecimalNumberEnd(source, offset + 1 + sign + 1);
        }
      }
      return offset;
    }
    function consumeBadUrlRemnants(source, offset) {
      for (; offset < source.length; offset++) {
        const code = source.charCodeAt(offset);
        if (code === 41) {
          offset++;
          break;
        }
        if (charCodeDefinitions.isValidEscape(code, getCharCode(source, offset + 1))) {
          offset = consumeEscaped(source, offset);
        }
      }
      return offset;
    }
    function decodeEscaped(escaped) {
      if (escaped.length === 1 && !charCodeDefinitions.isHexDigit(escaped.charCodeAt(0))) {
        return escaped[0];
      }
      let code = parseInt(escaped, 16);
      if (code === 0 || // If this number is zero,
      code >= 55296 && code <= 57343 || // or is for a surrogate,
      code > 1114111) {
        code = 65533;
      }
      return String.fromCodePoint(code);
    }
    exports.cmpChar = cmpChar;
    exports.cmpStr = cmpStr;
    exports.consumeBadUrlRemnants = consumeBadUrlRemnants;
    exports.consumeEscaped = consumeEscaped;
    exports.consumeName = consumeName;
    exports.consumeNumber = consumeNumber;
    exports.decodeEscaped = decodeEscaped;
    exports.findDecimalNumberEnd = findDecimalNumberEnd;
    exports.findWhiteSpaceEnd = findWhiteSpaceEnd;
    exports.findWhiteSpaceStart = findWhiteSpaceStart;
    exports.getNewlineLength = getNewlineLength;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/tokenizer/names.cjs
var require_names4 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/tokenizer/names.cjs"(exports, module2) {
    "use strict";
    var tokenNames = [
      "EOF-token",
      "ident-token",
      "function-token",
      "at-keyword-token",
      "hash-token",
      "string-token",
      "bad-string-token",
      "url-token",
      "bad-url-token",
      "delim-token",
      "number-token",
      "percentage-token",
      "dimension-token",
      "whitespace-token",
      "CDO-token",
      "CDC-token",
      "colon-token",
      "semicolon-token",
      "comma-token",
      "[-token",
      "]-token",
      "(-token",
      ")-token",
      "{-token",
      "}-token"
    ];
    module2.exports = tokenNames;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/tokenizer/adopt-buffer.cjs
var require_adopt_buffer2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/tokenizer/adopt-buffer.cjs"(exports) {
    "use strict";
    var MIN_SIZE = 16 * 1024;
    function adoptBuffer(buffer = null, size) {
      if (buffer === null || buffer.length < size) {
        return new Uint32Array(Math.max(size + 1024, MIN_SIZE));
      }
      return buffer;
    }
    exports.adoptBuffer = adoptBuffer;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/tokenizer/OffsetToLocation.cjs
var require_OffsetToLocation2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/tokenizer/OffsetToLocation.cjs"(exports) {
    "use strict";
    var adoptBuffer = require_adopt_buffer2();
    var charCodeDefinitions = require_char_code_definitions2();
    var N = 10;
    var F = 12;
    var R = 13;
    function computeLinesAndColumns(host) {
      const source = host.source;
      const sourceLength = source.length;
      const startOffset = source.length > 0 ? charCodeDefinitions.isBOM(source.charCodeAt(0)) : 0;
      const lines = adoptBuffer.adoptBuffer(host.lines, sourceLength);
      const columns = adoptBuffer.adoptBuffer(host.columns, sourceLength);
      let line = host.startLine;
      let column = host.startColumn;
      for (let i = startOffset; i < sourceLength; i++) {
        const code = source.charCodeAt(i);
        lines[i] = line;
        columns[i] = column++;
        if (code === N || code === R || code === F) {
          if (code === R && i + 1 < sourceLength && source.charCodeAt(i + 1) === N) {
            i++;
            lines[i] = line;
            columns[i] = column;
          }
          line++;
          column = 1;
        }
      }
      lines[sourceLength] = line;
      columns[sourceLength] = column;
      host.lines = lines;
      host.columns = columns;
      host.computed = true;
    }
    var OffsetToLocation = class {
      constructor() {
        this.lines = null;
        this.columns = null;
        this.computed = false;
      }
      setSource(source, startOffset = 0, startLine = 1, startColumn = 1) {
        this.source = source;
        this.startOffset = startOffset;
        this.startLine = startLine;
        this.startColumn = startColumn;
        this.computed = false;
      }
      getLocation(offset, filename) {
        if (!this.computed) {
          computeLinesAndColumns(this);
        }
        return {
          source: filename,
          offset: this.startOffset + offset,
          line: this.lines[offset],
          column: this.columns[offset]
        };
      }
      getLocationRange(start, end, filename) {
        if (!this.computed) {
          computeLinesAndColumns(this);
        }
        return {
          source: filename,
          start: {
            offset: this.startOffset + start,
            line: this.lines[start],
            column: this.columns[start]
          },
          end: {
            offset: this.startOffset + end,
            line: this.lines[end],
            column: this.columns[end]
          }
        };
      }
    };
    exports.OffsetToLocation = OffsetToLocation;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/tokenizer/TokenStream.cjs
var require_TokenStream2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/tokenizer/TokenStream.cjs"(exports) {
    "use strict";
    var adoptBuffer = require_adopt_buffer2();
    var utils = require_utils3();
    var names = require_names4();
    var types = require_types3();
    var OFFSET_MASK = 16777215;
    var TYPE_SHIFT = 24;
    var balancePair = /* @__PURE__ */ new Map([
      [types.Function, types.RightParenthesis],
      [types.LeftParenthesis, types.RightParenthesis],
      [types.LeftSquareBracket, types.RightSquareBracket],
      [types.LeftCurlyBracket, types.RightCurlyBracket]
    ]);
    var TokenStream = class {
      constructor(source, tokenize) {
        this.setSource(source, tokenize);
      }
      reset() {
        this.eof = false;
        this.tokenIndex = -1;
        this.tokenType = 0;
        this.tokenStart = this.firstCharOffset;
        this.tokenEnd = this.firstCharOffset;
      }
      setSource(source = "", tokenize = () => {
      }) {
        source = String(source || "");
        const sourceLength = source.length;
        const offsetAndType = adoptBuffer.adoptBuffer(this.offsetAndType, source.length + 1);
        const balance = adoptBuffer.adoptBuffer(this.balance, source.length + 1);
        let tokenCount = 0;
        let balanceCloseType = 0;
        let balanceStart = 0;
        let firstCharOffset = -1;
        this.offsetAndType = null;
        this.balance = null;
        tokenize(source, (type, start, end) => {
          switch (type) {
            default:
              balance[tokenCount] = sourceLength;
              break;
            case balanceCloseType: {
              let balancePrev = balanceStart & OFFSET_MASK;
              balanceStart = balance[balancePrev];
              balanceCloseType = balanceStart >> TYPE_SHIFT;
              balance[tokenCount] = balancePrev;
              balance[balancePrev++] = tokenCount;
              for (; balancePrev < tokenCount; balancePrev++) {
                if (balance[balancePrev] === sourceLength) {
                  balance[balancePrev] = tokenCount;
                }
              }
              break;
            }
            case types.LeftParenthesis:
            case types.Function:
            case types.LeftSquareBracket:
            case types.LeftCurlyBracket:
              balance[tokenCount] = balanceStart;
              balanceCloseType = balancePair.get(type);
              balanceStart = balanceCloseType << TYPE_SHIFT | tokenCount;
              break;
          }
          offsetAndType[tokenCount++] = type << TYPE_SHIFT | end;
          if (firstCharOffset === -1) {
            firstCharOffset = start;
          }
        });
        offsetAndType[tokenCount] = types.EOF << TYPE_SHIFT | sourceLength;
        balance[tokenCount] = sourceLength;
        balance[sourceLength] = sourceLength;
        while (balanceStart !== 0) {
          const balancePrev = balanceStart & OFFSET_MASK;
          balanceStart = balance[balancePrev];
          balance[balancePrev] = sourceLength;
        }
        this.source = source;
        this.firstCharOffset = firstCharOffset === -1 ? 0 : firstCharOffset;
        this.tokenCount = tokenCount;
        this.offsetAndType = offsetAndType;
        this.balance = balance;
        this.reset();
        this.next();
      }
      lookupType(offset) {
        offset += this.tokenIndex;
        if (offset < this.tokenCount) {
          return this.offsetAndType[offset] >> TYPE_SHIFT;
        }
        return types.EOF;
      }
      lookupOffset(offset) {
        offset += this.tokenIndex;
        if (offset < this.tokenCount) {
          return this.offsetAndType[offset - 1] & OFFSET_MASK;
        }
        return this.source.length;
      }
      lookupValue(offset, referenceStr) {
        offset += this.tokenIndex;
        if (offset < this.tokenCount) {
          return utils.cmpStr(
            this.source,
            this.offsetAndType[offset - 1] & OFFSET_MASK,
            this.offsetAndType[offset] & OFFSET_MASK,
            referenceStr
          );
        }
        return false;
      }
      getTokenStart(tokenIndex) {
        if (tokenIndex === this.tokenIndex) {
          return this.tokenStart;
        }
        if (tokenIndex > 0) {
          return tokenIndex < this.tokenCount ? this.offsetAndType[tokenIndex - 1] & OFFSET_MASK : this.offsetAndType[this.tokenCount] & OFFSET_MASK;
        }
        return this.firstCharOffset;
      }
      substrToCursor(start) {
        return this.source.substring(start, this.tokenStart);
      }
      isBalanceEdge(pos) {
        return this.balance[this.tokenIndex] < pos;
      }
      isDelim(code, offset) {
        if (offset) {
          return this.lookupType(offset) === types.Delim && this.source.charCodeAt(this.lookupOffset(offset)) === code;
        }
        return this.tokenType === types.Delim && this.source.charCodeAt(this.tokenStart) === code;
      }
      skip(tokenCount) {
        let next = this.tokenIndex + tokenCount;
        if (next < this.tokenCount) {
          this.tokenIndex = next;
          this.tokenStart = this.offsetAndType[next - 1] & OFFSET_MASK;
          next = this.offsetAndType[next];
          this.tokenType = next >> TYPE_SHIFT;
          this.tokenEnd = next & OFFSET_MASK;
        } else {
          this.tokenIndex = this.tokenCount;
          this.next();
        }
      }
      next() {
        let next = this.tokenIndex + 1;
        if (next < this.tokenCount) {
          this.tokenIndex = next;
          this.tokenStart = this.tokenEnd;
          next = this.offsetAndType[next];
          this.tokenType = next >> TYPE_SHIFT;
          this.tokenEnd = next & OFFSET_MASK;
        } else {
          this.eof = true;
          this.tokenIndex = this.tokenCount;
          this.tokenType = types.EOF;
          this.tokenStart = this.tokenEnd = this.source.length;
        }
      }
      skipSC() {
        while (this.tokenType === types.WhiteSpace || this.tokenType === types.Comment) {
          this.next();
        }
      }
      skipUntilBalanced(startToken, stopConsume) {
        let cursor = startToken;
        let balanceEnd;
        let offset;
        loop:
          for (; cursor < this.tokenCount; cursor++) {
            balanceEnd = this.balance[cursor];
            if (balanceEnd < startToken) {
              break loop;
            }
            offset = cursor > 0 ? this.offsetAndType[cursor - 1] & OFFSET_MASK : this.firstCharOffset;
            switch (stopConsume(this.source.charCodeAt(offset))) {
              case 1:
                break loop;
              case 2:
                cursor++;
                break loop;
              default:
                if (this.balance[balanceEnd] === cursor) {
                  cursor = balanceEnd;
                }
            }
          }
        this.skip(cursor - this.tokenIndex);
      }
      forEachToken(fn) {
        for (let i = 0, offset = this.firstCharOffset; i < this.tokenCount; i++) {
          const start = offset;
          const item = this.offsetAndType[i];
          const end = item & OFFSET_MASK;
          const type = item >> TYPE_SHIFT;
          offset = end;
          fn(type, start, end, i);
        }
      }
      dump() {
        const tokens = new Array(this.tokenCount);
        this.forEachToken((type, start, end, index) => {
          tokens[index] = {
            idx: index,
            type: names[type],
            chunk: this.source.substring(start, end),
            balance: this.balance[index]
          };
        });
        return tokens;
      }
    };
    exports.TokenStream = TokenStream;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/tokenizer/index.cjs
var require_tokenizer3 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/tokenizer/index.cjs"(exports) {
    "use strict";
    var types = require_types3();
    var charCodeDefinitions = require_char_code_definitions2();
    var utils = require_utils3();
    var names = require_names4();
    var OffsetToLocation = require_OffsetToLocation2();
    var TokenStream = require_TokenStream2();
    function tokenize(source, onToken) {
      function getCharCode(offset2) {
        return offset2 < sourceLength ? source.charCodeAt(offset2) : 0;
      }
      function consumeNumericToken() {
        offset = utils.consumeNumber(source, offset);
        if (charCodeDefinitions.isIdentifierStart(getCharCode(offset), getCharCode(offset + 1), getCharCode(offset + 2))) {
          type = types.Dimension;
          offset = utils.consumeName(source, offset);
          return;
        }
        if (getCharCode(offset) === 37) {
          type = types.Percentage;
          offset++;
          return;
        }
        type = types.Number;
      }
      function consumeIdentLikeToken() {
        const nameStartOffset = offset;
        offset = utils.consumeName(source, offset);
        if (utils.cmpStr(source, nameStartOffset, offset, "url") && getCharCode(offset) === 40) {
          offset = utils.findWhiteSpaceEnd(source, offset + 1);
          if (getCharCode(offset) === 34 || getCharCode(offset) === 39) {
            type = types.Function;
            offset = nameStartOffset + 4;
            return;
          }
          consumeUrlToken();
          return;
        }
        if (getCharCode(offset) === 40) {
          type = types.Function;
          offset++;
          return;
        }
        type = types.Ident;
      }
      function consumeStringToken(endingCodePoint) {
        if (!endingCodePoint) {
          endingCodePoint = getCharCode(offset++);
        }
        type = types.String;
        for (; offset < source.length; offset++) {
          const code = source.charCodeAt(offset);
          switch (charCodeDefinitions.charCodeCategory(code)) {
            case endingCodePoint:
              offset++;
              return;
            case charCodeDefinitions.WhiteSpaceCategory:
              if (charCodeDefinitions.isNewline(code)) {
                offset += utils.getNewlineLength(source, offset, code);
                type = types.BadString;
                return;
              }
              break;
            case 92:
              if (offset === source.length - 1) {
                break;
              }
              const nextCode = getCharCode(offset + 1);
              if (charCodeDefinitions.isNewline(nextCode)) {
                offset += utils.getNewlineLength(source, offset + 1, nextCode);
              } else if (charCodeDefinitions.isValidEscape(code, nextCode)) {
                offset = utils.consumeEscaped(source, offset) - 1;
              }
              break;
          }
        }
      }
      function consumeUrlToken() {
        type = types.Url;
        offset = utils.findWhiteSpaceEnd(source, offset);
        for (; offset < source.length; offset++) {
          const code = source.charCodeAt(offset);
          switch (charCodeDefinitions.charCodeCategory(code)) {
            case 41:
              offset++;
              return;
            case charCodeDefinitions.WhiteSpaceCategory:
              offset = utils.findWhiteSpaceEnd(source, offset);
              if (getCharCode(offset) === 41 || offset >= source.length) {
                if (offset < source.length) {
                  offset++;
                }
                return;
              }
              offset = utils.consumeBadUrlRemnants(source, offset);
              type = types.BadUrl;
              return;
            case 34:
            case 39:
            case 40:
            case charCodeDefinitions.NonPrintableCategory:
              offset = utils.consumeBadUrlRemnants(source, offset);
              type = types.BadUrl;
              return;
            case 92:
              if (charCodeDefinitions.isValidEscape(code, getCharCode(offset + 1))) {
                offset = utils.consumeEscaped(source, offset) - 1;
                break;
              }
              offset = utils.consumeBadUrlRemnants(source, offset);
              type = types.BadUrl;
              return;
          }
        }
      }
      source = String(source || "");
      const sourceLength = source.length;
      let start = charCodeDefinitions.isBOM(getCharCode(0));
      let offset = start;
      let type;
      while (offset < sourceLength) {
        const code = source.charCodeAt(offset);
        switch (charCodeDefinitions.charCodeCategory(code)) {
          case charCodeDefinitions.WhiteSpaceCategory:
            type = types.WhiteSpace;
            offset = utils.findWhiteSpaceEnd(source, offset + 1);
            break;
          case 34:
            consumeStringToken();
            break;
          case 35:
            if (charCodeDefinitions.isName(getCharCode(offset + 1)) || charCodeDefinitions.isValidEscape(getCharCode(offset + 1), getCharCode(offset + 2))) {
              type = types.Hash;
              offset = utils.consumeName(source, offset + 1);
            } else {
              type = types.Delim;
              offset++;
            }
            break;
          case 39:
            consumeStringToken();
            break;
          case 40:
            type = types.LeftParenthesis;
            offset++;
            break;
          case 41:
            type = types.RightParenthesis;
            offset++;
            break;
          case 43:
            if (charCodeDefinitions.isNumberStart(code, getCharCode(offset + 1), getCharCode(offset + 2))) {
              consumeNumericToken();
            } else {
              type = types.Delim;
              offset++;
            }
            break;
          case 44:
            type = types.Comma;
            offset++;
            break;
          case 45:
            if (charCodeDefinitions.isNumberStart(code, getCharCode(offset + 1), getCharCode(offset + 2))) {
              consumeNumericToken();
            } else {
              if (getCharCode(offset + 1) === 45 && getCharCode(offset + 2) === 62) {
                type = types.CDC;
                offset = offset + 3;
              } else {
                if (charCodeDefinitions.isIdentifierStart(code, getCharCode(offset + 1), getCharCode(offset + 2))) {
                  consumeIdentLikeToken();
                } else {
                  type = types.Delim;
                  offset++;
                }
              }
            }
            break;
          case 46:
            if (charCodeDefinitions.isNumberStart(code, getCharCode(offset + 1), getCharCode(offset + 2))) {
              consumeNumericToken();
            } else {
              type = types.Delim;
              offset++;
            }
            break;
          case 47:
            if (getCharCode(offset + 1) === 42) {
              type = types.Comment;
              offset = source.indexOf("*/", offset + 2);
              offset = offset === -1 ? source.length : offset + 2;
            } else {
              type = types.Delim;
              offset++;
            }
            break;
          case 58:
            type = types.Colon;
            offset++;
            break;
          case 59:
            type = types.Semicolon;
            offset++;
            break;
          case 60:
            if (getCharCode(offset + 1) === 33 && getCharCode(offset + 2) === 45 && getCharCode(offset + 3) === 45) {
              type = types.CDO;
              offset = offset + 4;
            } else {
              type = types.Delim;
              offset++;
            }
            break;
          case 64:
            if (charCodeDefinitions.isIdentifierStart(getCharCode(offset + 1), getCharCode(offset + 2), getCharCode(offset + 3))) {
              type = types.AtKeyword;
              offset = utils.consumeName(source, offset + 1);
            } else {
              type = types.Delim;
              offset++;
            }
            break;
          case 91:
            type = types.LeftSquareBracket;
            offset++;
            break;
          case 92:
            if (charCodeDefinitions.isValidEscape(code, getCharCode(offset + 1))) {
              consumeIdentLikeToken();
            } else {
              type = types.Delim;
              offset++;
            }
            break;
          case 93:
            type = types.RightSquareBracket;
            offset++;
            break;
          case 123:
            type = types.LeftCurlyBracket;
            offset++;
            break;
          case 125:
            type = types.RightCurlyBracket;
            offset++;
            break;
          case charCodeDefinitions.DigitCategory:
            consumeNumericToken();
            break;
          case charCodeDefinitions.NameStartCategory:
            consumeIdentLikeToken();
            break;
          default:
            type = types.Delim;
            offset++;
        }
        onToken(type, start, start = offset);
      }
    }
    exports.AtKeyword = types.AtKeyword;
    exports.BadString = types.BadString;
    exports.BadUrl = types.BadUrl;
    exports.CDC = types.CDC;
    exports.CDO = types.CDO;
    exports.Colon = types.Colon;
    exports.Comma = types.Comma;
    exports.Comment = types.Comment;
    exports.Delim = types.Delim;
    exports.Dimension = types.Dimension;
    exports.EOF = types.EOF;
    exports.Function = types.Function;
    exports.Hash = types.Hash;
    exports.Ident = types.Ident;
    exports.LeftCurlyBracket = types.LeftCurlyBracket;
    exports.LeftParenthesis = types.LeftParenthesis;
    exports.LeftSquareBracket = types.LeftSquareBracket;
    exports.Number = types.Number;
    exports.Percentage = types.Percentage;
    exports.RightCurlyBracket = types.RightCurlyBracket;
    exports.RightParenthesis = types.RightParenthesis;
    exports.RightSquareBracket = types.RightSquareBracket;
    exports.Semicolon = types.Semicolon;
    exports.String = types.String;
    exports.Url = types.Url;
    exports.WhiteSpace = types.WhiteSpace;
    exports.tokenTypes = types;
    exports.DigitCategory = charCodeDefinitions.DigitCategory;
    exports.EofCategory = charCodeDefinitions.EofCategory;
    exports.NameStartCategory = charCodeDefinitions.NameStartCategory;
    exports.NonPrintableCategory = charCodeDefinitions.NonPrintableCategory;
    exports.WhiteSpaceCategory = charCodeDefinitions.WhiteSpaceCategory;
    exports.charCodeCategory = charCodeDefinitions.charCodeCategory;
    exports.isBOM = charCodeDefinitions.isBOM;
    exports.isDigit = charCodeDefinitions.isDigit;
    exports.isHexDigit = charCodeDefinitions.isHexDigit;
    exports.isIdentifierStart = charCodeDefinitions.isIdentifierStart;
    exports.isLetter = charCodeDefinitions.isLetter;
    exports.isLowercaseLetter = charCodeDefinitions.isLowercaseLetter;
    exports.isName = charCodeDefinitions.isName;
    exports.isNameStart = charCodeDefinitions.isNameStart;
    exports.isNewline = charCodeDefinitions.isNewline;
    exports.isNonAscii = charCodeDefinitions.isNonAscii;
    exports.isNonPrintable = charCodeDefinitions.isNonPrintable;
    exports.isNumberStart = charCodeDefinitions.isNumberStart;
    exports.isUppercaseLetter = charCodeDefinitions.isUppercaseLetter;
    exports.isValidEscape = charCodeDefinitions.isValidEscape;
    exports.isWhiteSpace = charCodeDefinitions.isWhiteSpace;
    exports.cmpChar = utils.cmpChar;
    exports.cmpStr = utils.cmpStr;
    exports.consumeBadUrlRemnants = utils.consumeBadUrlRemnants;
    exports.consumeEscaped = utils.consumeEscaped;
    exports.consumeName = utils.consumeName;
    exports.consumeNumber = utils.consumeNumber;
    exports.decodeEscaped = utils.decodeEscaped;
    exports.findDecimalNumberEnd = utils.findDecimalNumberEnd;
    exports.findWhiteSpaceEnd = utils.findWhiteSpaceEnd;
    exports.findWhiteSpaceStart = utils.findWhiteSpaceStart;
    exports.getNewlineLength = utils.getNewlineLength;
    exports.tokenNames = names;
    exports.OffsetToLocation = OffsetToLocation.OffsetToLocation;
    exports.TokenStream = TokenStream.TokenStream;
    exports.tokenize = tokenize;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/utils/List.cjs
var require_List2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/utils/List.cjs"(exports) {
    "use strict";
    var releasedCursors = null;
    var List = class _List {
      static createItem(data) {
        return {
          prev: null,
          next: null,
          data
        };
      }
      constructor() {
        this.head = null;
        this.tail = null;
        this.cursor = null;
      }
      createItem(data) {
        return _List.createItem(data);
      }
      // cursor helpers
      allocateCursor(prev, next) {
        let cursor;
        if (releasedCursors !== null) {
          cursor = releasedCursors;
          releasedCursors = releasedCursors.cursor;
          cursor.prev = prev;
          cursor.next = next;
          cursor.cursor = this.cursor;
        } else {
          cursor = {
            prev,
            next,
            cursor: this.cursor
          };
        }
        this.cursor = cursor;
        return cursor;
      }
      releaseCursor() {
        const { cursor } = this;
        this.cursor = cursor.cursor;
        cursor.prev = null;
        cursor.next = null;
        cursor.cursor = releasedCursors;
        releasedCursors = cursor;
      }
      updateCursors(prevOld, prevNew, nextOld, nextNew) {
        let { cursor } = this;
        while (cursor !== null) {
          if (cursor.prev === prevOld) {
            cursor.prev = prevNew;
          }
          if (cursor.next === nextOld) {
            cursor.next = nextNew;
          }
          cursor = cursor.cursor;
        }
      }
      *[Symbol.iterator]() {
        for (let cursor = this.head; cursor !== null; cursor = cursor.next) {
          yield cursor.data;
        }
      }
      // getters
      get size() {
        let size = 0;
        for (let cursor = this.head; cursor !== null; cursor = cursor.next) {
          size++;
        }
        return size;
      }
      get isEmpty() {
        return this.head === null;
      }
      get first() {
        return this.head && this.head.data;
      }
      get last() {
        return this.tail && this.tail.data;
      }
      // convertors
      fromArray(array) {
        let cursor = null;
        this.head = null;
        for (let data of array) {
          const item = _List.createItem(data);
          if (cursor !== null) {
            cursor.next = item;
          } else {
            this.head = item;
          }
          item.prev = cursor;
          cursor = item;
        }
        this.tail = cursor;
        return this;
      }
      toArray() {
        return [...this];
      }
      toJSON() {
        return [...this];
      }
      // array-like methods
      forEach(fn, thisArg = this) {
        const cursor = this.allocateCursor(null, this.head);
        while (cursor.next !== null) {
          const item = cursor.next;
          cursor.next = item.next;
          fn.call(thisArg, item.data, item, this);
        }
        this.releaseCursor();
      }
      forEachRight(fn, thisArg = this) {
        const cursor = this.allocateCursor(this.tail, null);
        while (cursor.prev !== null) {
          const item = cursor.prev;
          cursor.prev = item.prev;
          fn.call(thisArg, item.data, item, this);
        }
        this.releaseCursor();
      }
      reduce(fn, initialValue, thisArg = this) {
        let cursor = this.allocateCursor(null, this.head);
        let acc = initialValue;
        let item;
        while (cursor.next !== null) {
          item = cursor.next;
          cursor.next = item.next;
          acc = fn.call(thisArg, acc, item.data, item, this);
        }
        this.releaseCursor();
        return acc;
      }
      reduceRight(fn, initialValue, thisArg = this) {
        let cursor = this.allocateCursor(this.tail, null);
        let acc = initialValue;
        let item;
        while (cursor.prev !== null) {
          item = cursor.prev;
          cursor.prev = item.prev;
          acc = fn.call(thisArg, acc, item.data, item, this);
        }
        this.releaseCursor();
        return acc;
      }
      some(fn, thisArg = this) {
        for (let cursor = this.head; cursor !== null; cursor = cursor.next) {
          if (fn.call(thisArg, cursor.data, cursor, this)) {
            return true;
          }
        }
        return false;
      }
      map(fn, thisArg = this) {
        const result = new _List();
        for (let cursor = this.head; cursor !== null; cursor = cursor.next) {
          result.appendData(fn.call(thisArg, cursor.data, cursor, this));
        }
        return result;
      }
      filter(fn, thisArg = this) {
        const result = new _List();
        for (let cursor = this.head; cursor !== null; cursor = cursor.next) {
          if (fn.call(thisArg, cursor.data, cursor, this)) {
            result.appendData(cursor.data);
          }
        }
        return result;
      }
      nextUntil(start, fn, thisArg = this) {
        if (start === null) {
          return;
        }
        const cursor = this.allocateCursor(null, start);
        while (cursor.next !== null) {
          const item = cursor.next;
          cursor.next = item.next;
          if (fn.call(thisArg, item.data, item, this)) {
            break;
          }
        }
        this.releaseCursor();
      }
      prevUntil(start, fn, thisArg = this) {
        if (start === null) {
          return;
        }
        const cursor = this.allocateCursor(start, null);
        while (cursor.prev !== null) {
          const item = cursor.prev;
          cursor.prev = item.prev;
          if (fn.call(thisArg, item.data, item, this)) {
            break;
          }
        }
        this.releaseCursor();
      }
      // mutation
      clear() {
        this.head = null;
        this.tail = null;
      }
      copy() {
        const result = new _List();
        for (let data of this) {
          result.appendData(data);
        }
        return result;
      }
      prepend(item) {
        this.updateCursors(null, item, this.head, item);
        if (this.head !== null) {
          this.head.prev = item;
          item.next = this.head;
        } else {
          this.tail = item;
        }
        this.head = item;
        return this;
      }
      prependData(data) {
        return this.prepend(_List.createItem(data));
      }
      append(item) {
        return this.insert(item);
      }
      appendData(data) {
        return this.insert(_List.createItem(data));
      }
      insert(item, before = null) {
        if (before !== null) {
          this.updateCursors(before.prev, item, before, item);
          if (before.prev === null) {
            if (this.head !== before) {
              throw new Error("before doesn't belong to list");
            }
            this.head = item;
            before.prev = item;
            item.next = before;
            this.updateCursors(null, item);
          } else {
            before.prev.next = item;
            item.prev = before.prev;
            before.prev = item;
            item.next = before;
          }
        } else {
          this.updateCursors(this.tail, item, null, item);
          if (this.tail !== null) {
            this.tail.next = item;
            item.prev = this.tail;
          } else {
            this.head = item;
          }
          this.tail = item;
        }
        return this;
      }
      insertData(data, before) {
        return this.insert(_List.createItem(data), before);
      }
      remove(item) {
        this.updateCursors(item, item.prev, item, item.next);
        if (item.prev !== null) {
          item.prev.next = item.next;
        } else {
          if (this.head !== item) {
            throw new Error("item doesn't belong to list");
          }
          this.head = item.next;
        }
        if (item.next !== null) {
          item.next.prev = item.prev;
        } else {
          if (this.tail !== item) {
            throw new Error("item doesn't belong to list");
          }
          this.tail = item.prev;
        }
        item.prev = null;
        item.next = null;
        return item;
      }
      push(data) {
        this.insert(_List.createItem(data));
      }
      pop() {
        return this.tail !== null ? this.remove(this.tail) : null;
      }
      unshift(data) {
        this.prepend(_List.createItem(data));
      }
      shift() {
        return this.head !== null ? this.remove(this.head) : null;
      }
      prependList(list) {
        return this.insertList(list, this.head);
      }
      appendList(list) {
        return this.insertList(list);
      }
      insertList(list, before) {
        if (list.head === null) {
          return this;
        }
        if (before !== void 0 && before !== null) {
          this.updateCursors(before.prev, list.tail, before, list.head);
          if (before.prev !== null) {
            before.prev.next = list.head;
            list.head.prev = before.prev;
          } else {
            this.head = list.head;
          }
          before.prev = list.tail;
          list.tail.next = before;
        } else {
          this.updateCursors(this.tail, list.tail, null, list.head);
          if (this.tail !== null) {
            this.tail.next = list.head;
            list.head.prev = this.tail;
          } else {
            this.head = list.head;
          }
          this.tail = list.tail;
        }
        list.head = null;
        list.tail = null;
        return this;
      }
      replace(oldItem, newItemOrList) {
        if ("head" in newItemOrList) {
          this.insertList(newItemOrList, oldItem);
        } else {
          this.insert(newItemOrList, oldItem);
        }
        this.remove(oldItem);
      }
    };
    exports.List = List;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/utils/create-custom-error.cjs
var require_create_custom_error2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/utils/create-custom-error.cjs"(exports) {
    "use strict";
    function createCustomError(name, message) {
      const error = Object.create(SyntaxError.prototype);
      const errorStack = new Error();
      return Object.assign(error, {
        name,
        message,
        get stack() {
          return (errorStack.stack || "").replace(/^(.+\n){1,3}/, `${name}: ${message}
`);
        }
      });
    }
    exports.createCustomError = createCustomError;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/parser/SyntaxError.cjs
var require_SyntaxError3 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/parser/SyntaxError.cjs"(exports) {
    "use strict";
    var createCustomError = require_create_custom_error2();
    var MAX_LINE_LENGTH = 100;
    var OFFSET_CORRECTION = 60;
    var TAB_REPLACEMENT = "    ";
    function sourceFragment({ source, line, column }, extraLines) {
      function processLines(start, end) {
        return lines.slice(start, end).map(
          (line2, idx) => String(start + idx + 1).padStart(maxNumLength) + " |" + line2
        ).join("\n");
      }
      const lines = source.split(/\r\n?|\n|\f/);
      const startLine = Math.max(1, line - extraLines) - 1;
      const endLine = Math.min(line + extraLines, lines.length + 1);
      const maxNumLength = Math.max(4, String(endLine).length) + 1;
      let cutLeft = 0;
      column += (TAB_REPLACEMENT.length - 1) * (lines[line - 1].substr(0, column - 1).match(/\t/g) || []).length;
      if (column > MAX_LINE_LENGTH) {
        cutLeft = column - OFFSET_CORRECTION + 3;
        column = OFFSET_CORRECTION - 2;
      }
      for (let i = startLine; i <= endLine; i++) {
        if (i >= 0 && i < lines.length) {
          lines[i] = lines[i].replace(/\t/g, TAB_REPLACEMENT);
          lines[i] = (cutLeft > 0 && lines[i].length > cutLeft ? "\u2026" : "") + lines[i].substr(cutLeft, MAX_LINE_LENGTH - 2) + (lines[i].length > cutLeft + MAX_LINE_LENGTH - 1 ? "\u2026" : "");
        }
      }
      return [
        processLines(startLine, line),
        new Array(column + maxNumLength + 2).join("-") + "^",
        processLines(line, endLine)
      ].filter(Boolean).join("\n");
    }
    function SyntaxError2(message, source, offset, line, column) {
      const error = Object.assign(createCustomError.createCustomError("SyntaxError", message), {
        source,
        offset,
        line,
        column,
        sourceFragment(extraLines) {
          return sourceFragment({ source, line, column }, isNaN(extraLines) ? 0 : extraLines);
        },
        get formattedMessage() {
          return `Parse error: ${message}
` + sourceFragment({ source, line, column }, 2);
        }
      });
      return error;
    }
    exports.SyntaxError = SyntaxError2;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/parser/sequence.cjs
var require_sequence2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/parser/sequence.cjs"(exports) {
    "use strict";
    var types = require_types3();
    function readSequence(recognizer) {
      const children = this.createList();
      let space = false;
      const context = {
        recognizer
      };
      while (!this.eof) {
        switch (this.tokenType) {
          case types.Comment:
            this.next();
            continue;
          case types.WhiteSpace:
            space = true;
            this.next();
            continue;
        }
        let child = recognizer.getNode.call(this, context);
        if (child === void 0) {
          break;
        }
        if (space) {
          if (recognizer.onWhiteSpace) {
            recognizer.onWhiteSpace.call(this, child, children, context);
          }
          space = false;
        }
        children.push(child);
      }
      if (space && recognizer.onWhiteSpace) {
        recognizer.onWhiteSpace.call(this, null, children, context);
      }
      return children;
    }
    exports.readSequence = readSequence;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/parser/create.cjs
var require_create6 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/parser/create.cjs"(exports) {
    "use strict";
    var List = require_List2();
    var SyntaxError2 = require_SyntaxError3();
    var index = require_tokenizer3();
    var sequence = require_sequence2();
    var OffsetToLocation = require_OffsetToLocation2();
    var TokenStream = require_TokenStream2();
    var utils = require_utils3();
    var types = require_types3();
    var names = require_names4();
    var NOOP = () => {
    };
    var EXCLAMATIONMARK = 33;
    var NUMBERSIGN = 35;
    var SEMICOLON = 59;
    var LEFTCURLYBRACKET = 123;
    var NULL = 0;
    function createParseContext(name) {
      return function() {
        return this[name]();
      };
    }
    function fetchParseValues(dict) {
      const result = /* @__PURE__ */ Object.create(null);
      for (const name in dict) {
        const item = dict[name];
        const fn = item.parse || item;
        if (fn) {
          result[name] = fn;
        }
      }
      return result;
    }
    function processConfig(config) {
      const parseConfig = {
        context: /* @__PURE__ */ Object.create(null),
        scope: Object.assign(/* @__PURE__ */ Object.create(null), config.scope),
        atrule: fetchParseValues(config.atrule),
        pseudo: fetchParseValues(config.pseudo),
        node: fetchParseValues(config.node)
      };
      for (const name in config.parseContext) {
        switch (typeof config.parseContext[name]) {
          case "function":
            parseConfig.context[name] = config.parseContext[name];
            break;
          case "string":
            parseConfig.context[name] = createParseContext(config.parseContext[name]);
            break;
        }
      }
      return {
        config: parseConfig,
        ...parseConfig,
        ...parseConfig.node
      };
    }
    function createParser(config) {
      let source = "";
      let filename = "<unknown>";
      let needPositions = false;
      let onParseError = NOOP;
      let onParseErrorThrow = false;
      const locationMap = new OffsetToLocation.OffsetToLocation();
      const parser = Object.assign(new TokenStream.TokenStream(), processConfig(config || {}), {
        parseAtrulePrelude: true,
        parseRulePrelude: true,
        parseValue: true,
        parseCustomProperty: false,
        readSequence: sequence.readSequence,
        consumeUntilBalanceEnd: () => 0,
        consumeUntilLeftCurlyBracket(code) {
          return code === LEFTCURLYBRACKET ? 1 : 0;
        },
        consumeUntilLeftCurlyBracketOrSemicolon(code) {
          return code === LEFTCURLYBRACKET || code === SEMICOLON ? 1 : 0;
        },
        consumeUntilExclamationMarkOrSemicolon(code) {
          return code === EXCLAMATIONMARK || code === SEMICOLON ? 1 : 0;
        },
        consumeUntilSemicolonIncluded(code) {
          return code === SEMICOLON ? 2 : 0;
        },
        createList() {
          return new List.List();
        },
        createSingleNodeList(node) {
          return new List.List().appendData(node);
        },
        getFirstListNode(list) {
          return list && list.first;
        },
        getLastListNode(list) {
          return list && list.last;
        },
        parseWithFallback(consumer, fallback) {
          const startToken = this.tokenIndex;
          try {
            return consumer.call(this);
          } catch (e) {
            if (onParseErrorThrow) {
              throw e;
            }
            const fallbackNode = fallback.call(this, startToken);
            onParseErrorThrow = true;
            onParseError(e, fallbackNode);
            onParseErrorThrow = false;
            return fallbackNode;
          }
        },
        lookupNonWSType(offset) {
          let type;
          do {
            type = this.lookupType(offset++);
            if (type !== types.WhiteSpace) {
              return type;
            }
          } while (type !== NULL);
          return NULL;
        },
        charCodeAt(offset) {
          return offset >= 0 && offset < source.length ? source.charCodeAt(offset) : 0;
        },
        substring(offsetStart, offsetEnd) {
          return source.substring(offsetStart, offsetEnd);
        },
        substrToCursor(start) {
          return this.source.substring(start, this.tokenStart);
        },
        cmpChar(offset, charCode) {
          return utils.cmpChar(source, offset, charCode);
        },
        cmpStr(offsetStart, offsetEnd, str) {
          return utils.cmpStr(source, offsetStart, offsetEnd, str);
        },
        consume(tokenType) {
          const start = this.tokenStart;
          this.eat(tokenType);
          return this.substrToCursor(start);
        },
        consumeFunctionName() {
          const name = source.substring(this.tokenStart, this.tokenEnd - 1);
          this.eat(types.Function);
          return name;
        },
        consumeNumber(type) {
          const number = source.substring(this.tokenStart, utils.consumeNumber(source, this.tokenStart));
          this.eat(type);
          return number;
        },
        eat(tokenType) {
          if (this.tokenType !== tokenType) {
            const tokenName = names[tokenType].slice(0, -6).replace(/-/g, " ").replace(/^./, (m) => m.toUpperCase());
            let message = `${/[[\](){}]/.test(tokenName) ? `"${tokenName}"` : tokenName} is expected`;
            let offset = this.tokenStart;
            switch (tokenType) {
              case types.Ident:
                if (this.tokenType === types.Function || this.tokenType === types.Url) {
                  offset = this.tokenEnd - 1;
                  message = "Identifier is expected but function found";
                } else {
                  message = "Identifier is expected";
                }
                break;
              case types.Hash:
                if (this.isDelim(NUMBERSIGN)) {
                  this.next();
                  offset++;
                  message = "Name is expected";
                }
                break;
              case types.Percentage:
                if (this.tokenType === types.Number) {
                  offset = this.tokenEnd;
                  message = "Percent sign is expected";
                }
                break;
            }
            this.error(message, offset);
          }
          this.next();
        },
        eatIdent(name) {
          if (this.tokenType !== types.Ident || this.lookupValue(0, name) === false) {
            this.error(`Identifier "${name}" is expected`);
          }
          this.next();
        },
        eatDelim(code) {
          if (!this.isDelim(code)) {
            this.error(`Delim "${String.fromCharCode(code)}" is expected`);
          }
          this.next();
        },
        getLocation(start, end) {
          if (needPositions) {
            return locationMap.getLocationRange(
              start,
              end,
              filename
            );
          }
          return null;
        },
        getLocationFromList(list) {
          if (needPositions) {
            const head = this.getFirstListNode(list);
            const tail = this.getLastListNode(list);
            return locationMap.getLocationRange(
              head !== null ? head.loc.start.offset - locationMap.startOffset : this.tokenStart,
              tail !== null ? tail.loc.end.offset - locationMap.startOffset : this.tokenStart,
              filename
            );
          }
          return null;
        },
        error(message, offset) {
          const location = typeof offset !== "undefined" && offset < source.length ? locationMap.getLocation(offset) : this.eof ? locationMap.getLocation(utils.findWhiteSpaceStart(source, source.length - 1)) : locationMap.getLocation(this.tokenStart);
          throw new SyntaxError2.SyntaxError(
            message || "Unexpected input",
            source,
            location.offset,
            location.line,
            location.column
          );
        }
      });
      const parse = function(source_, options) {
        source = source_;
        options = options || {};
        parser.setSource(source, index.tokenize);
        locationMap.setSource(
          source,
          options.offset,
          options.line,
          options.column
        );
        filename = options.filename || "<unknown>";
        needPositions = Boolean(options.positions);
        onParseError = typeof options.onParseError === "function" ? options.onParseError : NOOP;
        onParseErrorThrow = false;
        parser.parseAtrulePrelude = "parseAtrulePrelude" in options ? Boolean(options.parseAtrulePrelude) : true;
        parser.parseRulePrelude = "parseRulePrelude" in options ? Boolean(options.parseRulePrelude) : true;
        parser.parseValue = "parseValue" in options ? Boolean(options.parseValue) : true;
        parser.parseCustomProperty = "parseCustomProperty" in options ? Boolean(options.parseCustomProperty) : false;
        const { context = "default", onComment } = options;
        if (context in parser.context === false) {
          throw new Error("Unknown context `" + context + "`");
        }
        if (typeof onComment === "function") {
          parser.forEachToken((type, start, end) => {
            if (type === types.Comment) {
              const loc = parser.getLocation(start, end);
              const value = utils.cmpStr(source, end - 2, end, "*/") ? source.slice(start + 2, end - 2) : source.slice(start + 2, end);
              onComment(value, loc);
            }
          });
        }
        const ast = parser.context[context].call(parser, options);
        if (!parser.eof) {
          parser.error();
        }
        return ast;
      };
      return Object.assign(parse, {
        SyntaxError: SyntaxError2.SyntaxError,
        config: parser.config
      });
    }
    exports.createParser = createParser;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/generator/sourceMap.cjs
var require_sourceMap2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/generator/sourceMap.cjs"(exports) {
    "use strict";
    var sourceMapGenerator_js = require_source_map_generator();
    var trackNodes = /* @__PURE__ */ new Set(["Atrule", "Selector", "Declaration"]);
    function generateSourceMap(handlers) {
      const map = new sourceMapGenerator_js.SourceMapGenerator();
      const generated = {
        line: 1,
        column: 0
      };
      const original = {
        line: 0,
        // should be zero to add first mapping
        column: 0
      };
      const activatedGenerated = {
        line: 1,
        column: 0
      };
      const activatedMapping = {
        generated: activatedGenerated
      };
      let line = 1;
      let column = 0;
      let sourceMappingActive = false;
      const origHandlersNode = handlers.node;
      handlers.node = function(node) {
        if (node.loc && node.loc.start && trackNodes.has(node.type)) {
          const nodeLine = node.loc.start.line;
          const nodeColumn = node.loc.start.column - 1;
          if (original.line !== nodeLine || original.column !== nodeColumn) {
            original.line = nodeLine;
            original.column = nodeColumn;
            generated.line = line;
            generated.column = column;
            if (sourceMappingActive) {
              sourceMappingActive = false;
              if (generated.line !== activatedGenerated.line || generated.column !== activatedGenerated.column) {
                map.addMapping(activatedMapping);
              }
            }
            sourceMappingActive = true;
            map.addMapping({
              source: node.loc.source,
              original,
              generated
            });
          }
        }
        origHandlersNode.call(this, node);
        if (sourceMappingActive && trackNodes.has(node.type)) {
          activatedGenerated.line = line;
          activatedGenerated.column = column;
        }
      };
      const origHandlersEmit = handlers.emit;
      handlers.emit = function(value, type, auto) {
        for (let i = 0; i < value.length; i++) {
          if (value.charCodeAt(i) === 10) {
            line++;
            column = 0;
          } else {
            column++;
          }
        }
        origHandlersEmit(value, type, auto);
      };
      const origHandlersResult = handlers.result;
      handlers.result = function() {
        if (sourceMappingActive) {
          map.addMapping(activatedMapping);
        }
        return {
          css: origHandlersResult(),
          map
        };
      };
      return handlers;
    }
    exports.generateSourceMap = generateSourceMap;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/generator/token-before.cjs
var require_token_before2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/generator/token-before.cjs"(exports) {
    "use strict";
    var types = require_types3();
    var PLUSSIGN = 43;
    var HYPHENMINUS = 45;
    var code = (type, value) => {
      if (type === types.Delim) {
        type = value;
      }
      if (typeof type === "string") {
        const charCode = type.charCodeAt(0);
        return charCode > 127 ? 32768 : charCode << 8;
      }
      return type;
    };
    var specPairs = [
      [types.Ident, types.Ident],
      [types.Ident, types.Function],
      [types.Ident, types.Url],
      [types.Ident, types.BadUrl],
      [types.Ident, "-"],
      [types.Ident, types.Number],
      [types.Ident, types.Percentage],
      [types.Ident, types.Dimension],
      [types.Ident, types.CDC],
      [types.Ident, types.LeftParenthesis],
      [types.AtKeyword, types.Ident],
      [types.AtKeyword, types.Function],
      [types.AtKeyword, types.Url],
      [types.AtKeyword, types.BadUrl],
      [types.AtKeyword, "-"],
      [types.AtKeyword, types.Number],
      [types.AtKeyword, types.Percentage],
      [types.AtKeyword, types.Dimension],
      [types.AtKeyword, types.CDC],
      [types.Hash, types.Ident],
      [types.Hash, types.Function],
      [types.Hash, types.Url],
      [types.Hash, types.BadUrl],
      [types.Hash, "-"],
      [types.Hash, types.Number],
      [types.Hash, types.Percentage],
      [types.Hash, types.Dimension],
      [types.Hash, types.CDC],
      [types.Dimension, types.Ident],
      [types.Dimension, types.Function],
      [types.Dimension, types.Url],
      [types.Dimension, types.BadUrl],
      [types.Dimension, "-"],
      [types.Dimension, types.Number],
      [types.Dimension, types.Percentage],
      [types.Dimension, types.Dimension],
      [types.Dimension, types.CDC],
      ["#", types.Ident],
      ["#", types.Function],
      ["#", types.Url],
      ["#", types.BadUrl],
      ["#", "-"],
      ["#", types.Number],
      ["#", types.Percentage],
      ["#", types.Dimension],
      ["#", types.CDC],
      // https://github.com/w3c/csswg-drafts/pull/6874
      ["-", types.Ident],
      ["-", types.Function],
      ["-", types.Url],
      ["-", types.BadUrl],
      ["-", "-"],
      ["-", types.Number],
      ["-", types.Percentage],
      ["-", types.Dimension],
      ["-", types.CDC],
      // https://github.com/w3c/csswg-drafts/pull/6874
      [types.Number, types.Ident],
      [types.Number, types.Function],
      [types.Number, types.Url],
      [types.Number, types.BadUrl],
      [types.Number, types.Number],
      [types.Number, types.Percentage],
      [types.Number, types.Dimension],
      [types.Number, "%"],
      [types.Number, types.CDC],
      // https://github.com/w3c/csswg-drafts/pull/6874
      ["@", types.Ident],
      ["@", types.Function],
      ["@", types.Url],
      ["@", types.BadUrl],
      ["@", "-"],
      ["@", types.CDC],
      // https://github.com/w3c/csswg-drafts/pull/6874
      [".", types.Number],
      [".", types.Percentage],
      [".", types.Dimension],
      ["+", types.Number],
      ["+", types.Percentage],
      ["+", types.Dimension],
      ["/", "*"]
    ];
    var safePairs = specPairs.concat([
      [types.Ident, types.Hash],
      [types.Dimension, types.Hash],
      [types.Hash, types.Hash],
      [types.AtKeyword, types.LeftParenthesis],
      [types.AtKeyword, types.String],
      [types.AtKeyword, types.Colon],
      [types.Percentage, types.Percentage],
      [types.Percentage, types.Dimension],
      [types.Percentage, types.Function],
      [types.Percentage, "-"],
      [types.RightParenthesis, types.Ident],
      [types.RightParenthesis, types.Function],
      [types.RightParenthesis, types.Percentage],
      [types.RightParenthesis, types.Dimension],
      [types.RightParenthesis, types.Hash],
      [types.RightParenthesis, "-"]
    ]);
    function createMap(pairs) {
      const isWhiteSpaceRequired = new Set(
        pairs.map(([prev, next]) => code(prev) << 16 | code(next))
      );
      return function(prevCode, type, value) {
        const nextCode = code(type, value);
        const nextCharCode = value.charCodeAt(0);
        const emitWs = nextCharCode === HYPHENMINUS && type !== types.Ident && type !== types.Function && type !== types.CDC || nextCharCode === PLUSSIGN ? isWhiteSpaceRequired.has(prevCode << 16 | nextCharCode << 8) : isWhiteSpaceRequired.has(prevCode << 16 | nextCode);
        if (emitWs) {
          this.emit(" ", types.WhiteSpace, true);
        }
        return nextCode;
      };
    }
    var spec = createMap(specPairs);
    var safe = createMap(safePairs);
    exports.safe = safe;
    exports.spec = spec;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/generator/create.cjs
var require_create7 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/generator/create.cjs"(exports) {
    "use strict";
    var index = require_tokenizer3();
    var sourceMap = require_sourceMap2();
    var tokenBefore = require_token_before2();
    var types = require_types3();
    var REVERSESOLIDUS = 92;
    function processChildren(node, delimeter) {
      if (typeof delimeter === "function") {
        let prev = null;
        node.children.forEach((node2) => {
          if (prev !== null) {
            delimeter.call(this, prev);
          }
          this.node(node2);
          prev = node2;
        });
        return;
      }
      node.children.forEach(this.node, this);
    }
    function processChunk(chunk) {
      index.tokenize(chunk, (type, start, end) => {
        this.token(type, chunk.slice(start, end));
      });
    }
    function createGenerator(config) {
      const types$1 = /* @__PURE__ */ new Map();
      for (let name in config.node) {
        const item = config.node[name];
        const fn = item.generate || item;
        if (typeof fn === "function") {
          types$1.set(name, item.generate || item);
        }
      }
      return function(node, options) {
        let buffer = "";
        let prevCode = 0;
        let handlers = {
          node(node2) {
            if (types$1.has(node2.type)) {
              types$1.get(node2.type).call(publicApi, node2);
            } else {
              throw new Error("Unknown node type: " + node2.type);
            }
          },
          tokenBefore: tokenBefore.safe,
          token(type, value) {
            prevCode = this.tokenBefore(prevCode, type, value);
            this.emit(value, type, false);
            if (type === types.Delim && value.charCodeAt(0) === REVERSESOLIDUS) {
              this.emit("\n", types.WhiteSpace, true);
            }
          },
          emit(value) {
            buffer += value;
          },
          result() {
            return buffer;
          }
        };
        if (options) {
          if (typeof options.decorator === "function") {
            handlers = options.decorator(handlers);
          }
          if (options.sourceMap) {
            handlers = sourceMap.generateSourceMap(handlers);
          }
          if (options.mode in tokenBefore) {
            handlers.tokenBefore = tokenBefore[options.mode];
          }
        }
        const publicApi = {
          node: (node2) => handlers.node(node2),
          children: processChildren,
          token: (type, value) => handlers.token(type, value),
          tokenize: processChunk
        };
        handlers.node(node);
        return handlers.result();
      };
    }
    exports.createGenerator = createGenerator;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/convertor/create.cjs
var require_create8 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/convertor/create.cjs"(exports) {
    "use strict";
    var List = require_List2();
    function createConvertor(walk) {
      return {
        fromPlainObject(ast) {
          walk(ast, {
            enter(node) {
              if (node.children && node.children instanceof List.List === false) {
                node.children = new List.List().fromArray(node.children);
              }
            }
          });
          return ast;
        },
        toPlainObject(ast) {
          walk(ast, {
            leave(node) {
              if (node.children && node.children instanceof List.List) {
                node.children = node.children.toArray();
              }
            }
          });
          return ast;
        }
      };
    }
    exports.createConvertor = createConvertor;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/walker/create.cjs
var require_create9 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/walker/create.cjs"(exports) {
    "use strict";
    var { hasOwnProperty: hasOwnProperty2 } = Object.prototype;
    var noop = function() {
    };
    function ensureFunction(value) {
      return typeof value === "function" ? value : noop;
    }
    function invokeForType(fn, type) {
      return function(node, item, list) {
        if (node.type === type) {
          fn.call(this, node, item, list);
        }
      };
    }
    function getWalkersFromStructure(name, nodeType) {
      const structure = nodeType.structure;
      const walkers = [];
      for (const key in structure) {
        if (hasOwnProperty2.call(structure, key) === false) {
          continue;
        }
        let fieldTypes = structure[key];
        const walker = {
          name: key,
          type: false,
          nullable: false
        };
        if (!Array.isArray(fieldTypes)) {
          fieldTypes = [fieldTypes];
        }
        for (const fieldType of fieldTypes) {
          if (fieldType === null) {
            walker.nullable = true;
          } else if (typeof fieldType === "string") {
            walker.type = "node";
          } else if (Array.isArray(fieldType)) {
            walker.type = "list";
          }
        }
        if (walker.type) {
          walkers.push(walker);
        }
      }
      if (walkers.length) {
        return {
          context: nodeType.walkContext,
          fields: walkers
        };
      }
      return null;
    }
    function getTypesFromConfig(config) {
      const types = {};
      for (const name in config.node) {
        if (hasOwnProperty2.call(config.node, name)) {
          const nodeType = config.node[name];
          if (!nodeType.structure) {
            throw new Error("Missed `structure` field in `" + name + "` node type definition");
          }
          types[name] = getWalkersFromStructure(name, nodeType);
        }
      }
      return types;
    }
    function createTypeIterator(config, reverse) {
      const fields = config.fields.slice();
      const contextName = config.context;
      const useContext = typeof contextName === "string";
      if (reverse) {
        fields.reverse();
      }
      return function(node, context, walk, walkReducer) {
        let prevContextValue;
        if (useContext) {
          prevContextValue = context[contextName];
          context[contextName] = node;
        }
        for (const field of fields) {
          const ref = node[field.name];
          if (!field.nullable || ref) {
            if (field.type === "list") {
              const breakWalk = reverse ? ref.reduceRight(walkReducer, false) : ref.reduce(walkReducer, false);
              if (breakWalk) {
                return true;
              }
            } else if (walk(ref)) {
              return true;
            }
          }
        }
        if (useContext) {
          context[contextName] = prevContextValue;
        }
      };
    }
    function createFastTraveralMap({
      StyleSheet,
      Atrule,
      Rule,
      Block,
      DeclarationList
    }) {
      return {
        Atrule: {
          StyleSheet,
          Atrule,
          Rule,
          Block
        },
        Rule: {
          StyleSheet,
          Atrule,
          Rule,
          Block
        },
        Declaration: {
          StyleSheet,
          Atrule,
          Rule,
          Block,
          DeclarationList
        }
      };
    }
    function createWalker(config) {
      const types = getTypesFromConfig(config);
      const iteratorsNatural = {};
      const iteratorsReverse = {};
      const breakWalk = Symbol("break-walk");
      const skipNode = Symbol("skip-node");
      for (const name in types) {
        if (hasOwnProperty2.call(types, name) && types[name] !== null) {
          iteratorsNatural[name] = createTypeIterator(types[name], false);
          iteratorsReverse[name] = createTypeIterator(types[name], true);
        }
      }
      const fastTraversalIteratorsNatural = createFastTraveralMap(iteratorsNatural);
      const fastTraversalIteratorsReverse = createFastTraveralMap(iteratorsReverse);
      const walk = function(root, options) {
        function walkNode(node, item, list) {
          const enterRet = enter.call(context, node, item, list);
          if (enterRet === breakWalk) {
            return true;
          }
          if (enterRet === skipNode) {
            return false;
          }
          if (iterators.hasOwnProperty(node.type)) {
            if (iterators[node.type](node, context, walkNode, walkReducer)) {
              return true;
            }
          }
          if (leave.call(context, node, item, list) === breakWalk) {
            return true;
          }
          return false;
        }
        let enter = noop;
        let leave = noop;
        let iterators = iteratorsNatural;
        let walkReducer = (ret, data, item, list) => ret || walkNode(data, item, list);
        const context = {
          break: breakWalk,
          skip: skipNode,
          root,
          stylesheet: null,
          atrule: null,
          atrulePrelude: null,
          rule: null,
          selector: null,
          block: null,
          declaration: null,
          function: null
        };
        if (typeof options === "function") {
          enter = options;
        } else if (options) {
          enter = ensureFunction(options.enter);
          leave = ensureFunction(options.leave);
          if (options.reverse) {
            iterators = iteratorsReverse;
          }
          if (options.visit) {
            if (fastTraversalIteratorsNatural.hasOwnProperty(options.visit)) {
              iterators = options.reverse ? fastTraversalIteratorsReverse[options.visit] : fastTraversalIteratorsNatural[options.visit];
            } else if (!types.hasOwnProperty(options.visit)) {
              throw new Error("Bad value `" + options.visit + "` for `visit` option (should be: " + Object.keys(types).sort().join(", ") + ")");
            }
            enter = invokeForType(enter, options.visit);
            leave = invokeForType(leave, options.visit);
          }
        }
        if (enter === noop && leave === noop) {
          throw new Error("Neither `enter` nor `leave` walker handler is set or both aren't a function");
        }
        walkNode(root);
      };
      walk.break = breakWalk;
      walk.skip = skipNode;
      walk.find = function(ast, fn) {
        let found = null;
        walk(ast, function(node, item, list) {
          if (fn.call(this, node, item, list)) {
            found = node;
            return breakWalk;
          }
        });
        return found;
      };
      walk.findLast = function(ast, fn) {
        let found = null;
        walk(ast, {
          reverse: true,
          enter(node, item, list) {
            if (fn.call(this, node, item, list)) {
              found = node;
              return breakWalk;
            }
          }
        });
        return found;
      };
      walk.findAll = function(ast, fn) {
        const found = [];
        walk(ast, function(node, item, list) {
          if (fn.call(this, node, item, list)) {
            found.push(node);
          }
        });
        return found;
      };
      return walk;
    }
    exports.createWalker = createWalker;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/definition-syntax/generate.cjs
var require_generate2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/definition-syntax/generate.cjs"(exports) {
    "use strict";
    function noop(value) {
      return value;
    }
    function generateMultiplier(multiplier) {
      const { min, max, comma } = multiplier;
      if (min === 0 && max === 0) {
        return comma ? "#?" : "*";
      }
      if (min === 0 && max === 1) {
        return "?";
      }
      if (min === 1 && max === 0) {
        return comma ? "#" : "+";
      }
      if (min === 1 && max === 1) {
        return "";
      }
      return (comma ? "#" : "") + (min === max ? "{" + min + "}" : "{" + min + "," + (max !== 0 ? max : "") + "}");
    }
    function generateTypeOpts(node) {
      switch (node.type) {
        case "Range":
          return " [" + (node.min === null ? "-\u221E" : node.min) + "," + (node.max === null ? "\u221E" : node.max) + "]";
        default:
          throw new Error("Unknown node type `" + node.type + "`");
      }
    }
    function generateSequence(node, decorate, forceBraces, compact) {
      const combinator = node.combinator === " " || compact ? node.combinator : " " + node.combinator + " ";
      const result = node.terms.map((term) => internalGenerate(term, decorate, forceBraces, compact)).join(combinator);
      if (node.explicit || forceBraces) {
        return (compact || result[0] === "," ? "[" : "[ ") + result + (compact ? "]" : " ]");
      }
      return result;
    }
    function internalGenerate(node, decorate, forceBraces, compact) {
      let result;
      switch (node.type) {
        case "Group":
          result = generateSequence(node, decorate, forceBraces, compact) + (node.disallowEmpty ? "!" : "");
          break;
        case "Multiplier":
          return internalGenerate(node.term, decorate, forceBraces, compact) + decorate(generateMultiplier(node), node);
        case "Type":
          result = "<" + node.name + (node.opts ? decorate(generateTypeOpts(node.opts), node.opts) : "") + ">";
          break;
        case "Property":
          result = "<'" + node.name + "'>";
          break;
        case "Keyword":
          result = node.name;
          break;
        case "AtKeyword":
          result = "@" + node.name;
          break;
        case "Function":
          result = node.name + "(";
          break;
        case "String":
        case "Token":
          result = node.value;
          break;
        case "Comma":
          result = ",";
          break;
        default:
          throw new Error("Unknown node type `" + node.type + "`");
      }
      return decorate(result, node);
    }
    function generate(node, options) {
      let decorate = noop;
      let forceBraces = false;
      let compact = false;
      if (typeof options === "function") {
        decorate = options;
      } else if (options) {
        forceBraces = Boolean(options.forceBraces);
        compact = Boolean(options.compact);
        if (typeof options.decorate === "function") {
          decorate = options.decorate;
        }
      }
      return internalGenerate(node, decorate, forceBraces, compact);
    }
    exports.generate = generate;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/lexer/error.cjs
var require_error3 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/lexer/error.cjs"(exports) {
    "use strict";
    var createCustomError = require_create_custom_error2();
    var generate = require_generate2();
    var defaultLoc = { offset: 0, line: 1, column: 1 };
    function locateMismatch(matchResult, node) {
      const tokens = matchResult.tokens;
      const longestMatch = matchResult.longestMatch;
      const mismatchNode = longestMatch < tokens.length ? tokens[longestMatch].node || null : null;
      const badNode = mismatchNode !== node ? mismatchNode : null;
      let mismatchOffset = 0;
      let mismatchLength = 0;
      let entries = 0;
      let css = "";
      let start;
      let end;
      for (let i = 0; i < tokens.length; i++) {
        const token = tokens[i].value;
        if (i === longestMatch) {
          mismatchLength = token.length;
          mismatchOffset = css.length;
        }
        if (badNode !== null && tokens[i].node === badNode) {
          if (i <= longestMatch) {
            entries++;
          } else {
            entries = 0;
          }
        }
        css += token;
      }
      if (longestMatch === tokens.length || entries > 1) {
        start = fromLoc(badNode || node, "end") || buildLoc(defaultLoc, css);
        end = buildLoc(start);
      } else {
        start = fromLoc(badNode, "start") || buildLoc(fromLoc(node, "start") || defaultLoc, css.slice(0, mismatchOffset));
        end = fromLoc(badNode, "end") || buildLoc(start, css.substr(mismatchOffset, mismatchLength));
      }
      return {
        css,
        mismatchOffset,
        mismatchLength,
        start,
        end
      };
    }
    function fromLoc(node, point) {
      const value = node && node.loc && node.loc[point];
      if (value) {
        return "line" in value ? buildLoc(value) : value;
      }
      return null;
    }
    function buildLoc({ offset, line, column }, extra) {
      const loc = {
        offset,
        line,
        column
      };
      if (extra) {
        const lines = extra.split(/\n|\r\n?|\f/);
        loc.offset += extra.length;
        loc.line += lines.length - 1;
        loc.column = lines.length === 1 ? loc.column + extra.length : lines.pop().length + 1;
      }
      return loc;
    }
    var SyntaxReferenceError = function(type, referenceName) {
      const error = createCustomError.createCustomError(
        "SyntaxReferenceError",
        type + (referenceName ? " `" + referenceName + "`" : "")
      );
      error.reference = referenceName;
      return error;
    };
    var SyntaxMatchError = function(message, syntax, node, matchResult) {
      const error = createCustomError.createCustomError("SyntaxMatchError", message);
      const {
        css,
        mismatchOffset,
        mismatchLength,
        start,
        end
      } = locateMismatch(matchResult, node);
      error.rawMessage = message;
      error.syntax = syntax ? generate.generate(syntax) : "<generic>";
      error.css = css;
      error.mismatchOffset = mismatchOffset;
      error.mismatchLength = mismatchLength;
      error.message = message + "\n  syntax: " + error.syntax + "\n   value: " + (css || "<empty string>") + "\n  --------" + new Array(error.mismatchOffset + 1).join("-") + "^";
      Object.assign(error, start);
      error.loc = {
        source: node && node.loc && node.loc.source || "<unknown>",
        start,
        end
      };
      return error;
    };
    exports.SyntaxMatchError = SyntaxMatchError;
    exports.SyntaxReferenceError = SyntaxReferenceError;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/utils/names.cjs
var require_names5 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/utils/names.cjs"(exports) {
    "use strict";
    var keywords = /* @__PURE__ */ new Map();
    var properties = /* @__PURE__ */ new Map();
    var HYPHENMINUS = 45;
    var keyword = getKeywordDescriptor;
    var property = getPropertyDescriptor;
    var vendorPrefix = getVendorPrefix;
    function isCustomProperty(str, offset) {
      offset = offset || 0;
      return str.length - offset >= 2 && str.charCodeAt(offset) === HYPHENMINUS && str.charCodeAt(offset + 1) === HYPHENMINUS;
    }
    function getVendorPrefix(str, offset) {
      offset = offset || 0;
      if (str.length - offset >= 3) {
        if (str.charCodeAt(offset) === HYPHENMINUS && str.charCodeAt(offset + 1) !== HYPHENMINUS) {
          const secondDashIndex = str.indexOf("-", offset + 2);
          if (secondDashIndex !== -1) {
            return str.substring(offset, secondDashIndex + 1);
          }
        }
      }
      return "";
    }
    function getKeywordDescriptor(keyword2) {
      if (keywords.has(keyword2)) {
        return keywords.get(keyword2);
      }
      const name = keyword2.toLowerCase();
      let descriptor = keywords.get(name);
      if (descriptor === void 0) {
        const custom = isCustomProperty(name, 0);
        const vendor = !custom ? getVendorPrefix(name, 0) : "";
        descriptor = Object.freeze({
          basename: name.substr(vendor.length),
          name,
          prefix: vendor,
          vendor,
          custom
        });
      }
      keywords.set(keyword2, descriptor);
      return descriptor;
    }
    function getPropertyDescriptor(property2) {
      if (properties.has(property2)) {
        return properties.get(property2);
      }
      let name = property2;
      let hack = property2[0];
      if (hack === "/") {
        hack = property2[1] === "/" ? "//" : "/";
      } else if (hack !== "_" && hack !== "*" && hack !== "$" && hack !== "#" && hack !== "+" && hack !== "&") {
        hack = "";
      }
      const custom = isCustomProperty(name, hack.length);
      if (!custom) {
        name = name.toLowerCase();
        if (properties.has(name)) {
          const descriptor2 = properties.get(name);
          properties.set(property2, descriptor2);
          return descriptor2;
        }
      }
      const vendor = !custom ? getVendorPrefix(name, hack.length) : "";
      const prefix = name.substr(0, hack.length + vendor.length);
      const descriptor = Object.freeze({
        basename: name.substr(prefix.length),
        name: name.substr(hack.length),
        hack,
        vendor,
        prefix,
        custom
      });
      properties.set(property2, descriptor);
      return descriptor;
    }
    exports.isCustomProperty = isCustomProperty;
    exports.keyword = keyword;
    exports.property = property;
    exports.vendorPrefix = vendorPrefix;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/lexer/generic-const.cjs
var require_generic_const2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/lexer/generic-const.cjs"(exports) {
    "use strict";
    var cssWideKeywords = [
      "initial",
      "inherit",
      "unset",
      "revert",
      "revert-layer"
    ];
    exports.cssWideKeywords = cssWideKeywords;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/lexer/generic-an-plus-b.cjs
var require_generic_an_plus_b2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/lexer/generic-an-plus-b.cjs"(exports, module2) {
    "use strict";
    var charCodeDefinitions = require_char_code_definitions2();
    var types = require_types3();
    var utils = require_utils3();
    var PLUSSIGN = 43;
    var HYPHENMINUS = 45;
    var N = 110;
    var DISALLOW_SIGN = true;
    var ALLOW_SIGN = false;
    function isDelim(token, code) {
      return token !== null && token.type === types.Delim && token.value.charCodeAt(0) === code;
    }
    function skipSC(token, offset, getNextToken) {
      while (token !== null && (token.type === types.WhiteSpace || token.type === types.Comment)) {
        token = getNextToken(++offset);
      }
      return offset;
    }
    function checkInteger(token, valueOffset, disallowSign, offset) {
      if (!token) {
        return 0;
      }
      const code = token.value.charCodeAt(valueOffset);
      if (code === PLUSSIGN || code === HYPHENMINUS) {
        if (disallowSign) {
          return 0;
        }
        valueOffset++;
      }
      for (; valueOffset < token.value.length; valueOffset++) {
        if (!charCodeDefinitions.isDigit(token.value.charCodeAt(valueOffset))) {
          return 0;
        }
      }
      return offset + 1;
    }
    function consumeB(token, offset_, getNextToken) {
      let sign = false;
      let offset = skipSC(token, offset_, getNextToken);
      token = getNextToken(offset);
      if (token === null) {
        return offset_;
      }
      if (token.type !== types.Number) {
        if (isDelim(token, PLUSSIGN) || isDelim(token, HYPHENMINUS)) {
          sign = true;
          offset = skipSC(getNextToken(++offset), offset, getNextToken);
          token = getNextToken(offset);
          if (token === null || token.type !== types.Number) {
            return 0;
          }
        } else {
          return offset_;
        }
      }
      if (!sign) {
        const code = token.value.charCodeAt(0);
        if (code !== PLUSSIGN && code !== HYPHENMINUS) {
          return 0;
        }
      }
      return checkInteger(token, sign ? 0 : 1, sign, offset);
    }
    function anPlusB(token, getNextToken) {
      let offset = 0;
      if (!token) {
        return 0;
      }
      if (token.type === types.Number) {
        return checkInteger(token, 0, ALLOW_SIGN, offset);
      } else if (token.type === types.Ident && token.value.charCodeAt(0) === HYPHENMINUS) {
        if (!utils.cmpChar(token.value, 1, N)) {
          return 0;
        }
        switch (token.value.length) {
          case 2:
            return consumeB(getNextToken(++offset), offset, getNextToken);
          case 3:
            if (token.value.charCodeAt(2) !== HYPHENMINUS) {
              return 0;
            }
            offset = skipSC(getNextToken(++offset), offset, getNextToken);
            token = getNextToken(offset);
            return checkInteger(token, 0, DISALLOW_SIGN, offset);
          default:
            if (token.value.charCodeAt(2) !== HYPHENMINUS) {
              return 0;
            }
            return checkInteger(token, 3, DISALLOW_SIGN, offset);
        }
      } else if (token.type === types.Ident || isDelim(token, PLUSSIGN) && getNextToken(offset + 1).type === types.Ident) {
        if (token.type !== types.Ident) {
          token = getNextToken(++offset);
        }
        if (token === null || !utils.cmpChar(token.value, 0, N)) {
          return 0;
        }
        switch (token.value.length) {
          case 1:
            return consumeB(getNextToken(++offset), offset, getNextToken);
          case 2:
            if (token.value.charCodeAt(1) !== HYPHENMINUS) {
              return 0;
            }
            offset = skipSC(getNextToken(++offset), offset, getNextToken);
            token = getNextToken(offset);
            return checkInteger(token, 0, DISALLOW_SIGN, offset);
          default:
            if (token.value.charCodeAt(1) !== HYPHENMINUS) {
              return 0;
            }
            return checkInteger(token, 2, DISALLOW_SIGN, offset);
        }
      } else if (token.type === types.Dimension) {
        let code = token.value.charCodeAt(0);
        let sign = code === PLUSSIGN || code === HYPHENMINUS ? 1 : 0;
        let i = sign;
        for (; i < token.value.length; i++) {
          if (!charCodeDefinitions.isDigit(token.value.charCodeAt(i))) {
            break;
          }
        }
        if (i === sign) {
          return 0;
        }
        if (!utils.cmpChar(token.value, i, N)) {
          return 0;
        }
        if (i + 1 === token.value.length) {
          return consumeB(getNextToken(++offset), offset, getNextToken);
        } else {
          if (token.value.charCodeAt(i + 1) !== HYPHENMINUS) {
            return 0;
          }
          if (i + 2 === token.value.length) {
            offset = skipSC(getNextToken(++offset), offset, getNextToken);
            token = getNextToken(offset);
            return checkInteger(token, 0, DISALLOW_SIGN, offset);
          } else {
            return checkInteger(token, i + 2, DISALLOW_SIGN, offset);
          }
        }
      }
      return 0;
    }
    module2.exports = anPlusB;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/lexer/generic-urange.cjs
var require_generic_urange2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/lexer/generic-urange.cjs"(exports, module2) {
    "use strict";
    var charCodeDefinitions = require_char_code_definitions2();
    var types = require_types3();
    var utils = require_utils3();
    var PLUSSIGN = 43;
    var HYPHENMINUS = 45;
    var QUESTIONMARK = 63;
    var U = 117;
    function isDelim(token, code) {
      return token !== null && token.type === types.Delim && token.value.charCodeAt(0) === code;
    }
    function startsWith(token, code) {
      return token.value.charCodeAt(0) === code;
    }
    function hexSequence(token, offset, allowDash) {
      let hexlen = 0;
      for (let pos = offset; pos < token.value.length; pos++) {
        const code = token.value.charCodeAt(pos);
        if (code === HYPHENMINUS && allowDash && hexlen !== 0) {
          hexSequence(token, offset + hexlen + 1, false);
          return 6;
        }
        if (!charCodeDefinitions.isHexDigit(code)) {
          return 0;
        }
        if (++hexlen > 6) {
          return 0;
        }
      }
      return hexlen;
    }
    function withQuestionMarkSequence(consumed, length, getNextToken) {
      if (!consumed) {
        return 0;
      }
      while (isDelim(getNextToken(length), QUESTIONMARK)) {
        if (++consumed > 6) {
          return 0;
        }
        length++;
      }
      return length;
    }
    function urange(token, getNextToken) {
      let length = 0;
      if (token === null || token.type !== types.Ident || !utils.cmpChar(token.value, 0, U)) {
        return 0;
      }
      token = getNextToken(++length);
      if (token === null) {
        return 0;
      }
      if (isDelim(token, PLUSSIGN)) {
        token = getNextToken(++length);
        if (token === null) {
          return 0;
        }
        if (token.type === types.Ident) {
          return withQuestionMarkSequence(hexSequence(token, 0, true), ++length, getNextToken);
        }
        if (isDelim(token, QUESTIONMARK)) {
          return withQuestionMarkSequence(1, ++length, getNextToken);
        }
        return 0;
      }
      if (token.type === types.Number) {
        const consumedHexLength = hexSequence(token, 1, true);
        if (consumedHexLength === 0) {
          return 0;
        }
        token = getNextToken(++length);
        if (token === null) {
          return length;
        }
        if (token.type === types.Dimension || token.type === types.Number) {
          if (!startsWith(token, HYPHENMINUS) || !hexSequence(token, 1, false)) {
            return 0;
          }
          return length + 1;
        }
        return withQuestionMarkSequence(consumedHexLength, length, getNextToken);
      }
      if (token.type === types.Dimension) {
        return withQuestionMarkSequence(hexSequence(token, 1, true), ++length, getNextToken);
      }
      return 0;
    }
    module2.exports = urange;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/lexer/generic.cjs
var require_generic2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/lexer/generic.cjs"(exports, module2) {
    "use strict";
    var genericConst = require_generic_const2();
    var genericAnPlusB = require_generic_an_plus_b2();
    var genericUrange = require_generic_urange2();
    var types = require_types3();
    var charCodeDefinitions = require_char_code_definitions2();
    var utils = require_utils3();
    var calcFunctionNames = ["calc(", "-moz-calc(", "-webkit-calc("];
    var balancePair = /* @__PURE__ */ new Map([
      [types.Function, types.RightParenthesis],
      [types.LeftParenthesis, types.RightParenthesis],
      [types.LeftSquareBracket, types.RightSquareBracket],
      [types.LeftCurlyBracket, types.RightCurlyBracket]
    ]);
    var LENGTH = [
      // absolute length units https://www.w3.org/TR/css-values-3/#lengths
      "cm",
      "mm",
      "q",
      "in",
      "pt",
      "pc",
      "px",
      // font-relative length units https://drafts.csswg.org/css-values-4/#font-relative-lengths
      "em",
      "rem",
      "ex",
      "rex",
      "cap",
      "rcap",
      "ch",
      "rch",
      "ic",
      "ric",
      "lh",
      "rlh",
      // viewport-percentage lengths https://drafts.csswg.org/css-values-4/#viewport-relative-lengths
      "vw",
      "svw",
      "lvw",
      "dvw",
      "vh",
      "svh",
      "lvh",
      "dvh",
      "vi",
      "svi",
      "lvi",
      "dvi",
      "vb",
      "svb",
      "lvb",
      "dvb",
      "vmin",
      "svmin",
      "lvmin",
      "dvmin",
      "vmax",
      "svmax",
      "lvmax",
      "dvmax",
      // container relative lengths https://drafts.csswg.org/css-contain-3/#container-lengths
      "cqw",
      "cqh",
      "cqi",
      "cqb",
      "cqmin",
      "cqmax"
    ];
    var ANGLE = ["deg", "grad", "rad", "turn"];
    var TIME = ["s", "ms"];
    var FREQUENCY = ["hz", "khz"];
    var RESOLUTION = ["dpi", "dpcm", "dppx", "x"];
    var FLEX = ["fr"];
    var DECIBEL = ["db"];
    var SEMITONES = ["st"];
    function charCodeAt(str, index) {
      return index < str.length ? str.charCodeAt(index) : 0;
    }
    function eqStr(actual, expected) {
      return utils.cmpStr(actual, 0, actual.length, expected);
    }
    function eqStrAny(actual, expected) {
      for (let i = 0; i < expected.length; i++) {
        if (eqStr(actual, expected[i])) {
          return true;
        }
      }
      return false;
    }
    function isPostfixIeHack(str, offset) {
      if (offset !== str.length - 2) {
        return false;
      }
      return charCodeAt(str, offset) === 92 && // U+005C REVERSE SOLIDUS (\)
      charCodeDefinitions.isDigit(charCodeAt(str, offset + 1));
    }
    function outOfRange(opts, value, numEnd) {
      if (opts && opts.type === "Range") {
        const num = Number(
          numEnd !== void 0 && numEnd !== value.length ? value.substr(0, numEnd) : value
        );
        if (isNaN(num)) {
          return true;
        }
        if (opts.min !== null && num < opts.min && typeof opts.min !== "string") {
          return true;
        }
        if (opts.max !== null && num > opts.max && typeof opts.max !== "string") {
          return true;
        }
      }
      return false;
    }
    function consumeFunction(token, getNextToken) {
      let balanceCloseType = 0;
      let balanceStash = [];
      let length = 0;
      scan:
        do {
          switch (token.type) {
            case types.RightCurlyBracket:
            case types.RightParenthesis:
            case types.RightSquareBracket:
              if (token.type !== balanceCloseType) {
                break scan;
              }
              balanceCloseType = balanceStash.pop();
              if (balanceStash.length === 0) {
                length++;
                break scan;
              }
              break;
            case types.Function:
            case types.LeftParenthesis:
            case types.LeftSquareBracket:
            case types.LeftCurlyBracket:
              balanceStash.push(balanceCloseType);
              balanceCloseType = balancePair.get(token.type);
              break;
          }
          length++;
        } while (token = getNextToken(length));
      return length;
    }
    function calc(next) {
      return function(token, getNextToken, opts) {
        if (token === null) {
          return 0;
        }
        if (token.type === types.Function && eqStrAny(token.value, calcFunctionNames)) {
          return consumeFunction(token, getNextToken);
        }
        return next(token, getNextToken, opts);
      };
    }
    function tokenType(expectedTokenType) {
      return function(token) {
        if (token === null || token.type !== expectedTokenType) {
          return 0;
        }
        return 1;
      };
    }
    function customIdent(token) {
      if (token === null || token.type !== types.Ident) {
        return 0;
      }
      const name = token.value.toLowerCase();
      if (eqStrAny(name, genericConst.cssWideKeywords)) {
        return 0;
      }
      if (eqStr(name, "default")) {
        return 0;
      }
      return 1;
    }
    function customPropertyName(token) {
      if (token === null || token.type !== types.Ident) {
        return 0;
      }
      if (charCodeAt(token.value, 0) !== 45 || charCodeAt(token.value, 1) !== 45) {
        return 0;
      }
      return 1;
    }
    function hexColor(token) {
      if (token === null || token.type !== types.Hash) {
        return 0;
      }
      const length = token.value.length;
      if (length !== 4 && length !== 5 && length !== 7 && length !== 9) {
        return 0;
      }
      for (let i = 1; i < length; i++) {
        if (!charCodeDefinitions.isHexDigit(charCodeAt(token.value, i))) {
          return 0;
        }
      }
      return 1;
    }
    function idSelector(token) {
      if (token === null || token.type !== types.Hash) {
        return 0;
      }
      if (!charCodeDefinitions.isIdentifierStart(charCodeAt(token.value, 1), charCodeAt(token.value, 2), charCodeAt(token.value, 3))) {
        return 0;
      }
      return 1;
    }
    function declarationValue(token, getNextToken) {
      if (!token) {
        return 0;
      }
      let balanceCloseType = 0;
      let balanceStash = [];
      let length = 0;
      scan:
        do {
          switch (token.type) {
            case types.BadString:
            case types.BadUrl:
              break scan;
            case types.RightCurlyBracket:
            case types.RightParenthesis:
            case types.RightSquareBracket:
              if (token.type !== balanceCloseType) {
                break scan;
              }
              balanceCloseType = balanceStash.pop();
              break;
            case types.Semicolon:
              if (balanceCloseType === 0) {
                break scan;
              }
              break;
            case types.Delim:
              if (balanceCloseType === 0 && token.value === "!") {
                break scan;
              }
              break;
            case types.Function:
            case types.LeftParenthesis:
            case types.LeftSquareBracket:
            case types.LeftCurlyBracket:
              balanceStash.push(balanceCloseType);
              balanceCloseType = balancePair.get(token.type);
              break;
          }
          length++;
        } while (token = getNextToken(length));
      return length;
    }
    function anyValue(token, getNextToken) {
      if (!token) {
        return 0;
      }
      let balanceCloseType = 0;
      let balanceStash = [];
      let length = 0;
      scan:
        do {
          switch (token.type) {
            case types.BadString:
            case types.BadUrl:
              break scan;
            case types.RightCurlyBracket:
            case types.RightParenthesis:
            case types.RightSquareBracket:
              if (token.type !== balanceCloseType) {
                break scan;
              }
              balanceCloseType = balanceStash.pop();
              break;
            case types.Function:
            case types.LeftParenthesis:
            case types.LeftSquareBracket:
            case types.LeftCurlyBracket:
              balanceStash.push(balanceCloseType);
              balanceCloseType = balancePair.get(token.type);
              break;
          }
          length++;
        } while (token = getNextToken(length));
      return length;
    }
    function dimension(type) {
      if (type) {
        type = new Set(type);
      }
      return function(token, getNextToken, opts) {
        if (token === null || token.type !== types.Dimension) {
          return 0;
        }
        const numberEnd = utils.consumeNumber(token.value, 0);
        if (type !== null) {
          const reverseSolidusOffset = token.value.indexOf("\\", numberEnd);
          const unit = reverseSolidusOffset === -1 || !isPostfixIeHack(token.value, reverseSolidusOffset) ? token.value.substr(numberEnd) : token.value.substring(numberEnd, reverseSolidusOffset);
          if (type.has(unit.toLowerCase()) === false) {
            return 0;
          }
        }
        if (outOfRange(opts, token.value, numberEnd)) {
          return 0;
        }
        return 1;
      };
    }
    function percentage(token, getNextToken, opts) {
      if (token === null || token.type !== types.Percentage) {
        return 0;
      }
      if (outOfRange(opts, token.value, token.value.length - 1)) {
        return 0;
      }
      return 1;
    }
    function zero(next) {
      if (typeof next !== "function") {
        next = function() {
          return 0;
        };
      }
      return function(token, getNextToken, opts) {
        if (token !== null && token.type === types.Number) {
          if (Number(token.value) === 0) {
            return 1;
          }
        }
        return next(token, getNextToken, opts);
      };
    }
    function number(token, getNextToken, opts) {
      if (token === null) {
        return 0;
      }
      const numberEnd = utils.consumeNumber(token.value, 0);
      const isNumber = numberEnd === token.value.length;
      if (!isNumber && !isPostfixIeHack(token.value, numberEnd)) {
        return 0;
      }
      if (outOfRange(opts, token.value, numberEnd)) {
        return 0;
      }
      return 1;
    }
    function integer(token, getNextToken, opts) {
      if (token === null || token.type !== types.Number) {
        return 0;
      }
      let i = charCodeAt(token.value, 0) === 43 || // U+002B PLUS SIGN (+)
      charCodeAt(token.value, 0) === 45 ? 1 : 0;
      for (; i < token.value.length; i++) {
        if (!charCodeDefinitions.isDigit(charCodeAt(token.value, i))) {
          return 0;
        }
      }
      if (outOfRange(opts, token.value, i)) {
        return 0;
      }
      return 1;
    }
    var genericSyntaxes = {
      // token types
      "ident-token": tokenType(types.Ident),
      "function-token": tokenType(types.Function),
      "at-keyword-token": tokenType(types.AtKeyword),
      "hash-token": tokenType(types.Hash),
      "string-token": tokenType(types.String),
      "bad-string-token": tokenType(types.BadString),
      "url-token": tokenType(types.Url),
      "bad-url-token": tokenType(types.BadUrl),
      "delim-token": tokenType(types.Delim),
      "number-token": tokenType(types.Number),
      "percentage-token": tokenType(types.Percentage),
      "dimension-token": tokenType(types.Dimension),
      "whitespace-token": tokenType(types.WhiteSpace),
      "CDO-token": tokenType(types.CDO),
      "CDC-token": tokenType(types.CDC),
      "colon-token": tokenType(types.Colon),
      "semicolon-token": tokenType(types.Semicolon),
      "comma-token": tokenType(types.Comma),
      "[-token": tokenType(types.LeftSquareBracket),
      "]-token": tokenType(types.RightSquareBracket),
      "(-token": tokenType(types.LeftParenthesis),
      ")-token": tokenType(types.RightParenthesis),
      "{-token": tokenType(types.LeftCurlyBracket),
      "}-token": tokenType(types.RightCurlyBracket),
      // token type aliases
      "string": tokenType(types.String),
      "ident": tokenType(types.Ident),
      // complex types
      "custom-ident": customIdent,
      "custom-property-name": customPropertyName,
      "hex-color": hexColor,
      "id-selector": idSelector,
      // element( <id-selector> )
      "an-plus-b": genericAnPlusB,
      "urange": genericUrange,
      "declaration-value": declarationValue,
      "any-value": anyValue,
      // dimensions
      "dimension": calc(dimension(null)),
      "angle": calc(dimension(ANGLE)),
      "decibel": calc(dimension(DECIBEL)),
      "frequency": calc(dimension(FREQUENCY)),
      "flex": calc(dimension(FLEX)),
      "length": calc(zero(dimension(LENGTH))),
      "resolution": calc(dimension(RESOLUTION)),
      "semitones": calc(dimension(SEMITONES)),
      "time": calc(dimension(TIME)),
      // percentage
      "percentage": calc(percentage),
      // numeric
      "zero": zero(),
      "number": calc(number),
      "integer": calc(integer)
    };
    module2.exports = genericSyntaxes;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/lexer/prepare-tokens.cjs
var require_prepare_tokens2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/lexer/prepare-tokens.cjs"(exports, module2) {
    "use strict";
    var index = require_tokenizer3();
    var astToTokens = {
      decorator(handlers) {
        const tokens = [];
        let curNode = null;
        return {
          ...handlers,
          node(node) {
            const tmp = curNode;
            curNode = node;
            handlers.node.call(this, node);
            curNode = tmp;
          },
          emit(value, type, auto) {
            tokens.push({
              type,
              value,
              node: auto ? null : curNode
            });
          },
          result() {
            return tokens;
          }
        };
      }
    };
    function stringToTokens(str) {
      const tokens = [];
      index.tokenize(
        str,
        (type, start, end) => tokens.push({
          type,
          value: str.slice(start, end),
          node: null
        })
      );
      return tokens;
    }
    function prepareTokens(value, syntax) {
      if (typeof value === "string") {
        return stringToTokens(value);
      }
      return syntax.generate(value, astToTokens);
    }
    module2.exports = prepareTokens;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/definition-syntax/SyntaxError.cjs
var require_SyntaxError4 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/definition-syntax/SyntaxError.cjs"(exports) {
    "use strict";
    var createCustomError = require_create_custom_error2();
    function SyntaxError2(message, input, offset) {
      return Object.assign(createCustomError.createCustomError("SyntaxError", message), {
        input,
        offset,
        rawMessage: message,
        message: message + "\n  " + input + "\n--" + new Array((offset || input.length) + 1).join("-") + "^"
      });
    }
    exports.SyntaxError = SyntaxError2;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/definition-syntax/tokenizer.cjs
var require_tokenizer4 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/definition-syntax/tokenizer.cjs"(exports) {
    "use strict";
    var SyntaxError2 = require_SyntaxError4();
    var TAB = 9;
    var N = 10;
    var F = 12;
    var R = 13;
    var SPACE = 32;
    var Tokenizer = class {
      constructor(str) {
        this.str = str;
        this.pos = 0;
      }
      charCodeAt(pos) {
        return pos < this.str.length ? this.str.charCodeAt(pos) : 0;
      }
      charCode() {
        return this.charCodeAt(this.pos);
      }
      nextCharCode() {
        return this.charCodeAt(this.pos + 1);
      }
      nextNonWsCode(pos) {
        return this.charCodeAt(this.findWsEnd(pos));
      }
      findWsEnd(pos) {
        for (; pos < this.str.length; pos++) {
          const code = this.str.charCodeAt(pos);
          if (code !== R && code !== N && code !== F && code !== SPACE && code !== TAB) {
            break;
          }
        }
        return pos;
      }
      substringToPos(end) {
        return this.str.substring(this.pos, this.pos = end);
      }
      eat(code) {
        if (this.charCode() !== code) {
          this.error("Expect `" + String.fromCharCode(code) + "`");
        }
        this.pos++;
      }
      peek() {
        return this.pos < this.str.length ? this.str.charAt(this.pos++) : "";
      }
      error(message) {
        throw new SyntaxError2.SyntaxError(message, this.str, this.pos);
      }
    };
    exports.Tokenizer = Tokenizer;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/definition-syntax/parse.cjs
var require_parse7 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/definition-syntax/parse.cjs"(exports) {
    "use strict";
    var tokenizer = require_tokenizer4();
    var TAB = 9;
    var N = 10;
    var F = 12;
    var R = 13;
    var SPACE = 32;
    var EXCLAMATIONMARK = 33;
    var NUMBERSIGN = 35;
    var AMPERSAND = 38;
    var APOSTROPHE = 39;
    var LEFTPARENTHESIS = 40;
    var RIGHTPARENTHESIS = 41;
    var ASTERISK = 42;
    var PLUSSIGN = 43;
    var COMMA = 44;
    var HYPERMINUS = 45;
    var LESSTHANSIGN = 60;
    var GREATERTHANSIGN = 62;
    var QUESTIONMARK = 63;
    var COMMERCIALAT = 64;
    var LEFTSQUAREBRACKET = 91;
    var RIGHTSQUAREBRACKET = 93;
    var LEFTCURLYBRACKET = 123;
    var VERTICALLINE = 124;
    var RIGHTCURLYBRACKET = 125;
    var INFINITY = 8734;
    var NAME_CHAR = new Uint8Array(128).map(
      (_, idx) => /[a-zA-Z0-9\-]/.test(String.fromCharCode(idx)) ? 1 : 0
    );
    var COMBINATOR_PRECEDENCE = {
      " ": 1,
      "&&": 2,
      "||": 3,
      "|": 4
    };
    function scanSpaces(tokenizer2) {
      return tokenizer2.substringToPos(
        tokenizer2.findWsEnd(tokenizer2.pos)
      );
    }
    function scanWord(tokenizer2) {
      let end = tokenizer2.pos;
      for (; end < tokenizer2.str.length; end++) {
        const code = tokenizer2.str.charCodeAt(end);
        if (code >= 128 || NAME_CHAR[code] === 0) {
          break;
        }
      }
      if (tokenizer2.pos === end) {
        tokenizer2.error("Expect a keyword");
      }
      return tokenizer2.substringToPos(end);
    }
    function scanNumber(tokenizer2) {
      let end = tokenizer2.pos;
      for (; end < tokenizer2.str.length; end++) {
        const code = tokenizer2.str.charCodeAt(end);
        if (code < 48 || code > 57) {
          break;
        }
      }
      if (tokenizer2.pos === end) {
        tokenizer2.error("Expect a number");
      }
      return tokenizer2.substringToPos(end);
    }
    function scanString(tokenizer2) {
      const end = tokenizer2.str.indexOf("'", tokenizer2.pos + 1);
      if (end === -1) {
        tokenizer2.pos = tokenizer2.str.length;
        tokenizer2.error("Expect an apostrophe");
      }
      return tokenizer2.substringToPos(end + 1);
    }
    function readMultiplierRange(tokenizer2) {
      let min = null;
      let max = null;
      tokenizer2.eat(LEFTCURLYBRACKET);
      min = scanNumber(tokenizer2);
      if (tokenizer2.charCode() === COMMA) {
        tokenizer2.pos++;
        if (tokenizer2.charCode() !== RIGHTCURLYBRACKET) {
          max = scanNumber(tokenizer2);
        }
      } else {
        max = min;
      }
      tokenizer2.eat(RIGHTCURLYBRACKET);
      return {
        min: Number(min),
        max: max ? Number(max) : 0
      };
    }
    function readMultiplier(tokenizer2) {
      let range = null;
      let comma = false;
      switch (tokenizer2.charCode()) {
        case ASTERISK:
          tokenizer2.pos++;
          range = {
            min: 0,
            max: 0
          };
          break;
        case PLUSSIGN:
          tokenizer2.pos++;
          range = {
            min: 1,
            max: 0
          };
          break;
        case QUESTIONMARK:
          tokenizer2.pos++;
          range = {
            min: 0,
            max: 1
          };
          break;
        case NUMBERSIGN:
          tokenizer2.pos++;
          comma = true;
          if (tokenizer2.charCode() === LEFTCURLYBRACKET) {
            range = readMultiplierRange(tokenizer2);
          } else if (tokenizer2.charCode() === QUESTIONMARK) {
            tokenizer2.pos++;
            range = {
              min: 0,
              max: 0
            };
          } else {
            range = {
              min: 1,
              max: 0
            };
          }
          break;
        case LEFTCURLYBRACKET:
          range = readMultiplierRange(tokenizer2);
          break;
        default:
          return null;
      }
      return {
        type: "Multiplier",
        comma,
        min: range.min,
        max: range.max,
        term: null
      };
    }
    function maybeMultiplied(tokenizer2, node) {
      const multiplier = readMultiplier(tokenizer2);
      if (multiplier !== null) {
        multiplier.term = node;
        if (tokenizer2.charCode() === NUMBERSIGN && tokenizer2.charCodeAt(tokenizer2.pos - 1) === PLUSSIGN) {
          return maybeMultiplied(tokenizer2, multiplier);
        }
        return multiplier;
      }
      return node;
    }
    function maybeToken(tokenizer2) {
      const ch = tokenizer2.peek();
      if (ch === "") {
        return null;
      }
      return {
        type: "Token",
        value: ch
      };
    }
    function readProperty(tokenizer2) {
      let name;
      tokenizer2.eat(LESSTHANSIGN);
      tokenizer2.eat(APOSTROPHE);
      name = scanWord(tokenizer2);
      tokenizer2.eat(APOSTROPHE);
      tokenizer2.eat(GREATERTHANSIGN);
      return maybeMultiplied(tokenizer2, {
        type: "Property",
        name
      });
    }
    function readTypeRange(tokenizer2) {
      let min = null;
      let max = null;
      let sign = 1;
      tokenizer2.eat(LEFTSQUAREBRACKET);
      if (tokenizer2.charCode() === HYPERMINUS) {
        tokenizer2.peek();
        sign = -1;
      }
      if (sign == -1 && tokenizer2.charCode() === INFINITY) {
        tokenizer2.peek();
      } else {
        min = sign * Number(scanNumber(tokenizer2));
        if (NAME_CHAR[tokenizer2.charCode()] !== 0) {
          min += scanWord(tokenizer2);
        }
      }
      scanSpaces(tokenizer2);
      tokenizer2.eat(COMMA);
      scanSpaces(tokenizer2);
      if (tokenizer2.charCode() === INFINITY) {
        tokenizer2.peek();
      } else {
        sign = 1;
        if (tokenizer2.charCode() === HYPERMINUS) {
          tokenizer2.peek();
          sign = -1;
        }
        max = sign * Number(scanNumber(tokenizer2));
        if (NAME_CHAR[tokenizer2.charCode()] !== 0) {
          max += scanWord(tokenizer2);
        }
      }
      tokenizer2.eat(RIGHTSQUAREBRACKET);
      return {
        type: "Range",
        min,
        max
      };
    }
    function readType(tokenizer2) {
      let name;
      let opts = null;
      tokenizer2.eat(LESSTHANSIGN);
      name = scanWord(tokenizer2);
      if (tokenizer2.charCode() === LEFTPARENTHESIS && tokenizer2.nextCharCode() === RIGHTPARENTHESIS) {
        tokenizer2.pos += 2;
        name += "()";
      }
      if (tokenizer2.charCodeAt(tokenizer2.findWsEnd(tokenizer2.pos)) === LEFTSQUAREBRACKET) {
        scanSpaces(tokenizer2);
        opts = readTypeRange(tokenizer2);
      }
      tokenizer2.eat(GREATERTHANSIGN);
      return maybeMultiplied(tokenizer2, {
        type: "Type",
        name,
        opts
      });
    }
    function readKeywordOrFunction(tokenizer2) {
      const name = scanWord(tokenizer2);
      if (tokenizer2.charCode() === LEFTPARENTHESIS) {
        tokenizer2.pos++;
        return {
          type: "Function",
          name
        };
      }
      return maybeMultiplied(tokenizer2, {
        type: "Keyword",
        name
      });
    }
    function regroupTerms(terms, combinators) {
      function createGroup(terms2, combinator2) {
        return {
          type: "Group",
          terms: terms2,
          combinator: combinator2,
          disallowEmpty: false,
          explicit: false
        };
      }
      let combinator;
      combinators = Object.keys(combinators).sort((a, b) => COMBINATOR_PRECEDENCE[a] - COMBINATOR_PRECEDENCE[b]);
      while (combinators.length > 0) {
        combinator = combinators.shift();
        let i = 0;
        let subgroupStart = 0;
        for (; i < terms.length; i++) {
          const term = terms[i];
          if (term.type === "Combinator") {
            if (term.value === combinator) {
              if (subgroupStart === -1) {
                subgroupStart = i - 1;
              }
              terms.splice(i, 1);
              i--;
            } else {
              if (subgroupStart !== -1 && i - subgroupStart > 1) {
                terms.splice(
                  subgroupStart,
                  i - subgroupStart,
                  createGroup(terms.slice(subgroupStart, i), combinator)
                );
                i = subgroupStart + 1;
              }
              subgroupStart = -1;
            }
          }
        }
        if (subgroupStart !== -1 && combinators.length) {
          terms.splice(
            subgroupStart,
            i - subgroupStart,
            createGroup(terms.slice(subgroupStart, i), combinator)
          );
        }
      }
      return combinator;
    }
    function readImplicitGroup(tokenizer2) {
      const terms = [];
      const combinators = {};
      let token;
      let prevToken = null;
      let prevTokenPos = tokenizer2.pos;
      while (token = peek(tokenizer2)) {
        if (token.type !== "Spaces") {
          if (token.type === "Combinator") {
            if (prevToken === null || prevToken.type === "Combinator") {
              tokenizer2.pos = prevTokenPos;
              tokenizer2.error("Unexpected combinator");
            }
            combinators[token.value] = true;
          } else if (prevToken !== null && prevToken.type !== "Combinator") {
            combinators[" "] = true;
            terms.push({
              type: "Combinator",
              value: " "
            });
          }
          terms.push(token);
          prevToken = token;
          prevTokenPos = tokenizer2.pos;
        }
      }
      if (prevToken !== null && prevToken.type === "Combinator") {
        tokenizer2.pos -= prevTokenPos;
        tokenizer2.error("Unexpected combinator");
      }
      return {
        type: "Group",
        terms,
        combinator: regroupTerms(terms, combinators) || " ",
        disallowEmpty: false,
        explicit: false
      };
    }
    function readGroup(tokenizer2) {
      let result;
      tokenizer2.eat(LEFTSQUAREBRACKET);
      result = readImplicitGroup(tokenizer2);
      tokenizer2.eat(RIGHTSQUAREBRACKET);
      result.explicit = true;
      if (tokenizer2.charCode() === EXCLAMATIONMARK) {
        tokenizer2.pos++;
        result.disallowEmpty = true;
      }
      return result;
    }
    function peek(tokenizer2) {
      let code = tokenizer2.charCode();
      if (code < 128 && NAME_CHAR[code] === 1) {
        return readKeywordOrFunction(tokenizer2);
      }
      switch (code) {
        case RIGHTSQUAREBRACKET:
          break;
        case LEFTSQUAREBRACKET:
          return maybeMultiplied(tokenizer2, readGroup(tokenizer2));
        case LESSTHANSIGN:
          return tokenizer2.nextCharCode() === APOSTROPHE ? readProperty(tokenizer2) : readType(tokenizer2);
        case VERTICALLINE:
          return {
            type: "Combinator",
            value: tokenizer2.substringToPos(
              tokenizer2.pos + (tokenizer2.nextCharCode() === VERTICALLINE ? 2 : 1)
            )
          };
        case AMPERSAND:
          tokenizer2.pos++;
          tokenizer2.eat(AMPERSAND);
          return {
            type: "Combinator",
            value: "&&"
          };
        case COMMA:
          tokenizer2.pos++;
          return {
            type: "Comma"
          };
        case APOSTROPHE:
          return maybeMultiplied(tokenizer2, {
            type: "String",
            value: scanString(tokenizer2)
          });
        case SPACE:
        case TAB:
        case N:
        case R:
        case F:
          return {
            type: "Spaces",
            value: scanSpaces(tokenizer2)
          };
        case COMMERCIALAT:
          code = tokenizer2.nextCharCode();
          if (code < 128 && NAME_CHAR[code] === 1) {
            tokenizer2.pos++;
            return {
              type: "AtKeyword",
              name: scanWord(tokenizer2)
            };
          }
          return maybeToken(tokenizer2);
        case ASTERISK:
        case PLUSSIGN:
        case QUESTIONMARK:
        case NUMBERSIGN:
        case EXCLAMATIONMARK:
          break;
        case LEFTCURLYBRACKET:
          code = tokenizer2.nextCharCode();
          if (code < 48 || code > 57) {
            return maybeToken(tokenizer2);
          }
          break;
        default:
          return maybeToken(tokenizer2);
      }
    }
    function parse(source) {
      const tokenizer$1 = new tokenizer.Tokenizer(source);
      const result = readImplicitGroup(tokenizer$1);
      if (tokenizer$1.pos !== source.length) {
        tokenizer$1.error("Unexpected input");
      }
      if (result.terms.length === 1 && result.terms[0].type === "Group") {
        return result.terms[0];
      }
      return result;
    }
    exports.parse = parse;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/lexer/match-graph.cjs
var require_match_graph2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/lexer/match-graph.cjs"(exports) {
    "use strict";
    var parse = require_parse7();
    var MATCH = { type: "Match" };
    var MISMATCH = { type: "Mismatch" };
    var DISALLOW_EMPTY = { type: "DisallowEmpty" };
    var LEFTPARENTHESIS = 40;
    var RIGHTPARENTHESIS = 41;
    function createCondition(match, thenBranch, elseBranch) {
      if (thenBranch === MATCH && elseBranch === MISMATCH) {
        return match;
      }
      if (match === MATCH && thenBranch === MATCH && elseBranch === MATCH) {
        return match;
      }
      if (match.type === "If" && match.else === MISMATCH && thenBranch === MATCH) {
        thenBranch = match.then;
        match = match.match;
      }
      return {
        type: "If",
        match,
        then: thenBranch,
        else: elseBranch
      };
    }
    function isFunctionType(name) {
      return name.length > 2 && name.charCodeAt(name.length - 2) === LEFTPARENTHESIS && name.charCodeAt(name.length - 1) === RIGHTPARENTHESIS;
    }
    function isEnumCapatible(term) {
      return term.type === "Keyword" || term.type === "AtKeyword" || term.type === "Function" || term.type === "Type" && isFunctionType(term.name);
    }
    function buildGroupMatchGraph(combinator, terms, atLeastOneTermMatched) {
      switch (combinator) {
        case " ": {
          let result = MATCH;
          for (let i = terms.length - 1; i >= 0; i--) {
            const term = terms[i];
            result = createCondition(
              term,
              result,
              MISMATCH
            );
          }
          return result;
        }
        case "|": {
          let result = MISMATCH;
          let map = null;
          for (let i = terms.length - 1; i >= 0; i--) {
            let term = terms[i];
            if (isEnumCapatible(term)) {
              if (map === null && i > 0 && isEnumCapatible(terms[i - 1])) {
                map = /* @__PURE__ */ Object.create(null);
                result = createCondition(
                  {
                    type: "Enum",
                    map
                  },
                  MATCH,
                  result
                );
              }
              if (map !== null) {
                const key = (isFunctionType(term.name) ? term.name.slice(0, -1) : term.name).toLowerCase();
                if (key in map === false) {
                  map[key] = term;
                  continue;
                }
              }
            }
            map = null;
            result = createCondition(
              term,
              MATCH,
              result
            );
          }
          return result;
        }
        case "&&": {
          if (terms.length > 5) {
            return {
              type: "MatchOnce",
              terms,
              all: true
            };
          }
          let result = MISMATCH;
          for (let i = terms.length - 1; i >= 0; i--) {
            const term = terms[i];
            let thenClause;
            if (terms.length > 1) {
              thenClause = buildGroupMatchGraph(
                combinator,
                terms.filter(function(newGroupTerm) {
                  return newGroupTerm !== term;
                }),
                false
              );
            } else {
              thenClause = MATCH;
            }
            result = createCondition(
              term,
              thenClause,
              result
            );
          }
          return result;
        }
        case "||": {
          if (terms.length > 5) {
            return {
              type: "MatchOnce",
              terms,
              all: false
            };
          }
          let result = atLeastOneTermMatched ? MATCH : MISMATCH;
          for (let i = terms.length - 1; i >= 0; i--) {
            const term = terms[i];
            let thenClause;
            if (terms.length > 1) {
              thenClause = buildGroupMatchGraph(
                combinator,
                terms.filter(function(newGroupTerm) {
                  return newGroupTerm !== term;
                }),
                true
              );
            } else {
              thenClause = MATCH;
            }
            result = createCondition(
              term,
              thenClause,
              result
            );
          }
          return result;
        }
      }
    }
    function buildMultiplierMatchGraph(node) {
      let result = MATCH;
      let matchTerm = buildMatchGraphInternal(node.term);
      if (node.max === 0) {
        matchTerm = createCondition(
          matchTerm,
          DISALLOW_EMPTY,
          MISMATCH
        );
        result = createCondition(
          matchTerm,
          null,
          // will be a loop
          MISMATCH
        );
        result.then = createCondition(
          MATCH,
          MATCH,
          result
          // make a loop
        );
        if (node.comma) {
          result.then.else = createCondition(
            { type: "Comma", syntax: node },
            result,
            MISMATCH
          );
        }
      } else {
        for (let i = node.min || 1; i <= node.max; i++) {
          if (node.comma && result !== MATCH) {
            result = createCondition(
              { type: "Comma", syntax: node },
              result,
              MISMATCH
            );
          }
          result = createCondition(
            matchTerm,
            createCondition(
              MATCH,
              MATCH,
              result
            ),
            MISMATCH
          );
        }
      }
      if (node.min === 0) {
        result = createCondition(
          MATCH,
          MATCH,
          result
        );
      } else {
        for (let i = 0; i < node.min - 1; i++) {
          if (node.comma && result !== MATCH) {
            result = createCondition(
              { type: "Comma", syntax: node },
              result,
              MISMATCH
            );
          }
          result = createCondition(
            matchTerm,
            result,
            MISMATCH
          );
        }
      }
      return result;
    }
    function buildMatchGraphInternal(node) {
      if (typeof node === "function") {
        return {
          type: "Generic",
          fn: node
        };
      }
      switch (node.type) {
        case "Group": {
          let result = buildGroupMatchGraph(
            node.combinator,
            node.terms.map(buildMatchGraphInternal),
            false
          );
          if (node.disallowEmpty) {
            result = createCondition(
              result,
              DISALLOW_EMPTY,
              MISMATCH
            );
          }
          return result;
        }
        case "Multiplier":
          return buildMultiplierMatchGraph(node);
        case "Type":
        case "Property":
          return {
            type: node.type,
            name: node.name,
            syntax: node
          };
        case "Keyword":
          return {
            type: node.type,
            name: node.name.toLowerCase(),
            syntax: node
          };
        case "AtKeyword":
          return {
            type: node.type,
            name: "@" + node.name.toLowerCase(),
            syntax: node
          };
        case "Function":
          return {
            type: node.type,
            name: node.name.toLowerCase() + "(",
            syntax: node
          };
        case "String":
          if (node.value.length === 3) {
            return {
              type: "Token",
              value: node.value.charAt(1),
              syntax: node
            };
          }
          return {
            type: node.type,
            value: node.value.substr(1, node.value.length - 2).replace(/\\'/g, "'"),
            syntax: node
          };
        case "Token":
          return {
            type: node.type,
            value: node.value,
            syntax: node
          };
        case "Comma":
          return {
            type: node.type,
            syntax: node
          };
        default:
          throw new Error("Unknown node type:", node.type);
      }
    }
    function buildMatchGraph(syntaxTree, ref) {
      if (typeof syntaxTree === "string") {
        syntaxTree = parse.parse(syntaxTree);
      }
      return {
        type: "MatchGraph",
        match: buildMatchGraphInternal(syntaxTree),
        syntax: ref || null,
        source: syntaxTree
      };
    }
    exports.DISALLOW_EMPTY = DISALLOW_EMPTY;
    exports.MATCH = MATCH;
    exports.MISMATCH = MISMATCH;
    exports.buildMatchGraph = buildMatchGraph;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/lexer/match.cjs
var require_match2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/lexer/match.cjs"(exports) {
    "use strict";
    var matchGraph = require_match_graph2();
    var types = require_types3();
    var { hasOwnProperty: hasOwnProperty2 } = Object.prototype;
    var STUB = 0;
    var TOKEN = 1;
    var OPEN_SYNTAX = 2;
    var CLOSE_SYNTAX = 3;
    var EXIT_REASON_MATCH = "Match";
    var EXIT_REASON_MISMATCH = "Mismatch";
    var EXIT_REASON_ITERATION_LIMIT = "Maximum iteration number exceeded (please fill an issue on https://github.com/csstree/csstree/issues)";
    var ITERATION_LIMIT = 15e3;
    function reverseList(list) {
      let prev = null;
      let next = null;
      let item = list;
      while (item !== null) {
        next = item.prev;
        item.prev = prev;
        prev = item;
        item = next;
      }
      return prev;
    }
    function areStringsEqualCaseInsensitive(testStr, referenceStr) {
      if (testStr.length !== referenceStr.length) {
        return false;
      }
      for (let i = 0; i < testStr.length; i++) {
        const referenceCode = referenceStr.charCodeAt(i);
        let testCode = testStr.charCodeAt(i);
        if (testCode >= 65 && testCode <= 90) {
          testCode = testCode | 32;
        }
        if (testCode !== referenceCode) {
          return false;
        }
      }
      return true;
    }
    function isContextEdgeDelim(token) {
      if (token.type !== types.Delim) {
        return false;
      }
      return token.value !== "?";
    }
    function isCommaContextStart(token) {
      if (token === null) {
        return true;
      }
      return token.type === types.Comma || token.type === types.Function || token.type === types.LeftParenthesis || token.type === types.LeftSquareBracket || token.type === types.LeftCurlyBracket || isContextEdgeDelim(token);
    }
    function isCommaContextEnd(token) {
      if (token === null) {
        return true;
      }
      return token.type === types.RightParenthesis || token.type === types.RightSquareBracket || token.type === types.RightCurlyBracket || token.type === types.Delim && token.value === "/";
    }
    function internalMatch(tokens, state, syntaxes) {
      function moveToNextToken() {
        do {
          tokenIndex++;
          token = tokenIndex < tokens.length ? tokens[tokenIndex] : null;
        } while (token !== null && (token.type === types.WhiteSpace || token.type === types.Comment));
      }
      function getNextToken(offset) {
        const nextIndex = tokenIndex + offset;
        return nextIndex < tokens.length ? tokens[nextIndex] : null;
      }
      function stateSnapshotFromSyntax(nextState, prev) {
        return {
          nextState,
          matchStack,
          syntaxStack,
          thenStack,
          tokenIndex,
          prev
        };
      }
      function pushThenStack(nextState) {
        thenStack = {
          nextState,
          matchStack,
          syntaxStack,
          prev: thenStack
        };
      }
      function pushElseStack(nextState) {
        elseStack = stateSnapshotFromSyntax(nextState, elseStack);
      }
      function addTokenToMatch() {
        matchStack = {
          type: TOKEN,
          syntax: state.syntax,
          token,
          prev: matchStack
        };
        moveToNextToken();
        syntaxStash = null;
        if (tokenIndex > longestMatch) {
          longestMatch = tokenIndex;
        }
      }
      function openSyntax() {
        syntaxStack = {
          syntax: state.syntax,
          opts: state.syntax.opts || syntaxStack !== null && syntaxStack.opts || null,
          prev: syntaxStack
        };
        matchStack = {
          type: OPEN_SYNTAX,
          syntax: state.syntax,
          token: matchStack.token,
          prev: matchStack
        };
      }
      function closeSyntax() {
        if (matchStack.type === OPEN_SYNTAX) {
          matchStack = matchStack.prev;
        } else {
          matchStack = {
            type: CLOSE_SYNTAX,
            syntax: syntaxStack.syntax,
            token: matchStack.token,
            prev: matchStack
          };
        }
        syntaxStack = syntaxStack.prev;
      }
      let syntaxStack = null;
      let thenStack = null;
      let elseStack = null;
      let syntaxStash = null;
      let iterationCount = 0;
      let exitReason = null;
      let token = null;
      let tokenIndex = -1;
      let longestMatch = 0;
      let matchStack = {
        type: STUB,
        syntax: null,
        token: null,
        prev: null
      };
      moveToNextToken();
      while (exitReason === null && ++iterationCount < ITERATION_LIMIT) {
        switch (state.type) {
          case "Match":
            if (thenStack === null) {
              if (token !== null) {
                if (tokenIndex !== tokens.length - 1 || token.value !== "\\0" && token.value !== "\\9") {
                  state = matchGraph.MISMATCH;
                  break;
                }
              }
              exitReason = EXIT_REASON_MATCH;
              break;
            }
            state = thenStack.nextState;
            if (state === matchGraph.DISALLOW_EMPTY) {
              if (thenStack.matchStack === matchStack) {
                state = matchGraph.MISMATCH;
                break;
              } else {
                state = matchGraph.MATCH;
              }
            }
            while (thenStack.syntaxStack !== syntaxStack) {
              closeSyntax();
            }
            thenStack = thenStack.prev;
            break;
          case "Mismatch":
            if (syntaxStash !== null && syntaxStash !== false) {
              if (elseStack === null || tokenIndex > elseStack.tokenIndex) {
                elseStack = syntaxStash;
                syntaxStash = false;
              }
            } else if (elseStack === null) {
              exitReason = EXIT_REASON_MISMATCH;
              break;
            }
            state = elseStack.nextState;
            thenStack = elseStack.thenStack;
            syntaxStack = elseStack.syntaxStack;
            matchStack = elseStack.matchStack;
            tokenIndex = elseStack.tokenIndex;
            token = tokenIndex < tokens.length ? tokens[tokenIndex] : null;
            elseStack = elseStack.prev;
            break;
          case "MatchGraph":
            state = state.match;
            break;
          case "If":
            if (state.else !== matchGraph.MISMATCH) {
              pushElseStack(state.else);
            }
            if (state.then !== matchGraph.MATCH) {
              pushThenStack(state.then);
            }
            state = state.match;
            break;
          case "MatchOnce":
            state = {
              type: "MatchOnceBuffer",
              syntax: state,
              index: 0,
              mask: 0
            };
            break;
          case "MatchOnceBuffer": {
            const terms = state.syntax.terms;
            if (state.index === terms.length) {
              if (state.mask === 0 || state.syntax.all) {
                state = matchGraph.MISMATCH;
                break;
              }
              state = matchGraph.MATCH;
              break;
            }
            if (state.mask === (1 << terms.length) - 1) {
              state = matchGraph.MATCH;
              break;
            }
            for (; state.index < terms.length; state.index++) {
              const matchFlag = 1 << state.index;
              if ((state.mask & matchFlag) === 0) {
                pushElseStack(state);
                pushThenStack({
                  type: "AddMatchOnce",
                  syntax: state.syntax,
                  mask: state.mask | matchFlag
                });
                state = terms[state.index++];
                break;
              }
            }
            break;
          }
          case "AddMatchOnce":
            state = {
              type: "MatchOnceBuffer",
              syntax: state.syntax,
              index: 0,
              mask: state.mask
            };
            break;
          case "Enum":
            if (token !== null) {
              let name = token.value.toLowerCase();
              if (name.indexOf("\\") !== -1) {
                name = name.replace(/\\[09].*$/, "");
              }
              if (hasOwnProperty2.call(state.map, name)) {
                state = state.map[name];
                break;
              }
            }
            state = matchGraph.MISMATCH;
            break;
          case "Generic": {
            const opts = syntaxStack !== null ? syntaxStack.opts : null;
            const lastTokenIndex2 = tokenIndex + Math.floor(state.fn(token, getNextToken, opts));
            if (!isNaN(lastTokenIndex2) && lastTokenIndex2 > tokenIndex) {
              while (tokenIndex < lastTokenIndex2) {
                addTokenToMatch();
              }
              state = matchGraph.MATCH;
            } else {
              state = matchGraph.MISMATCH;
            }
            break;
          }
          case "Type":
          case "Property": {
            const syntaxDict = state.type === "Type" ? "types" : "properties";
            const dictSyntax = hasOwnProperty2.call(syntaxes, syntaxDict) ? syntaxes[syntaxDict][state.name] : null;
            if (!dictSyntax || !dictSyntax.match) {
              throw new Error(
                "Bad syntax reference: " + (state.type === "Type" ? "<" + state.name + ">" : "<'" + state.name + "'>")
              );
            }
            if (syntaxStash !== false && token !== null && state.type === "Type") {
              const lowPriorityMatching = (
                // https://drafts.csswg.org/css-values-4/#custom-idents
                // When parsing positionally-ambiguous keywords in a property value, a <custom-ident> production
                // can only claim the keyword if no other unfulfilled production can claim it.
                state.name === "custom-ident" && token.type === types.Ident || // https://drafts.csswg.org/css-values-4/#lengths
                // ... if a `0` could be parsed as either a <number> or a <length> in a property (such as line-height),
                // it must parse as a <number>
                state.name === "length" && token.value === "0"
              );
              if (lowPriorityMatching) {
                if (syntaxStash === null) {
                  syntaxStash = stateSnapshotFromSyntax(state, elseStack);
                }
                state = matchGraph.MISMATCH;
                break;
              }
            }
            openSyntax();
            state = dictSyntax.match;
            break;
          }
          case "Keyword": {
            const name = state.name;
            if (token !== null) {
              let keywordName = token.value;
              if (keywordName.indexOf("\\") !== -1) {
                keywordName = keywordName.replace(/\\[09].*$/, "");
              }
              if (areStringsEqualCaseInsensitive(keywordName, name)) {
                addTokenToMatch();
                state = matchGraph.MATCH;
                break;
              }
            }
            state = matchGraph.MISMATCH;
            break;
          }
          case "AtKeyword":
          case "Function":
            if (token !== null && areStringsEqualCaseInsensitive(token.value, state.name)) {
              addTokenToMatch();
              state = matchGraph.MATCH;
              break;
            }
            state = matchGraph.MISMATCH;
            break;
          case "Token":
            if (token !== null && token.value === state.value) {
              addTokenToMatch();
              state = matchGraph.MATCH;
              break;
            }
            state = matchGraph.MISMATCH;
            break;
          case "Comma":
            if (token !== null && token.type === types.Comma) {
              if (isCommaContextStart(matchStack.token)) {
                state = matchGraph.MISMATCH;
              } else {
                addTokenToMatch();
                state = isCommaContextEnd(token) ? matchGraph.MISMATCH : matchGraph.MATCH;
              }
            } else {
              state = isCommaContextStart(matchStack.token) || isCommaContextEnd(token) ? matchGraph.MATCH : matchGraph.MISMATCH;
            }
            break;
          case "String":
            let string = "";
            let lastTokenIndex = tokenIndex;
            for (; lastTokenIndex < tokens.length && string.length < state.value.length; lastTokenIndex++) {
              string += tokens[lastTokenIndex].value;
            }
            if (areStringsEqualCaseInsensitive(string, state.value)) {
              while (tokenIndex < lastTokenIndex) {
                addTokenToMatch();
              }
              state = matchGraph.MATCH;
            } else {
              state = matchGraph.MISMATCH;
            }
            break;
          default:
            throw new Error("Unknown node type: " + state.type);
        }
      }
      switch (exitReason) {
        case null:
          console.warn("[csstree-match] BREAK after " + ITERATION_LIMIT + " iterations");
          exitReason = EXIT_REASON_ITERATION_LIMIT;
          matchStack = null;
          break;
        case EXIT_REASON_MATCH:
          while (syntaxStack !== null) {
            closeSyntax();
          }
          break;
        default:
          matchStack = null;
      }
      return {
        tokens,
        reason: exitReason,
        iterations: iterationCount,
        match: matchStack,
        longestMatch
      };
    }
    function matchAsList(tokens, matchGraph2, syntaxes) {
      const matchResult = internalMatch(tokens, matchGraph2, syntaxes || {});
      if (matchResult.match !== null) {
        let item = reverseList(matchResult.match).prev;
        matchResult.match = [];
        while (item !== null) {
          switch (item.type) {
            case OPEN_SYNTAX:
            case CLOSE_SYNTAX:
              matchResult.match.push({
                type: item.type,
                syntax: item.syntax
              });
              break;
            default:
              matchResult.match.push({
                token: item.token.value,
                node: item.token.node
              });
              break;
          }
          item = item.prev;
        }
      }
      return matchResult;
    }
    function matchAsTree(tokens, matchGraph2, syntaxes) {
      const matchResult = internalMatch(tokens, matchGraph2, syntaxes || {});
      if (matchResult.match === null) {
        return matchResult;
      }
      let item = matchResult.match;
      let host = matchResult.match = {
        syntax: matchGraph2.syntax || null,
        match: []
      };
      const hostStack = [host];
      item = reverseList(item).prev;
      while (item !== null) {
        switch (item.type) {
          case OPEN_SYNTAX:
            host.match.push(host = {
              syntax: item.syntax,
              match: []
            });
            hostStack.push(host);
            break;
          case CLOSE_SYNTAX:
            hostStack.pop();
            host = hostStack[hostStack.length - 1];
            break;
          default:
            host.match.push({
              syntax: item.syntax || null,
              token: item.token.value,
              node: item.token.node
            });
        }
        item = item.prev;
      }
      return matchResult;
    }
    exports.matchAsList = matchAsList;
    exports.matchAsTree = matchAsTree;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/lexer/trace.cjs
var require_trace2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/lexer/trace.cjs"(exports) {
    "use strict";
    function getTrace(node) {
      function shouldPutToTrace(syntax) {
        if (syntax === null) {
          return false;
        }
        return syntax.type === "Type" || syntax.type === "Property" || syntax.type === "Keyword";
      }
      function hasMatch(matchNode) {
        if (Array.isArray(matchNode.match)) {
          for (let i = 0; i < matchNode.match.length; i++) {
            if (hasMatch(matchNode.match[i])) {
              if (shouldPutToTrace(matchNode.syntax)) {
                result.unshift(matchNode.syntax);
              }
              return true;
            }
          }
        } else if (matchNode.node === node) {
          result = shouldPutToTrace(matchNode.syntax) ? [matchNode.syntax] : [];
          return true;
        }
        return false;
      }
      let result = null;
      if (this.matched !== null) {
        hasMatch(this.matched);
      }
      return result;
    }
    function isType(node, type) {
      return testNode(this, node, (match) => match.type === "Type" && match.name === type);
    }
    function isProperty(node, property) {
      return testNode(this, node, (match) => match.type === "Property" && match.name === property);
    }
    function isKeyword(node) {
      return testNode(this, node, (match) => match.type === "Keyword");
    }
    function testNode(match, node, fn) {
      const trace = getTrace.call(match, node);
      if (trace === null) {
        return false;
      }
      return trace.some(fn);
    }
    exports.getTrace = getTrace;
    exports.isKeyword = isKeyword;
    exports.isProperty = isProperty;
    exports.isType = isType;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/lexer/search.cjs
var require_search2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/lexer/search.cjs"(exports) {
    "use strict";
    var List = require_List2();
    function getFirstMatchNode(matchNode) {
      if ("node" in matchNode) {
        return matchNode.node;
      }
      return getFirstMatchNode(matchNode.match[0]);
    }
    function getLastMatchNode(matchNode) {
      if ("node" in matchNode) {
        return matchNode.node;
      }
      return getLastMatchNode(matchNode.match[matchNode.match.length - 1]);
    }
    function matchFragments(lexer, ast, match, type, name) {
      function findFragments(matchNode) {
        if (matchNode.syntax !== null && matchNode.syntax.type === type && matchNode.syntax.name === name) {
          const start = getFirstMatchNode(matchNode);
          const end = getLastMatchNode(matchNode);
          lexer.syntax.walk(ast, function(node, item, list) {
            if (node === start) {
              const nodes = new List.List();
              do {
                nodes.appendData(item.data);
                if (item.data === end) {
                  break;
                }
                item = item.next;
              } while (item !== null);
              fragments.push({
                parent: list,
                nodes
              });
            }
          });
        }
        if (Array.isArray(matchNode.match)) {
          matchNode.match.forEach(findFragments);
        }
      }
      const fragments = [];
      if (match.matched !== null) {
        findFragments(match.matched);
      }
      return fragments;
    }
    exports.matchFragments = matchFragments;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/lexer/structure.cjs
var require_structure2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/lexer/structure.cjs"(exports) {
    "use strict";
    var List = require_List2();
    var { hasOwnProperty: hasOwnProperty2 } = Object.prototype;
    function isValidNumber(value) {
      return typeof value === "number" && isFinite(value) && Math.floor(value) === value && value >= 0;
    }
    function isValidLocation(loc) {
      return Boolean(loc) && isValidNumber(loc.offset) && isValidNumber(loc.line) && isValidNumber(loc.column);
    }
    function createNodeStructureChecker(type, fields) {
      return function checkNode(node, warn) {
        if (!node || node.constructor !== Object) {
          return warn(node, "Type of node should be an Object");
        }
        for (let key in node) {
          let valid = true;
          if (hasOwnProperty2.call(node, key) === false) {
            continue;
          }
          if (key === "type") {
            if (node.type !== type) {
              warn(node, "Wrong node type `" + node.type + "`, expected `" + type + "`");
            }
          } else if (key === "loc") {
            if (node.loc === null) {
              continue;
            } else if (node.loc && node.loc.constructor === Object) {
              if (typeof node.loc.source !== "string") {
                key += ".source";
              } else if (!isValidLocation(node.loc.start)) {
                key += ".start";
              } else if (!isValidLocation(node.loc.end)) {
                key += ".end";
              } else {
                continue;
              }
            }
            valid = false;
          } else if (fields.hasOwnProperty(key)) {
            valid = false;
            for (let i = 0; !valid && i < fields[key].length; i++) {
              const fieldType = fields[key][i];
              switch (fieldType) {
                case String:
                  valid = typeof node[key] === "string";
                  break;
                case Boolean:
                  valid = typeof node[key] === "boolean";
                  break;
                case null:
                  valid = node[key] === null;
                  break;
                default:
                  if (typeof fieldType === "string") {
                    valid = node[key] && node[key].type === fieldType;
                  } else if (Array.isArray(fieldType)) {
                    valid = node[key] instanceof List.List;
                  }
              }
            }
          } else {
            warn(node, "Unknown field `" + key + "` for " + type + " node type");
          }
          if (!valid) {
            warn(node, "Bad value for `" + type + "." + key + "`");
          }
        }
        for (const key in fields) {
          if (hasOwnProperty2.call(fields, key) && hasOwnProperty2.call(node, key) === false) {
            warn(node, "Field `" + type + "." + key + "` is missed");
          }
        }
      };
    }
    function processStructure(name, nodeType) {
      const structure = nodeType.structure;
      const fields = {
        type: String,
        loc: true
      };
      const docs = {
        type: '"' + name + '"'
      };
      for (const key in structure) {
        if (hasOwnProperty2.call(structure, key) === false) {
          continue;
        }
        const docsTypes = [];
        const fieldTypes = fields[key] = Array.isArray(structure[key]) ? structure[key].slice() : [structure[key]];
        for (let i = 0; i < fieldTypes.length; i++) {
          const fieldType = fieldTypes[i];
          if (fieldType === String || fieldType === Boolean) {
            docsTypes.push(fieldType.name);
          } else if (fieldType === null) {
            docsTypes.push("null");
          } else if (typeof fieldType === "string") {
            docsTypes.push("<" + fieldType + ">");
          } else if (Array.isArray(fieldType)) {
            docsTypes.push("List");
          } else {
            throw new Error("Wrong value `" + fieldType + "` in `" + name + "." + key + "` structure definition");
          }
        }
        docs[key] = docsTypes.join(" | ");
      }
      return {
        docs,
        check: createNodeStructureChecker(name, fields)
      };
    }
    function getStructureFromConfig(config) {
      const structure = {};
      if (config.node) {
        for (const name in config.node) {
          if (hasOwnProperty2.call(config.node, name)) {
            const nodeType = config.node[name];
            if (nodeType.structure) {
              structure[name] = processStructure(name, nodeType);
            } else {
              throw new Error("Missed `structure` field in `" + name + "` node type definition");
            }
          }
        }
      }
      return structure;
    }
    exports.getStructureFromConfig = getStructureFromConfig;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/definition-syntax/walk.cjs
var require_walk3 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/definition-syntax/walk.cjs"(exports) {
    "use strict";
    var noop = function() {
    };
    function ensureFunction(value) {
      return typeof value === "function" ? value : noop;
    }
    function walk(node, options, context) {
      function walk2(node2) {
        enter.call(context, node2);
        switch (node2.type) {
          case "Group":
            node2.terms.forEach(walk2);
            break;
          case "Multiplier":
            walk2(node2.term);
            break;
          case "Type":
          case "Property":
          case "Keyword":
          case "AtKeyword":
          case "Function":
          case "String":
          case "Token":
          case "Comma":
            break;
          default:
            throw new Error("Unknown type: " + node2.type);
        }
        leave.call(context, node2);
      }
      let enter = noop;
      let leave = noop;
      if (typeof options === "function") {
        enter = options;
      } else if (options) {
        enter = ensureFunction(options.enter);
        leave = ensureFunction(options.leave);
      }
      if (enter === noop && leave === noop) {
        throw new Error("Neither `enter` nor `leave` walker handler is set or both aren't a function");
      }
      walk2(node);
    }
    exports.walk = walk;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/lexer/Lexer.cjs
var require_Lexer2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/lexer/Lexer.cjs"(exports) {
    "use strict";
    var error = require_error3();
    var names = require_names5();
    var genericConst = require_generic_const2();
    var generic = require_generic2();
    var prepareTokens = require_prepare_tokens2();
    var matchGraph = require_match_graph2();
    var match = require_match2();
    var trace = require_trace2();
    var search = require_search2();
    var structure = require_structure2();
    var parse = require_parse7();
    var generate = require_generate2();
    var walk = require_walk3();
    var cssWideKeywordsSyntax = matchGraph.buildMatchGraph(genericConst.cssWideKeywords.join(" | "));
    function dumpMapSyntax(map, compact, syntaxAsAst) {
      const result = {};
      for (const name in map) {
        if (map[name].syntax) {
          result[name] = syntaxAsAst ? map[name].syntax : generate.generate(map[name].syntax, { compact });
        }
      }
      return result;
    }
    function dumpAtruleMapSyntax(map, compact, syntaxAsAst) {
      const result = {};
      for (const [name, atrule] of Object.entries(map)) {
        result[name] = {
          prelude: atrule.prelude && (syntaxAsAst ? atrule.prelude.syntax : generate.generate(atrule.prelude.syntax, { compact })),
          descriptors: atrule.descriptors && dumpMapSyntax(atrule.descriptors, compact, syntaxAsAst)
        };
      }
      return result;
    }
    function valueHasVar(tokens) {
      for (let i = 0; i < tokens.length; i++) {
        if (tokens[i].value.toLowerCase() === "var(") {
          return true;
        }
      }
      return false;
    }
    function buildMatchResult(matched, error2, iterations) {
      return {
        matched,
        iterations,
        error: error2,
        ...trace
      };
    }
    function matchSyntax(lexer, syntax, value, useCssWideKeywords) {
      const tokens = prepareTokens(value, lexer.syntax);
      let result;
      if (valueHasVar(tokens)) {
        return buildMatchResult(null, new Error("Matching for a tree with var() is not supported"));
      }
      if (useCssWideKeywords) {
        result = match.matchAsTree(tokens, lexer.cssWideKeywordsSyntax, lexer);
      }
      if (!useCssWideKeywords || !result.match) {
        result = match.matchAsTree(tokens, syntax.match, lexer);
        if (!result.match) {
          return buildMatchResult(
            null,
            new error.SyntaxMatchError(result.reason, syntax.syntax, value, result),
            result.iterations
          );
        }
      }
      return buildMatchResult(result.match, null, result.iterations);
    }
    var Lexer = class {
      constructor(config, syntax, structure$1) {
        this.cssWideKeywordsSyntax = cssWideKeywordsSyntax;
        this.syntax = syntax;
        this.generic = false;
        this.atrules = /* @__PURE__ */ Object.create(null);
        this.properties = /* @__PURE__ */ Object.create(null);
        this.types = /* @__PURE__ */ Object.create(null);
        this.structure = structure$1 || structure.getStructureFromConfig(config);
        if (config) {
          if (config.types) {
            for (const name in config.types) {
              this.addType_(name, config.types[name]);
            }
          }
          if (config.generic) {
            this.generic = true;
            for (const name in generic) {
              this.addType_(name, generic[name]);
            }
          }
          if (config.atrules) {
            for (const name in config.atrules) {
              this.addAtrule_(name, config.atrules[name]);
            }
          }
          if (config.properties) {
            for (const name in config.properties) {
              this.addProperty_(name, config.properties[name]);
            }
          }
        }
      }
      checkStructure(ast) {
        function collectWarning(node, message) {
          warns.push({ node, message });
        }
        const structure2 = this.structure;
        const warns = [];
        this.syntax.walk(ast, function(node) {
          if (structure2.hasOwnProperty(node.type)) {
            structure2[node.type].check(node, collectWarning);
          } else {
            collectWarning(node, "Unknown node type `" + node.type + "`");
          }
        });
        return warns.length ? warns : false;
      }
      createDescriptor(syntax, type, name, parent = null) {
        const ref = {
          type,
          name
        };
        const descriptor = {
          type,
          name,
          parent,
          serializable: typeof syntax === "string" || syntax && typeof syntax.type === "string",
          syntax: null,
          match: null
        };
        if (typeof syntax === "function") {
          descriptor.match = matchGraph.buildMatchGraph(syntax, ref);
        } else {
          if (typeof syntax === "string") {
            Object.defineProperty(descriptor, "syntax", {
              get() {
                Object.defineProperty(descriptor, "syntax", {
                  value: parse.parse(syntax)
                });
                return descriptor.syntax;
              }
            });
          } else {
            descriptor.syntax = syntax;
          }
          Object.defineProperty(descriptor, "match", {
            get() {
              Object.defineProperty(descriptor, "match", {
                value: matchGraph.buildMatchGraph(descriptor.syntax, ref)
              });
              return descriptor.match;
            }
          });
        }
        return descriptor;
      }
      addAtrule_(name, syntax) {
        if (!syntax) {
          return;
        }
        this.atrules[name] = {
          type: "Atrule",
          name,
          prelude: syntax.prelude ? this.createDescriptor(syntax.prelude, "AtrulePrelude", name) : null,
          descriptors: syntax.descriptors ? Object.keys(syntax.descriptors).reduce(
            (map, descName) => {
              map[descName] = this.createDescriptor(syntax.descriptors[descName], "AtruleDescriptor", descName, name);
              return map;
            },
            /* @__PURE__ */ Object.create(null)
          ) : null
        };
      }
      addProperty_(name, syntax) {
        if (!syntax) {
          return;
        }
        this.properties[name] = this.createDescriptor(syntax, "Property", name);
      }
      addType_(name, syntax) {
        if (!syntax) {
          return;
        }
        this.types[name] = this.createDescriptor(syntax, "Type", name);
      }
      checkAtruleName(atruleName) {
        if (!this.getAtrule(atruleName)) {
          return new error.SyntaxReferenceError("Unknown at-rule", "@" + atruleName);
        }
      }
      checkAtrulePrelude(atruleName, prelude) {
        const error2 = this.checkAtruleName(atruleName);
        if (error2) {
          return error2;
        }
        const atrule = this.getAtrule(atruleName);
        if (!atrule.prelude && prelude) {
          return new SyntaxError("At-rule `@" + atruleName + "` should not contain a prelude");
        }
        if (atrule.prelude && !prelude) {
          if (!matchSyntax(this, atrule.prelude, "", false).matched) {
            return new SyntaxError("At-rule `@" + atruleName + "` should contain a prelude");
          }
        }
      }
      checkAtruleDescriptorName(atruleName, descriptorName) {
        const error$1 = this.checkAtruleName(atruleName);
        if (error$1) {
          return error$1;
        }
        const atrule = this.getAtrule(atruleName);
        const descriptor = names.keyword(descriptorName);
        if (!atrule.descriptors) {
          return new SyntaxError("At-rule `@" + atruleName + "` has no known descriptors");
        }
        if (!atrule.descriptors[descriptor.name] && !atrule.descriptors[descriptor.basename]) {
          return new error.SyntaxReferenceError("Unknown at-rule descriptor", descriptorName);
        }
      }
      checkPropertyName(propertyName) {
        if (!this.getProperty(propertyName)) {
          return new error.SyntaxReferenceError("Unknown property", propertyName);
        }
      }
      matchAtrulePrelude(atruleName, prelude) {
        const error2 = this.checkAtrulePrelude(atruleName, prelude);
        if (error2) {
          return buildMatchResult(null, error2);
        }
        const atrule = this.getAtrule(atruleName);
        if (!atrule.prelude) {
          return buildMatchResult(null, null);
        }
        return matchSyntax(this, atrule.prelude, prelude || "", false);
      }
      matchAtruleDescriptor(atruleName, descriptorName, value) {
        const error2 = this.checkAtruleDescriptorName(atruleName, descriptorName);
        if (error2) {
          return buildMatchResult(null, error2);
        }
        const atrule = this.getAtrule(atruleName);
        const descriptor = names.keyword(descriptorName);
        return matchSyntax(this, atrule.descriptors[descriptor.name] || atrule.descriptors[descriptor.basename], value, false);
      }
      matchDeclaration(node) {
        if (node.type !== "Declaration") {
          return buildMatchResult(null, new Error("Not a Declaration node"));
        }
        return this.matchProperty(node.property, node.value);
      }
      matchProperty(propertyName, value) {
        if (names.property(propertyName).custom) {
          return buildMatchResult(null, new Error("Lexer matching doesn't applicable for custom properties"));
        }
        const error2 = this.checkPropertyName(propertyName);
        if (error2) {
          return buildMatchResult(null, error2);
        }
        return matchSyntax(this, this.getProperty(propertyName), value, true);
      }
      matchType(typeName, value) {
        const typeSyntax = this.getType(typeName);
        if (!typeSyntax) {
          return buildMatchResult(null, new error.SyntaxReferenceError("Unknown type", typeName));
        }
        return matchSyntax(this, typeSyntax, value, false);
      }
      match(syntax, value) {
        if (typeof syntax !== "string" && (!syntax || !syntax.type)) {
          return buildMatchResult(null, new error.SyntaxReferenceError("Bad syntax"));
        }
        if (typeof syntax === "string" || !syntax.match) {
          syntax = this.createDescriptor(syntax, "Type", "anonymous");
        }
        return matchSyntax(this, syntax, value, false);
      }
      findValueFragments(propertyName, value, type, name) {
        return search.matchFragments(this, value, this.matchProperty(propertyName, value), type, name);
      }
      findDeclarationValueFragments(declaration, type, name) {
        return search.matchFragments(this, declaration.value, this.matchDeclaration(declaration), type, name);
      }
      findAllFragments(ast, type, name) {
        const result = [];
        this.syntax.walk(ast, {
          visit: "Declaration",
          enter: (declaration) => {
            result.push.apply(result, this.findDeclarationValueFragments(declaration, type, name));
          }
        });
        return result;
      }
      getAtrule(atruleName, fallbackBasename = true) {
        const atrule = names.keyword(atruleName);
        const atruleEntry = atrule.vendor && fallbackBasename ? this.atrules[atrule.name] || this.atrules[atrule.basename] : this.atrules[atrule.name];
        return atruleEntry || null;
      }
      getAtrulePrelude(atruleName, fallbackBasename = true) {
        const atrule = this.getAtrule(atruleName, fallbackBasename);
        return atrule && atrule.prelude || null;
      }
      getAtruleDescriptor(atruleName, name) {
        return this.atrules.hasOwnProperty(atruleName) && this.atrules.declarators ? this.atrules[atruleName].declarators[name] || null : null;
      }
      getProperty(propertyName, fallbackBasename = true) {
        const property = names.property(propertyName);
        const propertyEntry = property.vendor && fallbackBasename ? this.properties[property.name] || this.properties[property.basename] : this.properties[property.name];
        return propertyEntry || null;
      }
      getType(name) {
        return hasOwnProperty.call(this.types, name) ? this.types[name] : null;
      }
      validate() {
        function validate(syntax, name, broken, descriptor) {
          if (broken.has(name)) {
            return broken.get(name);
          }
          broken.set(name, false);
          if (descriptor.syntax !== null) {
            walk.walk(descriptor.syntax, function(node) {
              if (node.type !== "Type" && node.type !== "Property") {
                return;
              }
              const map = node.type === "Type" ? syntax.types : syntax.properties;
              const brokenMap = node.type === "Type" ? brokenTypes : brokenProperties;
              if (!hasOwnProperty.call(map, node.name) || validate(syntax, node.name, brokenMap, map[node.name])) {
                broken.set(name, true);
              }
            }, this);
          }
        }
        let brokenTypes = /* @__PURE__ */ new Map();
        let brokenProperties = /* @__PURE__ */ new Map();
        for (const key in this.types) {
          validate(this, key, brokenTypes, this.types[key]);
        }
        for (const key in this.properties) {
          validate(this, key, brokenProperties, this.properties[key]);
        }
        brokenTypes = [...brokenTypes.keys()].filter((name) => brokenTypes.get(name));
        brokenProperties = [...brokenProperties.keys()].filter((name) => brokenProperties.get(name));
        if (brokenTypes.length || brokenProperties.length) {
          return {
            types: brokenTypes,
            properties: brokenProperties
          };
        }
        return null;
      }
      dump(syntaxAsAst, pretty) {
        return {
          generic: this.generic,
          types: dumpMapSyntax(this.types, !pretty, syntaxAsAst),
          properties: dumpMapSyntax(this.properties, !pretty, syntaxAsAst),
          atrules: dumpAtruleMapSyntax(this.atrules, !pretty, syntaxAsAst)
        };
      }
      toString() {
        return JSON.stringify(this.dump());
      }
    };
    exports.Lexer = Lexer;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/syntax/config/mix.cjs
var require_mix2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/syntax/config/mix.cjs"(exports, module2) {
    "use strict";
    var { hasOwnProperty: hasOwnProperty2 } = Object.prototype;
    var shape = {
      generic: true,
      types: appendOrAssign,
      atrules: {
        prelude: appendOrAssignOrNull,
        descriptors: appendOrAssignOrNull
      },
      properties: appendOrAssign,
      parseContext: assign,
      scope: deepAssign,
      atrule: ["parse"],
      pseudo: ["parse"],
      node: ["name", "structure", "parse", "generate", "walkContext"]
    };
    function isObject(value) {
      return value && value.constructor === Object;
    }
    function copy(value) {
      return isObject(value) ? { ...value } : value;
    }
    function assign(dest, src) {
      return Object.assign(dest, src);
    }
    function deepAssign(dest, src) {
      for (const key in src) {
        if (hasOwnProperty2.call(src, key)) {
          if (isObject(dest[key])) {
            deepAssign(dest[key], src[key]);
          } else {
            dest[key] = copy(src[key]);
          }
        }
      }
      return dest;
    }
    function append(a, b) {
      if (typeof b === "string" && /^\s*\|/.test(b)) {
        return typeof a === "string" ? a + b : b.replace(/^\s*\|\s*/, "");
      }
      return b || null;
    }
    function appendOrAssign(a, b) {
      if (typeof b === "string") {
        return append(a, b);
      }
      const result = { ...a };
      for (let key in b) {
        if (hasOwnProperty2.call(b, key)) {
          result[key] = append(hasOwnProperty2.call(a, key) ? a[key] : void 0, b[key]);
        }
      }
      return result;
    }
    function appendOrAssignOrNull(a, b) {
      const result = appendOrAssign(a, b);
      return !isObject(result) || Object.keys(result).length ? result : null;
    }
    function mix(dest, src, shape2) {
      for (const key in shape2) {
        if (hasOwnProperty2.call(shape2, key) === false) {
          continue;
        }
        if (shape2[key] === true) {
          if (hasOwnProperty2.call(src, key)) {
            dest[key] = copy(src[key]);
          }
        } else if (shape2[key]) {
          if (typeof shape2[key] === "function") {
            const fn = shape2[key];
            dest[key] = fn({}, dest[key]);
            dest[key] = fn(dest[key] || {}, src[key]);
          } else if (isObject(shape2[key])) {
            const result = {};
            for (let name in dest[key]) {
              result[name] = mix({}, dest[key][name], shape2[key]);
            }
            for (let name in src[key]) {
              result[name] = mix(result[name] || {}, src[key][name], shape2[key]);
            }
            dest[key] = result;
          } else if (Array.isArray(shape2[key])) {
            const res = {};
            const innerShape = shape2[key].reduce(function(s, k) {
              s[k] = true;
              return s;
            }, {});
            for (const [name, value] of Object.entries(dest[key] || {})) {
              res[name] = {};
              if (value) {
                mix(res[name], value, innerShape);
              }
            }
            for (const name in src[key]) {
              if (hasOwnProperty2.call(src[key], name)) {
                if (!res[name]) {
                  res[name] = {};
                }
                if (src[key] && src[key][name]) {
                  mix(res[name], src[key][name], innerShape);
                }
              }
            }
            dest[key] = res;
          }
        }
      }
      return dest;
    }
    var mix$1 = (dest, src) => mix(dest, src, shape);
    module2.exports = mix$1;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/syntax/create.cjs
var require_create10 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/syntax/create.cjs"(exports, module2) {
    "use strict";
    var index = require_tokenizer3();
    var create = require_create6();
    var create$2 = require_create7();
    var create$3 = require_create8();
    var create$1 = require_create9();
    var Lexer = require_Lexer2();
    var mix = require_mix2();
    function createSyntax(config) {
      const parse = create.createParser(config);
      const walk = create$1.createWalker(config);
      const generate = create$2.createGenerator(config);
      const { fromPlainObject, toPlainObject } = create$3.createConvertor(walk);
      const syntax = {
        lexer: null,
        createLexer: (config2) => new Lexer.Lexer(config2, syntax, syntax.lexer.structure),
        tokenize: index.tokenize,
        parse,
        generate,
        walk,
        find: walk.find,
        findLast: walk.findLast,
        findAll: walk.findAll,
        fromPlainObject,
        toPlainObject,
        fork(extension) {
          const base = mix({}, config);
          return createSyntax(
            typeof extension === "function" ? extension(base, Object.assign) : mix(base, extension)
          );
        }
      };
      syntax.lexer = new Lexer.Lexer({
        generic: true,
        types: config.types,
        atrules: config.atrules,
        properties: config.properties,
        node: config.node
      }, syntax);
      return syntax;
    }
    var createSyntax$1 = (config) => createSyntax(mix({}, config));
    module2.exports = createSyntax$1;
  }
});

// node_modules/csso/node_modules/css-tree/data/patch.json
var require_patch2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/data/patch.json"(exports, module2) {
    module2.exports = {
      atrules: {
        charset: {
          prelude: "<string>"
        },
        "font-face": {
          descriptors: {
            "unicode-range": {
              comment: "replaces <unicode-range>, an old production name",
              syntax: "<urange>#"
            }
          }
        }
      },
      properties: {
        "-moz-background-clip": {
          comment: "deprecated syntax in old Firefox, https://developer.mozilla.org/en/docs/Web/CSS/background-clip",
          syntax: "padding | border"
        },
        "-moz-border-radius-bottomleft": {
          comment: "https://developer.mozilla.org/en-US/docs/Web/CSS/border-bottom-left-radius",
          syntax: "<'border-bottom-left-radius'>"
        },
        "-moz-border-radius-bottomright": {
          comment: "https://developer.mozilla.org/en-US/docs/Web/CSS/border-bottom-right-radius",
          syntax: "<'border-bottom-right-radius'>"
        },
        "-moz-border-radius-topleft": {
          comment: "https://developer.mozilla.org/en-US/docs/Web/CSS/border-top-left-radius",
          syntax: "<'border-top-left-radius'>"
        },
        "-moz-border-radius-topright": {
          comment: "https://developer.mozilla.org/en-US/docs/Web/CSS/border-bottom-right-radius",
          syntax: "<'border-bottom-right-radius'>"
        },
        "-moz-control-character-visibility": {
          comment: "firefox specific keywords, https://bugzilla.mozilla.org/show_bug.cgi?id=947588",
          syntax: "visible | hidden"
        },
        "-moz-osx-font-smoothing": {
          comment: "misssed old syntax https://developer.mozilla.org/en-US/docs/Web/CSS/font-smooth",
          syntax: "auto | grayscale"
        },
        "-moz-user-select": {
          comment: "https://developer.mozilla.org/en-US/docs/Web/CSS/user-select",
          syntax: "none | text | all | -moz-none"
        },
        "-ms-flex-align": {
          comment: "misssed old syntax implemented in IE, https://www.w3.org/TR/2012/WD-css3-flexbox-20120322/#flex-align",
          syntax: "start | end | center | baseline | stretch"
        },
        "-ms-flex-item-align": {
          comment: "misssed old syntax implemented in IE, https://www.w3.org/TR/2012/WD-css3-flexbox-20120322/#flex-align",
          syntax: "auto | start | end | center | baseline | stretch"
        },
        "-ms-flex-line-pack": {
          comment: "misssed old syntax implemented in IE, https://www.w3.org/TR/2012/WD-css3-flexbox-20120322/#flex-line-pack",
          syntax: "start | end | center | justify | distribute | stretch"
        },
        "-ms-flex-negative": {
          comment: "misssed old syntax implemented in IE; TODO: find references for comfirmation",
          syntax: "<'flex-shrink'>"
        },
        "-ms-flex-pack": {
          comment: "misssed old syntax implemented in IE, https://www.w3.org/TR/2012/WD-css3-flexbox-20120322/#flex-pack",
          syntax: "start | end | center | justify | distribute"
        },
        "-ms-flex-order": {
          comment: "misssed old syntax implemented in IE; https://msdn.microsoft.com/en-us/library/jj127303(v=vs.85).aspx",
          syntax: "<integer>"
        },
        "-ms-flex-positive": {
          comment: "misssed old syntax implemented in IE; TODO: find references for comfirmation",
          syntax: "<'flex-grow'>"
        },
        "-ms-flex-preferred-size": {
          comment: "misssed old syntax implemented in IE; TODO: find references for comfirmation",
          syntax: "<'flex-basis'>"
        },
        "-ms-interpolation-mode": {
          comment: "https://msdn.microsoft.com/en-us/library/ff521095(v=vs.85).aspx",
          syntax: "nearest-neighbor | bicubic"
        },
        "-ms-grid-column-align": {
          comment: "add this property first since it uses as fallback for flexbox, https://msdn.microsoft.com/en-us/library/windows/apps/hh466338.aspx",
          syntax: "start | end | center | stretch"
        },
        "-ms-grid-row-align": {
          comment: "add this property first since it uses as fallback for flexbox, https://msdn.microsoft.com/en-us/library/windows/apps/hh466348.aspx",
          syntax: "start | end | center | stretch"
        },
        "-ms-hyphenate-limit-last": {
          comment: "misssed old syntax implemented in IE; https://www.w3.org/TR/css-text-4/#hyphenate-line-limits",
          syntax: "none | always | column | page | spread"
        },
        "-webkit-appearance": {
          comment: "webkit specific keywords",
          references: [
            "http://css-infos.net/property/-webkit-appearance"
          ],
          syntax: "none | button | button-bevel | caps-lock-indicator | caret | checkbox | default-button | inner-spin-button | listbox | listitem | media-controls-background | media-controls-fullscreen-background | media-current-time-display | media-enter-fullscreen-button | media-exit-fullscreen-button | media-fullscreen-button | media-mute-button | media-overlay-play-button | media-play-button | media-seek-back-button | media-seek-forward-button | media-slider | media-sliderthumb | media-time-remaining-display | media-toggle-closed-captions-button | media-volume-slider | media-volume-slider-container | media-volume-sliderthumb | menulist | menulist-button | menulist-text | menulist-textfield | meter | progress-bar | progress-bar-value | push-button | radio | scrollbarbutton-down | scrollbarbutton-left | scrollbarbutton-right | scrollbarbutton-up | scrollbargripper-horizontal | scrollbargripper-vertical | scrollbarthumb-horizontal | scrollbarthumb-vertical | scrollbartrack-horizontal | scrollbartrack-vertical | searchfield | searchfield-cancel-button | searchfield-decoration | searchfield-results-button | searchfield-results-decoration | slider-horizontal | slider-vertical | sliderthumb-horizontal | sliderthumb-vertical | square-button | textarea | textfield | -apple-pay-button"
        },
        "-webkit-background-clip": {
          comment: "https://developer.mozilla.org/en/docs/Web/CSS/background-clip",
          syntax: "[ <box> | border | padding | content | text ]#"
        },
        "-webkit-column-break-after": {
          comment: "added, http://help.dottoro.com/lcrthhhv.php",
          syntax: "always | auto | avoid"
        },
        "-webkit-column-break-before": {
          comment: "added, http://help.dottoro.com/lcxquvkf.php",
          syntax: "always | auto | avoid"
        },
        "-webkit-column-break-inside": {
          comment: "added, http://help.dottoro.com/lclhnthl.php",
          syntax: "always | auto | avoid"
        },
        "-webkit-font-smoothing": {
          comment: "https://developer.mozilla.org/en-US/docs/Web/CSS/font-smooth",
          syntax: "auto | none | antialiased | subpixel-antialiased"
        },
        "-webkit-mask-box-image": {
          comment: "missed; https://developer.mozilla.org/en-US/docs/Web/CSS/-webkit-mask-box-image",
          syntax: "[ <url> | <gradient> | none ] [ <length-percentage>{4} <-webkit-mask-box-repeat>{2} ]?"
        },
        "-webkit-print-color-adjust": {
          comment: "missed",
          references: [
            "https://developer.mozilla.org/en/docs/Web/CSS/-webkit-print-color-adjust"
          ],
          syntax: "economy | exact"
        },
        "-webkit-text-security": {
          comment: "missed; http://help.dottoro.com/lcbkewgt.php",
          syntax: "none | circle | disc | square"
        },
        "-webkit-user-drag": {
          comment: "missed; http://help.dottoro.com/lcbixvwm.php",
          syntax: "none | element | auto"
        },
        "-webkit-user-select": {
          comment: "auto is supported by old webkit, https://developer.mozilla.org/en-US/docs/Web/CSS/user-select",
          syntax: "auto | none | text | all"
        },
        "alignment-baseline": {
          comment: "added SVG property",
          references: [
            "https://www.w3.org/TR/SVG/text.html#AlignmentBaselineProperty"
          ],
          syntax: "auto | baseline | before-edge | text-before-edge | middle | central | after-edge | text-after-edge | ideographic | alphabetic | hanging | mathematical"
        },
        "background-clip": {
          comment: "used <bg-clip> from CSS Backgrounds and Borders 4 since it adds new values",
          references: [
            "https://github.com/csstree/csstree/issues/190"
          ],
          syntax: "<bg-clip>#"
        },
        "baseline-shift": {
          comment: "added SVG property",
          references: [
            "https://www.w3.org/TR/SVG/text.html#BaselineShiftProperty"
          ],
          syntax: "baseline | sub | super | <svg-length>"
        },
        behavior: {
          comment: "added old IE property https://msdn.microsoft.com/en-us/library/ms530723(v=vs.85).aspx",
          syntax: "<url>+"
        },
        "clip-rule": {
          comment: "added SVG property",
          references: [
            "https://www.w3.org/TR/SVG/masking.html#ClipRuleProperty"
          ],
          syntax: "nonzero | evenodd"
        },
        cue: {
          comment: "https://www.w3.org/TR/css3-speech/#property-index",
          syntax: "<'cue-before'> <'cue-after'>?"
        },
        "cue-after": {
          comment: "https://www.w3.org/TR/css3-speech/#property-index",
          syntax: "<url> <decibel>? | none"
        },
        "cue-before": {
          comment: "https://www.w3.org/TR/css3-speech/#property-index",
          syntax: "<url> <decibel>? | none"
        },
        cursor: {
          comment: "added legacy keywords: hand, -webkit-grab. -webkit-grabbing, -webkit-zoom-in, -webkit-zoom-out, -moz-grab, -moz-grabbing, -moz-zoom-in, -moz-zoom-out",
          references: [
            "https://www.sitepoint.com/css3-cursor-styles/"
          ],
          syntax: "[ [ <url> [ <x> <y> ]? , ]* [ auto | default | none | context-menu | help | pointer | progress | wait | cell | crosshair | text | vertical-text | alias | copy | move | no-drop | not-allowed | e-resize | n-resize | ne-resize | nw-resize | s-resize | se-resize | sw-resize | w-resize | ew-resize | ns-resize | nesw-resize | nwse-resize | col-resize | row-resize | all-scroll | zoom-in | zoom-out | grab | grabbing | hand | -webkit-grab | -webkit-grabbing | -webkit-zoom-in | -webkit-zoom-out | -moz-grab | -moz-grabbing | -moz-zoom-in | -moz-zoom-out ] ]"
        },
        display: {
          comment: "extended with -ms-flexbox",
          syntax: "| <-non-standard-display>"
        },
        position: {
          comment: "extended with -webkit-sticky",
          syntax: "| -webkit-sticky"
        },
        "dominant-baseline": {
          comment: "added SVG property",
          references: [
            "https://www.w3.org/TR/SVG/text.html#DominantBaselineProperty"
          ],
          syntax: "auto | use-script | no-change | reset-size | ideographic | alphabetic | hanging | mathematical | central | middle | text-after-edge | text-before-edge"
        },
        "image-rendering": {
          comment: "extended with <-non-standard-image-rendering>, added SVG keywords optimizeSpeed and optimizeQuality",
          references: [
            "https://developer.mozilla.org/en/docs/Web/CSS/image-rendering",
            "https://www.w3.org/TR/SVG/painting.html#ImageRenderingProperty"
          ],
          syntax: "| optimizeSpeed | optimizeQuality | <-non-standard-image-rendering>"
        },
        fill: {
          comment: "added SVG property",
          references: [
            "https://www.w3.org/TR/SVG/painting.html#FillProperty"
          ],
          syntax: "<paint>"
        },
        "fill-opacity": {
          comment: "added SVG property",
          references: [
            "https://www.w3.org/TR/SVG/painting.html#FillProperty"
          ],
          syntax: "<number-zero-one>"
        },
        "fill-rule": {
          comment: "added SVG property",
          references: [
            "https://www.w3.org/TR/SVG/painting.html#FillProperty"
          ],
          syntax: "nonzero | evenodd"
        },
        filter: {
          comment: "extend with IE legacy syntaxes",
          syntax: "| <-ms-filter-function-list>"
        },
        "glyph-orientation-horizontal": {
          comment: "added SVG property",
          references: [
            "https://www.w3.org/TR/SVG/text.html#GlyphOrientationHorizontalProperty"
          ],
          syntax: "<angle>"
        },
        "glyph-orientation-vertical": {
          comment: "added SVG property",
          references: [
            "https://www.w3.org/TR/SVG/text.html#GlyphOrientationVerticalProperty"
          ],
          syntax: "<angle>"
        },
        kerning: {
          comment: "added SVG property",
          references: [
            "https://www.w3.org/TR/SVG/text.html#KerningProperty"
          ],
          syntax: "auto | <svg-length>"
        },
        "letter-spacing": {
          comment: "fix syntax <length> -> <length-percentage>",
          references: [
            "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/letter-spacing"
          ],
          syntax: "normal | <length-percentage>"
        },
        marker: {
          comment: "added SVG property",
          references: [
            "https://www.w3.org/TR/SVG/painting.html#MarkerProperties"
          ],
          syntax: "none | <url>"
        },
        "marker-end": {
          comment: "added SVG property",
          references: [
            "https://www.w3.org/TR/SVG/painting.html#MarkerProperties"
          ],
          syntax: "none | <url>"
        },
        "marker-mid": {
          comment: "added SVG property",
          references: [
            "https://www.w3.org/TR/SVG/painting.html#MarkerProperties"
          ],
          syntax: "none | <url>"
        },
        "marker-start": {
          comment: "added SVG property",
          references: [
            "https://www.w3.org/TR/SVG/painting.html#MarkerProperties"
          ],
          syntax: "none | <url>"
        },
        "max-width": {
          comment: "extend by non-standard width keywords https://developer.mozilla.org/en-US/docs/Web/CSS/max-width",
          syntax: "| <-non-standard-width>"
        },
        width: {
          references: [
            "https://developer.mozilla.org/en-US/docs/Web/CSS/width",
            "https://github.com/csstree/stylelint-validator/issues/29"
          ],
          syntax: "| fill | stretch | intrinsic | -moz-max-content | -webkit-max-content | -moz-fit-content | -webkit-fit-content"
        },
        "min-width": {
          comment: "extend by non-standard width keywords https://developer.mozilla.org/en-US/docs/Web/CSS/width",
          syntax: "| <-non-standard-width>"
        },
        overflow: {
          comment: "extend by vendor keywords https://developer.mozilla.org/en-US/docs/Web/CSS/overflow",
          syntax: "| <-non-standard-overflow>"
        },
        pause: {
          comment: "https://www.w3.org/TR/css3-speech/#property-index",
          syntax: "<'pause-before'> <'pause-after'>?"
        },
        "pause-after": {
          comment: "https://www.w3.org/TR/css3-speech/#property-index",
          syntax: "<time> | none | x-weak | weak | medium | strong | x-strong"
        },
        "pause-before": {
          comment: "https://www.w3.org/TR/css3-speech/#property-index",
          syntax: "<time> | none | x-weak | weak | medium | strong | x-strong"
        },
        rest: {
          comment: "https://www.w3.org/TR/css3-speech/#property-index",
          syntax: "<'rest-before'> <'rest-after'>?"
        },
        "rest-after": {
          comment: "https://www.w3.org/TR/css3-speech/#property-index",
          syntax: "<time> | none | x-weak | weak | medium | strong | x-strong"
        },
        "rest-before": {
          comment: "https://www.w3.org/TR/css3-speech/#property-index",
          syntax: "<time> | none | x-weak | weak | medium | strong | x-strong"
        },
        "shape-rendering": {
          comment: "added SVG property",
          references: [
            "https://www.w3.org/TR/SVG/painting.html#ShapeRenderingPropert"
          ],
          syntax: "auto | optimizeSpeed | crispEdges | geometricPrecision"
        },
        src: {
          comment: "added @font-face's src property https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/src",
          syntax: "[ <url> [ format( <string># ) ]? | local( <family-name> ) ]#"
        },
        speak: {
          comment: "https://www.w3.org/TR/css3-speech/#property-index",
          syntax: "auto | none | normal"
        },
        "speak-as": {
          comment: "https://www.w3.org/TR/css3-speech/#property-index",
          syntax: "normal | spell-out || digits || [ literal-punctuation | no-punctuation ]"
        },
        stroke: {
          comment: "added SVG property",
          references: [
            "https://www.w3.org/TR/SVG/painting.html#StrokeProperties"
          ],
          syntax: "<paint>"
        },
        "stroke-dasharray": {
          comment: "added SVG property; a list of comma and/or white space separated <length>s and <percentage>s",
          references: [
            "https://www.w3.org/TR/SVG/painting.html#StrokeProperties"
          ],
          syntax: "none | [ <svg-length>+ ]#"
        },
        "stroke-dashoffset": {
          comment: "added SVG property",
          references: [
            "https://www.w3.org/TR/SVG/painting.html#StrokeProperties"
          ],
          syntax: "<svg-length>"
        },
        "stroke-linecap": {
          comment: "added SVG property",
          references: [
            "https://www.w3.org/TR/SVG/painting.html#StrokeProperties"
          ],
          syntax: "butt | round | square"
        },
        "stroke-linejoin": {
          comment: "added SVG property",
          references: [
            "https://www.w3.org/TR/SVG/painting.html#StrokeProperties"
          ],
          syntax: "miter | round | bevel"
        },
        "stroke-miterlimit": {
          comment: "added SVG property (<miterlimit> = <number-one-or-greater>) ",
          references: [
            "https://www.w3.org/TR/SVG/painting.html#StrokeProperties"
          ],
          syntax: "<number-one-or-greater>"
        },
        "stroke-opacity": {
          comment: "added SVG property",
          references: [
            "https://www.w3.org/TR/SVG/painting.html#StrokeProperties"
          ],
          syntax: "<number-zero-one>"
        },
        "stroke-width": {
          comment: "added SVG property",
          references: [
            "https://www.w3.org/TR/SVG/painting.html#StrokeProperties"
          ],
          syntax: "<svg-length>"
        },
        "text-anchor": {
          comment: "added SVG property",
          references: [
            "https://www.w3.org/TR/SVG/text.html#TextAlignmentProperties"
          ],
          syntax: "start | middle | end"
        },
        "unicode-bidi": {
          comment: "added prefixed keywords https://developer.mozilla.org/en-US/docs/Web/CSS/unicode-bidi",
          syntax: "| -moz-isolate | -moz-isolate-override | -moz-plaintext | -webkit-isolate | -webkit-isolate-override | -webkit-plaintext"
        },
        "unicode-range": {
          comment: "added missed property https://developer.mozilla.org/en-US/docs/Web/CSS/%40font-face/unicode-range",
          syntax: "<urange>#"
        },
        "voice-balance": {
          comment: "https://www.w3.org/TR/css3-speech/#property-index",
          syntax: "<number> | left | center | right | leftwards | rightwards"
        },
        "voice-duration": {
          comment: "https://www.w3.org/TR/css3-speech/#property-index",
          syntax: "auto | <time>"
        },
        "voice-family": {
          comment: "<name> -> <family-name>, https://www.w3.org/TR/css3-speech/#property-index",
          syntax: "[ [ <family-name> | <generic-voice> ] , ]* [ <family-name> | <generic-voice> ] | preserve"
        },
        "voice-pitch": {
          comment: "https://www.w3.org/TR/css3-speech/#property-index",
          syntax: "<frequency> && absolute | [ [ x-low | low | medium | high | x-high ] || [ <frequency> | <semitones> | <percentage> ] ]"
        },
        "voice-range": {
          comment: "https://www.w3.org/TR/css3-speech/#property-index",
          syntax: "<frequency> && absolute | [ [ x-low | low | medium | high | x-high ] || [ <frequency> | <semitones> | <percentage> ] ]"
        },
        "voice-rate": {
          comment: "https://www.w3.org/TR/css3-speech/#property-index",
          syntax: "[ normal | x-slow | slow | medium | fast | x-fast ] || <percentage>"
        },
        "voice-stress": {
          comment: "https://www.w3.org/TR/css3-speech/#property-index",
          syntax: "normal | strong | moderate | none | reduced"
        },
        "voice-volume": {
          comment: "https://www.w3.org/TR/css3-speech/#property-index",
          syntax: "silent | [ [ x-soft | soft | medium | loud | x-loud ] || <decibel> ]"
        },
        "writing-mode": {
          comment: "extend with SVG keywords",
          syntax: "| <svg-writing-mode>"
        }
      },
      types: {
        "-legacy-gradient": {
          comment: "added collection of legacy gradient syntaxes",
          syntax: "<-webkit-gradient()> | <-legacy-linear-gradient> | <-legacy-repeating-linear-gradient> | <-legacy-radial-gradient> | <-legacy-repeating-radial-gradient>"
        },
        "-legacy-linear-gradient": {
          comment: "like standard syntax but w/o `to` keyword https://developer.mozilla.org/en-US/docs/Web/CSS/linear-gradient",
          syntax: "-moz-linear-gradient( <-legacy-linear-gradient-arguments> ) | -webkit-linear-gradient( <-legacy-linear-gradient-arguments> ) | -o-linear-gradient( <-legacy-linear-gradient-arguments> )"
        },
        "-legacy-repeating-linear-gradient": {
          comment: "like standard syntax but w/o `to` keyword https://developer.mozilla.org/en-US/docs/Web/CSS/linear-gradient",
          syntax: "-moz-repeating-linear-gradient( <-legacy-linear-gradient-arguments> ) | -webkit-repeating-linear-gradient( <-legacy-linear-gradient-arguments> ) | -o-repeating-linear-gradient( <-legacy-linear-gradient-arguments> )"
        },
        "-legacy-linear-gradient-arguments": {
          comment: "like standard syntax but w/o `to` keyword https://developer.mozilla.org/en-US/docs/Web/CSS/linear-gradient",
          syntax: "[ <angle> | <side-or-corner> ]? , <color-stop-list>"
        },
        "-legacy-radial-gradient": {
          comment: "deprecated syntax that implemented by some browsers https://www.w3.org/TR/2011/WD-css3-images-20110908/#radial-gradients",
          syntax: "-moz-radial-gradient( <-legacy-radial-gradient-arguments> ) | -webkit-radial-gradient( <-legacy-radial-gradient-arguments> ) | -o-radial-gradient( <-legacy-radial-gradient-arguments> )"
        },
        "-legacy-repeating-radial-gradient": {
          comment: "deprecated syntax that implemented by some browsers https://www.w3.org/TR/2011/WD-css3-images-20110908/#radial-gradients",
          syntax: "-moz-repeating-radial-gradient( <-legacy-radial-gradient-arguments> ) | -webkit-repeating-radial-gradient( <-legacy-radial-gradient-arguments> ) | -o-repeating-radial-gradient( <-legacy-radial-gradient-arguments> )"
        },
        "-legacy-radial-gradient-arguments": {
          comment: "deprecated syntax that implemented by some browsers https://www.w3.org/TR/2011/WD-css3-images-20110908/#radial-gradients",
          syntax: "[ <position> , ]? [ [ [ <-legacy-radial-gradient-shape> || <-legacy-radial-gradient-size> ] | [ <length> | <percentage> ]{2} ] , ]? <color-stop-list>"
        },
        "-legacy-radial-gradient-size": {
          comment: "before a standard it contains 2 extra keywords (`contain` and `cover`) https://www.w3.org/TR/2011/WD-css3-images-20110908/#ltsize",
          syntax: "closest-side | closest-corner | farthest-side | farthest-corner | contain | cover"
        },
        "-legacy-radial-gradient-shape": {
          comment: "define to double sure it doesn't extends in future https://www.w3.org/TR/2011/WD-css3-images-20110908/#ltshape",
          syntax: "circle | ellipse"
        },
        "-non-standard-font": {
          comment: "non standard fonts",
          references: [
            "https://webkit.org/blog/3709/using-the-system-font-in-web-content/"
          ],
          syntax: "-apple-system-body | -apple-system-headline | -apple-system-subheadline | -apple-system-caption1 | -apple-system-caption2 | -apple-system-footnote | -apple-system-short-body | -apple-system-short-headline | -apple-system-short-subheadline | -apple-system-short-caption1 | -apple-system-short-footnote | -apple-system-tall-body"
        },
        "-non-standard-color": {
          comment: "non standard colors",
          references: [
            "http://cssdot.ru/%D0%A1%D0%BF%D1%80%D0%B0%D0%B2%D0%BE%D1%87%D0%BD%D0%B8%D0%BA_CSS/color-i305.html",
            "https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#Mozilla_Color_Preference_Extensions"
          ],
          syntax: "-moz-ButtonDefault | -moz-ButtonHoverFace | -moz-ButtonHoverText | -moz-CellHighlight | -moz-CellHighlightText | -moz-Combobox | -moz-ComboboxText | -moz-Dialog | -moz-DialogText | -moz-dragtargetzone | -moz-EvenTreeRow | -moz-Field | -moz-FieldText | -moz-html-CellHighlight | -moz-html-CellHighlightText | -moz-mac-accentdarkestshadow | -moz-mac-accentdarkshadow | -moz-mac-accentface | -moz-mac-accentlightesthighlight | -moz-mac-accentlightshadow | -moz-mac-accentregularhighlight | -moz-mac-accentregularshadow | -moz-mac-chrome-active | -moz-mac-chrome-inactive | -moz-mac-focusring | -moz-mac-menuselect | -moz-mac-menushadow | -moz-mac-menutextselect | -moz-MenuHover | -moz-MenuHoverText | -moz-MenuBarText | -moz-MenuBarHoverText | -moz-nativehyperlinktext | -moz-OddTreeRow | -moz-win-communicationstext | -moz-win-mediatext | -moz-activehyperlinktext | -moz-default-background-color | -moz-default-color | -moz-hyperlinktext | -moz-visitedhyperlinktext | -webkit-activelink | -webkit-focus-ring-color | -webkit-link | -webkit-text"
        },
        "-non-standard-image-rendering": {
          comment: "non-standard keywords http://phrogz.net/tmp/canvas_image_zoom.html",
          syntax: "optimize-contrast | -moz-crisp-edges | -o-crisp-edges | -webkit-optimize-contrast"
        },
        "-non-standard-overflow": {
          comment: "non-standard keywords https://developer.mozilla.org/en-US/docs/Web/CSS/overflow",
          syntax: "-moz-scrollbars-none | -moz-scrollbars-horizontal | -moz-scrollbars-vertical | -moz-hidden-unscrollable"
        },
        "-non-standard-width": {
          comment: "non-standard keywords https://developer.mozilla.org/en-US/docs/Web/CSS/width",
          syntax: "fill-available | min-intrinsic | intrinsic | -moz-available | -moz-fit-content | -moz-min-content | -moz-max-content | -webkit-min-content | -webkit-max-content"
        },
        "-webkit-gradient()": {
          comment: "first Apple proposal gradient syntax https://webkit.org/blog/175/introducing-css-gradients/ - TODO: simplify when after match algorithm improvement ( [, point, radius | , point] -> [, radius]? , point )",
          syntax: "-webkit-gradient( <-webkit-gradient-type>, <-webkit-gradient-point> [, <-webkit-gradient-point> | , <-webkit-gradient-radius>, <-webkit-gradient-point> ] [, <-webkit-gradient-radius>]? [, <-webkit-gradient-color-stop>]* )"
        },
        "-webkit-gradient-color-stop": {
          comment: "first Apple proposal gradient syntax https://webkit.org/blog/175/introducing-css-gradients/",
          syntax: "from( <color> ) | color-stop( [ <number-zero-one> | <percentage> ] , <color> ) | to( <color> )"
        },
        "-webkit-gradient-point": {
          comment: "first Apple proposal gradient syntax https://webkit.org/blog/175/introducing-css-gradients/",
          syntax: "[ left | center | right | <length-percentage> ] [ top | center | bottom | <length-percentage> ]"
        },
        "-webkit-gradient-radius": {
          comment: "first Apple proposal gradient syntax https://webkit.org/blog/175/introducing-css-gradients/",
          syntax: "<length> | <percentage>"
        },
        "-webkit-gradient-type": {
          comment: "first Apple proposal gradient syntax https://webkit.org/blog/175/introducing-css-gradients/",
          syntax: "linear | radial"
        },
        "-webkit-mask-box-repeat": {
          comment: "missed; https://developer.mozilla.org/en-US/docs/Web/CSS/-webkit-mask-box-image",
          syntax: "repeat | stretch | round"
        },
        "-webkit-mask-clip-style": {
          comment: "missed; there is no enough information about `-webkit-mask-clip` property, but looks like all those keywords are working",
          syntax: "border | border-box | padding | padding-box | content | content-box | text"
        },
        "-ms-filter-function-list": {
          comment: "https://developer.mozilla.org/en-US/docs/Web/CSS/-ms-filter",
          syntax: "<-ms-filter-function>+"
        },
        "-ms-filter-function": {
          comment: "https://developer.mozilla.org/en-US/docs/Web/CSS/-ms-filter",
          syntax: "<-ms-filter-function-progid> | <-ms-filter-function-legacy>"
        },
        "-ms-filter-function-progid": {
          comment: "https://developer.mozilla.org/en-US/docs/Web/CSS/-ms-filter",
          syntax: "'progid:' [ <ident-token> '.' ]* [ <ident-token> | <function-token> <any-value>? ) ]"
        },
        "-ms-filter-function-legacy": {
          comment: "https://developer.mozilla.org/en-US/docs/Web/CSS/-ms-filter",
          syntax: "<ident-token> | <function-token> <any-value>? )"
        },
        "-ms-filter": {
          syntax: "<string>"
        },
        age: {
          comment: "https://www.w3.org/TR/css3-speech/#voice-family",
          syntax: "child | young | old"
        },
        "attr-name": {
          syntax: "<wq-name>"
        },
        "attr-fallback": {
          syntax: "<any-value>"
        },
        "bg-clip": {
          comment: "missed, https://drafts.csswg.org/css-backgrounds-4/#typedef-bg-clip",
          syntax: "<box> | border | text"
        },
        "border-radius": {
          comment: "missed, https://drafts.csswg.org/css-backgrounds-3/#the-border-radius",
          syntax: "<length-percentage>{1,2}"
        },
        bottom: {
          comment: "missed; not sure we should add it, but no others except `shape` is using it so it's ok for now; https://drafts.fxtf.org/css-masking-1/#funcdef-clip-rect",
          syntax: "<length> | auto"
        },
        "content-list": {
          comment: "added attr(), see https://github.com/csstree/csstree/issues/201",
          syntax: "[ <string> | contents | <image> | <counter> | <quote> | <target> | <leader()> | <attr()> ]+"
        },
        "element()": {
          comment: "https://drafts.csswg.org/css-gcpm/#element-syntax & https://drafts.csswg.org/css-images-4/#element-notation",
          syntax: "element( <custom-ident> , [ first | start | last | first-except ]? ) | element( <id-selector> )"
        },
        "generic-voice": {
          comment: "https://www.w3.org/TR/css3-speech/#voice-family",
          syntax: "[ <age>? <gender> <integer>? ]"
        },
        gender: {
          comment: "https://www.w3.org/TR/css3-speech/#voice-family",
          syntax: "male | female | neutral"
        },
        "generic-family": {
          comment: "added -apple-system",
          references: [
            "https://webkit.org/blog/3709/using-the-system-font-in-web-content/"
          ],
          syntax: "| -apple-system"
        },
        gradient: {
          comment: "added legacy syntaxes support",
          syntax: "| <-legacy-gradient>"
        },
        "lab()": {
          comment: "missed; https://www.w3.org/TR/css-color-4/#specifying-lab-lch",
          syntax: "lab( [<percentage> | <number> | none] [ <percentage> | <number> | none] [ <percentage> | <number> | none] [ / [<alpha-value> | none] ]? )"
        },
        "lch()": {
          comment: "missed; https://www.w3.org/TR/css-color-4/#specifying-lab-lch",
          syntax: "lch( [<percentage> | <number> | none] [ <percentage> | <number> | none] [ <hue> | none] [ / [<alpha-value> | none] ]? )"
        },
        left: {
          comment: "missed; not sure we should add it, but no others except `shape` is using it so it's ok for now; https://drafts.fxtf.org/css-masking-1/#funcdef-clip-rect",
          syntax: "<length> | auto"
        },
        "mask-image": {
          comment: "missed; https://drafts.fxtf.org/css-masking-1/#the-mask-image",
          syntax: "<mask-reference>#"
        },
        "named-color": {
          comment: "added non standard color names",
          syntax: "| <-non-standard-color>"
        },
        paint: {
          comment: "used by SVG https://www.w3.org/TR/SVG/painting.html#SpecifyingPaint",
          syntax: "none | <color> | <url> [ none | <color> ]? | context-fill | context-stroke"
        },
        ratio: {
          comment: "missed, https://drafts.csswg.org/css-values-4/#ratio-value",
          syntax: "<number [0,\u221E]> [ / <number [0,\u221E]> ]?"
        },
        "reversed-counter-name": {
          comment: "missed; https://drafts.csswg.org/css-lists/#typedef-reversed-counter-name",
          syntax: "reversed( <counter-name> )"
        },
        right: {
          comment: "missed; not sure we should add it, but no others except `shape` is using it so it's ok for now; https://drafts.fxtf.org/css-masking-1/#funcdef-clip-rect",
          syntax: "<length> | auto"
        },
        shape: {
          comment: "missed spaces in function body and add backwards compatible syntax",
          syntax: "rect( <top>, <right>, <bottom>, <left> ) | rect( <top> <right> <bottom> <left> )"
        },
        "svg-length": {
          comment: "All coordinates and lengths in SVG can be specified with or without a unit identifier",
          references: [
            "https://www.w3.org/TR/SVG11/coords.html#Units"
          ],
          syntax: "<percentage> | <length> | <number>"
        },
        "svg-writing-mode": {
          comment: "SVG specific keywords (deprecated for CSS)",
          references: [
            "https://developer.mozilla.org/en/docs/Web/CSS/writing-mode",
            "https://www.w3.org/TR/SVG/text.html#WritingModeProperty"
          ],
          syntax: "lr-tb | rl-tb | tb-rl | lr | rl | tb"
        },
        top: {
          comment: "missed; not sure we should add it, but no others except `shape` is using it so it's ok for now; https://drafts.fxtf.org/css-masking-1/#funcdef-clip-rect",
          syntax: "<length> | auto"
        },
        "track-group": {
          comment: "used by old grid-columns and grid-rows syntax v0",
          syntax: "'(' [ <string>* <track-minmax> <string>* ]+ ')' [ '[' <positive-integer> ']' ]? | <track-minmax>"
        },
        "track-list-v0": {
          comment: "used by old grid-columns and grid-rows syntax v0",
          syntax: "[ <string>* <track-group> <string>* ]+ | none"
        },
        "track-minmax": {
          comment: "used by old grid-columns and grid-rows syntax v0",
          syntax: "minmax( <track-breadth> , <track-breadth> ) | auto | <track-breadth> | fit-content"
        },
        x: {
          comment: "missed; not sure we should add it, but no others except `cursor` is using it so it's ok for now; https://drafts.csswg.org/css-ui-3/#cursor",
          syntax: "<number>"
        },
        y: {
          comment: "missed; not sure we should add it, but no others except `cursor` is using so it's ok for now; https://drafts.csswg.org/css-ui-3/#cursor",
          syntax: "<number>"
        },
        declaration: {
          comment: "missed, restored by https://drafts.csswg.org/css-syntax",
          syntax: "<ident-token> : <declaration-value>? [ '!' important ]?"
        },
        "declaration-list": {
          comment: "missed, restored by https://drafts.csswg.org/css-syntax",
          syntax: "[ <declaration>? ';' ]* <declaration>?"
        },
        url: {
          comment: "https://drafts.csswg.org/css-values-4/#urls",
          syntax: "url( <string> <url-modifier>* ) | <url-token>"
        },
        "url-modifier": {
          comment: "https://drafts.csswg.org/css-values-4/#typedef-url-modifier",
          syntax: "<ident> | <function-token> <any-value> )"
        },
        "number-zero-one": {
          syntax: "<number [0,1]>"
        },
        "number-one-or-greater": {
          syntax: "<number [1,\u221E]>"
        },
        "positive-integer": {
          syntax: "<integer [0,\u221E]>"
        },
        "-non-standard-display": {
          syntax: "-ms-inline-flexbox | -ms-grid | -ms-inline-grid | -webkit-flex | -webkit-inline-flex | -webkit-box | -webkit-inline-box | -moz-inline-stack | -moz-box | -moz-inline-box"
        }
      }
    };
  }
});

// node_modules/csso/node_modules/css-tree/cjs/data-patch.cjs
var require_data_patch2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/data-patch.cjs"(exports, module2) {
    "use strict";
    var patch = require_patch2();
    var patch$1 = patch;
    module2.exports = patch$1;
  }
});

// node_modules/csso/node_modules/mdn-data/css/at-rules.json
var require_at_rules2 = __commonJS({
  "node_modules/csso/node_modules/mdn-data/css/at-rules.json"(exports, module2) {
    module2.exports = {
      "@charset": {
        syntax: '@charset "<charset>";',
        groups: [
          "CSS Charsets"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/@charset"
      },
      "@counter-style": {
        syntax: "@counter-style <counter-style-name> {\n  [ system: <counter-system>; ] ||\n  [ symbols: <counter-symbols>; ] ||\n  [ additive-symbols: <additive-symbols>; ] ||\n  [ negative: <negative-symbol>; ] ||\n  [ prefix: <prefix>; ] ||\n  [ suffix: <suffix>; ] ||\n  [ range: <range>; ] ||\n  [ pad: <padding>; ] ||\n  [ speak-as: <speak-as>; ] ||\n  [ fallback: <counter-style-name>; ]\n}",
        interfaces: [
          "CSSCounterStyleRule"
        ],
        groups: [
          "CSS Counter Styles"
        ],
        descriptors: {
          "additive-symbols": {
            syntax: "[ <integer> && <symbol> ]#",
            media: "all",
            initial: "n/a (required)",
            percentages: "no",
            computed: "asSpecified",
            order: "orderOfAppearance",
            status: "standard"
          },
          fallback: {
            syntax: "<counter-style-name>",
            media: "all",
            initial: "decimal",
            percentages: "no",
            computed: "asSpecified",
            order: "uniqueOrder",
            status: "standard"
          },
          negative: {
            syntax: "<symbol> <symbol>?",
            media: "all",
            initial: '"-" hyphen-minus',
            percentages: "no",
            computed: "asSpecified",
            order: "orderOfAppearance",
            status: "standard"
          },
          pad: {
            syntax: "<integer> && <symbol>",
            media: "all",
            initial: '0 ""',
            percentages: "no",
            computed: "asSpecified",
            order: "uniqueOrder",
            status: "standard"
          },
          prefix: {
            syntax: "<symbol>",
            media: "all",
            initial: '""',
            percentages: "no",
            computed: "asSpecified",
            order: "uniqueOrder",
            status: "standard"
          },
          range: {
            syntax: "[ [ <integer> | infinite ]{2} ]# | auto",
            media: "all",
            initial: "auto",
            percentages: "no",
            computed: "asSpecified",
            order: "orderOfAppearance",
            status: "standard"
          },
          "speak-as": {
            syntax: "auto | bullets | numbers | words | spell-out | <counter-style-name>",
            media: "all",
            initial: "auto",
            percentages: "no",
            computed: "asSpecified",
            order: "uniqueOrder",
            status: "standard"
          },
          suffix: {
            syntax: "<symbol>",
            media: "all",
            initial: '". "',
            percentages: "no",
            computed: "asSpecified",
            order: "uniqueOrder",
            status: "standard"
          },
          symbols: {
            syntax: "<symbol>+",
            media: "all",
            initial: "n/a (required)",
            percentages: "no",
            computed: "asSpecified",
            order: "orderOfAppearance",
            status: "standard"
          },
          system: {
            syntax: "cyclic | numeric | alphabetic | symbolic | additive | [ fixed <integer>? ] | [ extends <counter-style-name> ]",
            media: "all",
            initial: "symbolic",
            percentages: "no",
            computed: "asSpecified",
            order: "uniqueOrder",
            status: "standard"
          }
        },
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/@counter-style"
      },
      "@document": {
        syntax: "@document [ <url> | url-prefix(<string>) | domain(<string>) | media-document(<string>) | regexp(<string>) ]# {\n  <group-rule-body>\n}",
        interfaces: [
          "CSSGroupingRule",
          "CSSConditionRule"
        ],
        groups: [
          "CSS Conditional Rules"
        ],
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/@document"
      },
      "@font-face": {
        syntax: "@font-face {\n  [ font-family: <family-name>; ] ||\n  [ src: <src>; ] ||\n  [ unicode-range: <unicode-range>; ] ||\n  [ font-variant: <font-variant>; ] ||\n  [ font-feature-settings: <font-feature-settings>; ] ||\n  [ font-variation-settings: <font-variation-settings>; ] ||\n  [ font-stretch: <font-stretch>; ] ||\n  [ font-weight: <font-weight>; ] ||\n  [ font-style: <font-style>; ] ||\n  [ size-adjust: <size-adjust>; ] ||\n  [ ascent-override: <ascent-override>; ] ||\n  [ descent-override: <descent-override>; ] ||\n  [ line-gap-override: <line-gap-override>; ]\n}",
        interfaces: [
          "CSSFontFaceRule"
        ],
        groups: [
          "CSS Fonts"
        ],
        descriptors: {
          "ascent-override": {
            syntax: "normal | <percentage>",
            media: "all",
            initial: "normal",
            percentages: "asSpecified",
            computed: "asSpecified",
            order: "orderOfAppearance",
            status: "experimental"
          },
          "descent-override": {
            syntax: "normal | <percentage>",
            media: "all",
            initial: "normal",
            percentages: "asSpecified",
            computed: "asSpecified",
            order: "orderOfAppearance",
            status: "experimental"
          },
          "font-display": {
            syntax: "[ auto | block | swap | fallback | optional ]",
            media: "visual",
            percentages: "no",
            initial: "auto",
            computed: "asSpecified",
            order: "uniqueOrder",
            status: "experimental"
          },
          "font-family": {
            syntax: "<family-name>",
            media: "all",
            initial: "n/a (required)",
            percentages: "no",
            computed: "asSpecified",
            order: "uniqueOrder",
            status: "standard"
          },
          "font-feature-settings": {
            syntax: "normal | <feature-tag-value>#",
            media: "all",
            initial: "normal",
            percentages: "no",
            computed: "asSpecified",
            order: "orderOfAppearance",
            status: "standard"
          },
          "font-variation-settings": {
            syntax: "normal | [ <string> <number> ]#",
            media: "all",
            initial: "normal",
            percentages: "no",
            computed: "asSpecified",
            order: "orderOfAppearance",
            status: "standard"
          },
          "font-stretch": {
            syntax: "<font-stretch-absolute>{1,2}",
            media: "all",
            initial: "normal",
            percentages: "no",
            computed: "asSpecified",
            order: "uniqueOrder",
            status: "standard"
          },
          "font-style": {
            syntax: "normal | italic | oblique <angle>{0,2}",
            media: "all",
            initial: "normal",
            percentages: "no",
            computed: "asSpecified",
            order: "uniqueOrder",
            status: "standard"
          },
          "font-weight": {
            syntax: "<font-weight-absolute>{1,2}",
            media: "all",
            initial: "normal",
            percentages: "no",
            computed: "asSpecified",
            order: "uniqueOrder",
            status: "standard"
          },
          "font-variant": {
            syntax: "normal | none | [ <common-lig-values> || <discretionary-lig-values> || <historical-lig-values> || <contextual-alt-values> || stylistic(<feature-value-name>) || historical-forms || styleset(<feature-value-name>#) || character-variant(<feature-value-name>#) || swash(<feature-value-name>) || ornaments(<feature-value-name>) || annotation(<feature-value-name>) || [ small-caps | all-small-caps | petite-caps | all-petite-caps | unicase | titling-caps ] || <numeric-figure-values> || <numeric-spacing-values> || <numeric-fraction-values> || ordinal || slashed-zero || <east-asian-variant-values> || <east-asian-width-values> || ruby ]",
            media: "all",
            initial: "normal",
            percentages: "no",
            computed: "asSpecified",
            order: "orderOfAppearance",
            status: "standard"
          },
          "line-gap-override": {
            syntax: "normal | <percentage>",
            media: "all",
            initial: "normal",
            percentages: "asSpecified",
            computed: "asSpecified",
            order: "orderOfAppearance",
            status: "experimental"
          },
          "size-adjust": {
            syntax: "<percentage>",
            media: "all",
            initial: "100%",
            percentages: "asSpecified",
            computed: "asSpecified",
            order: "orderOfAppearance",
            status: "experimental"
          },
          src: {
            syntax: "[ <url> [ format( <string># ) ]? | local( <family-name> ) ]#",
            media: "all",
            initial: "n/a (required)",
            percentages: "no",
            computed: "asSpecified",
            order: "orderOfAppearance",
            status: "standard"
          },
          "unicode-range": {
            syntax: "<unicode-range>#",
            media: "all",
            initial: "U+0-10FFFF",
            percentages: "no",
            computed: "asSpecified",
            order: "orderOfAppearance",
            status: "standard"
          }
        },
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/@font-face"
      },
      "@font-feature-values": {
        syntax: "@font-feature-values <family-name># {\n  <feature-value-block-list>\n}",
        interfaces: [
          "CSSFontFeatureValuesRule"
        ],
        groups: [
          "CSS Fonts"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/@font-feature-values"
      },
      "@import": {
        syntax: "@import [ <string> | <url> ]\n        [ layer | layer(<layer-name>) ]?\n        [ supports( [ <supports-condition> | <declaration> ] ) ]?\n        <media-query-list>? ;",
        groups: [
          "CSS Conditional Rules",
          "Media Queries"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/@import"
      },
      "@keyframes": {
        syntax: "@keyframes <keyframes-name> {\n  <keyframe-block-list>\n}",
        interfaces: [
          "CSSKeyframeRule",
          "CSSKeyframesRule"
        ],
        groups: [
          "CSS Animations"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/@keyframes"
      },
      "@layer": {
        syntax: "@layer [ <layer-name># | <layer-name>?  {\n  <stylesheet>\n} ]",
        interfaces: [
          "CSSLayerBlockRule",
          "CSSLayerStatementRule"
        ],
        groups: [
          "CSS Cascading and Inheritance"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/@layer"
      },
      "@media": {
        syntax: "@media <media-query-list> {\n  <group-rule-body>\n}",
        interfaces: [
          "CSSGroupingRule",
          "CSSConditionRule",
          "CSSMediaRule",
          "CSSCustomMediaRule"
        ],
        groups: [
          "CSS Conditional Rules",
          "Media Queries"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/@media"
      },
      "@namespace": {
        syntax: "@namespace <namespace-prefix>? [ <string> | <url> ];",
        groups: [
          "CSS Namespaces"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/@namespace"
      },
      "@page": {
        syntax: "@page <page-selector-list> {\n  <page-body>\n}",
        interfaces: [
          "CSSPageRule"
        ],
        groups: [
          "CSS Pages"
        ],
        descriptors: {
          bleed: {
            syntax: "auto | <length>",
            media: [
              "visual",
              "paged"
            ],
            initial: "auto",
            percentages: "no",
            computed: "asSpecified",
            order: "uniqueOrder",
            status: "standard"
          },
          marks: {
            syntax: "none | [ crop || cross ]",
            media: [
              "visual",
              "paged"
            ],
            initial: "none",
            percentages: "no",
            computed: "asSpecified",
            order: "orderOfAppearance",
            status: "standard"
          },
          size: {
            syntax: "<length>{1,2} | auto | [ <page-size> || [ portrait | landscape ] ]",
            media: [
              "visual",
              "paged"
            ],
            initial: "auto",
            percentages: "no",
            computed: "asSpecifiedRelativeToAbsoluteLengths",
            order: "orderOfAppearance",
            status: "standard"
          }
        },
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/@page"
      },
      "@property": {
        syntax: "@property <custom-property-name> {\n  <declaration-list>\n}",
        interfaces: [
          "CSS",
          "CSSPropertyRule"
        ],
        groups: [
          "CSS Houdini"
        ],
        descriptors: {
          syntax: {
            syntax: "<string>",
            media: "all",
            percentages: "no",
            initial: "n/a (required)",
            computed: "asSpecified",
            order: "uniqueOrder",
            status: "experimental"
          },
          inherits: {
            syntax: "true | false",
            media: "all",
            percentages: "no",
            initial: "auto",
            computed: "asSpecified",
            order: "uniqueOrder",
            status: "experimental"
          },
          "initial-value": {
            syntax: "<string>",
            media: "all",
            initial: "n/a (required)",
            percentages: "no",
            computed: "asSpecified",
            order: "uniqueOrder",
            status: "experimental"
          }
        },
        status: "experimental",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/@property"
      },
      "@scroll-timeline": {
        syntax: "@scroll-timeline <timeline-name> { <declaration-list> }",
        interfaces: [
          "ScrollTimeline"
        ],
        groups: [
          "CSS Animations"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/@scroll-timeline"
      },
      "@supports": {
        syntax: "@supports <supports-condition> {\n  <group-rule-body>\n}",
        interfaces: [
          "CSSGroupingRule",
          "CSSConditionRule",
          "CSSSupportsRule"
        ],
        groups: [
          "CSS Conditional Rules"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/@supports"
      },
      "@viewport": {
        syntax: "@viewport {\n  <group-rule-body>\n}",
        interfaces: [
          "CSSViewportRule"
        ],
        groups: [
          "CSS Device Adaptation"
        ],
        descriptors: {
          height: {
            syntax: "<viewport-length>{1,2}",
            media: [
              "visual",
              "continuous"
            ],
            initial: [
              "min-height",
              "max-height"
            ],
            percentages: [
              "min-height",
              "max-height"
            ],
            computed: [
              "min-height",
              "max-height"
            ],
            order: "orderOfAppearance",
            status: "standard"
          },
          "max-height": {
            syntax: "<viewport-length>",
            media: [
              "visual",
              "continuous"
            ],
            initial: "auto",
            percentages: "referToHeightOfInitialViewport",
            computed: "lengthAbsolutePercentageAsSpecifiedOtherwiseAuto",
            order: "uniqueOrder",
            status: "standard"
          },
          "max-width": {
            syntax: "<viewport-length>",
            media: [
              "visual",
              "continuous"
            ],
            initial: "auto",
            percentages: "referToWidthOfInitialViewport",
            computed: "lengthAbsolutePercentageAsSpecifiedOtherwiseAuto",
            order: "uniqueOrder",
            status: "standard"
          },
          "max-zoom": {
            syntax: "auto | <number> | <percentage>",
            media: [
              "visual",
              "continuous"
            ],
            initial: "auto",
            percentages: "the zoom factor itself",
            computed: "autoNonNegativeOrPercentage",
            order: "uniqueOrder",
            status: "standard"
          },
          "min-height": {
            syntax: "<viewport-length>",
            media: [
              "visual",
              "continuous"
            ],
            initial: "auto",
            percentages: "referToHeightOfInitialViewport",
            computed: "lengthAbsolutePercentageAsSpecifiedOtherwiseAuto",
            order: "uniqueOrder",
            status: "standard"
          },
          "min-width": {
            syntax: "<viewport-length>",
            media: [
              "visual",
              "continuous"
            ],
            initial: "auto",
            percentages: "referToWidthOfInitialViewport",
            computed: "lengthAbsolutePercentageAsSpecifiedOtherwiseAuto",
            order: "uniqueOrder",
            status: "standard"
          },
          "min-zoom": {
            syntax: "auto | <number> | <percentage>",
            media: [
              "visual",
              "continuous"
            ],
            initial: "auto",
            percentages: "the zoom factor itself",
            computed: "autoNonNegativeOrPercentage",
            order: "uniqueOrder",
            status: "standard"
          },
          orientation: {
            syntax: "auto | portrait | landscape",
            media: [
              "visual",
              "continuous"
            ],
            initial: "auto",
            percentages: "referToSizeOfBoundingBox",
            computed: "asSpecified",
            order: "uniqueOrder",
            status: "standard"
          },
          "user-zoom": {
            syntax: "zoom | fixed",
            media: [
              "visual",
              "continuous"
            ],
            initial: "zoom",
            percentages: "referToSizeOfBoundingBox",
            computed: "asSpecified",
            order: "uniqueOrder",
            status: "standard"
          },
          "viewport-fit": {
            syntax: "auto | contain | cover",
            media: [
              "visual",
              "continuous"
            ],
            initial: "auto",
            percentages: "no",
            computed: "asSpecified",
            order: "uniqueOrder",
            status: "standard"
          },
          width: {
            syntax: "<viewport-length>{1,2}",
            media: [
              "visual",
              "continuous"
            ],
            initial: [
              "min-width",
              "max-width"
            ],
            percentages: [
              "min-width",
              "max-width"
            ],
            computed: [
              "min-width",
              "max-width"
            ],
            order: "orderOfAppearance",
            status: "standard"
          },
          zoom: {
            syntax: "auto | <number> | <percentage>",
            media: [
              "visual",
              "continuous"
            ],
            initial: "auto",
            percentages: "the zoom factor itself",
            computed: "autoNonNegativeOrPercentage",
            order: "uniqueOrder",
            status: "standard"
          }
        },
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/@viewport"
      }
    };
  }
});

// node_modules/csso/node_modules/mdn-data/css/properties.json
var require_properties2 = __commonJS({
  "node_modules/csso/node_modules/mdn-data/css/properties.json"(exports, module2) {
    module2.exports = {
      "--*": {
        syntax: "<declaration-value>",
        media: "all",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Variables"
        ],
        initial: "seeProse",
        appliesto: "allElements",
        computed: "asSpecifiedWithVarsSubstituted",
        order: "perGrammar",
        status: "experimental",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/--*"
      },
      "-ms-accelerator": {
        syntax: "false | true",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "false",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-accelerator"
      },
      "-ms-block-progression": {
        syntax: "tb | rl | bt | lr",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "tb",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-block-progression"
      },
      "-ms-content-zoom-chaining": {
        syntax: "none | chained",
        media: "interactive",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "none",
        appliesto: "nonReplacedBlockAndInlineBlockElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-content-zoom-chaining"
      },
      "-ms-content-zooming": {
        syntax: "none | zoom",
        media: "interactive",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "zoomForTheTopLevelNoneForTheRest",
        appliesto: "nonReplacedBlockAndInlineBlockElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-content-zooming"
      },
      "-ms-content-zoom-limit": {
        syntax: "<'-ms-content-zoom-limit-min'> <'-ms-content-zoom-limit-max'>",
        media: "interactive",
        inherited: false,
        animationType: "discrete",
        percentages: [
          "-ms-content-zoom-limit-max",
          "-ms-content-zoom-limit-min"
        ],
        groups: [
          "Microsoft Extensions"
        ],
        initial: [
          "-ms-content-zoom-limit-max",
          "-ms-content-zoom-limit-min"
        ],
        appliesto: "nonReplacedBlockAndInlineBlockElements",
        computed: [
          "-ms-content-zoom-limit-max",
          "-ms-content-zoom-limit-min"
        ],
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-content-zoom-limit"
      },
      "-ms-content-zoom-limit-max": {
        syntax: "<percentage>",
        media: "interactive",
        inherited: false,
        animationType: "discrete",
        percentages: "maxZoomFactor",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "400%",
        appliesto: "nonReplacedBlockAndInlineBlockElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-content-zoom-limit-max"
      },
      "-ms-content-zoom-limit-min": {
        syntax: "<percentage>",
        media: "interactive",
        inherited: false,
        animationType: "discrete",
        percentages: "minZoomFactor",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "100%",
        appliesto: "nonReplacedBlockAndInlineBlockElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-content-zoom-limit-min"
      },
      "-ms-content-zoom-snap": {
        syntax: "<'-ms-content-zoom-snap-type'> || <'-ms-content-zoom-snap-points'>",
        media: "interactive",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: [
          "-ms-content-zoom-snap-type",
          "-ms-content-zoom-snap-points"
        ],
        appliesto: "nonReplacedBlockAndInlineBlockElements",
        computed: [
          "-ms-content-zoom-snap-type",
          "-ms-content-zoom-snap-points"
        ],
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-content-zoom-snap"
      },
      "-ms-content-zoom-snap-points": {
        syntax: "snapInterval( <percentage>, <percentage> ) | snapList( <percentage># )",
        media: "interactive",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "snapInterval(0%, 100%)",
        appliesto: "nonReplacedBlockAndInlineBlockElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-content-zoom-snap-points"
      },
      "-ms-content-zoom-snap-type": {
        syntax: "none | proximity | mandatory",
        media: "interactive",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "none",
        appliesto: "nonReplacedBlockAndInlineBlockElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-content-zoom-snap-type"
      },
      "-ms-filter": {
        syntax: "<string>",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: '""',
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-filter"
      },
      "-ms-flow-from": {
        syntax: "[ none | <custom-ident> ]#",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "none",
        appliesto: "nonReplacedElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-flow-from"
      },
      "-ms-flow-into": {
        syntax: "[ none | <custom-ident> ]#",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "none",
        appliesto: "iframeElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-flow-into"
      },
      "-ms-grid-columns": {
        syntax: "none | <track-list> | <auto-track-list>",
        media: "visual",
        inherited: false,
        animationType: "simpleListOfLpcDifferenceLpc",
        percentages: "referToDimensionOfContentArea",
        groups: [
          "CSS Grid Layout"
        ],
        initial: "none",
        appliesto: "gridContainers",
        computed: "asSpecifiedRelativeToAbsoluteLengths",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-grid-columns"
      },
      "-ms-grid-rows": {
        syntax: "none | <track-list> | <auto-track-list>",
        media: "visual",
        inherited: false,
        animationType: "simpleListOfLpcDifferenceLpc",
        percentages: "referToDimensionOfContentArea",
        groups: [
          "CSS Grid Layout"
        ],
        initial: "none",
        appliesto: "gridContainers",
        computed: "asSpecifiedRelativeToAbsoluteLengths",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-grid-rows"
      },
      "-ms-high-contrast-adjust": {
        syntax: "auto | none",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "auto",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-high-contrast-adjust"
      },
      "-ms-hyphenate-limit-chars": {
        syntax: "auto | <integer>{1,3}",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "auto",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-hyphenate-limit-chars"
      },
      "-ms-hyphenate-limit-lines": {
        syntax: "no-limit | <integer>",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "no-limit",
        appliesto: "blockContainerElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-hyphenate-limit-lines"
      },
      "-ms-hyphenate-limit-zone": {
        syntax: "<percentage> | <length>",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "referToLineBoxWidth",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "0",
        appliesto: "blockContainerElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-hyphenate-limit-zone"
      },
      "-ms-ime-align": {
        syntax: "auto | after",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "auto",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-ime-align"
      },
      "-ms-overflow-style": {
        syntax: "auto | none | scrollbar | -ms-autohiding-scrollbar",
        media: "interactive",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "auto",
        appliesto: "nonReplacedBlockAndInlineBlockElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-overflow-style"
      },
      "-ms-scrollbar-3dlight-color": {
        syntax: "<color>",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "dependsOnUserAgent",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-scrollbar-3dlight-color"
      },
      "-ms-scrollbar-arrow-color": {
        syntax: "<color>",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "ButtonText",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-scrollbar-arrow-color"
      },
      "-ms-scrollbar-base-color": {
        syntax: "<color>",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "dependsOnUserAgent",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-scrollbar-base-color"
      },
      "-ms-scrollbar-darkshadow-color": {
        syntax: "<color>",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "ThreeDDarkShadow",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-scrollbar-darkshadow-color"
      },
      "-ms-scrollbar-face-color": {
        syntax: "<color>",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "ThreeDFace",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-scrollbar-face-color"
      },
      "-ms-scrollbar-highlight-color": {
        syntax: "<color>",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "ThreeDHighlight",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-scrollbar-highlight-color"
      },
      "-ms-scrollbar-shadow-color": {
        syntax: "<color>",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "ThreeDDarkShadow",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-scrollbar-shadow-color"
      },
      "-ms-scrollbar-track-color": {
        syntax: "<color>",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "Scrollbar",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-scrollbar-track-color"
      },
      "-ms-scroll-chaining": {
        syntax: "chained | none",
        media: "interactive",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "chained",
        appliesto: "nonReplacedBlockAndInlineBlockElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-scroll-chaining"
      },
      "-ms-scroll-limit": {
        syntax: "<'-ms-scroll-limit-x-min'> <'-ms-scroll-limit-y-min'> <'-ms-scroll-limit-x-max'> <'-ms-scroll-limit-y-max'>",
        media: "interactive",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: [
          "-ms-scroll-limit-x-min",
          "-ms-scroll-limit-y-min",
          "-ms-scroll-limit-x-max",
          "-ms-scroll-limit-y-max"
        ],
        appliesto: "nonReplacedBlockAndInlineBlockElements",
        computed: [
          "-ms-scroll-limit-x-min",
          "-ms-scroll-limit-y-min",
          "-ms-scroll-limit-x-max",
          "-ms-scroll-limit-y-max"
        ],
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-scroll-limit"
      },
      "-ms-scroll-limit-x-max": {
        syntax: "auto | <length>",
        media: "interactive",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "auto",
        appliesto: "nonReplacedBlockAndInlineBlockElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-scroll-limit-x-max"
      },
      "-ms-scroll-limit-x-min": {
        syntax: "<length>",
        media: "interactive",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "0",
        appliesto: "nonReplacedBlockAndInlineBlockElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-scroll-limit-x-min"
      },
      "-ms-scroll-limit-y-max": {
        syntax: "auto | <length>",
        media: "interactive",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "auto",
        appliesto: "nonReplacedBlockAndInlineBlockElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-scroll-limit-y-max"
      },
      "-ms-scroll-limit-y-min": {
        syntax: "<length>",
        media: "interactive",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "0",
        appliesto: "nonReplacedBlockAndInlineBlockElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-scroll-limit-y-min"
      },
      "-ms-scroll-rails": {
        syntax: "none | railed",
        media: "interactive",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "railed",
        appliesto: "nonReplacedBlockAndInlineBlockElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-scroll-rails"
      },
      "-ms-scroll-snap-points-x": {
        syntax: "snapInterval( <length-percentage>, <length-percentage> ) | snapList( <length-percentage># )",
        media: "interactive",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "snapInterval(0px, 100%)",
        appliesto: "nonReplacedBlockAndInlineBlockElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-scroll-snap-points-x"
      },
      "-ms-scroll-snap-points-y": {
        syntax: "snapInterval( <length-percentage>, <length-percentage> ) | snapList( <length-percentage># )",
        media: "interactive",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "snapInterval(0px, 100%)",
        appliesto: "nonReplacedBlockAndInlineBlockElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-scroll-snap-points-y"
      },
      "-ms-scroll-snap-type": {
        syntax: "none | proximity | mandatory",
        media: "interactive",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "none",
        appliesto: "nonReplacedBlockAndInlineBlockElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-scroll-snap-type"
      },
      "-ms-scroll-snap-x": {
        syntax: "<'-ms-scroll-snap-type'> <'-ms-scroll-snap-points-x'>",
        media: "interactive",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: [
          "-ms-scroll-snap-type",
          "-ms-scroll-snap-points-x"
        ],
        appliesto: "nonReplacedBlockAndInlineBlockElements",
        computed: [
          "-ms-scroll-snap-type",
          "-ms-scroll-snap-points-x"
        ],
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-scroll-snap-x"
      },
      "-ms-scroll-snap-y": {
        syntax: "<'-ms-scroll-snap-type'> <'-ms-scroll-snap-points-y'>",
        media: "interactive",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: [
          "-ms-scroll-snap-type",
          "-ms-scroll-snap-points-y"
        ],
        appliesto: "nonReplacedBlockAndInlineBlockElements",
        computed: [
          "-ms-scroll-snap-type",
          "-ms-scroll-snap-points-y"
        ],
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-scroll-snap-y"
      },
      "-ms-scroll-translation": {
        syntax: "none | vertical-to-horizontal",
        media: "interactive",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "none",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-scroll-translation"
      },
      "-ms-text-autospace": {
        syntax: "none | ideograph-alpha | ideograph-numeric | ideograph-parenthesis | ideograph-space",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "none",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-text-autospace"
      },
      "-ms-touch-select": {
        syntax: "grippers | none",
        media: "interactive",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "grippers",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-touch-select"
      },
      "-ms-user-select": {
        syntax: "none | element | text",
        media: "interactive",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "text",
        appliesto: "nonReplacedElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-user-select"
      },
      "-ms-wrap-flow": {
        syntax: "auto | both | start | end | maximum | clear",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "auto",
        appliesto: "blockLevelElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-wrap-flow"
      },
      "-ms-wrap-margin": {
        syntax: "<length>",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "0",
        appliesto: "exclusionElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-wrap-margin"
      },
      "-ms-wrap-through": {
        syntax: "wrap | none",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "wrap",
        appliesto: "blockLevelElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-ms-wrap-through"
      },
      "-moz-appearance": {
        syntax: "none | button | button-arrow-down | button-arrow-next | button-arrow-previous | button-arrow-up | button-bevel | button-focus | caret | checkbox | checkbox-container | checkbox-label | checkmenuitem | dualbutton | groupbox | listbox | listitem | menuarrow | menubar | menucheckbox | menuimage | menuitem | menuitemtext | menulist | menulist-button | menulist-text | menulist-textfield | menupopup | menuradio | menuseparator | meterbar | meterchunk | progressbar | progressbar-vertical | progresschunk | progresschunk-vertical | radio | radio-container | radio-label | radiomenuitem | range | range-thumb | resizer | resizerpanel | scale-horizontal | scalethumbend | scalethumb-horizontal | scalethumbstart | scalethumbtick | scalethumb-vertical | scale-vertical | scrollbarbutton-down | scrollbarbutton-left | scrollbarbutton-right | scrollbarbutton-up | scrollbarthumb-horizontal | scrollbarthumb-vertical | scrollbartrack-horizontal | scrollbartrack-vertical | searchfield | separator | sheet | spinner | spinner-downbutton | spinner-textfield | spinner-upbutton | splitter | statusbar | statusbarpanel | tab | tabpanel | tabpanels | tab-scroll-arrow-back | tab-scroll-arrow-forward | textfield | textfield-multiline | toolbar | toolbarbutton | toolbarbutton-dropdown | toolbargripper | toolbox | tooltip | treeheader | treeheadercell | treeheadersortarrow | treeitem | treeline | treetwisty | treetwistyopen | treeview | -moz-mac-unified-toolbar | -moz-win-borderless-glass | -moz-win-browsertabbar-toolbox | -moz-win-communicationstext | -moz-win-communications-toolbox | -moz-win-exclude-glass | -moz-win-glass | -moz-win-mediatext | -moz-win-media-toolbox | -moz-window-button-box | -moz-window-button-box-maximized | -moz-window-button-close | -moz-window-button-maximize | -moz-window-button-minimize | -moz-window-button-restore | -moz-window-frame-bottom | -moz-window-frame-left | -moz-window-frame-right | -moz-window-titlebar | -moz-window-titlebar-maximized",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Mozilla Extensions",
          "WebKit Extensions"
        ],
        initial: "noneButOverriddenInUserAgentCSS",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/appearance"
      },
      "-moz-binding": {
        syntax: "<url> | none",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Mozilla Extensions"
        ],
        initial: "none",
        appliesto: "allElementsExceptGeneratedContentOrPseudoElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-moz-binding"
      },
      "-moz-border-bottom-colors": {
        syntax: "<color>+ | none",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Mozilla Extensions"
        ],
        initial: "none",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-moz-border-bottom-colors"
      },
      "-moz-border-left-colors": {
        syntax: "<color>+ | none",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Mozilla Extensions"
        ],
        initial: "none",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-moz-border-left-colors"
      },
      "-moz-border-right-colors": {
        syntax: "<color>+ | none",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Mozilla Extensions"
        ],
        initial: "none",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-moz-border-right-colors"
      },
      "-moz-border-top-colors": {
        syntax: "<color>+ | none",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Mozilla Extensions"
        ],
        initial: "none",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-moz-border-top-colors"
      },
      "-moz-context-properties": {
        syntax: "none | [ fill | fill-opacity | stroke | stroke-opacity ]#",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Mozilla Extensions"
        ],
        initial: "none",
        appliesto: "allElementsThatCanReferenceImages",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-moz-context-properties"
      },
      "-moz-float-edge": {
        syntax: "border-box | content-box | margin-box | padding-box",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Mozilla Extensions"
        ],
        initial: "content-box",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-moz-float-edge"
      },
      "-moz-force-broken-image-icon": {
        syntax: "0 | 1",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Mozilla Extensions"
        ],
        initial: "0",
        appliesto: "images",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-moz-force-broken-image-icon"
      },
      "-moz-image-region": {
        syntax: "<shape> | auto",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Mozilla Extensions"
        ],
        initial: "auto",
        appliesto: "xulImageElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-moz-image-region"
      },
      "-moz-orient": {
        syntax: "inline | block | horizontal | vertical",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Mozilla Extensions"
        ],
        initial: "inline",
        appliesto: "anyElementEffectOnProgressAndMeter",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-moz-orient"
      },
      "-moz-outline-radius": {
        syntax: "<outline-radius>{1,4} [ / <outline-radius>{1,4} ]?",
        media: "visual",
        inherited: false,
        animationType: [
          "-moz-outline-radius-topleft",
          "-moz-outline-radius-topright",
          "-moz-outline-radius-bottomright",
          "-moz-outline-radius-bottomleft"
        ],
        percentages: [
          "-moz-outline-radius-topleft",
          "-moz-outline-radius-topright",
          "-moz-outline-radius-bottomright",
          "-moz-outline-radius-bottomleft"
        ],
        groups: [
          "Mozilla Extensions"
        ],
        initial: [
          "-moz-outline-radius-topleft",
          "-moz-outline-radius-topright",
          "-moz-outline-radius-bottomright",
          "-moz-outline-radius-bottomleft"
        ],
        appliesto: "allElements",
        computed: [
          "-moz-outline-radius-topleft",
          "-moz-outline-radius-topright",
          "-moz-outline-radius-bottomright",
          "-moz-outline-radius-bottomleft"
        ],
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-moz-outline-radius"
      },
      "-moz-outline-radius-bottomleft": {
        syntax: "<outline-radius>",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "referToDimensionOfBorderBox",
        groups: [
          "Mozilla Extensions"
        ],
        initial: "0",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-moz-outline-radius-bottomleft"
      },
      "-moz-outline-radius-bottomright": {
        syntax: "<outline-radius>",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "referToDimensionOfBorderBox",
        groups: [
          "Mozilla Extensions"
        ],
        initial: "0",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-moz-outline-radius-bottomright"
      },
      "-moz-outline-radius-topleft": {
        syntax: "<outline-radius>",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "referToDimensionOfBorderBox",
        groups: [
          "Mozilla Extensions"
        ],
        initial: "0",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-moz-outline-radius-topleft"
      },
      "-moz-outline-radius-topright": {
        syntax: "<outline-radius>",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "referToDimensionOfBorderBox",
        groups: [
          "Mozilla Extensions"
        ],
        initial: "0",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-moz-outline-radius-topright"
      },
      "-moz-stack-sizing": {
        syntax: "ignore | stretch-to-fit",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Mozilla Extensions"
        ],
        initial: "stretch-to-fit",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-moz-stack-sizing"
      },
      "-moz-text-blink": {
        syntax: "none | blink",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Mozilla Extensions"
        ],
        initial: "none",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-moz-text-blink"
      },
      "-moz-user-focus": {
        syntax: "ignore | normal | select-after | select-before | select-menu | select-same | select-all | none",
        media: "interactive",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Mozilla Extensions"
        ],
        initial: "none",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-moz-user-focus"
      },
      "-moz-user-input": {
        syntax: "auto | none | enabled | disabled",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Mozilla Extensions"
        ],
        initial: "auto",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-moz-user-input"
      },
      "-moz-user-modify": {
        syntax: "read-only | read-write | write-only",
        media: "interactive",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Mozilla Extensions"
        ],
        initial: "read-only",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-moz-user-modify"
      },
      "-moz-window-dragging": {
        syntax: "drag | no-drag",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Mozilla Extensions"
        ],
        initial: "drag",
        appliesto: "allElementsCreatingNativeWindows",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-moz-window-dragging"
      },
      "-moz-window-shadow": {
        syntax: "default | menu | tooltip | sheet | none",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Mozilla Extensions"
        ],
        initial: "default",
        appliesto: "allElementsCreatingNativeWindows",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-moz-window-shadow"
      },
      "-webkit-appearance": {
        syntax: "none | button | button-bevel | caret | checkbox | default-button | inner-spin-button | listbox | listitem | media-controls-background | media-controls-fullscreen-background | media-current-time-display | media-enter-fullscreen-button | media-exit-fullscreen-button | media-fullscreen-button | media-mute-button | media-overlay-play-button | media-play-button | media-seek-back-button | media-seek-forward-button | media-slider | media-sliderthumb | media-time-remaining-display | media-toggle-closed-captions-button | media-volume-slider | media-volume-slider-container | media-volume-sliderthumb | menulist | menulist-button | menulist-text | menulist-textfield | meter | progress-bar | progress-bar-value | push-button | radio | searchfield | searchfield-cancel-button | searchfield-decoration | searchfield-results-button | searchfield-results-decoration | slider-horizontal | slider-vertical | sliderthumb-horizontal | sliderthumb-vertical | square-button | textarea | textfield | -apple-pay-button",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "WebKit Extensions"
        ],
        initial: "noneButOverriddenInUserAgentCSS",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/appearance"
      },
      "-webkit-border-before": {
        syntax: "<'border-width'> || <'border-style'> || <color>",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: [
          "-webkit-border-before-width"
        ],
        groups: [
          "WebKit Extensions"
        ],
        initial: [
          "border-width",
          "border-style",
          "color"
        ],
        appliesto: "allElements",
        computed: [
          "border-width",
          "border-style",
          "color"
        ],
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-webkit-border-before"
      },
      "-webkit-border-before-color": {
        syntax: "<color>",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "WebKit Extensions"
        ],
        initial: "currentcolor",
        appliesto: "allElements",
        computed: "computedColor",
        order: "uniqueOrder",
        status: "nonstandard"
      },
      "-webkit-border-before-style": {
        syntax: "<'border-style'>",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "WebKit Extensions"
        ],
        initial: "none",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard"
      },
      "-webkit-border-before-width": {
        syntax: "<'border-width'>",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "logicalWidthOfContainingBlock",
        groups: [
          "WebKit Extensions"
        ],
        initial: "medium",
        appliesto: "allElements",
        computed: "absoluteLengthZeroIfBorderStyleNoneOrHidden",
        order: "uniqueOrder",
        status: "nonstandard"
      },
      "-webkit-box-reflect": {
        syntax: "[ above | below | right | left ]? <length>? <image>?",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "WebKit Extensions"
        ],
        initial: "none",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-webkit-box-reflect"
      },
      "-webkit-line-clamp": {
        syntax: "none | <integer>",
        media: "visual",
        inherited: false,
        animationType: "byComputedValueType",
        percentages: "no",
        groups: [
          "WebKit Extensions",
          "CSS Overflow"
        ],
        initial: "none",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-webkit-line-clamp"
      },
      "-webkit-mask": {
        syntax: "[ <mask-reference> || <position> [ / <bg-size> ]? || <repeat-style> || [ <box> | border | padding | content | text ] || [ <box> | border | padding | content ] ]#",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "WebKit Extensions"
        ],
        initial: [
          "-webkit-mask-image",
          "-webkit-mask-repeat",
          "-webkit-mask-attachment",
          "-webkit-mask-position",
          "-webkit-mask-origin",
          "-webkit-mask-clip"
        ],
        appliesto: "allElements",
        computed: [
          "-webkit-mask-image",
          "-webkit-mask-repeat",
          "-webkit-mask-attachment",
          "-webkit-mask-position",
          "-webkit-mask-origin",
          "-webkit-mask-clip"
        ],
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/mask"
      },
      "-webkit-mask-attachment": {
        syntax: "<attachment>#",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "WebKit Extensions"
        ],
        initial: "scroll",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "orderOfAppearance",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-webkit-mask-attachment"
      },
      "-webkit-mask-clip": {
        syntax: "[ <box> | border | padding | content | text ]#",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "WebKit Extensions"
        ],
        initial: "border",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "orderOfAppearance",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/mask-clip"
      },
      "-webkit-mask-composite": {
        syntax: "<composite-style>#",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "WebKit Extensions"
        ],
        initial: "source-over",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "orderOfAppearance",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-webkit-mask-composite"
      },
      "-webkit-mask-image": {
        syntax: "<mask-reference>#",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "WebKit Extensions"
        ],
        initial: "none",
        appliesto: "allElements",
        computed: "absoluteURIOrNone",
        order: "orderOfAppearance",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/mask-image"
      },
      "-webkit-mask-origin": {
        syntax: "[ <box> | border | padding | content ]#",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "WebKit Extensions"
        ],
        initial: "padding",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "orderOfAppearance",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/mask-origin"
      },
      "-webkit-mask-position": {
        syntax: "<position>#",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "referToSizeOfElement",
        groups: [
          "WebKit Extensions"
        ],
        initial: "0% 0%",
        appliesto: "allElements",
        computed: "absoluteLengthOrPercentage",
        order: "orderOfAppearance",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/mask-position"
      },
      "-webkit-mask-position-x": {
        syntax: "[ <length-percentage> | left | center | right ]#",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "referToSizeOfElement",
        groups: [
          "WebKit Extensions"
        ],
        initial: "0%",
        appliesto: "allElements",
        computed: "absoluteLengthOrPercentage",
        order: "orderOfAppearance",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-webkit-mask-position-x"
      },
      "-webkit-mask-position-y": {
        syntax: "[ <length-percentage> | top | center | bottom ]#",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "referToSizeOfElement",
        groups: [
          "WebKit Extensions"
        ],
        initial: "0%",
        appliesto: "allElements",
        computed: "absoluteLengthOrPercentage",
        order: "orderOfAppearance",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-webkit-mask-position-y"
      },
      "-webkit-mask-repeat": {
        syntax: "<repeat-style>#",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "WebKit Extensions"
        ],
        initial: "repeat",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "orderOfAppearance",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/mask-repeat"
      },
      "-webkit-mask-repeat-x": {
        syntax: "repeat | no-repeat | space | round",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "WebKit Extensions"
        ],
        initial: "repeat",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "orderOfAppearance",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-webkit-mask-repeat-x"
      },
      "-webkit-mask-repeat-y": {
        syntax: "repeat | no-repeat | space | round",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "WebKit Extensions"
        ],
        initial: "repeat",
        appliesto: "allElements",
        computed: "absoluteLengthOrPercentage",
        order: "orderOfAppearance",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-webkit-mask-repeat-y"
      },
      "-webkit-mask-size": {
        syntax: "<bg-size>#",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "relativeToBackgroundPositioningArea",
        groups: [
          "WebKit Extensions"
        ],
        initial: "auto auto",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "orderOfAppearance",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/mask-size"
      },
      "-webkit-overflow-scrolling": {
        syntax: "auto | touch",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "WebKit Extensions"
        ],
        initial: "auto",
        appliesto: "scrollingBoxes",
        computed: "asSpecified",
        order: "orderOfAppearance",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-webkit-overflow-scrolling"
      },
      "-webkit-tap-highlight-color": {
        syntax: "<color>",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "WebKit Extensions"
        ],
        initial: "black",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-webkit-tap-highlight-color"
      },
      "-webkit-text-fill-color": {
        syntax: "<color>",
        media: "visual",
        inherited: true,
        animationType: "color",
        percentages: "no",
        groups: [
          "WebKit Extensions"
        ],
        initial: "currentcolor",
        appliesto: "allElements",
        computed: "computedColor",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-webkit-text-fill-color"
      },
      "-webkit-text-stroke": {
        syntax: "<length> || <color>",
        media: "visual",
        inherited: true,
        animationType: [
          "-webkit-text-stroke-width",
          "-webkit-text-stroke-color"
        ],
        percentages: "no",
        groups: [
          "WebKit Extensions"
        ],
        initial: [
          "-webkit-text-stroke-width",
          "-webkit-text-stroke-color"
        ],
        appliesto: "allElements",
        computed: [
          "-webkit-text-stroke-width",
          "-webkit-text-stroke-color"
        ],
        order: "canonicalOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-webkit-text-stroke"
      },
      "-webkit-text-stroke-color": {
        syntax: "<color>",
        media: "visual",
        inherited: true,
        animationType: "color",
        percentages: "no",
        groups: [
          "WebKit Extensions"
        ],
        initial: "currentcolor",
        appliesto: "allElements",
        computed: "computedColor",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-webkit-text-stroke-color"
      },
      "-webkit-text-stroke-width": {
        syntax: "<length>",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "WebKit Extensions"
        ],
        initial: "0",
        appliesto: "allElements",
        computed: "absoluteLength",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-webkit-text-stroke-width"
      },
      "-webkit-touch-callout": {
        syntax: "default | none",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "WebKit Extensions"
        ],
        initial: "default",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/-webkit-touch-callout"
      },
      "-webkit-user-modify": {
        syntax: "read-only | read-write | read-write-plaintext-only",
        media: "interactive",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "WebKit Extensions"
        ],
        initial: "read-only",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard"
      },
      "accent-color": {
        syntax: "auto | <color>",
        media: "interactive",
        inherited: true,
        animationType: "byComputedValueType",
        percentages: "no",
        groups: [
          "CSS Basic User Interface"
        ],
        initial: "auto",
        appliesto: "allElements",
        computed: "asAutoOrColor",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/accent-color"
      },
      "align-content": {
        syntax: "normal | <baseline-position> | <content-distribution> | <overflow-position>? <content-position>",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Box Alignment"
        ],
        initial: "normal",
        appliesto: "multilineFlexContainers",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/align-content"
      },
      "align-items": {
        syntax: "normal | stretch | <baseline-position> | [ <overflow-position>? <self-position> ]",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Box Alignment"
        ],
        initial: "normal",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/align-items"
      },
      "align-self": {
        syntax: "auto | normal | stretch | <baseline-position> | <overflow-position>? <self-position>",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Box Alignment"
        ],
        initial: "auto",
        appliesto: "flexItemsGridItemsAndAbsolutelyPositionedBoxes",
        computed: "autoOnAbsolutelyPositionedElementsValueOfAlignItemsOnParent",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/align-self"
      },
      "align-tracks": {
        syntax: "[ normal | <baseline-position> | <content-distribution> | <overflow-position>? <content-position> ]#",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Grid Layout"
        ],
        initial: "normal",
        appliesto: "gridContainersWithMasonryLayoutInTheirBlockAxis",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "experimental",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/align-tracks"
      },
      all: {
        syntax: "initial | inherit | unset | revert | revert-layer",
        media: "noPracticalMedia",
        inherited: false,
        animationType: "eachOfShorthandPropertiesExceptUnicodeBiDiAndDirection",
        percentages: "no",
        groups: [
          "CSS Miscellaneous"
        ],
        initial: "noPracticalInitialValue",
        appliesto: "allElements",
        computed: "asSpecifiedAppliesToEachProperty",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/all"
      },
      animation: {
        syntax: "<single-animation>#",
        media: "visual",
        inherited: false,
        animationType: "notAnimatable",
        percentages: "no",
        groups: [
          "CSS Animations"
        ],
        initial: [
          "animation-name",
          "animation-duration",
          "animation-timing-function",
          "animation-delay",
          "animation-iteration-count",
          "animation-direction",
          "animation-fill-mode",
          "animation-play-state",
          "animation-timeline"
        ],
        appliesto: "allElementsAndPseudos",
        computed: [
          "animation-name",
          "animation-duration",
          "animation-timing-function",
          "animation-delay",
          "animation-direction",
          "animation-iteration-count",
          "animation-fill-mode",
          "animation-play-state",
          "animation-timeline"
        ],
        order: "orderOfAppearance",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/animation"
      },
      "animation-delay": {
        syntax: "<time>#",
        media: "visual",
        inherited: false,
        animationType: "notAnimatable",
        percentages: "no",
        groups: [
          "CSS Animations"
        ],
        initial: "0s",
        appliesto: "allElementsAndPseudos",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/animation-delay"
      },
      "animation-direction": {
        syntax: "<single-animation-direction>#",
        media: "visual",
        inherited: false,
        animationType: "notAnimatable",
        percentages: "no",
        groups: [
          "CSS Animations"
        ],
        initial: "normal",
        appliesto: "allElementsAndPseudos",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/animation-direction"
      },
      "animation-duration": {
        syntax: "<time>#",
        media: "visual",
        inherited: false,
        animationType: "notAnimatable",
        percentages: "no",
        groups: [
          "CSS Animations"
        ],
        initial: "0s",
        appliesto: "allElementsAndPseudos",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/animation-duration"
      },
      "animation-fill-mode": {
        syntax: "<single-animation-fill-mode>#",
        media: "visual",
        inherited: false,
        animationType: "notAnimatable",
        percentages: "no",
        groups: [
          "CSS Animations"
        ],
        initial: "none",
        appliesto: "allElementsAndPseudos",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/animation-fill-mode"
      },
      "animation-iteration-count": {
        syntax: "<single-animation-iteration-count>#",
        media: "visual",
        inherited: false,
        animationType: "notAnimatable",
        percentages: "no",
        groups: [
          "CSS Animations"
        ],
        initial: "1",
        appliesto: "allElementsAndPseudos",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/animation-iteration-count"
      },
      "animation-name": {
        syntax: "[ none | <keyframes-name> ]#",
        media: "visual",
        inherited: false,
        animationType: "notAnimatable",
        percentages: "no",
        groups: [
          "CSS Animations"
        ],
        initial: "none",
        appliesto: "allElementsAndPseudos",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/animation-name"
      },
      "animation-play-state": {
        syntax: "<single-animation-play-state>#",
        media: "visual",
        inherited: false,
        animationType: "notAnimatable",
        percentages: "no",
        groups: [
          "CSS Animations"
        ],
        initial: "running",
        appliesto: "allElementsAndPseudos",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/animation-play-state"
      },
      "animation-timing-function": {
        syntax: "<easing-function>#",
        media: "visual",
        inherited: false,
        animationType: "notAnimatable",
        percentages: "no",
        groups: [
          "CSS Animations"
        ],
        initial: "ease",
        appliesto: "allElementsAndPseudos",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/animation-timing-function"
      },
      "animation-timeline": {
        syntax: "<single-animation-timeline>#",
        media: "visual",
        inherited: false,
        animationType: "notAnimatable",
        percentages: "no",
        groups: [
          "CSS Animations"
        ],
        initial: "auto",
        appliesto: "allElements",
        computed: "listEachItemIdentifyerOrNoneAuto",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/animation-timeline"
      },
      appearance: {
        syntax: "none | auto | textfield | menulist-button | <compat-auto>",
        media: "all",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Basic User Interface"
        ],
        initial: "none",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "perGrammar",
        status: "experimental",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/appearance"
      },
      "aspect-ratio": {
        syntax: "auto | <ratio>",
        media: "all",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Basic User Interface"
        ],
        initial: "auto",
        appliesto: "allElementsExceptInlineBoxesAndInternalRubyOrTableBoxes",
        computed: "asSpecified",
        order: "perGrammar",
        status: "experimental",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/aspect-ratio"
      },
      azimuth: {
        syntax: "<angle> | [ [ left-side | far-left | left | center-left | center | center-right | right | far-right | right-side ] || behind ] | leftwards | rightwards",
        media: "aural",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Speech"
        ],
        initial: "center",
        appliesto: "allElements",
        computed: "normalizedAngle",
        order: "orderOfAppearance",
        status: "obsolete",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/azimuth"
      },
      "backdrop-filter": {
        syntax: "none | <filter-function-list>",
        media: "visual",
        inherited: false,
        animationType: "filterList",
        percentages: "no",
        groups: [
          "Filter Effects"
        ],
        initial: "none",
        appliesto: "allElementsSVGContainerElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/backdrop-filter"
      },
      "backface-visibility": {
        syntax: "visible | hidden",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Transforms"
        ],
        initial: "visible",
        appliesto: "transformableElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/backface-visibility"
      },
      background: {
        syntax: "[ <bg-layer> , ]* <final-bg-layer>",
        media: "visual",
        inherited: false,
        animationType: [
          "background-color",
          "background-image",
          "background-clip",
          "background-position",
          "background-size",
          "background-repeat",
          "background-attachment"
        ],
        percentages: [
          "background-position",
          "background-size"
        ],
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: [
          "background-image",
          "background-position",
          "background-size",
          "background-repeat",
          "background-origin",
          "background-clip",
          "background-attachment",
          "background-color"
        ],
        appliesto: "allElements",
        computed: [
          "background-image",
          "background-position",
          "background-size",
          "background-repeat",
          "background-origin",
          "background-clip",
          "background-attachment",
          "background-color"
        ],
        order: "orderOfAppearance",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/background"
      },
      "background-attachment": {
        syntax: "<attachment>#",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: "scroll",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/background-attachment"
      },
      "background-blend-mode": {
        syntax: "<blend-mode>#",
        media: "none",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Compositing and Blending"
        ],
        initial: "normal",
        appliesto: "allElementsSVGContainerGraphicsAndGraphicsReferencingElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/background-blend-mode"
      },
      "background-clip": {
        syntax: "<box>#",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: "border-box",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/background-clip"
      },
      "background-color": {
        syntax: "<color>",
        media: "visual",
        inherited: false,
        animationType: "color",
        percentages: "no",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: "transparent",
        appliesto: "allElements",
        computed: "computedColor",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/background-color"
      },
      "background-image": {
        syntax: "<bg-image>#",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: "none",
        appliesto: "allElements",
        computed: "asSpecifiedURLsAbsolute",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/background-image"
      },
      "background-origin": {
        syntax: "<box>#",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: "padding-box",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/background-origin"
      },
      "background-position": {
        syntax: "<bg-position>#",
        media: "visual",
        inherited: false,
        animationType: "repeatableListOfSimpleListOfLpc",
        percentages: "referToSizeOfBackgroundPositioningAreaMinusBackgroundImageSize",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: "0% 0%",
        appliesto: "allElements",
        computed: [
          "background-position-x",
          "background-position-y"
        ],
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/background-position"
      },
      "background-position-x": {
        syntax: "[ center | [ [ left | right | x-start | x-end ]? <length-percentage>? ]! ]#",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "referToWidthOfBackgroundPositioningAreaMinusBackgroundImageHeight",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: "0%",
        appliesto: "allElements",
        computed: "listEachItemConsistingOfAbsoluteLengthPercentageAndOrigin",
        order: "uniqueOrder",
        status: "experimental",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/background-position-x"
      },
      "background-position-y": {
        syntax: "[ center | [ [ top | bottom | y-start | y-end ]? <length-percentage>? ]! ]#",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "referToHeightOfBackgroundPositioningAreaMinusBackgroundImageHeight",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: "0%",
        appliesto: "allElements",
        computed: "listEachItemConsistingOfAbsoluteLengthPercentageAndOrigin",
        order: "uniqueOrder",
        status: "experimental",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/background-position-y"
      },
      "background-repeat": {
        syntax: "<repeat-style>#",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: "repeat",
        appliesto: "allElements",
        computed: "listEachItemHasTwoKeywordsOnePerDimension",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/background-repeat"
      },
      "background-size": {
        syntax: "<bg-size>#",
        media: "visual",
        inherited: false,
        animationType: "repeatableListOfSimpleListOfLpc",
        percentages: "relativeToBackgroundPositioningArea",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: "auto auto",
        appliesto: "allElements",
        computed: "asSpecifiedRelativeToAbsoluteLengths",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/background-size"
      },
      "block-overflow": {
        syntax: "clip | ellipsis | <string>",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Overflow"
        ],
        initial: "clip",
        appliesto: "blockContainers",
        computed: "asSpecified",
        order: "perGrammar",
        status: "experimental"
      },
      "block-size": {
        syntax: "<'width'>",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "blockSizeOfContainingBlock",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "auto",
        appliesto: "sameAsWidthAndHeight",
        computed: "sameAsWidthAndHeight",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/block-size"
      },
      border: {
        syntax: "<line-width> || <line-style> || <color>",
        media: "visual",
        inherited: false,
        animationType: [
          "border-color",
          "border-style",
          "border-width"
        ],
        percentages: "no",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: [
          "border-width",
          "border-style",
          "border-color"
        ],
        appliesto: "allElements",
        computed: [
          "border-width",
          "border-style",
          "border-color"
        ],
        order: "orderOfAppearance",
        alsoAppliesTo: [
          "::first-letter"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border"
      },
      "border-block": {
        syntax: "<'border-top-width'> || <'border-top-style'> || <color>",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Logical Properties"
        ],
        initial: [
          "border-top-width",
          "border-top-style",
          "border-top-color"
        ],
        appliesto: "allElements",
        computed: [
          "border-top-width",
          "border-top-style",
          "border-top-color"
        ],
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-block"
      },
      "border-block-color": {
        syntax: "<'border-top-color'>{1,2}",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "currentcolor",
        appliesto: "allElements",
        computed: "computedColor",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-block-color"
      },
      "border-block-style": {
        syntax: "<'border-top-style'>",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "none",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-block-style"
      },
      "border-block-width": {
        syntax: "<'border-top-width'>",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "logicalWidthOfContainingBlock",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "medium",
        appliesto: "allElements",
        computed: "absoluteLengthZeroIfBorderStyleNoneOrHidden",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-block-width"
      },
      "border-block-end": {
        syntax: "<'border-top-width'> || <'border-top-style'> || <color>",
        media: "visual",
        inherited: false,
        animationType: [
          "border-block-end-color",
          "border-block-end-style",
          "border-block-end-width"
        ],
        percentages: "no",
        groups: [
          "CSS Logical Properties"
        ],
        initial: [
          "border-top-width",
          "border-top-style",
          "border-top-color"
        ],
        appliesto: "allElements",
        computed: [
          "border-top-width",
          "border-top-style",
          "border-top-color"
        ],
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-block-end"
      },
      "border-block-end-color": {
        syntax: "<'border-top-color'>",
        media: "visual",
        inherited: false,
        animationType: "color",
        percentages: "no",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "currentcolor",
        appliesto: "allElements",
        computed: "computedColor",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-block-end-color"
      },
      "border-block-end-style": {
        syntax: "<'border-top-style'>",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "none",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-block-end-style"
      },
      "border-block-end-width": {
        syntax: "<'border-top-width'>",
        media: "visual",
        inherited: false,
        animationType: "length",
        percentages: "logicalWidthOfContainingBlock",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "medium",
        appliesto: "allElements",
        computed: "absoluteLengthZeroIfBorderStyleNoneOrHidden",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-block-end-width"
      },
      "border-block-start": {
        syntax: "<'border-top-width'> || <'border-top-style'> || <color>",
        media: "visual",
        inherited: false,
        animationType: [
          "border-block-start-color",
          "border-block-start-style",
          "border-block-start-width"
        ],
        percentages: "no",
        groups: [
          "CSS Logical Properties"
        ],
        initial: [
          "border-width",
          "border-style",
          "color"
        ],
        appliesto: "allElements",
        computed: [
          "border-width",
          "border-style",
          "border-block-start-color"
        ],
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-block-start"
      },
      "border-block-start-color": {
        syntax: "<'border-top-color'>",
        media: "visual",
        inherited: false,
        animationType: "color",
        percentages: "no",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "currentcolor",
        appliesto: "allElements",
        computed: "computedColor",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-block-start-color"
      },
      "border-block-start-style": {
        syntax: "<'border-top-style'>",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "none",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-block-start-style"
      },
      "border-block-start-width": {
        syntax: "<'border-top-width'>",
        media: "visual",
        inherited: false,
        animationType: "length",
        percentages: "logicalWidthOfContainingBlock",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "medium",
        appliesto: "allElements",
        computed: "absoluteLengthZeroIfBorderStyleNoneOrHidden",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-block-start-width"
      },
      "border-bottom": {
        syntax: "<line-width> || <line-style> || <color>",
        media: "visual",
        inherited: false,
        animationType: [
          "border-bottom-color",
          "border-bottom-style",
          "border-bottom-width"
        ],
        percentages: "no",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: [
          "border-bottom-width",
          "border-bottom-style",
          "border-bottom-color"
        ],
        appliesto: "allElements",
        computed: [
          "border-bottom-width",
          "border-bottom-style",
          "border-bottom-color"
        ],
        order: "orderOfAppearance",
        alsoAppliesTo: [
          "::first-letter"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-bottom"
      },
      "border-bottom-color": {
        syntax: "<'border-top-color'>",
        media: "visual",
        inherited: false,
        animationType: "color",
        percentages: "no",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: "currentcolor",
        appliesto: "allElements",
        computed: "computedColor",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-bottom-color"
      },
      "border-bottom-left-radius": {
        syntax: "<length-percentage>{1,2}",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "referToDimensionOfBorderBox",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: "0",
        appliesto: "allElementsUAsNotRequiredWhenCollapse",
        computed: "twoAbsoluteLengthOrPercentages",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-bottom-left-radius"
      },
      "border-bottom-right-radius": {
        syntax: "<length-percentage>{1,2}",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "referToDimensionOfBorderBox",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: "0",
        appliesto: "allElementsUAsNotRequiredWhenCollapse",
        computed: "twoAbsoluteLengthOrPercentages",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-bottom-right-radius"
      },
      "border-bottom-style": {
        syntax: "<line-style>",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: "none",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-bottom-style"
      },
      "border-bottom-width": {
        syntax: "<line-width>",
        media: "visual",
        inherited: false,
        animationType: "length",
        percentages: "no",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: "medium",
        appliesto: "allElements",
        computed: "absoluteLengthOr0IfBorderBottomStyleNoneOrHidden",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-bottom-width"
      },
      "border-collapse": {
        syntax: "collapse | separate",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Table"
        ],
        initial: "separate",
        appliesto: "tableElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-collapse"
      },
      "border-color": {
        syntax: "<color>{1,4}",
        media: "visual",
        inherited: false,
        animationType: [
          "border-bottom-color",
          "border-left-color",
          "border-right-color",
          "border-top-color"
        ],
        percentages: "no",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: [
          "border-top-color",
          "border-right-color",
          "border-bottom-color",
          "border-left-color"
        ],
        appliesto: "allElements",
        computed: [
          "border-bottom-color",
          "border-left-color",
          "border-right-color",
          "border-top-color"
        ],
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-color"
      },
      "border-end-end-radius": {
        syntax: "<length-percentage>{1,2}",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "referToDimensionOfBorderBox",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "0",
        appliesto: "allElementsUAsNotRequiredWhenCollapse",
        computed: "twoAbsoluteLengthOrPercentages",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-end-end-radius"
      },
      "border-end-start-radius": {
        syntax: "<length-percentage>{1,2}",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "referToDimensionOfBorderBox",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "0",
        appliesto: "allElementsUAsNotRequiredWhenCollapse",
        computed: "twoAbsoluteLengthOrPercentages",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-end-start-radius"
      },
      "border-image": {
        syntax: "<'border-image-source'> || <'border-image-slice'> [ / <'border-image-width'> | / <'border-image-width'>? / <'border-image-outset'> ]? || <'border-image-repeat'>",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: [
          "border-image-slice",
          "border-image-width"
        ],
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: [
          "border-image-source",
          "border-image-slice",
          "border-image-width",
          "border-image-outset",
          "border-image-repeat"
        ],
        appliesto: "allElementsExceptTableElementsWhenCollapse",
        computed: [
          "border-image-outset",
          "border-image-repeat",
          "border-image-slice",
          "border-image-source",
          "border-image-width"
        ],
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-image"
      },
      "border-image-outset": {
        syntax: "[ <length> | <number> ]{1,4}",
        media: "visual",
        inherited: false,
        animationType: "byComputedValueType",
        percentages: "no",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: "0",
        appliesto: "allElementsExceptTableElementsWhenCollapse",
        computed: "asSpecifiedRelativeToAbsoluteLengths",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-image-outset"
      },
      "border-image-repeat": {
        syntax: "[ stretch | repeat | round | space ]{1,2}",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: "stretch",
        appliesto: "allElementsExceptTableElementsWhenCollapse",
        computed: "asSpecified",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-image-repeat"
      },
      "border-image-slice": {
        syntax: "<number-percentage>{1,4} && fill?",
        media: "visual",
        inherited: false,
        animationType: "byComputedValueType",
        percentages: "referToSizeOfBorderImage",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: "100%",
        appliesto: "allElementsExceptTableElementsWhenCollapse",
        computed: "oneToFourPercentagesOrAbsoluteLengthsPlusFill",
        order: "percentagesOrLengthsFollowedByFill",
        alsoAppliesTo: [
          "::first-letter"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-image-slice"
      },
      "border-image-source": {
        syntax: "none | <image>",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: "none",
        appliesto: "allElementsExceptTableElementsWhenCollapse",
        computed: "noneOrImageWithAbsoluteURI",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-image-source"
      },
      "border-image-width": {
        syntax: "[ <length-percentage> | <number> | auto ]{1,4}",
        media: "visual",
        inherited: false,
        animationType: "byComputedValueType",
        percentages: "referToWidthOrHeightOfBorderImageArea",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: "1",
        appliesto: "allElementsExceptTableElementsWhenCollapse",
        computed: "asSpecifiedRelativeToAbsoluteLengths",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-image-width"
      },
      "border-inline": {
        syntax: "<'border-top-width'> || <'border-top-style'> || <color>",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Logical Properties"
        ],
        initial: [
          "border-top-width",
          "border-top-style",
          "border-top-color"
        ],
        appliesto: "allElements",
        computed: [
          "border-top-width",
          "border-top-style",
          "border-top-color"
        ],
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-inline"
      },
      "border-inline-end": {
        syntax: "<'border-top-width'> || <'border-top-style'> || <color>",
        media: "visual",
        inherited: false,
        animationType: [
          "border-inline-end-color",
          "border-inline-end-style",
          "border-inline-end-width"
        ],
        percentages: "no",
        groups: [
          "CSS Logical Properties"
        ],
        initial: [
          "border-width",
          "border-style",
          "color"
        ],
        appliesto: "allElements",
        computed: [
          "border-width",
          "border-style",
          "border-inline-end-color"
        ],
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-inline-end"
      },
      "border-inline-color": {
        syntax: "<'border-top-color'>{1,2}",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "currentcolor",
        appliesto: "allElements",
        computed: "computedColor",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-inline-color"
      },
      "border-inline-style": {
        syntax: "<'border-top-style'>",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "none",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-inline-style"
      },
      "border-inline-width": {
        syntax: "<'border-top-width'>",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "logicalWidthOfContainingBlock",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "medium",
        appliesto: "allElements",
        computed: "absoluteLengthZeroIfBorderStyleNoneOrHidden",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-inline-width"
      },
      "border-inline-end-color": {
        syntax: "<'border-top-color'>",
        media: "visual",
        inherited: false,
        animationType: "color",
        percentages: "no",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "currentcolor",
        appliesto: "allElements",
        computed: "computedColor",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-inline-end-color"
      },
      "border-inline-end-style": {
        syntax: "<'border-top-style'>",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "none",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-inline-end-style"
      },
      "border-inline-end-width": {
        syntax: "<'border-top-width'>",
        media: "visual",
        inherited: false,
        animationType: "length",
        percentages: "logicalWidthOfContainingBlock",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "medium",
        appliesto: "allElements",
        computed: "absoluteLengthZeroIfBorderStyleNoneOrHidden",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-inline-end-width"
      },
      "border-inline-start": {
        syntax: "<'border-top-width'> || <'border-top-style'> || <color>",
        media: "visual",
        inherited: false,
        animationType: [
          "border-inline-start-color",
          "border-inline-start-style",
          "border-inline-start-width"
        ],
        percentages: "no",
        groups: [
          "CSS Logical Properties"
        ],
        initial: [
          "border-width",
          "border-style",
          "color"
        ],
        appliesto: "allElements",
        computed: [
          "border-width",
          "border-style",
          "border-inline-start-color"
        ],
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-inline-start"
      },
      "border-inline-start-color": {
        syntax: "<'border-top-color'>",
        media: "visual",
        inherited: false,
        animationType: "color",
        percentages: "no",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "currentcolor",
        appliesto: "allElements",
        computed: "computedColor",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-inline-start-color"
      },
      "border-inline-start-style": {
        syntax: "<'border-top-style'>",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "none",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-inline-start-style"
      },
      "border-inline-start-width": {
        syntax: "<'border-top-width'>",
        media: "visual",
        inherited: false,
        animationType: "length",
        percentages: "logicalWidthOfContainingBlock",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "medium",
        appliesto: "allElements",
        computed: "absoluteLengthZeroIfBorderStyleNoneOrHidden",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-inline-start-width"
      },
      "border-left": {
        syntax: "<line-width> || <line-style> || <color>",
        media: "visual",
        inherited: false,
        animationType: [
          "border-left-color",
          "border-left-style",
          "border-left-width"
        ],
        percentages: "no",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: [
          "border-left-width",
          "border-left-style",
          "border-left-color"
        ],
        appliesto: "allElements",
        computed: [
          "border-left-width",
          "border-left-style",
          "border-left-color"
        ],
        order: "orderOfAppearance",
        alsoAppliesTo: [
          "::first-letter"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-left"
      },
      "border-left-color": {
        syntax: "<color>",
        media: "visual",
        inherited: false,
        animationType: "color",
        percentages: "no",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: "currentcolor",
        appliesto: "allElements",
        computed: "computedColor",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-left-color"
      },
      "border-left-style": {
        syntax: "<line-style>",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: "none",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-left-style"
      },
      "border-left-width": {
        syntax: "<line-width>",
        media: "visual",
        inherited: false,
        animationType: "length",
        percentages: "no",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: "medium",
        appliesto: "allElements",
        computed: "absoluteLengthOr0IfBorderLeftStyleNoneOrHidden",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-left-width"
      },
      "border-radius": {
        syntax: "<length-percentage>{1,4} [ / <length-percentage>{1,4} ]?",
        media: "visual",
        inherited: false,
        animationType: [
          "border-top-left-radius",
          "border-top-right-radius",
          "border-bottom-right-radius",
          "border-bottom-left-radius"
        ],
        percentages: "referToDimensionOfBorderBox",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: [
          "border-top-left-radius",
          "border-top-right-radius",
          "border-bottom-right-radius",
          "border-bottom-left-radius"
        ],
        appliesto: "allElementsUAsNotRequiredWhenCollapse",
        computed: [
          "border-bottom-left-radius",
          "border-bottom-right-radius",
          "border-top-left-radius",
          "border-top-right-radius"
        ],
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-radius"
      },
      "border-right": {
        syntax: "<line-width> || <line-style> || <color>",
        media: "visual",
        inherited: false,
        animationType: [
          "border-right-color",
          "border-right-style",
          "border-right-width"
        ],
        percentages: "no",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: [
          "border-right-width",
          "border-right-style",
          "border-right-color"
        ],
        appliesto: "allElements",
        computed: [
          "border-right-width",
          "border-right-style",
          "border-right-color"
        ],
        order: "orderOfAppearance",
        alsoAppliesTo: [
          "::first-letter"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-right"
      },
      "border-right-color": {
        syntax: "<color>",
        media: "visual",
        inherited: false,
        animationType: "color",
        percentages: "no",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: "currentcolor",
        appliesto: "allElements",
        computed: "computedColor",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-right-color"
      },
      "border-right-style": {
        syntax: "<line-style>",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: "none",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-right-style"
      },
      "border-right-width": {
        syntax: "<line-width>",
        media: "visual",
        inherited: false,
        animationType: "length",
        percentages: "no",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: "medium",
        appliesto: "allElements",
        computed: "absoluteLengthOr0IfBorderRightStyleNoneOrHidden",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-right-width"
      },
      "border-spacing": {
        syntax: "<length> <length>?",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Table"
        ],
        initial: "0",
        appliesto: "tableElements",
        computed: "twoAbsoluteLengths",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-spacing"
      },
      "border-start-end-radius": {
        syntax: "<length-percentage>{1,2}",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "referToDimensionOfBorderBox",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "0",
        appliesto: "allElementsUAsNotRequiredWhenCollapse",
        computed: "twoAbsoluteLengthOrPercentages",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-start-end-radius"
      },
      "border-start-start-radius": {
        syntax: "<length-percentage>{1,2}",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "referToDimensionOfBorderBox",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "0",
        appliesto: "allElementsUAsNotRequiredWhenCollapse",
        computed: "twoAbsoluteLengthOrPercentages",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-start-start-radius"
      },
      "border-style": {
        syntax: "<line-style>{1,4}",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: [
          "border-top-style",
          "border-right-style",
          "border-bottom-style",
          "border-left-style"
        ],
        appliesto: "allElements",
        computed: [
          "border-bottom-style",
          "border-left-style",
          "border-right-style",
          "border-top-style"
        ],
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-style"
      },
      "border-top": {
        syntax: "<line-width> || <line-style> || <color>",
        media: "visual",
        inherited: false,
        animationType: [
          "border-top-color",
          "border-top-style",
          "border-top-width"
        ],
        percentages: "no",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: [
          "border-top-width",
          "border-top-style",
          "border-top-color"
        ],
        appliesto: "allElements",
        computed: [
          "border-top-width",
          "border-top-style",
          "border-top-color"
        ],
        order: "orderOfAppearance",
        alsoAppliesTo: [
          "::first-letter"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-top"
      },
      "border-top-color": {
        syntax: "<color>",
        media: "visual",
        inherited: false,
        animationType: "color",
        percentages: "no",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: "currentcolor",
        appliesto: "allElements",
        computed: "computedColor",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-top-color"
      },
      "border-top-left-radius": {
        syntax: "<length-percentage>{1,2}",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "referToDimensionOfBorderBox",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: "0",
        appliesto: "allElementsUAsNotRequiredWhenCollapse",
        computed: "twoAbsoluteLengthOrPercentages",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-top-left-radius"
      },
      "border-top-right-radius": {
        syntax: "<length-percentage>{1,2}",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "referToDimensionOfBorderBox",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: "0",
        appliesto: "allElementsUAsNotRequiredWhenCollapse",
        computed: "twoAbsoluteLengthOrPercentages",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-top-right-radius"
      },
      "border-top-style": {
        syntax: "<line-style>",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: "none",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-top-style"
      },
      "border-top-width": {
        syntax: "<line-width>",
        media: "visual",
        inherited: false,
        animationType: "length",
        percentages: "no",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: "medium",
        appliesto: "allElements",
        computed: "absoluteLengthOr0IfBorderTopStyleNoneOrHidden",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-top-width"
      },
      "border-width": {
        syntax: "<line-width>{1,4}",
        media: "visual",
        inherited: false,
        animationType: [
          "border-bottom-width",
          "border-left-width",
          "border-right-width",
          "border-top-width"
        ],
        percentages: "no",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: [
          "border-top-width",
          "border-right-width",
          "border-bottom-width",
          "border-left-width"
        ],
        appliesto: "allElements",
        computed: [
          "border-bottom-width",
          "border-left-width",
          "border-right-width",
          "border-top-width"
        ],
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/border-width"
      },
      bottom: {
        syntax: "<length> | <percentage> | auto",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "referToContainingBlockHeight",
        groups: [
          "CSS Positioning"
        ],
        initial: "auto",
        appliesto: "positionedElements",
        computed: "lengthAbsolutePercentageAsSpecifiedOtherwiseAuto",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/bottom"
      },
      "box-align": {
        syntax: "start | center | end | baseline | stretch",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Mozilla Extensions",
          "WebKit Extensions"
        ],
        initial: "stretch",
        appliesto: "elementsWithDisplayBoxOrInlineBox",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/box-align"
      },
      "box-decoration-break": {
        syntax: "slice | clone",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Fragmentation"
        ],
        initial: "slice",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/box-decoration-break"
      },
      "box-direction": {
        syntax: "normal | reverse | inherit",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Mozilla Extensions",
          "WebKit Extensions"
        ],
        initial: "normal",
        appliesto: "elementsWithDisplayBoxOrInlineBox",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/box-direction"
      },
      "box-flex": {
        syntax: "<number>",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Mozilla Extensions",
          "WebKit Extensions"
        ],
        initial: "0",
        appliesto: "directChildrenOfElementsWithDisplayMozBoxMozInlineBox",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/box-flex"
      },
      "box-flex-group": {
        syntax: "<integer>",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Mozilla Extensions",
          "WebKit Extensions"
        ],
        initial: "1",
        appliesto: "inFlowChildrenOfBoxElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/box-flex-group"
      },
      "box-lines": {
        syntax: "single | multiple",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Mozilla Extensions",
          "WebKit Extensions"
        ],
        initial: "single",
        appliesto: "boxElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/box-lines"
      },
      "box-ordinal-group": {
        syntax: "<integer>",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Mozilla Extensions",
          "WebKit Extensions"
        ],
        initial: "1",
        appliesto: "childrenOfBoxElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/box-ordinal-group"
      },
      "box-orient": {
        syntax: "horizontal | vertical | inline-axis | block-axis | inherit",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Mozilla Extensions",
          "WebKit Extensions"
        ],
        initial: "inlineAxisHorizontalInXUL",
        appliesto: "elementsWithDisplayBoxOrInlineBox",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/box-orient"
      },
      "box-pack": {
        syntax: "start | center | end | justify",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Mozilla Extensions",
          "WebKit Extensions"
        ],
        initial: "start",
        appliesto: "elementsWithDisplayMozBoxMozInlineBox",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/box-pack"
      },
      "box-shadow": {
        syntax: "none | <shadow>#",
        media: "visual",
        inherited: false,
        animationType: "shadowList",
        percentages: "no",
        groups: [
          "CSS Backgrounds and Borders"
        ],
        initial: "none",
        appliesto: "allElements",
        computed: "absoluteLengthsSpecifiedColorAsSpecified",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/box-shadow"
      },
      "box-sizing": {
        syntax: "content-box | border-box",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Box Model"
        ],
        initial: "content-box",
        appliesto: "allElementsAcceptingWidthOrHeight",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/box-sizing"
      },
      "break-after": {
        syntax: "auto | avoid | always | all | avoid-page | page | left | right | recto | verso | avoid-column | column | avoid-region | region",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Fragmentation"
        ],
        initial: "auto",
        appliesto: "blockLevelElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/break-after"
      },
      "break-before": {
        syntax: "auto | avoid | always | all | avoid-page | page | left | right | recto | verso | avoid-column | column | avoid-region | region",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Fragmentation"
        ],
        initial: "auto",
        appliesto: "blockLevelElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/break-before"
      },
      "break-inside": {
        syntax: "auto | avoid | avoid-page | avoid-column | avoid-region",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Fragmentation"
        ],
        initial: "auto",
        appliesto: "blockLevelElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/break-inside"
      },
      "caption-side": {
        syntax: "top | bottom | block-start | block-end | inline-start | inline-end",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Table"
        ],
        initial: "top",
        appliesto: "tableCaptionElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/caption-side"
      },
      "caret-color": {
        syntax: "auto | <color>",
        media: "interactive",
        inherited: true,
        animationType: "color",
        percentages: "no",
        groups: [
          "CSS Basic User Interface"
        ],
        initial: "auto",
        appliesto: "allElements",
        computed: "asAutoOrColor",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/caret-color"
      },
      clear: {
        syntax: "none | left | right | both | inline-start | inline-end",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Positioning"
        ],
        initial: "none",
        appliesto: "blockLevelElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/clear"
      },
      clip: {
        syntax: "<shape> | auto",
        media: "visual",
        inherited: false,
        animationType: "rectangle",
        percentages: "no",
        groups: [
          "CSS Masking"
        ],
        initial: "auto",
        appliesto: "absolutelyPositionedElements",
        computed: "autoOrRectangle",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/clip"
      },
      "clip-path": {
        syntax: "<clip-source> | [ <basic-shape> || <geometry-box> ] | none",
        media: "visual",
        inherited: false,
        animationType: "basicShapeOtherwiseNo",
        percentages: "referToReferenceBoxWhenSpecifiedOtherwiseBorderBox",
        groups: [
          "CSS Masking"
        ],
        initial: "none",
        appliesto: "allElementsSVGContainerElements",
        computed: "asSpecifiedURLsAbsolute",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/clip-path"
      },
      color: {
        syntax: "<color>",
        media: "visual",
        inherited: true,
        animationType: "byComputedValueType",
        percentages: "no",
        groups: [
          "CSS Color"
        ],
        initial: "canvastext",
        appliesto: "allElementsAndText",
        computed: "computedColor",
        order: "perGrammar",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/color"
      },
      "print-color-adjust": {
        syntax: "economy | exact",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Color"
        ],
        initial: "economy",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/print-color-adjust"
      },
      "color-scheme": {
        syntax: "normal | [ light | dark | <custom-ident> ]+ && only?",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Color"
        ],
        initial: "normal",
        appliesto: "allElementsAndText",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/color-scheme"
      },
      "column-count": {
        syntax: "<integer> | auto",
        media: "visual",
        inherited: false,
        animationType: "integer",
        percentages: "no",
        groups: [
          "CSS Columns"
        ],
        initial: "auto",
        appliesto: "blockContainersExceptTableWrappers",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/column-count"
      },
      "column-fill": {
        syntax: "auto | balance | balance-all",
        media: "visualInContinuousMediaNoEffectInOverflowColumns",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Columns"
        ],
        initial: "balance",
        appliesto: "multicolElements",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/column-fill"
      },
      "column-gap": {
        syntax: "normal | <length-percentage>",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "referToDimensionOfContentArea",
        groups: [
          "CSS Box Alignment"
        ],
        initial: "normal",
        appliesto: "multiColumnElementsFlexContainersGridContainers",
        computed: "asSpecifiedWithLengthsAbsoluteAndNormalComputingToZeroExceptMultiColumn",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/column-gap"
      },
      "column-rule": {
        syntax: "<'column-rule-width'> || <'column-rule-style'> || <'column-rule-color'>",
        media: "visual",
        inherited: false,
        animationType: [
          "column-rule-color",
          "column-rule-style",
          "column-rule-width"
        ],
        percentages: "no",
        groups: [
          "CSS Columns"
        ],
        initial: [
          "column-rule-width",
          "column-rule-style",
          "column-rule-color"
        ],
        appliesto: "multicolElements",
        computed: [
          "column-rule-color",
          "column-rule-style",
          "column-rule-width"
        ],
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/column-rule"
      },
      "column-rule-color": {
        syntax: "<color>",
        media: "visual",
        inherited: false,
        animationType: "color",
        percentages: "no",
        groups: [
          "CSS Columns"
        ],
        initial: "currentcolor",
        appliesto: "multicolElements",
        computed: "computedColor",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/column-rule-color"
      },
      "column-rule-style": {
        syntax: "<'border-style'>",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Columns"
        ],
        initial: "none",
        appliesto: "multicolElements",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/column-rule-style"
      },
      "column-rule-width": {
        syntax: "<'border-width'>",
        media: "visual",
        inherited: false,
        animationType: "length",
        percentages: "no",
        groups: [
          "CSS Columns"
        ],
        initial: "medium",
        appliesto: "multicolElements",
        computed: "absoluteLength0IfColumnRuleStyleNoneOrHidden",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/column-rule-width"
      },
      "column-span": {
        syntax: "none | all",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Columns"
        ],
        initial: "none",
        appliesto: "inFlowBlockLevelElements",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/column-span"
      },
      "column-width": {
        syntax: "<length> | auto",
        media: "visual",
        inherited: false,
        animationType: "length",
        percentages: "no",
        groups: [
          "CSS Columns"
        ],
        initial: "auto",
        appliesto: "blockContainersExceptTableWrappers",
        computed: "absoluteLengthZeroOrLarger",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/column-width"
      },
      columns: {
        syntax: "<'column-width'> || <'column-count'>",
        media: "visual",
        inherited: false,
        animationType: [
          "column-width",
          "column-count"
        ],
        percentages: "no",
        groups: [
          "CSS Columns"
        ],
        initial: [
          "column-width",
          "column-count"
        ],
        appliesto: "blockContainersExceptTableWrappers",
        computed: [
          "column-width",
          "column-count"
        ],
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/columns"
      },
      contain: {
        syntax: "none | strict | content | [ size || layout || style || paint ]",
        media: "all",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Containment"
        ],
        initial: "none",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/contain"
      },
      content: {
        syntax: "normal | none | [ <content-replacement> | <content-list> ] [/ [ <string> | <counter> ]+ ]?",
        media: "all",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Generated Content"
        ],
        initial: "normal",
        appliesto: "allElementsTreeAbidingPseudoElementsPageMarginBoxes",
        computed: "normalOnElementsForPseudosNoneAbsoluteURIStringOrAsSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/content"
      },
      "content-visibility": {
        syntax: "visible | auto | hidden",
        media: "all",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Containment"
        ],
        initial: "visible",
        appliesto: "elementsForWhichLayoutContainmentCanApply",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/content-visibility"
      },
      "counter-increment": {
        syntax: "[ <counter-name> <integer>? ]+ | none",
        media: "all",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Counter Styles"
        ],
        initial: "none",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/counter-increment"
      },
      "counter-reset": {
        syntax: "[ <counter-name> <integer>? | <reversed-counter-name> <integer>? ]+ | none",
        media: "all",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Counter Styles"
        ],
        initial: "none",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/counter-reset"
      },
      "counter-set": {
        syntax: "[ <counter-name> <integer>? ]+ | none",
        media: "all",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Counter Styles"
        ],
        initial: "none",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/counter-set"
      },
      cursor: {
        syntax: "[ [ <url> [ <x> <y> ]? , ]* [ auto | default | none | context-menu | help | pointer | progress | wait | cell | crosshair | text | vertical-text | alias | copy | move | no-drop | not-allowed | e-resize | n-resize | ne-resize | nw-resize | s-resize | se-resize | sw-resize | w-resize | ew-resize | ns-resize | nesw-resize | nwse-resize | col-resize | row-resize | all-scroll | zoom-in | zoom-out | grab | grabbing ] ]",
        media: [
          "visual",
          "interactive"
        ],
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Basic User Interface"
        ],
        initial: "auto",
        appliesto: "allElements",
        computed: "asSpecifiedURLsAbsolute",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/cursor"
      },
      direction: {
        syntax: "ltr | rtl",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Writing Modes"
        ],
        initial: "ltr",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/direction"
      },
      display: {
        syntax: "[ <display-outside> || <display-inside> ] | <display-listitem> | <display-internal> | <display-box> | <display-legacy>",
        media: "all",
        inherited: false,
        animationType: "notAnimatable",
        percentages: "no",
        groups: [
          "CSS Display"
        ],
        initial: "inline",
        appliesto: "allElements",
        computed: "asSpecifiedExceptPositionedFloatingAndRootElementsKeywordMaybeDifferent",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/display"
      },
      "empty-cells": {
        syntax: "show | hide",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Table"
        ],
        initial: "show",
        appliesto: "tableCellElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/empty-cells"
      },
      filter: {
        syntax: "none | <filter-function-list>",
        media: "visual",
        inherited: false,
        animationType: "filterList",
        percentages: "no",
        groups: [
          "Filter Effects"
        ],
        initial: "none",
        appliesto: "allElementsSVGContainerElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/filter"
      },
      flex: {
        syntax: "none | [ <'flex-grow'> <'flex-shrink'>? || <'flex-basis'> ]",
        media: "visual",
        inherited: false,
        animationType: [
          "flex-grow",
          "flex-shrink",
          "flex-basis"
        ],
        percentages: "no",
        groups: [
          "CSS Flexible Box Layout"
        ],
        initial: [
          "flex-grow",
          "flex-shrink",
          "flex-basis"
        ],
        appliesto: "flexItemsAndInFlowPseudos",
        computed: [
          "flex-grow",
          "flex-shrink",
          "flex-basis"
        ],
        order: "orderOfAppearance",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/flex"
      },
      "flex-basis": {
        syntax: "content | <'width'>",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "referToFlexContainersInnerMainSize",
        groups: [
          "CSS Flexible Box Layout"
        ],
        initial: "auto",
        appliesto: "flexItemsAndInFlowPseudos",
        computed: "asSpecifiedRelativeToAbsoluteLengths",
        order: "lengthOrPercentageBeforeKeywordIfBothPresent",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/flex-basis"
      },
      "flex-direction": {
        syntax: "row | row-reverse | column | column-reverse",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Flexible Box Layout"
        ],
        initial: "row",
        appliesto: "flexContainers",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/flex-direction"
      },
      "flex-flow": {
        syntax: "<'flex-direction'> || <'flex-wrap'>",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Flexible Box Layout"
        ],
        initial: [
          "flex-direction",
          "flex-wrap"
        ],
        appliesto: "flexContainers",
        computed: [
          "flex-direction",
          "flex-wrap"
        ],
        order: "orderOfAppearance",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/flex-flow"
      },
      "flex-grow": {
        syntax: "<number>",
        media: "visual",
        inherited: false,
        animationType: "number",
        percentages: "no",
        groups: [
          "CSS Flexible Box Layout"
        ],
        initial: "0",
        appliesto: "flexItemsAndInFlowPseudos",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/flex-grow"
      },
      "flex-shrink": {
        syntax: "<number>",
        media: "visual",
        inherited: false,
        animationType: "number",
        percentages: "no",
        groups: [
          "CSS Flexible Box Layout"
        ],
        initial: "1",
        appliesto: "flexItemsAndInFlowPseudos",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/flex-shrink"
      },
      "flex-wrap": {
        syntax: "nowrap | wrap | wrap-reverse",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Flexible Box Layout"
        ],
        initial: "nowrap",
        appliesto: "flexContainers",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/flex-wrap"
      },
      float: {
        syntax: "left | right | none | inline-start | inline-end",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Positioning"
        ],
        initial: "none",
        appliesto: "allElementsNoEffectIfDisplayNone",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/float"
      },
      font: {
        syntax: "[ [ <'font-style'> || <font-variant-css21> || <'font-weight'> || <'font-stretch'> ]? <'font-size'> [ / <'line-height'> ]? <'font-family'> ] | caption | icon | menu | message-box | small-caption | status-bar",
        media: "visual",
        inherited: true,
        animationType: [
          "font-style",
          "font-variant",
          "font-weight",
          "font-stretch",
          "font-size",
          "line-height",
          "font-family"
        ],
        percentages: [
          "font-size",
          "line-height"
        ],
        groups: [
          "CSS Fonts"
        ],
        initial: [
          "font-style",
          "font-variant",
          "font-weight",
          "font-stretch",
          "font-size",
          "line-height",
          "font-family"
        ],
        appliesto: "allElements",
        computed: [
          "font-style",
          "font-variant",
          "font-weight",
          "font-stretch",
          "font-size",
          "line-height",
          "font-family"
        ],
        order: "orderOfAppearance",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/font"
      },
      "font-family": {
        syntax: "[ <family-name> | <generic-family> ]#",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Fonts"
        ],
        initial: "dependsOnUserAgent",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/font-family"
      },
      "font-feature-settings": {
        syntax: "normal | <feature-tag-value>#",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Fonts"
        ],
        initial: "normal",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/font-feature-settings"
      },
      "font-kerning": {
        syntax: "auto | normal | none",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Fonts"
        ],
        initial: "auto",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/font-kerning"
      },
      "font-language-override": {
        syntax: "normal | <string>",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Fonts"
        ],
        initial: "normal",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/font-language-override"
      },
      "font-optical-sizing": {
        syntax: "auto | none",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Fonts"
        ],
        initial: "auto",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "perGrammar",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/font-optical-sizing"
      },
      "font-variation-settings": {
        syntax: "normal | [ <string> <number> ]#",
        media: "visual",
        inherited: true,
        animationType: "transform",
        percentages: "no",
        groups: [
          "CSS Fonts"
        ],
        initial: "normal",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "perGrammar",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/font-variation-settings"
      },
      "font-size": {
        syntax: "<absolute-size> | <relative-size> | <length-percentage>",
        media: "visual",
        inherited: true,
        animationType: "length",
        percentages: "referToParentElementsFontSize",
        groups: [
          "CSS Fonts"
        ],
        initial: "medium",
        appliesto: "allElements",
        computed: "asSpecifiedRelativeToAbsoluteLengths",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/font-size"
      },
      "font-size-adjust": {
        syntax: "none | [ ex-height | cap-height | ch-width | ic-width | ic-height ]? [ from-font | <number> ]",
        media: "visual",
        inherited: true,
        animationType: "number",
        percentages: "no",
        groups: [
          "CSS Fonts"
        ],
        initial: "none",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/font-size-adjust"
      },
      "font-smooth": {
        syntax: "auto | never | always | <absolute-size> | <length>",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Fonts"
        ],
        initial: "auto",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/font-smooth"
      },
      "font-stretch": {
        syntax: "<font-stretch-absolute>",
        media: "visual",
        inherited: true,
        animationType: "fontStretch",
        percentages: "no",
        groups: [
          "CSS Fonts"
        ],
        initial: "normal",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/font-stretch"
      },
      "font-style": {
        syntax: "normal | italic | oblique <angle>?",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Fonts"
        ],
        initial: "normal",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/font-style"
      },
      "font-synthesis": {
        syntax: "none | [ weight || style || small-caps ]",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Fonts"
        ],
        initial: "weight style",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "orderOfAppearance",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/font-synthesis"
      },
      "font-variant": {
        syntax: "normal | none | [ <common-lig-values> || <discretionary-lig-values> || <historical-lig-values> || <contextual-alt-values> || stylistic( <feature-value-name> ) || historical-forms || styleset( <feature-value-name># ) || character-variant( <feature-value-name># ) || swash( <feature-value-name> ) || ornaments( <feature-value-name> ) || annotation( <feature-value-name> ) || [ small-caps | all-small-caps | petite-caps | all-petite-caps | unicase | titling-caps ] || <numeric-figure-values> || <numeric-spacing-values> || <numeric-fraction-values> || ordinal || slashed-zero || <east-asian-variant-values> || <east-asian-width-values> || ruby ]",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Fonts"
        ],
        initial: "normal",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/font-variant"
      },
      "font-variant-alternates": {
        syntax: "normal | [ stylistic( <feature-value-name> ) || historical-forms || styleset( <feature-value-name># ) || character-variant( <feature-value-name># ) || swash( <feature-value-name> ) || ornaments( <feature-value-name> ) || annotation( <feature-value-name> ) ]",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Fonts"
        ],
        initial: "normal",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "orderOfAppearance",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/font-variant-alternates"
      },
      "font-variant-caps": {
        syntax: "normal | small-caps | all-small-caps | petite-caps | all-petite-caps | unicase | titling-caps",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Fonts"
        ],
        initial: "normal",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/font-variant-caps"
      },
      "font-variant-east-asian": {
        syntax: "normal | [ <east-asian-variant-values> || <east-asian-width-values> || ruby ]",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Fonts"
        ],
        initial: "normal",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "orderOfAppearance",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/font-variant-east-asian"
      },
      "font-variant-ligatures": {
        syntax: "normal | none | [ <common-lig-values> || <discretionary-lig-values> || <historical-lig-values> || <contextual-alt-values> ]",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Fonts"
        ],
        initial: "normal",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "orderOfAppearance",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/font-variant-ligatures"
      },
      "font-variant-numeric": {
        syntax: "normal | [ <numeric-figure-values> || <numeric-spacing-values> || <numeric-fraction-values> || ordinal || slashed-zero ]",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Fonts"
        ],
        initial: "normal",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "orderOfAppearance",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/font-variant-numeric"
      },
      "font-variant-position": {
        syntax: "normal | sub | super",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Fonts"
        ],
        initial: "normal",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/font-variant-position"
      },
      "font-weight": {
        syntax: "<font-weight-absolute> | bolder | lighter",
        media: "visual",
        inherited: true,
        animationType: "fontWeight",
        percentages: "no",
        groups: [
          "CSS Fonts"
        ],
        initial: "normal",
        appliesto: "allElements",
        computed: "keywordOrNumericalValueBolderLighterTransformedToRealValue",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/font-weight"
      },
      "forced-color-adjust": {
        syntax: "auto | none",
        media: "visual",
        inherited: true,
        animationType: "notAnimatable",
        percentages: "no",
        groups: [
          "CSS Color"
        ],
        initial: "auto",
        appliesto: "allElementsAndText",
        computed: "asSpecified",
        order: "perGrammar",
        status: "experimental",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/forced-color-adjust"
      },
      gap: {
        syntax: "<'row-gap'> <'column-gap'>?",
        media: "visual",
        inherited: false,
        animationType: [
          "row-gap",
          "column-gap"
        ],
        percentages: "no",
        groups: [
          "CSS Box Alignment"
        ],
        initial: [
          "row-gap",
          "column-gap"
        ],
        appliesto: "multiColumnElementsFlexContainersGridContainers",
        computed: [
          "row-gap",
          "column-gap"
        ],
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/gap"
      },
      grid: {
        syntax: "<'grid-template'> | <'grid-template-rows'> / [ auto-flow && dense? ] <'grid-auto-columns'>? | [ auto-flow && dense? ] <'grid-auto-rows'>? / <'grid-template-columns'>",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: [
          "grid-template-rows",
          "grid-template-columns",
          "grid-auto-rows",
          "grid-auto-columns"
        ],
        groups: [
          "CSS Grid Layout"
        ],
        initial: [
          "grid-template-rows",
          "grid-template-columns",
          "grid-template-areas",
          "grid-auto-rows",
          "grid-auto-columns",
          "grid-auto-flow",
          "grid-column-gap",
          "grid-row-gap",
          "column-gap",
          "row-gap"
        ],
        appliesto: "gridContainers",
        computed: [
          "grid-template-rows",
          "grid-template-columns",
          "grid-template-areas",
          "grid-auto-rows",
          "grid-auto-columns",
          "grid-auto-flow",
          "grid-column-gap",
          "grid-row-gap",
          "column-gap",
          "row-gap"
        ],
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/grid"
      },
      "grid-area": {
        syntax: "<grid-line> [ / <grid-line> ]{0,3}",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Grid Layout"
        ],
        initial: [
          "grid-row-start",
          "grid-column-start",
          "grid-row-end",
          "grid-column-end"
        ],
        appliesto: "gridItemsAndBoxesWithinGridContainer",
        computed: [
          "grid-row-start",
          "grid-column-start",
          "grid-row-end",
          "grid-column-end"
        ],
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/grid-area"
      },
      "grid-auto-columns": {
        syntax: "<track-size>+",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "referToDimensionOfContentArea",
        groups: [
          "CSS Grid Layout"
        ],
        initial: "auto",
        appliesto: "gridContainers",
        computed: "percentageAsSpecifiedOrAbsoluteLength",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/grid-auto-columns"
      },
      "grid-auto-flow": {
        syntax: "[ row | column ] || dense",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Grid Layout"
        ],
        initial: "row",
        appliesto: "gridContainers",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/grid-auto-flow"
      },
      "grid-auto-rows": {
        syntax: "<track-size>+",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "referToDimensionOfContentArea",
        groups: [
          "CSS Grid Layout"
        ],
        initial: "auto",
        appliesto: "gridContainers",
        computed: "percentageAsSpecifiedOrAbsoluteLength",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/grid-auto-rows"
      },
      "grid-column": {
        syntax: "<grid-line> [ / <grid-line> ]?",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Grid Layout"
        ],
        initial: [
          "grid-column-start",
          "grid-column-end"
        ],
        appliesto: "gridItemsAndBoxesWithinGridContainer",
        computed: [
          "grid-column-start",
          "grid-column-end"
        ],
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/grid-column"
      },
      "grid-column-end": {
        syntax: "<grid-line>",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Grid Layout"
        ],
        initial: "auto",
        appliesto: "gridItemsAndBoxesWithinGridContainer",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/grid-column-end"
      },
      "grid-column-gap": {
        syntax: "<length-percentage>",
        media: "visual",
        inherited: false,
        animationType: "length",
        percentages: "referToDimensionOfContentArea",
        groups: [
          "CSS Grid Layout"
        ],
        initial: "0",
        appliesto: "gridContainers",
        computed: "percentageAsSpecifiedOrAbsoluteLength",
        order: "uniqueOrder",
        status: "obsolete",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/column-gap"
      },
      "grid-column-start": {
        syntax: "<grid-line>",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Grid Layout"
        ],
        initial: "auto",
        appliesto: "gridItemsAndBoxesWithinGridContainer",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/grid-column-start"
      },
      "grid-gap": {
        syntax: "<'grid-row-gap'> <'grid-column-gap'>?",
        media: "visual",
        inherited: false,
        animationType: [
          "grid-row-gap",
          "grid-column-gap"
        ],
        percentages: "no",
        groups: [
          "CSS Grid Layout"
        ],
        initial: [
          "grid-row-gap",
          "grid-column-gap"
        ],
        appliesto: "gridContainers",
        computed: [
          "grid-row-gap",
          "grid-column-gap"
        ],
        order: "uniqueOrder",
        status: "obsolete",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/gap"
      },
      "grid-row": {
        syntax: "<grid-line> [ / <grid-line> ]?",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Grid Layout"
        ],
        initial: [
          "grid-row-start",
          "grid-row-end"
        ],
        appliesto: "gridItemsAndBoxesWithinGridContainer",
        computed: [
          "grid-row-start",
          "grid-row-end"
        ],
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/grid-row"
      },
      "grid-row-end": {
        syntax: "<grid-line>",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Grid Layout"
        ],
        initial: "auto",
        appliesto: "gridItemsAndBoxesWithinGridContainer",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/grid-row-end"
      },
      "grid-row-gap": {
        syntax: "<length-percentage>",
        media: "visual",
        inherited: false,
        animationType: "length",
        percentages: "referToDimensionOfContentArea",
        groups: [
          "CSS Grid Layout"
        ],
        initial: "0",
        appliesto: "gridContainers",
        computed: "percentageAsSpecifiedOrAbsoluteLength",
        order: "uniqueOrder",
        status: "obsolete",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/row-gap"
      },
      "grid-row-start": {
        syntax: "<grid-line>",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Grid Layout"
        ],
        initial: "auto",
        appliesto: "gridItemsAndBoxesWithinGridContainer",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/grid-row-start"
      },
      "grid-template": {
        syntax: "none | [ <'grid-template-rows'> / <'grid-template-columns'> ] | [ <line-names>? <string> <track-size>? <line-names>? ]+ [ / <explicit-track-list> ]?",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: [
          "grid-template-columns",
          "grid-template-rows"
        ],
        groups: [
          "CSS Grid Layout"
        ],
        initial: [
          "grid-template-columns",
          "grid-template-rows",
          "grid-template-areas"
        ],
        appliesto: "gridContainers",
        computed: [
          "grid-template-columns",
          "grid-template-rows",
          "grid-template-areas"
        ],
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/grid-template"
      },
      "grid-template-areas": {
        syntax: "none | <string>+",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Grid Layout"
        ],
        initial: "none",
        appliesto: "gridContainers",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/grid-template-areas"
      },
      "grid-template-columns": {
        syntax: "none | <track-list> | <auto-track-list> | subgrid <line-name-list>?",
        media: "visual",
        inherited: false,
        animationType: "simpleListOfLpcDifferenceLpc",
        percentages: "referToDimensionOfContentArea",
        groups: [
          "CSS Grid Layout"
        ],
        initial: "none",
        appliesto: "gridContainers",
        computed: "asSpecifiedRelativeToAbsoluteLengths",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/grid-template-columns"
      },
      "grid-template-rows": {
        syntax: "none | <track-list> | <auto-track-list> | subgrid <line-name-list>?",
        media: "visual",
        inherited: false,
        animationType: "simpleListOfLpcDifferenceLpc",
        percentages: "referToDimensionOfContentArea",
        groups: [
          "CSS Grid Layout"
        ],
        initial: "none",
        appliesto: "gridContainers",
        computed: "asSpecifiedRelativeToAbsoluteLengths",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/grid-template-rows"
      },
      "hanging-punctuation": {
        syntax: "none | [ first || [ force-end | allow-end ] || last ]",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Text"
        ],
        initial: "none",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/hanging-punctuation"
      },
      height: {
        syntax: "auto | <length> | <percentage> | min-content | max-content | fit-content | fit-content(<length-percentage>)",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "regardingHeightOfGeneratedBoxContainingBlockPercentagesRelativeToContainingBlock",
        groups: [
          "CSS Box Model"
        ],
        initial: "auto",
        appliesto: "allElementsButNonReplacedAndTableColumns",
        computed: "percentageAutoOrAbsoluteLength",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/height"
      },
      "hyphenate-character": {
        syntax: "auto | <string>",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Text"
        ],
        initial: "auto",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/hyphenate-character"
      },
      hyphens: {
        syntax: "none | manual | auto",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Text"
        ],
        initial: "manual",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/hyphens"
      },
      "image-orientation": {
        syntax: "from-image | <angle> | [ <angle>? flip ]",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Images"
        ],
        initial: "from-image",
        appliesto: "allElements",
        computed: "angleRoundedToNextQuarter",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/image-orientation"
      },
      "image-rendering": {
        syntax: "auto | crisp-edges | pixelated",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Images"
        ],
        initial: "auto",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/image-rendering"
      },
      "image-resolution": {
        syntax: "[ from-image || <resolution> ] && snap?",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Images"
        ],
        initial: "1dppx",
        appliesto: "allElements",
        computed: "asSpecifiedWithExceptionOfResolution",
        order: "uniqueOrder",
        status: "experimental"
      },
      "ime-mode": {
        syntax: "auto | normal | active | inactive | disabled",
        media: "interactive",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Basic User Interface"
        ],
        initial: "auto",
        appliesto: "textFields",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "obsolete",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/ime-mode"
      },
      "initial-letter": {
        syntax: "normal | [ <number> <integer>? ]",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Inline"
        ],
        initial: "normal",
        appliesto: "firstLetterPseudoElementsAndInlineLevelFirstChildren",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "experimental",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/initial-letter"
      },
      "initial-letter-align": {
        syntax: "[ auto | alphabetic | hanging | ideographic ]",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Inline"
        ],
        initial: "auto",
        appliesto: "firstLetterPseudoElementsAndInlineLevelFirstChildren",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "experimental",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/initial-letter-align"
      },
      "inline-size": {
        syntax: "<'width'>",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "inlineSizeOfContainingBlock",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "auto",
        appliesto: "sameAsWidthAndHeight",
        computed: "sameAsWidthAndHeight",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/inline-size"
      },
      "input-security": {
        syntax: "auto | none",
        media: "interactive",
        inherited: false,
        animationType: "byComputedValueType",
        percentages: "no",
        groups: [
          "CSS Basic User Interface"
        ],
        initial: "auto",
        appliesto: "sensitiveTextInputs",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard"
      },
      inset: {
        syntax: "<'top'>{1,4}",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "logicalHeightOrWidthOfContainingBlock",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "auto",
        appliesto: "positionedElements",
        computed: "sameAsBoxOffsets",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/inset"
      },
      "inset-block": {
        syntax: "<'top'>{1,2}",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "logicalHeightOfContainingBlock",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "auto",
        appliesto: "positionedElements",
        computed: "sameAsBoxOffsets",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/inset-block"
      },
      "inset-block-end": {
        syntax: "<'top'>",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "logicalHeightOfContainingBlock",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "auto",
        appliesto: "positionedElements",
        computed: "sameAsBoxOffsets",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/inset-block-end"
      },
      "inset-block-start": {
        syntax: "<'top'>",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "logicalHeightOfContainingBlock",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "auto",
        appliesto: "positionedElements",
        computed: "sameAsBoxOffsets",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/inset-block-start"
      },
      "inset-inline": {
        syntax: "<'top'>{1,2}",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "logicalWidthOfContainingBlock",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "auto",
        appliesto: "positionedElements",
        computed: "sameAsBoxOffsets",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/inset-inline"
      },
      "inset-inline-end": {
        syntax: "<'top'>",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "logicalWidthOfContainingBlock",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "auto",
        appliesto: "positionedElements",
        computed: "sameAsBoxOffsets",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/inset-inline-end"
      },
      "inset-inline-start": {
        syntax: "<'top'>",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "logicalWidthOfContainingBlock",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "auto",
        appliesto: "positionedElements",
        computed: "sameAsBoxOffsets",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/inset-inline-start"
      },
      isolation: {
        syntax: "auto | isolate",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Compositing and Blending"
        ],
        initial: "auto",
        appliesto: "allElementsSVGContainerGraphicsAndGraphicsReferencingElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/isolation"
      },
      "justify-content": {
        syntax: "normal | <content-distribution> | <overflow-position>? [ <content-position> | left | right ]",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Box Alignment"
        ],
        initial: "normal",
        appliesto: "flexContainers",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/justify-content"
      },
      "justify-items": {
        syntax: "normal | stretch | <baseline-position> | <overflow-position>? [ <self-position> | left | right ] | legacy | legacy && [ left | right | center ]",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Box Alignment"
        ],
        initial: "legacy",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/justify-items"
      },
      "justify-self": {
        syntax: "auto | normal | stretch | <baseline-position> | <overflow-position>? [ <self-position> | left | right ]",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Box Alignment"
        ],
        initial: "auto",
        appliesto: "blockLevelBoxesAndAbsolutelyPositionedBoxesAndGridItems",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/justify-self"
      },
      "justify-tracks": {
        syntax: "[ normal | <content-distribution> | <overflow-position>? [ <content-position> | left | right ] ]#",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Grid Layout"
        ],
        initial: "normal",
        appliesto: "gridContainersWithMasonryLayoutInTheirInlineAxis",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "experimental",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/justify-tracks"
      },
      left: {
        syntax: "<length> | <percentage> | auto",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "referToWidthOfContainingBlock",
        groups: [
          "CSS Positioning"
        ],
        initial: "auto",
        appliesto: "positionedElements",
        computed: "lengthAbsolutePercentageAsSpecifiedOtherwiseAuto",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/left"
      },
      "letter-spacing": {
        syntax: "normal | <length>",
        media: "visual",
        inherited: true,
        animationType: "length",
        percentages: "no",
        groups: [
          "CSS Text"
        ],
        initial: "normal",
        appliesto: "allElements",
        computed: "optimumValueOfAbsoluteLengthOrNormal",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/letter-spacing"
      },
      "line-break": {
        syntax: "auto | loose | normal | strict | anywhere",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Text"
        ],
        initial: "auto",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/line-break"
      },
      "line-clamp": {
        syntax: "none | <integer>",
        media: "visual",
        inherited: false,
        animationType: "integer",
        percentages: "no",
        groups: [
          "CSS Overflow"
        ],
        initial: "none",
        appliesto: "blockContainersExceptMultiColumnContainers",
        computed: "asSpecified",
        order: "perGrammar",
        status: "experimental"
      },
      "line-height": {
        syntax: "normal | <number> | <length> | <percentage>",
        media: "visual",
        inherited: true,
        animationType: "numberOrLength",
        percentages: "referToElementFontSize",
        groups: [
          "CSS Fonts"
        ],
        initial: "normal",
        appliesto: "allElements",
        computed: "absoluteLengthOrAsSpecified",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/line-height"
      },
      "line-height-step": {
        syntax: "<length>",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Fonts"
        ],
        initial: "0",
        appliesto: "blockContainers",
        computed: "absoluteLength",
        order: "perGrammar",
        status: "experimental",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/line-height-step"
      },
      "list-style": {
        syntax: "<'list-style-type'> || <'list-style-position'> || <'list-style-image'>",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Lists and Counters"
        ],
        initial: [
          "list-style-type",
          "list-style-position",
          "list-style-image"
        ],
        appliesto: "listItems",
        computed: [
          "list-style-image",
          "list-style-position",
          "list-style-type"
        ],
        order: "orderOfAppearance",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/list-style"
      },
      "list-style-image": {
        syntax: "<image> | none",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Lists and Counters"
        ],
        initial: "none",
        appliesto: "listItems",
        computed: "theKeywordListStyleImageNoneOrComputedValue",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/list-style-image"
      },
      "list-style-position": {
        syntax: "inside | outside",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Lists and Counters"
        ],
        initial: "outside",
        appliesto: "listItems",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/list-style-position"
      },
      "list-style-type": {
        syntax: "<counter-style> | <string> | none",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Lists and Counters"
        ],
        initial: "disc",
        appliesto: "listItems",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/list-style-type"
      },
      margin: {
        syntax: "[ <length> | <percentage> | auto ]{1,4}",
        media: "visual",
        inherited: false,
        animationType: "length",
        percentages: "referToWidthOfContainingBlock",
        groups: [
          "CSS Box Model"
        ],
        initial: [
          "margin-bottom",
          "margin-left",
          "margin-right",
          "margin-top"
        ],
        appliesto: "allElementsExceptTableDisplayTypes",
        computed: [
          "margin-bottom",
          "margin-left",
          "margin-right",
          "margin-top"
        ],
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/margin"
      },
      "margin-block": {
        syntax: "<'margin-left'>{1,2}",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "dependsOnLayoutModel",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "0",
        appliesto: "sameAsMargin",
        computed: "lengthAbsolutePercentageAsSpecifiedOtherwiseAuto",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/margin-block"
      },
      "margin-block-end": {
        syntax: "<'margin-left'>",
        media: "visual",
        inherited: false,
        animationType: "length",
        percentages: "dependsOnLayoutModel",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "0",
        appliesto: "sameAsMargin",
        computed: "lengthAbsolutePercentageAsSpecifiedOtherwiseAuto",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/margin-block-end"
      },
      "margin-block-start": {
        syntax: "<'margin-left'>",
        media: "visual",
        inherited: false,
        animationType: "length",
        percentages: "dependsOnLayoutModel",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "0",
        appliesto: "sameAsMargin",
        computed: "lengthAbsolutePercentageAsSpecifiedOtherwiseAuto",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/margin-block-start"
      },
      "margin-bottom": {
        syntax: "<length> | <percentage> | auto",
        media: "visual",
        inherited: false,
        animationType: "length",
        percentages: "referToWidthOfContainingBlock",
        groups: [
          "CSS Box Model"
        ],
        initial: "0",
        appliesto: "allElementsExceptTableDisplayTypes",
        computed: "percentageAsSpecifiedOrAbsoluteLength",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/margin-bottom"
      },
      "margin-inline": {
        syntax: "<'margin-left'>{1,2}",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "dependsOnLayoutModel",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "0",
        appliesto: "sameAsMargin",
        computed: "lengthAbsolutePercentageAsSpecifiedOtherwiseAuto",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/margin-inline"
      },
      "margin-inline-end": {
        syntax: "<'margin-left'>",
        media: "visual",
        inherited: false,
        animationType: "length",
        percentages: "dependsOnLayoutModel",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "0",
        appliesto: "sameAsMargin",
        computed: "lengthAbsolutePercentageAsSpecifiedOtherwiseAuto",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/margin-inline-end"
      },
      "margin-inline-start": {
        syntax: "<'margin-left'>",
        media: "visual",
        inherited: false,
        animationType: "length",
        percentages: "dependsOnLayoutModel",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "0",
        appliesto: "sameAsMargin",
        computed: "lengthAbsolutePercentageAsSpecifiedOtherwiseAuto",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/margin-inline-start"
      },
      "margin-left": {
        syntax: "<length> | <percentage> | auto",
        media: "visual",
        inherited: false,
        animationType: "length",
        percentages: "referToWidthOfContainingBlock",
        groups: [
          "CSS Box Model"
        ],
        initial: "0",
        appliesto: "allElementsExceptTableDisplayTypes",
        computed: "percentageAsSpecifiedOrAbsoluteLength",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/margin-left"
      },
      "margin-right": {
        syntax: "<length> | <percentage> | auto",
        media: "visual",
        inherited: false,
        animationType: "length",
        percentages: "referToWidthOfContainingBlock",
        groups: [
          "CSS Box Model"
        ],
        initial: "0",
        appliesto: "allElementsExceptTableDisplayTypes",
        computed: "percentageAsSpecifiedOrAbsoluteLength",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/margin-right"
      },
      "margin-top": {
        syntax: "<length> | <percentage> | auto",
        media: "visual",
        inherited: false,
        animationType: "length",
        percentages: "referToWidthOfContainingBlock",
        groups: [
          "CSS Box Model"
        ],
        initial: "0",
        appliesto: "allElementsExceptTableDisplayTypes",
        computed: "percentageAsSpecifiedOrAbsoluteLength",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/margin-top"
      },
      "margin-trim": {
        syntax: "none | in-flow | all",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Box Model"
        ],
        initial: "none",
        appliesto: "blockContainersAndMultiColumnContainers",
        computed: "asSpecified",
        order: "perGrammar",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line"
        ],
        status: "experimental",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/margin-trim"
      },
      mask: {
        syntax: "<mask-layer>#",
        media: "visual",
        inherited: false,
        animationType: [
          "mask-image",
          "mask-mode",
          "mask-repeat",
          "mask-position",
          "mask-clip",
          "mask-origin",
          "mask-size",
          "mask-composite"
        ],
        percentages: [
          "mask-position"
        ],
        groups: [
          "CSS Masking"
        ],
        initial: [
          "mask-image",
          "mask-mode",
          "mask-repeat",
          "mask-position",
          "mask-clip",
          "mask-origin",
          "mask-size",
          "mask-composite"
        ],
        appliesto: "allElementsSVGContainerElements",
        computed: [
          "mask-image",
          "mask-mode",
          "mask-repeat",
          "mask-position",
          "mask-clip",
          "mask-origin",
          "mask-size",
          "mask-composite"
        ],
        order: "perGrammar",
        stacking: true,
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/mask"
      },
      "mask-border": {
        syntax: "<'mask-border-source'> || <'mask-border-slice'> [ / <'mask-border-width'>? [ / <'mask-border-outset'> ]? ]? || <'mask-border-repeat'> || <'mask-border-mode'>",
        media: "visual",
        inherited: false,
        animationType: [
          "mask-border-mode",
          "mask-border-outset",
          "mask-border-repeat",
          "mask-border-slice",
          "mask-border-source",
          "mask-border-width"
        ],
        percentages: [
          "mask-border-slice",
          "mask-border-width"
        ],
        groups: [
          "CSS Masking"
        ],
        initial: [
          "mask-border-mode",
          "mask-border-outset",
          "mask-border-repeat",
          "mask-border-slice",
          "mask-border-source",
          "mask-border-width"
        ],
        appliesto: "allElementsSVGContainerElements",
        computed: [
          "mask-border-mode",
          "mask-border-outset",
          "mask-border-repeat",
          "mask-border-slice",
          "mask-border-source",
          "mask-border-width"
        ],
        order: "perGrammar",
        stacking: true,
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/mask-border"
      },
      "mask-border-mode": {
        syntax: "luminance | alpha",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Masking"
        ],
        initial: "alpha",
        appliesto: "allElementsSVGContainerElements",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/mask-border-mode"
      },
      "mask-border-outset": {
        syntax: "[ <length> | <number> ]{1,4}",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Masking"
        ],
        initial: "0",
        appliesto: "allElementsSVGContainerElements",
        computed: "asSpecifiedRelativeToAbsoluteLengths",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/mask-border-outset"
      },
      "mask-border-repeat": {
        syntax: "[ stretch | repeat | round | space ]{1,2}",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Masking"
        ],
        initial: "stretch",
        appliesto: "allElementsSVGContainerElements",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/mask-border-repeat"
      },
      "mask-border-slice": {
        syntax: "<number-percentage>{1,4} fill?",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "referToSizeOfMaskBorderImage",
        groups: [
          "CSS Masking"
        ],
        initial: "0",
        appliesto: "allElementsSVGContainerElements",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/mask-border-slice"
      },
      "mask-border-source": {
        syntax: "none | <image>",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Masking"
        ],
        initial: "none",
        appliesto: "allElementsSVGContainerElements",
        computed: "asSpecifiedURLsAbsolute",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/mask-border-source"
      },
      "mask-border-width": {
        syntax: "[ <length-percentage> | <number> | auto ]{1,4}",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "relativeToMaskBorderImageArea",
        groups: [
          "CSS Masking"
        ],
        initial: "auto",
        appliesto: "allElementsSVGContainerElements",
        computed: "asSpecifiedRelativeToAbsoluteLengths",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/mask-border-width"
      },
      "mask-clip": {
        syntax: "[ <geometry-box> | no-clip ]#",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Masking"
        ],
        initial: "border-box",
        appliesto: "allElementsSVGContainerElements",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/mask-clip"
      },
      "mask-composite": {
        syntax: "<compositing-operator>#",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Masking"
        ],
        initial: "add",
        appliesto: "allElementsSVGContainerElements",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/mask-composite"
      },
      "mask-image": {
        syntax: "<mask-reference>#",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Masking"
        ],
        initial: "none",
        appliesto: "allElementsSVGContainerElements",
        computed: "asSpecifiedURLsAbsolute",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/mask-image"
      },
      "mask-mode": {
        syntax: "<masking-mode>#",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Masking"
        ],
        initial: "match-source",
        appliesto: "allElementsSVGContainerElements",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/mask-mode"
      },
      "mask-origin": {
        syntax: "<geometry-box>#",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Masking"
        ],
        initial: "border-box",
        appliesto: "allElementsSVGContainerElements",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/mask-origin"
      },
      "mask-position": {
        syntax: "<position>#",
        media: "visual",
        inherited: false,
        animationType: "repeatableListOfSimpleListOfLpc",
        percentages: "referToSizeOfMaskPaintingArea",
        groups: [
          "CSS Masking"
        ],
        initial: "center",
        appliesto: "allElementsSVGContainerElements",
        computed: "consistsOfTwoKeywordsForOriginAndOffsets",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/mask-position"
      },
      "mask-repeat": {
        syntax: "<repeat-style>#",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Masking"
        ],
        initial: "no-repeat",
        appliesto: "allElementsSVGContainerElements",
        computed: "consistsOfTwoDimensionKeywords",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/mask-repeat"
      },
      "mask-size": {
        syntax: "<bg-size>#",
        media: "visual",
        inherited: false,
        animationType: "repeatableListOfSimpleListOfLpc",
        percentages: "no",
        groups: [
          "CSS Masking"
        ],
        initial: "auto",
        appliesto: "allElementsSVGContainerElements",
        computed: "asSpecifiedRelativeToAbsoluteLengths",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/mask-size"
      },
      "mask-type": {
        syntax: "luminance | alpha",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Masking"
        ],
        initial: "luminance",
        appliesto: "maskElements",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/mask-type"
      },
      "masonry-auto-flow": {
        syntax: "[ pack | next ] || [ definite-first | ordered ]",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Grid Layout"
        ],
        initial: "pack",
        appliesto: "gridContainersWithMasonryLayout",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "experimental",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/masonry-auto-flow"
      },
      "math-style": {
        syntax: "normal | compact",
        media: "visual",
        inherited: true,
        animationType: "notAnimatable",
        percentages: "no",
        groups: [
          "MathML"
        ],
        initial: "normal",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/math-style"
      },
      "max-block-size": {
        syntax: "<'max-width'>",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "blockSizeOfContainingBlock",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "none",
        appliesto: "sameAsWidthAndHeight",
        computed: "sameAsMaxWidthAndMaxHeight",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/max-block-size"
      },
      "max-height": {
        syntax: "none | <length-percentage> | min-content | max-content | fit-content | fit-content(<length-percentage>)",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "regardingHeightOfGeneratedBoxContainingBlockPercentagesNone",
        groups: [
          "CSS Box Model"
        ],
        initial: "none",
        appliesto: "allElementsButNonReplacedAndTableColumns",
        computed: "percentageAsSpecifiedAbsoluteLengthOrNone",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/max-height"
      },
      "max-inline-size": {
        syntax: "<'max-width'>",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "inlineSizeOfContainingBlock",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "none",
        appliesto: "sameAsWidthAndHeight",
        computed: "sameAsMaxWidthAndMaxHeight",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/max-inline-size"
      },
      "max-lines": {
        syntax: "none | <integer>",
        media: "visual",
        inherited: false,
        animationType: "integer",
        percentages: "no",
        groups: [
          "CSS Overflow"
        ],
        initial: "none",
        appliesto: "blockContainersExceptMultiColumnContainers",
        computed: "asSpecified",
        order: "perGrammar",
        status: "experimental"
      },
      "max-width": {
        syntax: "none | <length-percentage> | min-content | max-content | fit-content | fit-content(<length-percentage>)",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "referToWidthOfContainingBlock",
        groups: [
          "CSS Box Model"
        ],
        initial: "none",
        appliesto: "allElementsButNonReplacedAndTableRows",
        computed: "percentageAsSpecifiedAbsoluteLengthOrNone",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/max-width"
      },
      "min-block-size": {
        syntax: "<'min-width'>",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "blockSizeOfContainingBlock",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "0",
        appliesto: "sameAsWidthAndHeight",
        computed: "sameAsMinWidthAndMinHeight",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/min-block-size"
      },
      "min-height": {
        syntax: "auto | <length> | <percentage> | min-content | max-content | fit-content | fit-content(<length-percentage>)",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "regardingHeightOfGeneratedBoxContainingBlockPercentages0",
        groups: [
          "CSS Box Model"
        ],
        initial: "auto",
        appliesto: "allElementsButNonReplacedAndTableColumns",
        computed: "percentageAsSpecifiedOrAbsoluteLength",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/min-height"
      },
      "min-inline-size": {
        syntax: "<'min-width'>",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "inlineSizeOfContainingBlock",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "0",
        appliesto: "sameAsWidthAndHeight",
        computed: "sameAsMinWidthAndMinHeight",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/min-inline-size"
      },
      "min-width": {
        syntax: "auto | <length> | <percentage> | min-content | max-content | fit-content | fit-content(<length-percentage>)",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "referToWidthOfContainingBlock",
        groups: [
          "CSS Box Model"
        ],
        initial: "auto",
        appliesto: "allElementsButNonReplacedAndTableRows",
        computed: "percentageAsSpecifiedOrAbsoluteLength",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/min-width"
      },
      "mix-blend-mode": {
        syntax: "<blend-mode> | plus-lighter",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Compositing and Blending"
        ],
        initial: "normal",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        stacking: true,
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/mix-blend-mode"
      },
      "object-fit": {
        syntax: "fill | contain | cover | none | scale-down",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Images"
        ],
        initial: "fill",
        appliesto: "replacedElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/object-fit"
      },
      "object-position": {
        syntax: "<position>",
        media: "visual",
        inherited: true,
        animationType: "repeatableListOfSimpleListOfLpc",
        percentages: "referToWidthAndHeightOfElement",
        groups: [
          "CSS Images"
        ],
        initial: "50% 50%",
        appliesto: "replacedElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/object-position"
      },
      offset: {
        syntax: "[ <'offset-position'>? [ <'offset-path'> [ <'offset-distance'> || <'offset-rotate'> ]? ]? ]! [ / <'offset-anchor'> ]?",
        media: "visual",
        inherited: false,
        animationType: [
          "offset-position",
          "offset-path",
          "offset-distance",
          "offset-anchor",
          "offset-rotate"
        ],
        percentages: [
          "offset-position",
          "offset-distance",
          "offset-anchor"
        ],
        groups: [
          "CSS Motion Path"
        ],
        initial: [
          "offset-position",
          "offset-path",
          "offset-distance",
          "offset-anchor",
          "offset-rotate"
        ],
        appliesto: "transformableElements",
        computed: [
          "offset-position",
          "offset-path",
          "offset-distance",
          "offset-anchor",
          "offset-rotate"
        ],
        order: "perGrammar",
        stacking: true,
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/offset"
      },
      "offset-anchor": {
        syntax: "auto | <position>",
        media: "visual",
        inherited: false,
        animationType: "position",
        percentages: "relativeToWidthAndHeight",
        groups: [
          "CSS Motion Path"
        ],
        initial: "auto",
        appliesto: "transformableElements",
        computed: "forLengthAbsoluteValueOtherwisePercentage",
        order: "perGrammar",
        status: "standard"
      },
      "offset-distance": {
        syntax: "<length-percentage>",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "referToTotalPathLength",
        groups: [
          "CSS Motion Path"
        ],
        initial: "0",
        appliesto: "transformableElements",
        computed: "forLengthAbsoluteValueOtherwisePercentage",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/offset-distance"
      },
      "offset-path": {
        syntax: "none | ray( [ <angle> && <size> && contain? ] ) | <path()> | <url> | [ <basic-shape> || <geometry-box> ]",
        media: "visual",
        inherited: false,
        animationType: "angleOrBasicShapeOrPath",
        percentages: "no",
        groups: [
          "CSS Motion Path"
        ],
        initial: "none",
        appliesto: "transformableElements",
        computed: "asSpecified",
        order: "perGrammar",
        stacking: true,
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/offset-path"
      },
      "offset-position": {
        syntax: "auto | <position>",
        media: "visual",
        inherited: false,
        animationType: "position",
        percentages: "referToSizeOfContainingBlock",
        groups: [
          "CSS Motion Path"
        ],
        initial: "auto",
        appliesto: "transformableElements",
        computed: "forLengthAbsoluteValueOtherwisePercentage",
        order: "perGrammar",
        status: "experimental"
      },
      "offset-rotate": {
        syntax: "[ auto | reverse ] || <angle>",
        media: "visual",
        inherited: false,
        animationType: "angleOrBasicShapeOrPath",
        percentages: "no",
        groups: [
          "CSS Motion Path"
        ],
        initial: "auto",
        appliesto: "transformableElements",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/offset-rotate"
      },
      opacity: {
        syntax: "<alpha-value>",
        media: "visual",
        inherited: false,
        animationType: "byComputedValueType",
        percentages: "mapToRange0To1",
        groups: [
          "CSS Color"
        ],
        initial: "1",
        appliesto: "allElements",
        computed: "specifiedValueNumberClipped0To1",
        order: "perGrammar",
        alsoAppliesTo: [
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/opacity"
      },
      order: {
        syntax: "<integer>",
        media: "visual",
        inherited: false,
        animationType: "integer",
        percentages: "no",
        groups: [
          "CSS Flexible Box Layout"
        ],
        initial: "0",
        appliesto: "flexItemsGridItemsAbsolutelyPositionedContainerChildren",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/order"
      },
      orphans: {
        syntax: "<integer>",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Fragmentation"
        ],
        initial: "2",
        appliesto: "blockContainerElements",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/orphans"
      },
      outline: {
        syntax: "[ <'outline-color'> || <'outline-style'> || <'outline-width'> ]",
        media: [
          "visual",
          "interactive"
        ],
        inherited: false,
        animationType: [
          "outline-color",
          "outline-width",
          "outline-style"
        ],
        percentages: "no",
        groups: [
          "CSS Basic User Interface"
        ],
        initial: [
          "outline-color",
          "outline-style",
          "outline-width"
        ],
        appliesto: "allElements",
        computed: [
          "outline-color",
          "outline-width",
          "outline-style"
        ],
        order: "orderOfAppearance",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/outline"
      },
      "outline-color": {
        syntax: "<color> | invert",
        media: [
          "visual",
          "interactive"
        ],
        inherited: false,
        animationType: "color",
        percentages: "no",
        groups: [
          "CSS Basic User Interface"
        ],
        initial: "invertOrCurrentColor",
        appliesto: "allElements",
        computed: "invertForTranslucentColorRGBAOtherwiseRGB",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/outline-color"
      },
      "outline-offset": {
        syntax: "<length>",
        media: [
          "visual",
          "interactive"
        ],
        inherited: false,
        animationType: "length",
        percentages: "no",
        groups: [
          "CSS Basic User Interface"
        ],
        initial: "0",
        appliesto: "allElements",
        computed: "asSpecifiedRelativeToAbsoluteLengths",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/outline-offset"
      },
      "outline-style": {
        syntax: "auto | <'border-style'>",
        media: [
          "visual",
          "interactive"
        ],
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Basic User Interface"
        ],
        initial: "none",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/outline-style"
      },
      "outline-width": {
        syntax: "<line-width>",
        media: [
          "visual",
          "interactive"
        ],
        inherited: false,
        animationType: "length",
        percentages: "no",
        groups: [
          "CSS Basic User Interface"
        ],
        initial: "medium",
        appliesto: "allElements",
        computed: "absoluteLength0ForNone",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/outline-width"
      },
      overflow: {
        syntax: "[ visible | hidden | clip | scroll | auto ]{1,2}",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Overflow"
        ],
        initial: "visible",
        appliesto: "blockContainersFlexContainersGridContainers",
        computed: [
          "overflow-x",
          "overflow-y"
        ],
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/overflow"
      },
      "overflow-anchor": {
        syntax: "auto | none",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Scroll Anchoring"
        ],
        initial: "auto",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard"
      },
      "overflow-block": {
        syntax: "visible | hidden | clip | scroll | auto",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Overflow"
        ],
        initial: "auto",
        appliesto: "blockContainersFlexContainersGridContainers",
        computed: "asSpecifiedButVisibleOrClipReplacedToAutoOrHiddenIfOtherValueDifferent",
        order: "perGrammar",
        status: "standard"
      },
      "overflow-clip-box": {
        syntax: "padding-box | content-box",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Mozilla Extensions"
        ],
        initial: "padding-box",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Mozilla/CSS/overflow-clip-box"
      },
      "overflow-clip-margin": {
        syntax: "<visual-box> || <length [0,\u221E]>",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Overflow"
        ],
        initial: "0px",
        appliesto: "allElements",
        computed: "theComputedLength",
        order: "perGrammar",
        status: "standard"
      },
      "overflow-inline": {
        syntax: "visible | hidden | clip | scroll | auto",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Overflow"
        ],
        initial: "auto",
        appliesto: "blockContainersFlexContainersGridContainers",
        computed: "asSpecifiedButVisibleOrClipReplacedToAutoOrHiddenIfOtherValueDifferent",
        order: "perGrammar",
        status: "standard"
      },
      "overflow-wrap": {
        syntax: "normal | break-word | anywhere",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Text"
        ],
        initial: "normal",
        appliesto: "nonReplacedInlineElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/overflow-wrap"
      },
      "overflow-x": {
        syntax: "visible | hidden | clip | scroll | auto",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Overflow"
        ],
        initial: "visible",
        appliesto: "blockContainersFlexContainersGridContainers",
        computed: "asSpecifiedButVisibleOrClipReplacedToAutoOrHiddenIfOtherValueDifferent",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/overflow-x"
      },
      "overflow-y": {
        syntax: "visible | hidden | clip | scroll | auto",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Overflow"
        ],
        initial: "visible",
        appliesto: "blockContainersFlexContainersGridContainers",
        computed: "asSpecifiedButVisibleOrClipReplacedToAutoOrHiddenIfOtherValueDifferent",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/overflow-y"
      },
      "overscroll-behavior": {
        syntax: "[ contain | none | auto ]{1,2}",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Box Model"
        ],
        initial: "auto",
        appliesto: "nonReplacedBlockAndInlineBlockElements",
        computed: [
          "overscroll-behavior-x",
          "overscroll-behavior-y"
        ],
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/overscroll-behavior"
      },
      "overscroll-behavior-block": {
        syntax: "contain | none | auto",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Box Model"
        ],
        initial: "auto",
        appliesto: "nonReplacedBlockAndInlineBlockElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/overscroll-behavior-block"
      },
      "overscroll-behavior-inline": {
        syntax: "contain | none | auto",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Box Model"
        ],
        initial: "auto",
        appliesto: "nonReplacedBlockAndInlineBlockElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/overscroll-behavior-inline"
      },
      "overscroll-behavior-x": {
        syntax: "contain | none | auto",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Box Model"
        ],
        initial: "auto",
        appliesto: "nonReplacedBlockAndInlineBlockElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/overscroll-behavior-x"
      },
      "overscroll-behavior-y": {
        syntax: "contain | none | auto",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Box Model"
        ],
        initial: "auto",
        appliesto: "nonReplacedBlockAndInlineBlockElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/overscroll-behavior-y"
      },
      padding: {
        syntax: "[ <length> | <percentage> ]{1,4}",
        media: "visual",
        inherited: false,
        animationType: "length",
        percentages: "referToWidthOfContainingBlock",
        groups: [
          "CSS Box Model"
        ],
        initial: [
          "padding-bottom",
          "padding-left",
          "padding-right",
          "padding-top"
        ],
        appliesto: "allElementsExceptInternalTableDisplayTypes",
        computed: [
          "padding-bottom",
          "padding-left",
          "padding-right",
          "padding-top"
        ],
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/padding"
      },
      "padding-block": {
        syntax: "<'padding-left'>{1,2}",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "logicalWidthOfContainingBlock",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "0",
        appliesto: "allElements",
        computed: "asLength",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/padding-block"
      },
      "padding-block-end": {
        syntax: "<'padding-left'>",
        media: "visual",
        inherited: false,
        animationType: "length",
        percentages: "logicalWidthOfContainingBlock",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "0",
        appliesto: "allElements",
        computed: "asLength",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/padding-block-end"
      },
      "padding-block-start": {
        syntax: "<'padding-left'>",
        media: "visual",
        inherited: false,
        animationType: "length",
        percentages: "logicalWidthOfContainingBlock",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "0",
        appliesto: "allElements",
        computed: "asLength",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/padding-block-start"
      },
      "padding-bottom": {
        syntax: "<length> | <percentage>",
        media: "visual",
        inherited: false,
        animationType: "length",
        percentages: "referToWidthOfContainingBlock",
        groups: [
          "CSS Box Model"
        ],
        initial: "0",
        appliesto: "allElementsExceptInternalTableDisplayTypes",
        computed: "percentageAsSpecifiedOrAbsoluteLength",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/padding-bottom"
      },
      "padding-inline": {
        syntax: "<'padding-left'>{1,2}",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "logicalWidthOfContainingBlock",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "0",
        appliesto: "allElements",
        computed: "asLength",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/padding-inline"
      },
      "padding-inline-end": {
        syntax: "<'padding-left'>",
        media: "visual",
        inherited: false,
        animationType: "length",
        percentages: "logicalWidthOfContainingBlock",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "0",
        appliesto: "allElements",
        computed: "asLength",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/padding-inline-end"
      },
      "padding-inline-start": {
        syntax: "<'padding-left'>",
        media: "visual",
        inherited: false,
        animationType: "length",
        percentages: "logicalWidthOfContainingBlock",
        groups: [
          "CSS Logical Properties"
        ],
        initial: "0",
        appliesto: "allElements",
        computed: "asLength",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/padding-inline-start"
      },
      "padding-left": {
        syntax: "<length> | <percentage>",
        media: "visual",
        inherited: false,
        animationType: "length",
        percentages: "referToWidthOfContainingBlock",
        groups: [
          "CSS Box Model"
        ],
        initial: "0",
        appliesto: "allElementsExceptInternalTableDisplayTypes",
        computed: "percentageAsSpecifiedOrAbsoluteLength",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/padding-left"
      },
      "padding-right": {
        syntax: "<length> | <percentage>",
        media: "visual",
        inherited: false,
        animationType: "length",
        percentages: "referToWidthOfContainingBlock",
        groups: [
          "CSS Box Model"
        ],
        initial: "0",
        appliesto: "allElementsExceptInternalTableDisplayTypes",
        computed: "percentageAsSpecifiedOrAbsoluteLength",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/padding-right"
      },
      "padding-top": {
        syntax: "<length> | <percentage>",
        media: "visual",
        inherited: false,
        animationType: "length",
        percentages: "referToWidthOfContainingBlock",
        groups: [
          "CSS Box Model"
        ],
        initial: "0",
        appliesto: "allElementsExceptInternalTableDisplayTypes",
        computed: "percentageAsSpecifiedOrAbsoluteLength",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/padding-top"
      },
      "page-break-after": {
        syntax: "auto | always | avoid | left | right | recto | verso",
        media: [
          "visual",
          "paged"
        ],
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Pages"
        ],
        initial: "auto",
        appliesto: "blockElementsInNormalFlow",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/page-break-after"
      },
      "page-break-before": {
        syntax: "auto | always | avoid | left | right | recto | verso",
        media: [
          "visual",
          "paged"
        ],
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Pages"
        ],
        initial: "auto",
        appliesto: "blockElementsInNormalFlow",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/page-break-before"
      },
      "page-break-inside": {
        syntax: "auto | avoid",
        media: [
          "visual",
          "paged"
        ],
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Pages"
        ],
        initial: "auto",
        appliesto: "blockElementsInNormalFlow",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/page-break-inside"
      },
      "paint-order": {
        syntax: "normal | [ fill || stroke || markers ]",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Text"
        ],
        initial: "normal",
        appliesto: "textElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/paint-order"
      },
      perspective: {
        syntax: "none | <length>",
        media: "visual",
        inherited: false,
        animationType: "length",
        percentages: "no",
        groups: [
          "CSS Transforms"
        ],
        initial: "none",
        appliesto: "transformableElements",
        computed: "absoluteLengthOrNone",
        order: "uniqueOrder",
        stacking: true,
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/perspective"
      },
      "perspective-origin": {
        syntax: "<position>",
        media: "visual",
        inherited: false,
        animationType: "simpleListOfLpc",
        percentages: "referToSizeOfBoundingBox",
        groups: [
          "CSS Transforms"
        ],
        initial: "50% 50%",
        appliesto: "transformableElements",
        computed: "forLengthAbsoluteValueOtherwisePercentage",
        order: "oneOrTwoValuesLengthAbsoluteKeywordsPercentages",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/perspective-origin"
      },
      "place-content": {
        syntax: "<'align-content'> <'justify-content'>?",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Box Alignment"
        ],
        initial: "normal",
        appliesto: "multilineFlexContainers",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/place-content"
      },
      "place-items": {
        syntax: "<'align-items'> <'justify-items'>?",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Box Alignment"
        ],
        initial: [
          "align-items",
          "justify-items"
        ],
        appliesto: "allElements",
        computed: [
          "align-items",
          "justify-items"
        ],
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/place-items"
      },
      "place-self": {
        syntax: "<'align-self'> <'justify-self'>?",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Box Alignment"
        ],
        initial: [
          "align-self",
          "justify-self"
        ],
        appliesto: "blockLevelBoxesAndAbsolutelyPositionedBoxesAndGridItems",
        computed: [
          "align-self",
          "justify-self"
        ],
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/place-self"
      },
      "pointer-events": {
        syntax: "auto | none | visiblePainted | visibleFill | visibleStroke | visible | painted | fill | stroke | all | inherit",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Basic User Interface"
        ],
        initial: "auto",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/pointer-events"
      },
      position: {
        syntax: "static | relative | absolute | sticky | fixed",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Positioning"
        ],
        initial: "static",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        stacking: true,
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/position"
      },
      quotes: {
        syntax: "none | auto | [ <string> <string> ]+",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Generated Content"
        ],
        initial: "dependsOnUserAgent",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/quotes"
      },
      resize: {
        syntax: "none | both | horizontal | vertical | block | inline",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Basic User Interface"
        ],
        initial: "none",
        appliesto: "elementsWithOverflowNotVisibleAndReplacedElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/resize"
      },
      right: {
        syntax: "<length> | <percentage> | auto",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "referToWidthOfContainingBlock",
        groups: [
          "CSS Positioning"
        ],
        initial: "auto",
        appliesto: "positionedElements",
        computed: "lengthAbsolutePercentageAsSpecifiedOtherwiseAuto",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/right"
      },
      rotate: {
        syntax: "none | <angle> | [ x | y | z | <number>{3} ] && <angle>",
        media: "visual",
        inherited: false,
        animationType: "transform",
        percentages: "no",
        groups: [
          "CSS Transforms"
        ],
        initial: "none",
        appliesto: "transformableElements",
        computed: "asSpecified",
        order: "perGrammar",
        stacking: true,
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/rotate"
      },
      "row-gap": {
        syntax: "normal | <length-percentage>",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "referToDimensionOfContentArea",
        groups: [
          "CSS Box Alignment"
        ],
        initial: "normal",
        appliesto: "multiColumnElementsFlexContainersGridContainers",
        computed: "asSpecifiedWithLengthsAbsoluteAndNormalComputingToZeroExceptMultiColumn",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/row-gap"
      },
      "ruby-align": {
        syntax: "start | center | space-between | space-around",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Ruby"
        ],
        initial: "space-around",
        appliesto: "rubyBasesAnnotationsBaseAnnotationContainers",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "experimental",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/ruby-align"
      },
      "ruby-merge": {
        syntax: "separate | collapse | auto",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Ruby"
        ],
        initial: "separate",
        appliesto: "rubyAnnotationsContainers",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "experimental"
      },
      "ruby-position": {
        syntax: "[ alternate || [ over | under ] ] | inter-character",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Ruby"
        ],
        initial: "alternate",
        appliesto: "rubyAnnotationsContainers",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "experimental",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/ruby-position"
      },
      scale: {
        syntax: "none | <number>{1,3}",
        media: "visual",
        inherited: false,
        animationType: "transform",
        percentages: "no",
        groups: [
          "CSS Transforms"
        ],
        initial: "none",
        appliesto: "transformableElements",
        computed: "asSpecified",
        order: "perGrammar",
        stacking: true,
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/scale"
      },
      "scrollbar-color": {
        syntax: "auto | <color>{2}",
        media: "visual",
        inherited: true,
        animationType: "color",
        percentages: "no",
        groups: [
          "CSS Scrollbars"
        ],
        initial: "auto",
        appliesto: "scrollingBoxes",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/scrollbar-color"
      },
      "scrollbar-gutter": {
        syntax: "auto | stable && both-edges?",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Overflow"
        ],
        initial: "auto",
        appliesto: "scrollingBoxes",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/scrollbar-gutter"
      },
      "scrollbar-width": {
        syntax: "auto | thin | none",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Scrollbars"
        ],
        initial: "auto",
        appliesto: "scrollingBoxes",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/scrollbar-width"
      },
      "scroll-behavior": {
        syntax: "auto | smooth",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSSOM View"
        ],
        initial: "auto",
        appliesto: "scrollingBoxes",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/scroll-behavior"
      },
      "scroll-margin": {
        syntax: "<length>{1,4}",
        media: "visual",
        inherited: false,
        animationType: "byComputedValueType",
        percentages: "no",
        groups: [
          "CSS Scroll Snap"
        ],
        initial: "0",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/scroll-margin"
      },
      "scroll-margin-block": {
        syntax: "<length>{1,2}",
        media: "visual",
        inherited: false,
        animationType: "byComputedValueType",
        percentages: "no",
        groups: [
          "CSS Scroll Snap"
        ],
        initial: "0",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/scroll-margin-block"
      },
      "scroll-margin-block-start": {
        syntax: "<length>",
        media: "visual",
        inherited: false,
        animationType: "byComputedValueType",
        percentages: "no",
        groups: [
          "CSS Scroll Snap"
        ],
        initial: "0",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/scroll-margin-block-start"
      },
      "scroll-margin-block-end": {
        syntax: "<length>",
        media: "visual",
        inherited: false,
        animationType: "byComputedValueType",
        percentages: "no",
        groups: [
          "CSS Scroll Snap"
        ],
        initial: "0",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/scroll-margin-block-end"
      },
      "scroll-margin-bottom": {
        syntax: "<length>",
        media: "visual",
        inherited: false,
        animationType: "byComputedValueType",
        percentages: "no",
        groups: [
          "CSS Scroll Snap"
        ],
        initial: "0",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/scroll-margin-bottom"
      },
      "scroll-margin-inline": {
        syntax: "<length>{1,2}",
        media: "visual",
        inherited: false,
        animationType: "byComputedValueType",
        percentages: "no",
        groups: [
          "CSS Scroll Snap"
        ],
        initial: "0",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/scroll-margin-inline"
      },
      "scroll-margin-inline-start": {
        syntax: "<length>",
        media: "visual",
        inherited: false,
        animationType: "byComputedValueType",
        percentages: "no",
        groups: [
          "CSS Scroll Snap"
        ],
        initial: "0",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/scroll-margin-inline-start"
      },
      "scroll-margin-inline-end": {
        syntax: "<length>",
        media: "visual",
        inherited: false,
        animationType: "byComputedValueType",
        percentages: "no",
        groups: [
          "CSS Scroll Snap"
        ],
        initial: "0",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/scroll-margin-inline-end"
      },
      "scroll-margin-left": {
        syntax: "<length>",
        media: "visual",
        inherited: false,
        animationType: "byComputedValueType",
        percentages: "no",
        groups: [
          "CSS Scroll Snap"
        ],
        initial: "0",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/scroll-margin-left"
      },
      "scroll-margin-right": {
        syntax: "<length>",
        media: "visual",
        inherited: false,
        animationType: "byComputedValueType",
        percentages: "no",
        groups: [
          "CSS Scroll Snap"
        ],
        initial: "0",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/scroll-margin-right"
      },
      "scroll-margin-top": {
        syntax: "<length>",
        media: "visual",
        inherited: false,
        animationType: "byComputedValueType",
        percentages: "no",
        groups: [
          "CSS Scroll Snap"
        ],
        initial: "0",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/scroll-margin-top"
      },
      "scroll-padding": {
        syntax: "[ auto | <length-percentage> ]{1,4}",
        media: "visual",
        inherited: false,
        animationType: "byComputedValueType",
        percentages: "relativeToTheScrollContainersScrollport",
        groups: [
          "CSS Scroll Snap"
        ],
        initial: "auto",
        appliesto: "scrollContainers",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/scroll-padding"
      },
      "scroll-padding-block": {
        syntax: "[ auto | <length-percentage> ]{1,2}",
        media: "visual",
        inherited: false,
        animationType: "byComputedValueType",
        percentages: "relativeToTheScrollContainersScrollport",
        groups: [
          "CSS Scroll Snap"
        ],
        initial: "auto",
        appliesto: "scrollContainers",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/scroll-padding-block"
      },
      "scroll-padding-block-start": {
        syntax: "auto | <length-percentage>",
        media: "visual",
        inherited: false,
        animationType: "byComputedValueType",
        percentages: "relativeToTheScrollContainersScrollport",
        groups: [
          "CSS Scroll Snap"
        ],
        initial: "auto",
        appliesto: "scrollContainers",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/scroll-padding-block-start"
      },
      "scroll-padding-block-end": {
        syntax: "auto | <length-percentage>",
        media: "visual",
        inherited: false,
        animationType: "byComputedValueType",
        percentages: "relativeToTheScrollContainersScrollport",
        groups: [
          "CSS Scroll Snap"
        ],
        initial: "auto",
        appliesto: "scrollContainers",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/scroll-padding-block-end"
      },
      "scroll-padding-bottom": {
        syntax: "auto | <length-percentage>",
        media: "visual",
        inherited: false,
        animationType: "byComputedValueType",
        percentages: "relativeToTheScrollContainersScrollport",
        groups: [
          "CSS Scroll Snap"
        ],
        initial: "auto",
        appliesto: "scrollContainers",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/scroll-padding-bottom"
      },
      "scroll-padding-inline": {
        syntax: "[ auto | <length-percentage> ]{1,2}",
        media: "visual",
        inherited: false,
        animationType: "byComputedValueType",
        percentages: "relativeToTheScrollContainersScrollport",
        groups: [
          "CSS Scroll Snap"
        ],
        initial: "auto",
        appliesto: "scrollContainers",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/scroll-padding-inline"
      },
      "scroll-padding-inline-start": {
        syntax: "auto | <length-percentage>",
        media: "visual",
        inherited: false,
        animationType: "byComputedValueType",
        percentages: "relativeToTheScrollContainersScrollport",
        groups: [
          "CSS Scroll Snap"
        ],
        initial: "auto",
        appliesto: "scrollContainers",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/scroll-padding-inline-start"
      },
      "scroll-padding-inline-end": {
        syntax: "auto | <length-percentage>",
        media: "visual",
        inherited: false,
        animationType: "byComputedValueType",
        percentages: "relativeToTheScrollContainersScrollport",
        groups: [
          "CSS Scroll Snap"
        ],
        initial: "auto",
        appliesto: "scrollContainers",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/scroll-padding-inline-end"
      },
      "scroll-padding-left": {
        syntax: "auto | <length-percentage>",
        media: "visual",
        inherited: false,
        animationType: "byComputedValueType",
        percentages: "relativeToTheScrollContainersScrollport",
        groups: [
          "CSS Scroll Snap"
        ],
        initial: "auto",
        appliesto: "scrollContainers",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/scroll-padding-left"
      },
      "scroll-padding-right": {
        syntax: "auto | <length-percentage>",
        media: "visual",
        inherited: false,
        animationType: "byComputedValueType",
        percentages: "relativeToTheScrollContainersScrollport",
        groups: [
          "CSS Scroll Snap"
        ],
        initial: "auto",
        appliesto: "scrollContainers",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/scroll-padding-right"
      },
      "scroll-padding-top": {
        syntax: "auto | <length-percentage>",
        media: "visual",
        inherited: false,
        animationType: "byComputedValueType",
        percentages: "relativeToTheScrollContainersScrollport",
        groups: [
          "CSS Scroll Snap"
        ],
        initial: "auto",
        appliesto: "scrollContainers",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/scroll-padding-top"
      },
      "scroll-snap-align": {
        syntax: "[ none | start | end | center ]{1,2}",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Scroll Snap"
        ],
        initial: "none",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/scroll-snap-align"
      },
      "scroll-snap-coordinate": {
        syntax: "none | <position>#",
        media: "interactive",
        inherited: false,
        animationType: "position",
        percentages: "referToBorderBox",
        groups: [
          "CSS Scroll Snap"
        ],
        initial: "none",
        appliesto: "allElements",
        computed: "asSpecifiedRelativeToAbsoluteLengths",
        order: "uniqueOrder",
        status: "obsolete",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/scroll-snap-coordinate"
      },
      "scroll-snap-destination": {
        syntax: "<position>",
        media: "interactive",
        inherited: false,
        animationType: "position",
        percentages: "relativeToScrollContainerPaddingBoxAxis",
        groups: [
          "CSS Scroll Snap"
        ],
        initial: "0px 0px",
        appliesto: "scrollContainers",
        computed: "asSpecifiedRelativeToAbsoluteLengths",
        order: "uniqueOrder",
        status: "obsolete",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/scroll-snap-destination"
      },
      "scroll-snap-points-x": {
        syntax: "none | repeat( <length-percentage> )",
        media: "interactive",
        inherited: false,
        animationType: "discrete",
        percentages: "relativeToScrollContainerPaddingBoxAxis",
        groups: [
          "CSS Scroll Snap"
        ],
        initial: "none",
        appliesto: "scrollContainers",
        computed: "asSpecifiedRelativeToAbsoluteLengths",
        order: "uniqueOrder",
        status: "obsolete",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/scroll-snap-points-x"
      },
      "scroll-snap-points-y": {
        syntax: "none | repeat( <length-percentage> )",
        media: "interactive",
        inherited: false,
        animationType: "discrete",
        percentages: "relativeToScrollContainerPaddingBoxAxis",
        groups: [
          "CSS Scroll Snap"
        ],
        initial: "none",
        appliesto: "scrollContainers",
        computed: "asSpecifiedRelativeToAbsoluteLengths",
        order: "uniqueOrder",
        status: "obsolete",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/scroll-snap-points-y"
      },
      "scroll-snap-stop": {
        syntax: "normal | always",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Scroll Snap"
        ],
        initial: "normal",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/scroll-snap-stop"
      },
      "scroll-snap-type": {
        syntax: "none | [ x | y | block | inline | both ] [ mandatory | proximity ]?",
        media: "interactive",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Scroll Snap"
        ],
        initial: "none",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/scroll-snap-type"
      },
      "scroll-snap-type-x": {
        syntax: "none | mandatory | proximity",
        media: "interactive",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Scroll Snap"
        ],
        initial: "none",
        appliesto: "scrollContainers",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "obsolete",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/scroll-snap-type-x"
      },
      "scroll-snap-type-y": {
        syntax: "none | mandatory | proximity",
        media: "interactive",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Scroll Snap"
        ],
        initial: "none",
        appliesto: "scrollContainers",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "obsolete",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/scroll-snap-type-y"
      },
      "shape-image-threshold": {
        syntax: "<alpha-value>",
        media: "visual",
        inherited: false,
        animationType: "number",
        percentages: "no",
        groups: [
          "CSS Shapes"
        ],
        initial: "0.0",
        appliesto: "floats",
        computed: "specifiedValueNumberClipped0To1",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/shape-image-threshold"
      },
      "shape-margin": {
        syntax: "<length-percentage>",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "referToWidthOfContainingBlock",
        groups: [
          "CSS Shapes"
        ],
        initial: "0",
        appliesto: "floats",
        computed: "asSpecifiedRelativeToAbsoluteLengths",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/shape-margin"
      },
      "shape-outside": {
        syntax: "none | [ <shape-box> || <basic-shape> ] | <image>",
        media: "visual",
        inherited: false,
        animationType: "basicShapeOtherwiseNo",
        percentages: "no",
        groups: [
          "CSS Shapes"
        ],
        initial: "none",
        appliesto: "floats",
        computed: "asDefinedForBasicShapeWithAbsoluteURIOtherwiseAsSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/shape-outside"
      },
      "tab-size": {
        syntax: "<integer> | <length>",
        media: "visual",
        inherited: true,
        animationType: "length",
        percentages: "no",
        groups: [
          "CSS Text"
        ],
        initial: "8",
        appliesto: "blockContainers",
        computed: "specifiedIntegerOrAbsoluteLength",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/tab-size"
      },
      "table-layout": {
        syntax: "auto | fixed",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Table"
        ],
        initial: "auto",
        appliesto: "tableElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/table-layout"
      },
      "text-align": {
        syntax: "start | end | left | right | center | justify | match-parent",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Text"
        ],
        initial: "startOrNamelessValueIfLTRRightIfRTL",
        appliesto: "blockContainers",
        computed: "asSpecifiedExceptMatchParent",
        order: "orderOfAppearance",
        alsoAppliesTo: [
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/text-align"
      },
      "text-align-last": {
        syntax: "auto | start | end | left | right | center | justify",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Text"
        ],
        initial: "auto",
        appliesto: "blockContainers",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/text-align-last"
      },
      "text-combine-upright": {
        syntax: "none | all | [ digits <integer>? ]",
        media: "visual",
        inherited: true,
        animationType: "notAnimatable",
        percentages: "no",
        groups: [
          "CSS Writing Modes"
        ],
        initial: "none",
        appliesto: "nonReplacedInlineElements",
        computed: "keywordPlusIntegerIfDigits",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/text-combine-upright"
      },
      "text-decoration": {
        syntax: "<'text-decoration-line'> || <'text-decoration-style'> || <'text-decoration-color'> || <'text-decoration-thickness'>",
        media: "visual",
        inherited: false,
        animationType: [
          "text-decoration-color",
          "text-decoration-style",
          "text-decoration-line",
          "text-decoration-thickness"
        ],
        percentages: "no",
        groups: [
          "CSS Text Decoration"
        ],
        initial: [
          "text-decoration-color",
          "text-decoration-style",
          "text-decoration-line"
        ],
        appliesto: "allElements",
        computed: [
          "text-decoration-line",
          "text-decoration-style",
          "text-decoration-color",
          "text-decoration-thickness"
        ],
        order: "orderOfAppearance",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/text-decoration"
      },
      "text-decoration-color": {
        syntax: "<color>",
        media: "visual",
        inherited: false,
        animationType: "color",
        percentages: "no",
        groups: [
          "CSS Text Decoration"
        ],
        initial: "currentcolor",
        appliesto: "allElements",
        computed: "computedColor",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/text-decoration-color"
      },
      "text-decoration-line": {
        syntax: "none | [ underline || overline || line-through || blink ] | spelling-error | grammar-error",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Text Decoration"
        ],
        initial: "none",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "orderOfAppearance",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/text-decoration-line"
      },
      "text-decoration-skip": {
        syntax: "none | [ objects || [ spaces | [ leading-spaces || trailing-spaces ] ] || edges || box-decoration ]",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Text Decoration"
        ],
        initial: "objects",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "orderOfAppearance",
        status: "experimental",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/text-decoration-skip"
      },
      "text-decoration-skip-ink": {
        syntax: "auto | all | none",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Text Decoration"
        ],
        initial: "auto",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "orderOfAppearance",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/text-decoration-skip-ink"
      },
      "text-decoration-style": {
        syntax: "solid | double | dotted | dashed | wavy",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Text Decoration"
        ],
        initial: "solid",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/text-decoration-style"
      },
      "text-decoration-thickness": {
        syntax: "auto | from-font | <length> | <percentage> ",
        media: "visual",
        inherited: false,
        animationType: "byComputedValueType",
        percentages: "referToElementFontSize",
        groups: [
          "CSS Text Decoration"
        ],
        initial: "auto",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/text-decoration-thickness"
      },
      "text-emphasis": {
        syntax: "<'text-emphasis-style'> || <'text-emphasis-color'>",
        media: "visual",
        inherited: false,
        animationType: [
          "text-emphasis-color",
          "text-emphasis-style"
        ],
        percentages: "no",
        groups: [
          "CSS Text Decoration"
        ],
        initial: [
          "text-emphasis-style",
          "text-emphasis-color"
        ],
        appliesto: "allElements",
        computed: [
          "text-emphasis-style",
          "text-emphasis-color"
        ],
        order: "orderOfAppearance",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/text-emphasis"
      },
      "text-emphasis-color": {
        syntax: "<color>",
        media: "visual",
        inherited: false,
        animationType: "color",
        percentages: "no",
        groups: [
          "CSS Text Decoration"
        ],
        initial: "currentcolor",
        appliesto: "allElements",
        computed: "computedColor",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/text-emphasis-color"
      },
      "text-emphasis-position": {
        syntax: "[ over | under ] && [ right | left ]",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Text Decoration"
        ],
        initial: "over right",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/text-emphasis-position"
      },
      "text-emphasis-style": {
        syntax: "none | [ [ filled | open ] || [ dot | circle | double-circle | triangle | sesame ] ] | <string>",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Text Decoration"
        ],
        initial: "none",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/text-emphasis-style"
      },
      "text-indent": {
        syntax: "<length-percentage> && hanging? && each-line?",
        media: "visual",
        inherited: true,
        animationType: "lpc",
        percentages: "referToWidthOfContainingBlock",
        groups: [
          "CSS Text"
        ],
        initial: "0",
        appliesto: "blockContainers",
        computed: "percentageOrAbsoluteLengthPlusKeywords",
        order: "lengthOrPercentageBeforeKeywords",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/text-indent"
      },
      "text-justify": {
        syntax: "auto | inter-character | inter-word | none",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Text"
        ],
        initial: "auto",
        appliesto: "inlineLevelAndTableCellElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/text-justify"
      },
      "text-orientation": {
        syntax: "mixed | upright | sideways",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Writing Modes"
        ],
        initial: "mixed",
        appliesto: "allElementsExceptTableRowGroupsRowsColumnGroupsAndColumns",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/text-orientation"
      },
      "text-overflow": {
        syntax: "[ clip | ellipsis | <string> ]{1,2}",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Basic User Interface"
        ],
        initial: "clip",
        appliesto: "blockContainerElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/text-overflow"
      },
      "text-rendering": {
        syntax: "auto | optimizeSpeed | optimizeLegibility | geometricPrecision",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Miscellaneous"
        ],
        initial: "auto",
        appliesto: "textElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/text-rendering"
      },
      "text-shadow": {
        syntax: "none | <shadow-t>#",
        media: "visual",
        inherited: true,
        animationType: "shadowList",
        percentages: "no",
        groups: [
          "CSS Text Decoration"
        ],
        initial: "none",
        appliesto: "allElements",
        computed: "colorPlusThreeAbsoluteLengths",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/text-shadow"
      },
      "text-size-adjust": {
        syntax: "none | auto | <percentage>",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "referToSizeOfFont",
        groups: [
          "CSS Text"
        ],
        initial: "autoForSmartphoneBrowsersSupportingInflation",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "experimental",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/text-size-adjust"
      },
      "text-transform": {
        syntax: "none | capitalize | uppercase | lowercase | full-width | full-size-kana",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Text"
        ],
        initial: "none",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/text-transform"
      },
      "text-underline-offset": {
        syntax: "auto | <length> | <percentage> ",
        media: "visual",
        inherited: true,
        animationType: "byComputedValueType",
        percentages: "referToElementFontSize",
        groups: [
          "CSS Text Decoration"
        ],
        initial: "auto",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/text-underline-offset"
      },
      "text-underline-position": {
        syntax: "auto | from-font | [ under || [ left | right ] ]",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Text Decoration"
        ],
        initial: "auto",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "orderOfAppearance",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/text-underline-position"
      },
      top: {
        syntax: "<length> | <percentage> | auto",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "referToContainingBlockHeight",
        groups: [
          "CSS Positioning"
        ],
        initial: "auto",
        appliesto: "positionedElements",
        computed: "lengthAbsolutePercentageAsSpecifiedOtherwiseAuto",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/top"
      },
      "touch-action": {
        syntax: "auto | none | [ [ pan-x | pan-left | pan-right ] || [ pan-y | pan-up | pan-down ] || pinch-zoom ] | manipulation",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "Pointer Events"
        ],
        initial: "auto",
        appliesto: "allElementsExceptNonReplacedInlineElementsTableRowsColumnsRowColumnGroups",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/touch-action"
      },
      transform: {
        syntax: "none | <transform-list>",
        media: "visual",
        inherited: false,
        animationType: "transform",
        percentages: "referToSizeOfBoundingBox",
        groups: [
          "CSS Transforms"
        ],
        initial: "none",
        appliesto: "transformableElements",
        computed: "asSpecifiedRelativeToAbsoluteLengths",
        order: "uniqueOrder",
        stacking: true,
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/transform"
      },
      "transform-box": {
        syntax: "content-box | border-box | fill-box | stroke-box | view-box",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Transforms"
        ],
        initial: "view-box",
        appliesto: "transformableElements",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/transform-box"
      },
      "transform-origin": {
        syntax: "[ <length-percentage> | left | center | right | top | bottom ] | [ [ <length-percentage> | left | center | right ] && [ <length-percentage> | top | center | bottom ] ] <length>?",
        media: "visual",
        inherited: false,
        animationType: "simpleListOfLpc",
        percentages: "referToSizeOfBoundingBox",
        groups: [
          "CSS Transforms"
        ],
        initial: "50% 50% 0",
        appliesto: "transformableElements",
        computed: "forLengthAbsoluteValueOtherwisePercentage",
        order: "oneOrTwoValuesLengthAbsoluteKeywordsPercentages",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/transform-origin"
      },
      "transform-style": {
        syntax: "flat | preserve-3d",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Transforms"
        ],
        initial: "flat",
        appliesto: "transformableElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        stacking: true,
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/transform-style"
      },
      transition: {
        syntax: "<single-transition>#",
        media: "interactive",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Transitions"
        ],
        initial: [
          "transition-delay",
          "transition-duration",
          "transition-property",
          "transition-timing-function"
        ],
        appliesto: "allElementsAndPseudos",
        computed: [
          "transition-delay",
          "transition-duration",
          "transition-property",
          "transition-timing-function"
        ],
        order: "orderOfAppearance",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/transition"
      },
      "transition-delay": {
        syntax: "<time>#",
        media: "interactive",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Transitions"
        ],
        initial: "0s",
        appliesto: "allElementsAndPseudos",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/transition-delay"
      },
      "transition-duration": {
        syntax: "<time>#",
        media: "interactive",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Transitions"
        ],
        initial: "0s",
        appliesto: "allElementsAndPseudos",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/transition-duration"
      },
      "transition-property": {
        syntax: "none | <single-transition-property>#",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Transitions"
        ],
        initial: "all",
        appliesto: "allElementsAndPseudos",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/transition-property"
      },
      "transition-timing-function": {
        syntax: "<easing-function>#",
        media: "interactive",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Transitions"
        ],
        initial: "ease",
        appliesto: "allElementsAndPseudos",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/transition-timing-function"
      },
      translate: {
        syntax: "none | <length-percentage> [ <length-percentage> <length>? ]?",
        media: "visual",
        inherited: false,
        animationType: "transform",
        percentages: "referToSizeOfBoundingBox",
        groups: [
          "CSS Transforms"
        ],
        initial: "none",
        appliesto: "transformableElements",
        computed: "asSpecifiedRelativeToAbsoluteLengths",
        order: "perGrammar",
        stacking: true,
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/translate"
      },
      "unicode-bidi": {
        syntax: "normal | embed | isolate | bidi-override | isolate-override | plaintext",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Writing Modes"
        ],
        initial: "normal",
        appliesto: "allElementsSomeValuesNoEffectOnNonInlineElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/unicode-bidi"
      },
      "user-select": {
        syntax: "auto | text | none | contain | all",
        media: "visual",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Basic User Interface"
        ],
        initial: "auto",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/user-select"
      },
      "vertical-align": {
        syntax: "baseline | sub | super | text-top | text-bottom | middle | top | bottom | <percentage> | <length>",
        media: "visual",
        inherited: false,
        animationType: "length",
        percentages: "referToLineHeight",
        groups: [
          "CSS Table"
        ],
        initial: "baseline",
        appliesto: "inlineLevelAndTableCellElements",
        computed: "absoluteLengthOrKeyword",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/vertical-align"
      },
      visibility: {
        syntax: "visible | hidden | collapse",
        media: "visual",
        inherited: true,
        animationType: "visibility",
        percentages: "no",
        groups: [
          "CSS Box Model"
        ],
        initial: "visible",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/visibility"
      },
      "white-space": {
        syntax: "normal | pre | nowrap | pre-wrap | pre-line | break-spaces",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Text"
        ],
        initial: "normal",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/white-space"
      },
      widows: {
        syntax: "<integer>",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Fragmentation"
        ],
        initial: "2",
        appliesto: "blockContainerElements",
        computed: "asSpecified",
        order: "perGrammar",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/widows"
      },
      width: {
        syntax: "auto | <length> | <percentage> | min-content | max-content | fit-content | fit-content(<length-percentage>)",
        media: "visual",
        inherited: false,
        animationType: "lpc",
        percentages: "referToWidthOfContainingBlock",
        groups: [
          "CSS Box Model"
        ],
        initial: "auto",
        appliesto: "allElementsButNonReplacedAndTableRows",
        computed: "percentageAutoOrAbsoluteLength",
        order: "lengthOrPercentageBeforeKeywordIfBothPresent",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/width"
      },
      "will-change": {
        syntax: "auto | <animateable-feature>#",
        media: "all",
        inherited: false,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Will Change"
        ],
        initial: "auto",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/will-change"
      },
      "word-break": {
        syntax: "normal | break-all | keep-all | break-word",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Text"
        ],
        initial: "normal",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/word-break"
      },
      "word-spacing": {
        syntax: "normal | <length>",
        media: "visual",
        inherited: true,
        animationType: "length",
        percentages: "referToWidthOfAffectedGlyph",
        groups: [
          "CSS Text"
        ],
        initial: "normal",
        appliesto: "allElements",
        computed: "optimumMinAndMaxValueOfAbsoluteLengthPercentageOrNormal",
        order: "uniqueOrder",
        alsoAppliesTo: [
          "::first-letter",
          "::first-line",
          "::placeholder"
        ],
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/word-spacing"
      },
      "word-wrap": {
        syntax: "normal | break-word",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Text"
        ],
        initial: "normal",
        appliesto: "nonReplacedInlineElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/overflow-wrap"
      },
      "writing-mode": {
        syntax: "horizontal-tb | vertical-rl | vertical-lr | sideways-rl | sideways-lr",
        media: "visual",
        inherited: true,
        animationType: "discrete",
        percentages: "no",
        groups: [
          "CSS Writing Modes"
        ],
        initial: "horizontal-tb",
        appliesto: "allElementsExceptTableRowColumnGroupsTableRowsColumns",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/writing-mode"
      },
      "z-index": {
        syntax: "auto | <integer>",
        media: "visual",
        inherited: false,
        animationType: "integer",
        percentages: "no",
        groups: [
          "CSS Positioning"
        ],
        initial: "auto",
        appliesto: "positionedElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        stacking: true,
        status: "standard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/z-index"
      },
      zoom: {
        syntax: "normal | reset | <number> | <percentage>",
        media: "visual",
        inherited: false,
        animationType: "integer",
        percentages: "no",
        groups: [
          "Microsoft Extensions"
        ],
        initial: "normal",
        appliesto: "allElements",
        computed: "asSpecified",
        order: "uniqueOrder",
        status: "nonstandard",
        mdn_url: "https://developer.mozilla.org/docs/Web/CSS/zoom"
      }
    };
  }
});

// node_modules/csso/node_modules/mdn-data/css/syntaxes.json
var require_syntaxes2 = __commonJS({
  "node_modules/csso/node_modules/mdn-data/css/syntaxes.json"(exports, module2) {
    module2.exports = {
      "absolute-size": {
        syntax: "xx-small | x-small | small | medium | large | x-large | xx-large | xxx-large"
      },
      "alpha-value": {
        syntax: "<number> | <percentage>"
      },
      "angle-percentage": {
        syntax: "<angle> | <percentage>"
      },
      "angular-color-hint": {
        syntax: "<angle-percentage>"
      },
      "angular-color-stop": {
        syntax: "<color> && <color-stop-angle>?"
      },
      "angular-color-stop-list": {
        syntax: "[ <angular-color-stop> [, <angular-color-hint>]? ]# , <angular-color-stop>"
      },
      "animateable-feature": {
        syntax: "scroll-position | contents | <custom-ident>"
      },
      attachment: {
        syntax: "scroll | fixed | local"
      },
      "attr()": {
        syntax: "attr( <attr-name> <type-or-unit>? [, <attr-fallback> ]? )"
      },
      "attr-matcher": {
        syntax: "[ '~' | '|' | '^' | '$' | '*' ]? '='"
      },
      "attr-modifier": {
        syntax: "i | s"
      },
      "attribute-selector": {
        syntax: "'[' <wq-name> ']' | '[' <wq-name> <attr-matcher> [ <string-token> | <ident-token> ] <attr-modifier>? ']'"
      },
      "auto-repeat": {
        syntax: "repeat( [ auto-fill | auto-fit ] , [ <line-names>? <fixed-size> ]+ <line-names>? )"
      },
      "auto-track-list": {
        syntax: "[ <line-names>? [ <fixed-size> | <fixed-repeat> ] ]* <line-names>? <auto-repeat>\n[ <line-names>? [ <fixed-size> | <fixed-repeat> ] ]* <line-names>?"
      },
      "baseline-position": {
        syntax: "[ first | last ]? baseline"
      },
      "basic-shape": {
        syntax: "<inset()> | <circle()> | <ellipse()> | <polygon()> | <path()>"
      },
      "bg-image": {
        syntax: "none | <image>"
      },
      "bg-layer": {
        syntax: "<bg-image> || <bg-position> [ / <bg-size> ]? || <repeat-style> || <attachment> || <box> || <box>"
      },
      "bg-position": {
        syntax: "[ [ left | center | right | top | bottom | <length-percentage> ] | [ left | center | right | <length-percentage> ] [ top | center | bottom | <length-percentage> ] | [ center | [ left | right ] <length-percentage>? ] && [ center | [ top | bottom ] <length-percentage>? ] ]"
      },
      "bg-size": {
        syntax: "[ <length-percentage> | auto ]{1,2} | cover | contain"
      },
      "blur()": {
        syntax: "blur( <length> )"
      },
      "blend-mode": {
        syntax: "normal | multiply | screen | overlay | darken | lighten | color-dodge | color-burn | hard-light | soft-light | difference | exclusion | hue | saturation | color | luminosity"
      },
      box: {
        syntax: "border-box | padding-box | content-box"
      },
      "brightness()": {
        syntax: "brightness( <number-percentage> )"
      },
      "calc()": {
        syntax: "calc( <calc-sum> )"
      },
      "calc-sum": {
        syntax: "<calc-product> [ [ '+' | '-' ] <calc-product> ]*"
      },
      "calc-product": {
        syntax: "<calc-value> [ '*' <calc-value> | '/' <number> ]*"
      },
      "calc-value": {
        syntax: "<number> | <dimension> | <percentage> | ( <calc-sum> )"
      },
      "cf-final-image": {
        syntax: "<image> | <color>"
      },
      "cf-mixing-image": {
        syntax: "<percentage>? && <image>"
      },
      "circle()": {
        syntax: "circle( [ <shape-radius> ]? [ at <position> ]? )"
      },
      "clamp()": {
        syntax: "clamp( <calc-sum>#{3} )"
      },
      "class-selector": {
        syntax: "'.' <ident-token>"
      },
      "clip-source": {
        syntax: "<url>"
      },
      color: {
        syntax: "<rgb()> | <rgba()> | <hsl()> | <hsla()> | <hwb()> | <lab()> | <lch()> | <hex-color> | <named-color> | currentcolor | <deprecated-system-color>"
      },
      "color-stop": {
        syntax: "<color-stop-length> | <color-stop-angle>"
      },
      "color-stop-angle": {
        syntax: "<angle-percentage>{1,2}"
      },
      "color-stop-length": {
        syntax: "<length-percentage>{1,2}"
      },
      "color-stop-list": {
        syntax: "[ <linear-color-stop> [, <linear-color-hint>]? ]# , <linear-color-stop>"
      },
      combinator: {
        syntax: "'>' | '+' | '~' | [ '||' ]"
      },
      "common-lig-values": {
        syntax: "[ common-ligatures | no-common-ligatures ]"
      },
      "compat-auto": {
        syntax: "searchfield | textarea | push-button | slider-horizontal | checkbox | radio | square-button | menulist | listbox | meter | progress-bar | button"
      },
      "composite-style": {
        syntax: "clear | copy | source-over | source-in | source-out | source-atop | destination-over | destination-in | destination-out | destination-atop | xor"
      },
      "compositing-operator": {
        syntax: "add | subtract | intersect | exclude"
      },
      "compound-selector": {
        syntax: "[ <type-selector>? <subclass-selector>* [ <pseudo-element-selector> <pseudo-class-selector>* ]* ]!"
      },
      "compound-selector-list": {
        syntax: "<compound-selector>#"
      },
      "complex-selector": {
        syntax: "<compound-selector> [ <combinator>? <compound-selector> ]*"
      },
      "complex-selector-list": {
        syntax: "<complex-selector>#"
      },
      "conic-gradient()": {
        syntax: "conic-gradient( [ from <angle> ]? [ at <position> ]?, <angular-color-stop-list> )"
      },
      "contextual-alt-values": {
        syntax: "[ contextual | no-contextual ]"
      },
      "content-distribution": {
        syntax: "space-between | space-around | space-evenly | stretch"
      },
      "content-list": {
        syntax: "[ <string> | contents | <image> | <counter> | <quote> | <target> | <leader()> ]+"
      },
      "content-position": {
        syntax: "center | start | end | flex-start | flex-end"
      },
      "content-replacement": {
        syntax: "<image>"
      },
      "contrast()": {
        syntax: "contrast( [ <number-percentage> ] )"
      },
      counter: {
        syntax: "<counter()> | <counters()>"
      },
      "counter()": {
        syntax: "counter( <counter-name>, <counter-style>? )"
      },
      "counter-name": {
        syntax: "<custom-ident>"
      },
      "counter-style": {
        syntax: "<counter-style-name> | symbols()"
      },
      "counter-style-name": {
        syntax: "<custom-ident>"
      },
      "counters()": {
        syntax: "counters( <counter-name>, <string>, <counter-style>? )"
      },
      "cross-fade()": {
        syntax: "cross-fade( <cf-mixing-image> , <cf-final-image>? )"
      },
      "cubic-bezier-timing-function": {
        syntax: "ease | ease-in | ease-out | ease-in-out | cubic-bezier(<number [0,1]>, <number>, <number [0,1]>, <number>)"
      },
      "deprecated-system-color": {
        syntax: "ActiveBorder | ActiveCaption | AppWorkspace | Background | ButtonFace | ButtonHighlight | ButtonShadow | ButtonText | CaptionText | GrayText | Highlight | HighlightText | InactiveBorder | InactiveCaption | InactiveCaptionText | InfoBackground | InfoText | Menu | MenuText | Scrollbar | ThreeDDarkShadow | ThreeDFace | ThreeDHighlight | ThreeDLightShadow | ThreeDShadow | Window | WindowFrame | WindowText"
      },
      "discretionary-lig-values": {
        syntax: "[ discretionary-ligatures | no-discretionary-ligatures ]"
      },
      "display-box": {
        syntax: "contents | none"
      },
      "display-inside": {
        syntax: "flow | flow-root | table | flex | grid | ruby"
      },
      "display-internal": {
        syntax: "table-row-group | table-header-group | table-footer-group | table-row | table-cell | table-column-group | table-column | table-caption | ruby-base | ruby-text | ruby-base-container | ruby-text-container"
      },
      "display-legacy": {
        syntax: "inline-block | inline-list-item | inline-table | inline-flex | inline-grid"
      },
      "display-listitem": {
        syntax: "<display-outside>? && [ flow | flow-root ]? && list-item"
      },
      "display-outside": {
        syntax: "block | inline | run-in"
      },
      "drop-shadow()": {
        syntax: "drop-shadow( <length>{2,3} <color>? )"
      },
      "east-asian-variant-values": {
        syntax: "[ jis78 | jis83 | jis90 | jis04 | simplified | traditional ]"
      },
      "east-asian-width-values": {
        syntax: "[ full-width | proportional-width ]"
      },
      "element()": {
        syntax: "element( <id-selector> )"
      },
      "ellipse()": {
        syntax: "ellipse( [ <shape-radius>{2} ]? [ at <position> ]? )"
      },
      "ending-shape": {
        syntax: "circle | ellipse"
      },
      "env()": {
        syntax: "env( <custom-ident> , <declaration-value>? )"
      },
      "explicit-track-list": {
        syntax: "[ <line-names>? <track-size> ]+ <line-names>?"
      },
      "family-name": {
        syntax: "<string> | <custom-ident>+"
      },
      "feature-tag-value": {
        syntax: "<string> [ <integer> | on | off ]?"
      },
      "feature-type": {
        syntax: "@stylistic | @historical-forms | @styleset | @character-variant | @swash | @ornaments | @annotation"
      },
      "feature-value-block": {
        syntax: "<feature-type> '{' <feature-value-declaration-list> '}'"
      },
      "feature-value-block-list": {
        syntax: "<feature-value-block>+"
      },
      "feature-value-declaration": {
        syntax: "<custom-ident>: <integer>+;"
      },
      "feature-value-declaration-list": {
        syntax: "<feature-value-declaration>"
      },
      "feature-value-name": {
        syntax: "<custom-ident>"
      },
      "fill-rule": {
        syntax: "nonzero | evenodd"
      },
      "filter-function": {
        syntax: "<blur()> | <brightness()> | <contrast()> | <drop-shadow()> | <grayscale()> | <hue-rotate()> | <invert()> | <opacity()> | <saturate()> | <sepia()>"
      },
      "filter-function-list": {
        syntax: "[ <filter-function> | <url> ]+"
      },
      "final-bg-layer": {
        syntax: "<'background-color'> || <bg-image> || <bg-position> [ / <bg-size> ]? || <repeat-style> || <attachment> || <box> || <box>"
      },
      "fit-content()": {
        syntax: "fit-content( [ <length> | <percentage> ] )"
      },
      "fixed-breadth": {
        syntax: "<length-percentage>"
      },
      "fixed-repeat": {
        syntax: "repeat( [ <integer [1,\u221E]> ] , [ <line-names>? <fixed-size> ]+ <line-names>? )"
      },
      "fixed-size": {
        syntax: "<fixed-breadth> | minmax( <fixed-breadth> , <track-breadth> ) | minmax( <inflexible-breadth> , <fixed-breadth> )"
      },
      "font-stretch-absolute": {
        syntax: "normal | ultra-condensed | extra-condensed | condensed | semi-condensed | semi-expanded | expanded | extra-expanded | ultra-expanded | <percentage>"
      },
      "font-variant-css21": {
        syntax: "[ normal | small-caps ]"
      },
      "font-weight-absolute": {
        syntax: "normal | bold | <number [1,1000]>"
      },
      "frequency-percentage": {
        syntax: "<frequency> | <percentage>"
      },
      "general-enclosed": {
        syntax: "[ <function-token> <any-value> ) ] | ( <ident> <any-value> )"
      },
      "generic-family": {
        syntax: "serif | sans-serif | cursive | fantasy | monospace"
      },
      "generic-name": {
        syntax: "serif | sans-serif | cursive | fantasy | monospace"
      },
      "geometry-box": {
        syntax: "<shape-box> | fill-box | stroke-box | view-box"
      },
      gradient: {
        syntax: "<linear-gradient()> | <repeating-linear-gradient()> | <radial-gradient()> | <repeating-radial-gradient()> | <conic-gradient()> | <repeating-conic-gradient()>"
      },
      "grayscale()": {
        syntax: "grayscale( <number-percentage> )"
      },
      "grid-line": {
        syntax: "auto | <custom-ident> | [ <integer> && <custom-ident>? ] | [ span && [ <integer> || <custom-ident> ] ]"
      },
      "historical-lig-values": {
        syntax: "[ historical-ligatures | no-historical-ligatures ]"
      },
      "hsl()": {
        syntax: "hsl( <hue> <percentage> <percentage> [ / <alpha-value> ]? ) | hsl( <hue>, <percentage>, <percentage>, <alpha-value>? )"
      },
      "hsla()": {
        syntax: "hsla( <hue> <percentage> <percentage> [ / <alpha-value> ]? ) | hsla( <hue>, <percentage>, <percentage>, <alpha-value>? )"
      },
      hue: {
        syntax: "<number> | <angle>"
      },
      "hue-rotate()": {
        syntax: "hue-rotate( <angle> )"
      },
      "hwb()": {
        syntax: "hwb( [<hue> | none] [<percentage> | none] [<percentage> | none] [ / [<alpha-value> | none] ]? )"
      },
      "id-selector": {
        syntax: "<hash-token>"
      },
      image: {
        syntax: "<url> | <image()> | <image-set()> | <element()> | <paint()> | <cross-fade()> | <gradient>"
      },
      "image()": {
        syntax: "image( <image-tags>? [ <image-src>? , <color>? ]! )"
      },
      "image-set()": {
        syntax: "image-set( <image-set-option># )"
      },
      "image-set-option": {
        syntax: "[ <image> | <string> ] [ <resolution> || type(<string>) ]"
      },
      "image-src": {
        syntax: "<url> | <string>"
      },
      "image-tags": {
        syntax: "ltr | rtl"
      },
      "inflexible-breadth": {
        syntax: "<length> | <percentage> | min-content | max-content | auto"
      },
      "inset()": {
        syntax: "inset( <length-percentage>{1,4} [ round <'border-radius'> ]? )"
      },
      "invert()": {
        syntax: "invert( <number-percentage> )"
      },
      "keyframes-name": {
        syntax: "<custom-ident> | <string>"
      },
      "keyframe-block": {
        syntax: "<keyframe-selector># {\n  <declaration-list>\n}"
      },
      "keyframe-block-list": {
        syntax: "<keyframe-block>+"
      },
      "keyframe-selector": {
        syntax: "from | to | <percentage>"
      },
      "layer()": {
        syntax: "layer( <layer-name> )"
      },
      "layer-name": {
        syntax: "<ident> [ '.' <ident> ]*"
      },
      "leader()": {
        syntax: "leader( <leader-type> )"
      },
      "leader-type": {
        syntax: "dotted | solid | space | <string>"
      },
      "length-percentage": {
        syntax: "<length> | <percentage>"
      },
      "line-names": {
        syntax: "'[' <custom-ident>* ']'"
      },
      "line-name-list": {
        syntax: "[ <line-names> | <name-repeat> ]+"
      },
      "line-style": {
        syntax: "none | hidden | dotted | dashed | solid | double | groove | ridge | inset | outset"
      },
      "line-width": {
        syntax: "<length> | thin | medium | thick"
      },
      "linear-color-hint": {
        syntax: "<length-percentage>"
      },
      "linear-color-stop": {
        syntax: "<color> <color-stop-length>?"
      },
      "linear-gradient()": {
        syntax: "linear-gradient( [ <angle> | to <side-or-corner> ]? , <color-stop-list> )"
      },
      "mask-layer": {
        syntax: "<mask-reference> || <position> [ / <bg-size> ]? || <repeat-style> || <geometry-box> || [ <geometry-box> | no-clip ] || <compositing-operator> || <masking-mode>"
      },
      "mask-position": {
        syntax: "[ <length-percentage> | left | center | right ] [ <length-percentage> | top | center | bottom ]?"
      },
      "mask-reference": {
        syntax: "none | <image> | <mask-source>"
      },
      "mask-source": {
        syntax: "<url>"
      },
      "masking-mode": {
        syntax: "alpha | luminance | match-source"
      },
      "matrix()": {
        syntax: "matrix( <number>#{6} )"
      },
      "matrix3d()": {
        syntax: "matrix3d( <number>#{16} )"
      },
      "max()": {
        syntax: "max( <calc-sum># )"
      },
      "media-and": {
        syntax: "<media-in-parens> [ and <media-in-parens> ]+"
      },
      "media-condition": {
        syntax: "<media-not> | <media-and> | <media-or> | <media-in-parens>"
      },
      "media-condition-without-or": {
        syntax: "<media-not> | <media-and> | <media-in-parens>"
      },
      "media-feature": {
        syntax: "( [ <mf-plain> | <mf-boolean> | <mf-range> ] )"
      },
      "media-in-parens": {
        syntax: "( <media-condition> ) | <media-feature> | <general-enclosed>"
      },
      "media-not": {
        syntax: "not <media-in-parens>"
      },
      "media-or": {
        syntax: "<media-in-parens> [ or <media-in-parens> ]+"
      },
      "media-query": {
        syntax: "<media-condition> | [ not | only ]? <media-type> [ and <media-condition-without-or> ]?"
      },
      "media-query-list": {
        syntax: "<media-query>#"
      },
      "media-type": {
        syntax: "<ident>"
      },
      "mf-boolean": {
        syntax: "<mf-name>"
      },
      "mf-name": {
        syntax: "<ident>"
      },
      "mf-plain": {
        syntax: "<mf-name> : <mf-value>"
      },
      "mf-range": {
        syntax: "<mf-name> [ '<' | '>' ]? '='? <mf-value>\n| <mf-value> [ '<' | '>' ]? '='? <mf-name>\n| <mf-value> '<' '='? <mf-name> '<' '='? <mf-value>\n| <mf-value> '>' '='? <mf-name> '>' '='? <mf-value>"
      },
      "mf-value": {
        syntax: "<number> | <dimension> | <ident> | <ratio>"
      },
      "min()": {
        syntax: "min( <calc-sum># )"
      },
      "minmax()": {
        syntax: "minmax( [ <length> | <percentage> | min-content | max-content | auto ] , [ <length> | <percentage> | <flex> | min-content | max-content | auto ] )"
      },
      "name-repeat": {
        syntax: "repeat( [ <integer [1,\u221E]> | auto-fill ], <line-names>+ )"
      },
      "named-color": {
        syntax: "transparent | aliceblue | antiquewhite | aqua | aquamarine | azure | beige | bisque | black | blanchedalmond | blue | blueviolet | brown | burlywood | cadetblue | chartreuse | chocolate | coral | cornflowerblue | cornsilk | crimson | cyan | darkblue | darkcyan | darkgoldenrod | darkgray | darkgreen | darkgrey | darkkhaki | darkmagenta | darkolivegreen | darkorange | darkorchid | darkred | darksalmon | darkseagreen | darkslateblue | darkslategray | darkslategrey | darkturquoise | darkviolet | deeppink | deepskyblue | dimgray | dimgrey | dodgerblue | firebrick | floralwhite | forestgreen | fuchsia | gainsboro | ghostwhite | gold | goldenrod | gray | green | greenyellow | grey | honeydew | hotpink | indianred | indigo | ivory | khaki | lavender | lavenderblush | lawngreen | lemonchiffon | lightblue | lightcoral | lightcyan | lightgoldenrodyellow | lightgray | lightgreen | lightgrey | lightpink | lightsalmon | lightseagreen | lightskyblue | lightslategray | lightslategrey | lightsteelblue | lightyellow | lime | limegreen | linen | magenta | maroon | mediumaquamarine | mediumblue | mediumorchid | mediumpurple | mediumseagreen | mediumslateblue | mediumspringgreen | mediumturquoise | mediumvioletred | midnightblue | mintcream | mistyrose | moccasin | navajowhite | navy | oldlace | olive | olivedrab | orange | orangered | orchid | palegoldenrod | palegreen | paleturquoise | palevioletred | papayawhip | peachpuff | peru | pink | plum | powderblue | purple | rebeccapurple | red | rosybrown | royalblue | saddlebrown | salmon | sandybrown | seagreen | seashell | sienna | silver | skyblue | slateblue | slategray | slategrey | snow | springgreen | steelblue | tan | teal | thistle | tomato | turquoise | violet | wheat | white | whitesmoke | yellow | yellowgreen"
      },
      "namespace-prefix": {
        syntax: "<ident>"
      },
      "ns-prefix": {
        syntax: "[ <ident-token> | '*' ]? '|'"
      },
      "number-percentage": {
        syntax: "<number> | <percentage>"
      },
      "numeric-figure-values": {
        syntax: "[ lining-nums | oldstyle-nums ]"
      },
      "numeric-fraction-values": {
        syntax: "[ diagonal-fractions | stacked-fractions ]"
      },
      "numeric-spacing-values": {
        syntax: "[ proportional-nums | tabular-nums ]"
      },
      nth: {
        syntax: "<an-plus-b> | even | odd"
      },
      "opacity()": {
        syntax: "opacity( [ <number-percentage> ] )"
      },
      "overflow-position": {
        syntax: "unsafe | safe"
      },
      "outline-radius": {
        syntax: "<length> | <percentage>"
      },
      "page-body": {
        syntax: "<declaration>? [ ; <page-body> ]? | <page-margin-box> <page-body>"
      },
      "page-margin-box": {
        syntax: "<page-margin-box-type> '{' <declaration-list> '}'"
      },
      "page-margin-box-type": {
        syntax: "@top-left-corner | @top-left | @top-center | @top-right | @top-right-corner | @bottom-left-corner | @bottom-left | @bottom-center | @bottom-right | @bottom-right-corner | @left-top | @left-middle | @left-bottom | @right-top | @right-middle | @right-bottom"
      },
      "page-selector-list": {
        syntax: "[ <page-selector># ]?"
      },
      "page-selector": {
        syntax: "<pseudo-page>+ | <ident> <pseudo-page>*"
      },
      "page-size": {
        syntax: "A5 | A4 | A3 | B5 | B4 | JIS-B5 | JIS-B4 | letter | legal | ledger"
      },
      "path()": {
        syntax: "path( [ <fill-rule>, ]? <string> )"
      },
      "paint()": {
        syntax: "paint( <ident>, <declaration-value>? )"
      },
      "perspective()": {
        syntax: "perspective( <length> )"
      },
      "polygon()": {
        syntax: "polygon( <fill-rule>? , [ <length-percentage> <length-percentage> ]# )"
      },
      position: {
        syntax: "[ [ left | center | right ] || [ top | center | bottom ] | [ left | center | right | <length-percentage> ] [ top | center | bottom | <length-percentage> ]? | [ [ left | right ] <length-percentage> ] && [ [ top | bottom ] <length-percentage> ] ]"
      },
      "pseudo-class-selector": {
        syntax: "':' <ident-token> | ':' <function-token> <any-value> ')'"
      },
      "pseudo-element-selector": {
        syntax: "':' <pseudo-class-selector>"
      },
      "pseudo-page": {
        syntax: ": [ left | right | first | blank ]"
      },
      quote: {
        syntax: "open-quote | close-quote | no-open-quote | no-close-quote"
      },
      "radial-gradient()": {
        syntax: "radial-gradient( [ <ending-shape> || <size> ]? [ at <position> ]? , <color-stop-list> )"
      },
      "relative-selector": {
        syntax: "<combinator>? <complex-selector>"
      },
      "relative-selector-list": {
        syntax: "<relative-selector>#"
      },
      "relative-size": {
        syntax: "larger | smaller"
      },
      "repeat-style": {
        syntax: "repeat-x | repeat-y | [ repeat | space | round | no-repeat ]{1,2}"
      },
      "repeating-conic-gradient()": {
        syntax: "repeating-conic-gradient( [ from <angle> ]? [ at <position> ]?, <angular-color-stop-list> )"
      },
      "repeating-linear-gradient()": {
        syntax: "repeating-linear-gradient( [ <angle> | to <side-or-corner> ]? , <color-stop-list> )"
      },
      "repeating-radial-gradient()": {
        syntax: "repeating-radial-gradient( [ <ending-shape> || <size> ]? [ at <position> ]? , <color-stop-list> )"
      },
      "rgb()": {
        syntax: "rgb( <percentage>{3} [ / <alpha-value> ]? ) | rgb( <number>{3} [ / <alpha-value> ]? ) | rgb( <percentage>#{3} , <alpha-value>? ) | rgb( <number>#{3} , <alpha-value>? )"
      },
      "rgba()": {
        syntax: "rgba( <percentage>{3} [ / <alpha-value> ]? ) | rgba( <number>{3} [ / <alpha-value> ]? ) | rgba( <percentage>#{3} , <alpha-value>? ) | rgba( <number>#{3} , <alpha-value>? )"
      },
      "rotate()": {
        syntax: "rotate( [ <angle> | <zero> ] )"
      },
      "rotate3d()": {
        syntax: "rotate3d( <number> , <number> , <number> , [ <angle> | <zero> ] )"
      },
      "rotateX()": {
        syntax: "rotateX( [ <angle> | <zero> ] )"
      },
      "rotateY()": {
        syntax: "rotateY( [ <angle> | <zero> ] )"
      },
      "rotateZ()": {
        syntax: "rotateZ( [ <angle> | <zero> ] )"
      },
      "saturate()": {
        syntax: "saturate( <number-percentage> )"
      },
      "scale()": {
        syntax: "scale( <number> , <number>? )"
      },
      "scale3d()": {
        syntax: "scale3d( <number> , <number> , <number> )"
      },
      "scaleX()": {
        syntax: "scaleX( <number> )"
      },
      "scaleY()": {
        syntax: "scaleY( <number> )"
      },
      "scaleZ()": {
        syntax: "scaleZ( <number> )"
      },
      "self-position": {
        syntax: "center | start | end | self-start | self-end | flex-start | flex-end"
      },
      "shape-radius": {
        syntax: "<length-percentage> | closest-side | farthest-side"
      },
      "skew()": {
        syntax: "skew( [ <angle> | <zero> ] , [ <angle> | <zero> ]? )"
      },
      "skewX()": {
        syntax: "skewX( [ <angle> | <zero> ] )"
      },
      "skewY()": {
        syntax: "skewY( [ <angle> | <zero> ] )"
      },
      "sepia()": {
        syntax: "sepia( <number-percentage> )"
      },
      shadow: {
        syntax: "inset? && <length>{2,4} && <color>?"
      },
      "shadow-t": {
        syntax: "[ <length>{2,3} && <color>? ]"
      },
      shape: {
        syntax: "rect(<top>, <right>, <bottom>, <left>)"
      },
      "shape-box": {
        syntax: "<box> | margin-box"
      },
      "side-or-corner": {
        syntax: "[ left | right ] || [ top | bottom ]"
      },
      "single-animation": {
        syntax: "<time> || <easing-function> || <time> || <single-animation-iteration-count> || <single-animation-direction> || <single-animation-fill-mode> || <single-animation-play-state> || [ none | <keyframes-name> ]"
      },
      "single-animation-direction": {
        syntax: "normal | reverse | alternate | alternate-reverse"
      },
      "single-animation-fill-mode": {
        syntax: "none | forwards | backwards | both"
      },
      "single-animation-iteration-count": {
        syntax: "infinite | <number>"
      },
      "single-animation-play-state": {
        syntax: "running | paused"
      },
      "single-animation-timeline": {
        syntax: "auto | none | <timeline-name>"
      },
      "single-transition": {
        syntax: "[ none | <single-transition-property> ] || <time> || <easing-function> || <time>"
      },
      "single-transition-property": {
        syntax: "all | <custom-ident>"
      },
      size: {
        syntax: "closest-side | farthest-side | closest-corner | farthest-corner | <length> | <length-percentage>{2}"
      },
      "step-position": {
        syntax: "jump-start | jump-end | jump-none | jump-both | start | end"
      },
      "step-timing-function": {
        syntax: "step-start | step-end | steps(<integer>[, <step-position>]?)"
      },
      "subclass-selector": {
        syntax: "<id-selector> | <class-selector> | <attribute-selector> | <pseudo-class-selector>"
      },
      "supports-condition": {
        syntax: "not <supports-in-parens> | <supports-in-parens> [ and <supports-in-parens> ]* | <supports-in-parens> [ or <supports-in-parens> ]*"
      },
      "supports-in-parens": {
        syntax: "( <supports-condition> ) | <supports-feature> | <general-enclosed>"
      },
      "supports-feature": {
        syntax: "<supports-decl> | <supports-selector-fn>"
      },
      "supports-decl": {
        syntax: "( <declaration> )"
      },
      "supports-selector-fn": {
        syntax: "selector( <complex-selector> )"
      },
      symbol: {
        syntax: "<string> | <image> | <custom-ident>"
      },
      target: {
        syntax: "<target-counter()> | <target-counters()> | <target-text()>"
      },
      "target-counter()": {
        syntax: "target-counter( [ <string> | <url> ] , <custom-ident> , <counter-style>? )"
      },
      "target-counters()": {
        syntax: "target-counters( [ <string> | <url> ] , <custom-ident> , <string> , <counter-style>? )"
      },
      "target-text()": {
        syntax: "target-text( [ <string> | <url> ] , [ content | before | after | first-letter ]? )"
      },
      "time-percentage": {
        syntax: "<time> | <percentage>"
      },
      "timeline-name": {
        syntax: "<custom-ident> | <string>"
      },
      "easing-function": {
        syntax: "linear | <cubic-bezier-timing-function> | <step-timing-function>"
      },
      "track-breadth": {
        syntax: "<length-percentage> | <flex> | min-content | max-content | auto"
      },
      "track-list": {
        syntax: "[ <line-names>? [ <track-size> | <track-repeat> ] ]+ <line-names>?"
      },
      "track-repeat": {
        syntax: "repeat( [ <integer [1,\u221E]> ] , [ <line-names>? <track-size> ]+ <line-names>? )"
      },
      "track-size": {
        syntax: "<track-breadth> | minmax( <inflexible-breadth> , <track-breadth> ) | fit-content( [ <length> | <percentage> ] )"
      },
      "transform-function": {
        syntax: "<matrix()> | <translate()> | <translateX()> | <translateY()> | <scale()> | <scaleX()> | <scaleY()> | <rotate()> | <skew()> | <skewX()> | <skewY()> | <matrix3d()> | <translate3d()> | <translateZ()> | <scale3d()> | <scaleZ()> | <rotate3d()> | <rotateX()> | <rotateY()> | <rotateZ()> | <perspective()>"
      },
      "transform-list": {
        syntax: "<transform-function>+"
      },
      "translate()": {
        syntax: "translate( <length-percentage> , <length-percentage>? )"
      },
      "translate3d()": {
        syntax: "translate3d( <length-percentage> , <length-percentage> , <length> )"
      },
      "translateX()": {
        syntax: "translateX( <length-percentage> )"
      },
      "translateY()": {
        syntax: "translateY( <length-percentage> )"
      },
      "translateZ()": {
        syntax: "translateZ( <length> )"
      },
      "type-or-unit": {
        syntax: "string | color | url | integer | number | length | angle | time | frequency | cap | ch | em | ex | ic | lh | rlh | rem | vb | vi | vw | vh | vmin | vmax | mm | Q | cm | in | pt | pc | px | deg | grad | rad | turn | ms | s | Hz | kHz | %"
      },
      "type-selector": {
        syntax: "<wq-name> | <ns-prefix>? '*'"
      },
      "var()": {
        syntax: "var( <custom-property-name> , <declaration-value>? )"
      },
      "viewport-length": {
        syntax: "auto | <length-percentage>"
      },
      "visual-box": {
        syntax: "content-box | padding-box | border-box"
      },
      "wq-name": {
        syntax: "<ns-prefix>? <ident-token>"
      }
    };
  }
});

// node_modules/csso/node_modules/css-tree/cjs/data.cjs
var require_data2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/data.cjs"(exports, module2) {
    "use strict";
    var dataPatch = require_data_patch2();
    var mdnAtrules = require_at_rules2();
    var mdnProperties = require_properties2();
    var mdnSyntaxes = require_syntaxes2();
    var extendSyntax = /^\s*\|\s*/;
    function preprocessAtrules(dict) {
      const result = /* @__PURE__ */ Object.create(null);
      for (const atruleName in dict) {
        const atrule = dict[atruleName];
        let descriptors = null;
        if (atrule.descriptors) {
          descriptors = /* @__PURE__ */ Object.create(null);
          for (const descriptor in atrule.descriptors) {
            descriptors[descriptor] = atrule.descriptors[descriptor].syntax;
          }
        }
        result[atruleName.substr(1)] = {
          prelude: atrule.syntax.trim().replace(/\{(.|\s)+\}/, "").match(/^@\S+\s+([^;\{]*)/)[1].trim() || null,
          descriptors
        };
      }
      return result;
    }
    function patchDictionary(dict, patchDict) {
      const result = {};
      for (const key in dict) {
        result[key] = dict[key].syntax || dict[key];
      }
      for (const key in patchDict) {
        if (key in dict) {
          if (patchDict[key].syntax) {
            result[key] = extendSyntax.test(patchDict[key].syntax) ? result[key] + " " + patchDict[key].syntax.trim() : patchDict[key].syntax;
          } else {
            delete result[key];
          }
        } else {
          if (patchDict[key].syntax) {
            result[key] = patchDict[key].syntax.replace(extendSyntax, "");
          }
        }
      }
      return result;
    }
    function patchAtrules(dict, patchDict) {
      const result = {};
      for (const key in dict) {
        const patchDescriptors = patchDict[key] && patchDict[key].descriptors || null;
        result[key] = {
          prelude: key in patchDict && "prelude" in patchDict[key] ? patchDict[key].prelude : dict[key].prelude || null,
          descriptors: patchDictionary(dict[key].descriptors || {}, patchDescriptors || {})
        };
      }
      for (const key in patchDict) {
        if (!hasOwnProperty.call(dict, key)) {
          result[key] = {
            prelude: patchDict[key].prelude || null,
            descriptors: patchDict[key].descriptors && patchDictionary({}, patchDict[key].descriptors)
          };
        }
      }
      return result;
    }
    var definitions = {
      types: patchDictionary(mdnSyntaxes, dataPatch.types),
      atrules: patchAtrules(preprocessAtrules(mdnAtrules), dataPatch.atrules),
      properties: patchDictionary(mdnProperties, dataPatch.properties)
    };
    module2.exports = definitions;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/syntax/node/AnPlusB.cjs
var require_AnPlusB2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/syntax/node/AnPlusB.cjs"(exports) {
    "use strict";
    var types = require_types3();
    var charCodeDefinitions = require_char_code_definitions2();
    var PLUSSIGN = 43;
    var HYPHENMINUS = 45;
    var N = 110;
    var DISALLOW_SIGN = true;
    var ALLOW_SIGN = false;
    function checkInteger(offset, disallowSign) {
      let pos = this.tokenStart + offset;
      const code = this.charCodeAt(pos);
      if (code === PLUSSIGN || code === HYPHENMINUS) {
        if (disallowSign) {
          this.error("Number sign is not allowed");
        }
        pos++;
      }
      for (; pos < this.tokenEnd; pos++) {
        if (!charCodeDefinitions.isDigit(this.charCodeAt(pos))) {
          this.error("Integer is expected", pos);
        }
      }
    }
    function checkTokenIsInteger(disallowSign) {
      return checkInteger.call(this, 0, disallowSign);
    }
    function expectCharCode(offset, code) {
      if (!this.cmpChar(this.tokenStart + offset, code)) {
        let msg = "";
        switch (code) {
          case N:
            msg = "N is expected";
            break;
          case HYPHENMINUS:
            msg = "HyphenMinus is expected";
            break;
        }
        this.error(msg, this.tokenStart + offset);
      }
    }
    function consumeB() {
      let offset = 0;
      let sign = 0;
      let type = this.tokenType;
      while (type === types.WhiteSpace || type === types.Comment) {
        type = this.lookupType(++offset);
      }
      if (type !== types.Number) {
        if (this.isDelim(PLUSSIGN, offset) || this.isDelim(HYPHENMINUS, offset)) {
          sign = this.isDelim(PLUSSIGN, offset) ? PLUSSIGN : HYPHENMINUS;
          do {
            type = this.lookupType(++offset);
          } while (type === types.WhiteSpace || type === types.Comment);
          if (type !== types.Number) {
            this.skip(offset);
            checkTokenIsInteger.call(this, DISALLOW_SIGN);
          }
        } else {
          return null;
        }
      }
      if (offset > 0) {
        this.skip(offset);
      }
      if (sign === 0) {
        type = this.charCodeAt(this.tokenStart);
        if (type !== PLUSSIGN && type !== HYPHENMINUS) {
          this.error("Number sign is expected");
        }
      }
      checkTokenIsInteger.call(this, sign !== 0);
      return sign === HYPHENMINUS ? "-" + this.consume(types.Number) : this.consume(types.Number);
    }
    var name = "AnPlusB";
    var structure = {
      a: [String, null],
      b: [String, null]
    };
    function parse() {
      const start = this.tokenStart;
      let a = null;
      let b = null;
      if (this.tokenType === types.Number) {
        checkTokenIsInteger.call(this, ALLOW_SIGN);
        b = this.consume(types.Number);
      } else if (this.tokenType === types.Ident && this.cmpChar(this.tokenStart, HYPHENMINUS)) {
        a = "-1";
        expectCharCode.call(this, 1, N);
        switch (this.tokenEnd - this.tokenStart) {
          case 2:
            this.next();
            b = consumeB.call(this);
            break;
          case 3:
            expectCharCode.call(this, 2, HYPHENMINUS);
            this.next();
            this.skipSC();
            checkTokenIsInteger.call(this, DISALLOW_SIGN);
            b = "-" + this.consume(types.Number);
            break;
          default:
            expectCharCode.call(this, 2, HYPHENMINUS);
            checkInteger.call(this, 3, DISALLOW_SIGN);
            this.next();
            b = this.substrToCursor(start + 2);
        }
      } else if (this.tokenType === types.Ident || this.isDelim(PLUSSIGN) && this.lookupType(1) === types.Ident) {
        let sign = 0;
        a = "1";
        if (this.isDelim(PLUSSIGN)) {
          sign = 1;
          this.next();
        }
        expectCharCode.call(this, 0, N);
        switch (this.tokenEnd - this.tokenStart) {
          case 1:
            this.next();
            b = consumeB.call(this);
            break;
          case 2:
            expectCharCode.call(this, 1, HYPHENMINUS);
            this.next();
            this.skipSC();
            checkTokenIsInteger.call(this, DISALLOW_SIGN);
            b = "-" + this.consume(types.Number);
            break;
          default:
            expectCharCode.call(this, 1, HYPHENMINUS);
            checkInteger.call(this, 2, DISALLOW_SIGN);
            this.next();
            b = this.substrToCursor(start + sign + 1);
        }
      } else if (this.tokenType === types.Dimension) {
        const code = this.charCodeAt(this.tokenStart);
        const sign = code === PLUSSIGN || code === HYPHENMINUS;
        let i = this.tokenStart + sign;
        for (; i < this.tokenEnd; i++) {
          if (!charCodeDefinitions.isDigit(this.charCodeAt(i))) {
            break;
          }
        }
        if (i === this.tokenStart + sign) {
          this.error("Integer is expected", this.tokenStart + sign);
        }
        expectCharCode.call(this, i - this.tokenStart, N);
        a = this.substring(start, i);
        if (i + 1 === this.tokenEnd) {
          this.next();
          b = consumeB.call(this);
        } else {
          expectCharCode.call(this, i - this.tokenStart + 1, HYPHENMINUS);
          if (i + 2 === this.tokenEnd) {
            this.next();
            this.skipSC();
            checkTokenIsInteger.call(this, DISALLOW_SIGN);
            b = "-" + this.consume(types.Number);
          } else {
            checkInteger.call(this, i - this.tokenStart + 2, DISALLOW_SIGN);
            this.next();
            b = this.substrToCursor(i + 1);
          }
        }
      } else {
        this.error();
      }
      if (a !== null && a.charCodeAt(0) === PLUSSIGN) {
        a = a.substr(1);
      }
      if (b !== null && b.charCodeAt(0) === PLUSSIGN) {
        b = b.substr(1);
      }
      return {
        type: "AnPlusB",
        loc: this.getLocation(start, this.tokenStart),
        a,
        b
      };
    }
    function generate(node) {
      if (node.a) {
        const a = node.a === "+1" && "n" || node.a === "1" && "n" || node.a === "-1" && "-n" || node.a + "n";
        if (node.b) {
          const b = node.b[0] === "-" || node.b[0] === "+" ? node.b : "+" + node.b;
          this.tokenize(a + b);
        } else {
          this.tokenize(a);
        }
      } else {
        this.tokenize(node.b);
      }
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/syntax/node/Atrule.cjs
var require_Atrule2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/syntax/node/Atrule.cjs"(exports) {
    "use strict";
    var types = require_types3();
    function consumeRaw(startToken) {
      return this.Raw(startToken, this.consumeUntilLeftCurlyBracketOrSemicolon, true);
    }
    function isDeclarationBlockAtrule() {
      for (let offset = 1, type; type = this.lookupType(offset); offset++) {
        if (type === types.RightCurlyBracket) {
          return true;
        }
        if (type === types.LeftCurlyBracket || type === types.AtKeyword) {
          return false;
        }
      }
      return false;
    }
    var name = "Atrule";
    var walkContext = "atrule";
    var structure = {
      name: String,
      prelude: ["AtrulePrelude", "Raw", null],
      block: ["Block", null]
    };
    function parse() {
      const start = this.tokenStart;
      let name2;
      let nameLowerCase;
      let prelude = null;
      let block = null;
      this.eat(types.AtKeyword);
      name2 = this.substrToCursor(start + 1);
      nameLowerCase = name2.toLowerCase();
      this.skipSC();
      if (this.eof === false && this.tokenType !== types.LeftCurlyBracket && this.tokenType !== types.Semicolon) {
        if (this.parseAtrulePrelude) {
          prelude = this.parseWithFallback(this.AtrulePrelude.bind(this, name2), consumeRaw);
        } else {
          prelude = consumeRaw.call(this, this.tokenIndex);
        }
        this.skipSC();
      }
      switch (this.tokenType) {
        case types.Semicolon:
          this.next();
          break;
        case types.LeftCurlyBracket:
          if (hasOwnProperty.call(this.atrule, nameLowerCase) && typeof this.atrule[nameLowerCase].block === "function") {
            block = this.atrule[nameLowerCase].block.call(this);
          } else {
            block = this.Block(isDeclarationBlockAtrule.call(this));
          }
          break;
      }
      return {
        type: "Atrule",
        loc: this.getLocation(start, this.tokenStart),
        name: name2,
        prelude,
        block
      };
    }
    function generate(node) {
      this.token(types.AtKeyword, "@" + node.name);
      if (node.prelude !== null) {
        this.node(node.prelude);
      }
      if (node.block) {
        this.node(node.block);
      } else {
        this.token(types.Semicolon, ";");
      }
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
    exports.walkContext = walkContext;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/syntax/node/AtrulePrelude.cjs
var require_AtrulePrelude2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/syntax/node/AtrulePrelude.cjs"(exports) {
    "use strict";
    var types = require_types3();
    var name = "AtrulePrelude";
    var walkContext = "atrulePrelude";
    var structure = {
      children: [[]]
    };
    function parse(name2) {
      let children = null;
      if (name2 !== null) {
        name2 = name2.toLowerCase();
      }
      this.skipSC();
      if (hasOwnProperty.call(this.atrule, name2) && typeof this.atrule[name2].prelude === "function") {
        children = this.atrule[name2].prelude.call(this);
      } else {
        children = this.readSequence(this.scope.AtrulePrelude);
      }
      this.skipSC();
      if (this.eof !== true && this.tokenType !== types.LeftCurlyBracket && this.tokenType !== types.Semicolon) {
        this.error("Semicolon or block is expected");
      }
      return {
        type: "AtrulePrelude",
        loc: this.getLocationFromList(children),
        children
      };
    }
    function generate(node) {
      this.children(node);
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
    exports.walkContext = walkContext;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/syntax/node/AttributeSelector.cjs
var require_AttributeSelector2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/syntax/node/AttributeSelector.cjs"(exports) {
    "use strict";
    var types = require_types3();
    var DOLLARSIGN = 36;
    var ASTERISK = 42;
    var EQUALSSIGN = 61;
    var CIRCUMFLEXACCENT = 94;
    var VERTICALLINE = 124;
    var TILDE = 126;
    function getAttributeName() {
      if (this.eof) {
        this.error("Unexpected end of input");
      }
      const start = this.tokenStart;
      let expectIdent = false;
      if (this.isDelim(ASTERISK)) {
        expectIdent = true;
        this.next();
      } else if (!this.isDelim(VERTICALLINE)) {
        this.eat(types.Ident);
      }
      if (this.isDelim(VERTICALLINE)) {
        if (this.charCodeAt(this.tokenStart + 1) !== EQUALSSIGN) {
          this.next();
          this.eat(types.Ident);
        } else if (expectIdent) {
          this.error("Identifier is expected", this.tokenEnd);
        }
      } else if (expectIdent) {
        this.error("Vertical line is expected");
      }
      return {
        type: "Identifier",
        loc: this.getLocation(start, this.tokenStart),
        name: this.substrToCursor(start)
      };
    }
    function getOperator() {
      const start = this.tokenStart;
      const code = this.charCodeAt(start);
      if (code !== EQUALSSIGN && // =
      code !== TILDE && // ~=
      code !== CIRCUMFLEXACCENT && // ^=
      code !== DOLLARSIGN && // $=
      code !== ASTERISK && // *=
      code !== VERTICALLINE) {
        this.error("Attribute selector (=, ~=, ^=, $=, *=, |=) is expected");
      }
      this.next();
      if (code !== EQUALSSIGN) {
        if (!this.isDelim(EQUALSSIGN)) {
          this.error("Equal sign is expected");
        }
        this.next();
      }
      return this.substrToCursor(start);
    }
    var name = "AttributeSelector";
    var structure = {
      name: "Identifier",
      matcher: [String, null],
      value: ["String", "Identifier", null],
      flags: [String, null]
    };
    function parse() {
      const start = this.tokenStart;
      let name2;
      let matcher = null;
      let value = null;
      let flags = null;
      this.eat(types.LeftSquareBracket);
      this.skipSC();
      name2 = getAttributeName.call(this);
      this.skipSC();
      if (this.tokenType !== types.RightSquareBracket) {
        if (this.tokenType !== types.Ident) {
          matcher = getOperator.call(this);
          this.skipSC();
          value = this.tokenType === types.String ? this.String() : this.Identifier();
          this.skipSC();
        }
        if (this.tokenType === types.Ident) {
          flags = this.consume(types.Ident);
          this.skipSC();
        }
      }
      this.eat(types.RightSquareBracket);
      return {
        type: "AttributeSelector",
        loc: this.getLocation(start, this.tokenStart),
        name: name2,
        matcher,
        value,
        flags
      };
    }
    function generate(node) {
      this.token(types.Delim, "[");
      this.node(node.name);
      if (node.matcher !== null) {
        this.tokenize(node.matcher);
        this.node(node.value);
      }
      if (node.flags !== null) {
        this.token(types.Ident, node.flags);
      }
      this.token(types.Delim, "]");
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/syntax/node/Block.cjs
var require_Block2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/syntax/node/Block.cjs"(exports) {
    "use strict";
    var types = require_types3();
    function consumeRaw(startToken) {
      return this.Raw(startToken, null, true);
    }
    function consumeRule() {
      return this.parseWithFallback(this.Rule, consumeRaw);
    }
    function consumeRawDeclaration(startToken) {
      return this.Raw(startToken, this.consumeUntilSemicolonIncluded, true);
    }
    function consumeDeclaration() {
      if (this.tokenType === types.Semicolon) {
        return consumeRawDeclaration.call(this, this.tokenIndex);
      }
      const node = this.parseWithFallback(this.Declaration, consumeRawDeclaration);
      if (this.tokenType === types.Semicolon) {
        this.next();
      }
      return node;
    }
    var name = "Block";
    var walkContext = "block";
    var structure = {
      children: [[
        "Atrule",
        "Rule",
        "Declaration"
      ]]
    };
    function parse(isDeclaration) {
      const consumer = isDeclaration ? consumeDeclaration : consumeRule;
      const start = this.tokenStart;
      let children = this.createList();
      this.eat(types.LeftCurlyBracket);
      scan:
        while (!this.eof) {
          switch (this.tokenType) {
            case types.RightCurlyBracket:
              break scan;
            case types.WhiteSpace:
            case types.Comment:
              this.next();
              break;
            case types.AtKeyword:
              children.push(this.parseWithFallback(this.Atrule, consumeRaw));
              break;
            default:
              children.push(consumer.call(this));
          }
        }
      if (!this.eof) {
        this.eat(types.RightCurlyBracket);
      }
      return {
        type: "Block",
        loc: this.getLocation(start, this.tokenStart),
        children
      };
    }
    function generate(node) {
      this.token(types.LeftCurlyBracket, "{");
      this.children(node, (prev) => {
        if (prev.type === "Declaration") {
          this.token(types.Semicolon, ";");
        }
      });
      this.token(types.RightCurlyBracket, "}");
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
    exports.walkContext = walkContext;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/syntax/node/Brackets.cjs
var require_Brackets2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/syntax/node/Brackets.cjs"(exports) {
    "use strict";
    var types = require_types3();
    var name = "Brackets";
    var structure = {
      children: [[]]
    };
    function parse(readSequence, recognizer) {
      const start = this.tokenStart;
      let children = null;
      this.eat(types.LeftSquareBracket);
      children = readSequence.call(this, recognizer);
      if (!this.eof) {
        this.eat(types.RightSquareBracket);
      }
      return {
        type: "Brackets",
        loc: this.getLocation(start, this.tokenStart),
        children
      };
    }
    function generate(node) {
      this.token(types.Delim, "[");
      this.children(node);
      this.token(types.Delim, "]");
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/syntax/node/CDC.cjs
var require_CDC2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/syntax/node/CDC.cjs"(exports) {
    "use strict";
    var types = require_types3();
    var name = "CDC";
    var structure = [];
    function parse() {
      const start = this.tokenStart;
      this.eat(types.CDC);
      return {
        type: "CDC",
        loc: this.getLocation(start, this.tokenStart)
      };
    }
    function generate() {
      this.token(types.CDC, "-->");
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/syntax/node/CDO.cjs
var require_CDO2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/syntax/node/CDO.cjs"(exports) {
    "use strict";
    var types = require_types3();
    var name = "CDO";
    var structure = [];
    function parse() {
      const start = this.tokenStart;
      this.eat(types.CDO);
      return {
        type: "CDO",
        loc: this.getLocation(start, this.tokenStart)
      };
    }
    function generate() {
      this.token(types.CDO, "<!--");
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/syntax/node/ClassSelector.cjs
var require_ClassSelector2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/syntax/node/ClassSelector.cjs"(exports) {
    "use strict";
    var types = require_types3();
    var FULLSTOP = 46;
    var name = "ClassSelector";
    var structure = {
      name: String
    };
    function parse() {
      this.eatDelim(FULLSTOP);
      return {
        type: "ClassSelector",
        loc: this.getLocation(this.tokenStart - 1, this.tokenEnd),
        name: this.consume(types.Ident)
      };
    }
    function generate(node) {
      this.token(types.Delim, ".");
      this.token(types.Ident, node.name);
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/syntax/node/Combinator.cjs
var require_Combinator2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/syntax/node/Combinator.cjs"(exports) {
    "use strict";
    var types = require_types3();
    var PLUSSIGN = 43;
    var SOLIDUS = 47;
    var GREATERTHANSIGN = 62;
    var TILDE = 126;
    var name = "Combinator";
    var structure = {
      name: String
    };
    function parse() {
      const start = this.tokenStart;
      let name2;
      switch (this.tokenType) {
        case types.WhiteSpace:
          name2 = " ";
          break;
        case types.Delim:
          switch (this.charCodeAt(this.tokenStart)) {
            case GREATERTHANSIGN:
            case PLUSSIGN:
            case TILDE:
              this.next();
              break;
            case SOLIDUS:
              this.next();
              this.eatIdent("deep");
              this.eatDelim(SOLIDUS);
              break;
            default:
              this.error("Combinator is expected");
          }
          name2 = this.substrToCursor(start);
          break;
      }
      return {
        type: "Combinator",
        loc: this.getLocation(start, this.tokenStart),
        name: name2
      };
    }
    function generate(node) {
      this.tokenize(node.name);
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/syntax/node/Comment.cjs
var require_Comment2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/syntax/node/Comment.cjs"(exports) {
    "use strict";
    var types = require_types3();
    var ASTERISK = 42;
    var SOLIDUS = 47;
    var name = "Comment";
    var structure = {
      value: String
    };
    function parse() {
      const start = this.tokenStart;
      let end = this.tokenEnd;
      this.eat(types.Comment);
      if (end - start + 2 >= 2 && this.charCodeAt(end - 2) === ASTERISK && this.charCodeAt(end - 1) === SOLIDUS) {
        end -= 2;
      }
      return {
        type: "Comment",
        loc: this.getLocation(start, this.tokenStart),
        value: this.substring(start + 2, end)
      };
    }
    function generate(node) {
      this.token(types.Comment, "/*" + node.value + "*/");
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/syntax/node/Declaration.cjs
var require_Declaration2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/syntax/node/Declaration.cjs"(exports) {
    "use strict";
    var names = require_names5();
    var types = require_types3();
    var EXCLAMATIONMARK = 33;
    var NUMBERSIGN = 35;
    var DOLLARSIGN = 36;
    var AMPERSAND = 38;
    var ASTERISK = 42;
    var PLUSSIGN = 43;
    var SOLIDUS = 47;
    function consumeValueRaw(startToken) {
      return this.Raw(startToken, this.consumeUntilExclamationMarkOrSemicolon, true);
    }
    function consumeCustomPropertyRaw(startToken) {
      return this.Raw(startToken, this.consumeUntilExclamationMarkOrSemicolon, false);
    }
    function consumeValue() {
      const startValueToken = this.tokenIndex;
      const value = this.Value();
      if (value.type !== "Raw" && this.eof === false && this.tokenType !== types.Semicolon && this.isDelim(EXCLAMATIONMARK) === false && this.isBalanceEdge(startValueToken) === false) {
        this.error();
      }
      return value;
    }
    var name = "Declaration";
    var walkContext = "declaration";
    var structure = {
      important: [Boolean, String],
      property: String,
      value: ["Value", "Raw"]
    };
    function parse() {
      const start = this.tokenStart;
      const startToken = this.tokenIndex;
      const property = readProperty.call(this);
      const customProperty = names.isCustomProperty(property);
      const parseValue = customProperty ? this.parseCustomProperty : this.parseValue;
      const consumeRaw = customProperty ? consumeCustomPropertyRaw : consumeValueRaw;
      let important = false;
      let value;
      this.skipSC();
      this.eat(types.Colon);
      const valueStart = this.tokenIndex;
      if (!customProperty) {
        this.skipSC();
      }
      if (parseValue) {
        value = this.parseWithFallback(consumeValue, consumeRaw);
      } else {
        value = consumeRaw.call(this, this.tokenIndex);
      }
      if (customProperty && value.type === "Value" && value.children.isEmpty) {
        for (let offset = valueStart - this.tokenIndex; offset <= 0; offset++) {
          if (this.lookupType(offset) === types.WhiteSpace) {
            value.children.appendData({
              type: "WhiteSpace",
              loc: null,
              value: " "
            });
            break;
          }
        }
      }
      if (this.isDelim(EXCLAMATIONMARK)) {
        important = getImportant.call(this);
        this.skipSC();
      }
      if (this.eof === false && this.tokenType !== types.Semicolon && this.isBalanceEdge(startToken) === false) {
        this.error();
      }
      return {
        type: "Declaration",
        loc: this.getLocation(start, this.tokenStart),
        important,
        property,
        value
      };
    }
    function generate(node) {
      this.token(types.Ident, node.property);
      this.token(types.Colon, ":");
      this.node(node.value);
      if (node.important) {
        this.token(types.Delim, "!");
        this.token(types.Ident, node.important === true ? "important" : node.important);
      }
    }
    function readProperty() {
      const start = this.tokenStart;
      if (this.tokenType === types.Delim) {
        switch (this.charCodeAt(this.tokenStart)) {
          case ASTERISK:
          case DOLLARSIGN:
          case PLUSSIGN:
          case NUMBERSIGN:
          case AMPERSAND:
            this.next();
            break;
          case SOLIDUS:
            this.next();
            if (this.isDelim(SOLIDUS)) {
              this.next();
            }
            break;
        }
      }
      if (this.tokenType === types.Hash) {
        this.eat(types.Hash);
      } else {
        this.eat(types.Ident);
      }
      return this.substrToCursor(start);
    }
    function getImportant() {
      this.eat(types.Delim);
      this.skipSC();
      const important = this.consume(types.Ident);
      return important === "important" ? true : important;
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
    exports.walkContext = walkContext;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/syntax/node/DeclarationList.cjs
var require_DeclarationList2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/syntax/node/DeclarationList.cjs"(exports) {
    "use strict";
    var types = require_types3();
    function consumeRaw(startToken) {
      return this.Raw(startToken, this.consumeUntilSemicolonIncluded, true);
    }
    var name = "DeclarationList";
    var structure = {
      children: [[
        "Declaration"
      ]]
    };
    function parse() {
      const children = this.createList();
      while (!this.eof) {
        switch (this.tokenType) {
          case types.WhiteSpace:
          case types.Comment:
          case types.Semicolon:
            this.next();
            break;
          default:
            children.push(this.parseWithFallback(this.Declaration, consumeRaw));
        }
      }
      return {
        type: "DeclarationList",
        loc: this.getLocationFromList(children),
        children
      };
    }
    function generate(node) {
      this.children(node, (prev) => {
        if (prev.type === "Declaration") {
          this.token(types.Semicolon, ";");
        }
      });
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/syntax/node/Dimension.cjs
var require_Dimension2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/syntax/node/Dimension.cjs"(exports) {
    "use strict";
    var types = require_types3();
    var name = "Dimension";
    var structure = {
      value: String,
      unit: String
    };
    function parse() {
      const start = this.tokenStart;
      const value = this.consumeNumber(types.Dimension);
      return {
        type: "Dimension",
        loc: this.getLocation(start, this.tokenStart),
        value,
        unit: this.substring(start + value.length, this.tokenStart)
      };
    }
    function generate(node) {
      this.token(types.Dimension, node.value + node.unit);
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/syntax/node/Function.cjs
var require_Function2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/syntax/node/Function.cjs"(exports) {
    "use strict";
    var types = require_types3();
    var name = "Function";
    var walkContext = "function";
    var structure = {
      name: String,
      children: [[]]
    };
    function parse(readSequence, recognizer) {
      const start = this.tokenStart;
      const name2 = this.consumeFunctionName();
      const nameLowerCase = name2.toLowerCase();
      let children;
      children = recognizer.hasOwnProperty(nameLowerCase) ? recognizer[nameLowerCase].call(this, recognizer) : readSequence.call(this, recognizer);
      if (!this.eof) {
        this.eat(types.RightParenthesis);
      }
      return {
        type: "Function",
        loc: this.getLocation(start, this.tokenStart),
        name: name2,
        children
      };
    }
    function generate(node) {
      this.token(types.Function, node.name + "(");
      this.children(node);
      this.token(types.RightParenthesis, ")");
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
    exports.walkContext = walkContext;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/syntax/node/Hash.cjs
var require_Hash2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/syntax/node/Hash.cjs"(exports) {
    "use strict";
    var types = require_types3();
    var xxx = "XXX";
    var name = "Hash";
    var structure = {
      value: String
    };
    function parse() {
      const start = this.tokenStart;
      this.eat(types.Hash);
      return {
        type: "Hash",
        loc: this.getLocation(start, this.tokenStart),
        value: this.substrToCursor(start + 1)
      };
    }
    function generate(node) {
      this.token(types.Hash, "#" + node.value);
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
    exports.xxx = xxx;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/syntax/node/Identifier.cjs
var require_Identifier2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/syntax/node/Identifier.cjs"(exports) {
    "use strict";
    var types = require_types3();
    var name = "Identifier";
    var structure = {
      name: String
    };
    function parse() {
      return {
        type: "Identifier",
        loc: this.getLocation(this.tokenStart, this.tokenEnd),
        name: this.consume(types.Ident)
      };
    }
    function generate(node) {
      this.token(types.Ident, node.name);
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/syntax/node/IdSelector.cjs
var require_IdSelector2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/syntax/node/IdSelector.cjs"(exports) {
    "use strict";
    var types = require_types3();
    var name = "IdSelector";
    var structure = {
      name: String
    };
    function parse() {
      const start = this.tokenStart;
      this.eat(types.Hash);
      return {
        type: "IdSelector",
        loc: this.getLocation(start, this.tokenStart),
        name: this.substrToCursor(start + 1)
      };
    }
    function generate(node) {
      this.token(types.Delim, "#" + node.name);
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/syntax/node/MediaFeature.cjs
var require_MediaFeature2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/syntax/node/MediaFeature.cjs"(exports) {
    "use strict";
    var types = require_types3();
    var name = "MediaFeature";
    var structure = {
      name: String,
      value: ["Identifier", "Number", "Dimension", "Ratio", null]
    };
    function parse() {
      const start = this.tokenStart;
      let name2;
      let value = null;
      this.eat(types.LeftParenthesis);
      this.skipSC();
      name2 = this.consume(types.Ident);
      this.skipSC();
      if (this.tokenType !== types.RightParenthesis) {
        this.eat(types.Colon);
        this.skipSC();
        switch (this.tokenType) {
          case types.Number:
            if (this.lookupNonWSType(1) === types.Delim) {
              value = this.Ratio();
            } else {
              value = this.Number();
            }
            break;
          case types.Dimension:
            value = this.Dimension();
            break;
          case types.Ident:
            value = this.Identifier();
            break;
          default:
            this.error("Number, dimension, ratio or identifier is expected");
        }
        this.skipSC();
      }
      this.eat(types.RightParenthesis);
      return {
        type: "MediaFeature",
        loc: this.getLocation(start, this.tokenStart),
        name: name2,
        value
      };
    }
    function generate(node) {
      this.token(types.LeftParenthesis, "(");
      this.token(types.Ident, node.name);
      if (node.value !== null) {
        this.token(types.Colon, ":");
        this.node(node.value);
      }
      this.token(types.RightParenthesis, ")");
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/syntax/node/MediaQuery.cjs
var require_MediaQuery2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/syntax/node/MediaQuery.cjs"(exports) {
    "use strict";
    var types = require_types3();
    var name = "MediaQuery";
    var structure = {
      children: [[
        "Identifier",
        "MediaFeature",
        "WhiteSpace"
      ]]
    };
    function parse() {
      const children = this.createList();
      let child = null;
      this.skipSC();
      scan:
        while (!this.eof) {
          switch (this.tokenType) {
            case types.Comment:
            case types.WhiteSpace:
              this.next();
              continue;
            case types.Ident:
              child = this.Identifier();
              break;
            case types.LeftParenthesis:
              child = this.MediaFeature();
              break;
            default:
              break scan;
          }
          children.push(child);
        }
      if (child === null) {
        this.error("Identifier or parenthesis is expected");
      }
      return {
        type: "MediaQuery",
        loc: this.getLocationFromList(children),
        children
      };
    }
    function generate(node) {
      this.children(node);
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/syntax/node/MediaQueryList.cjs
var require_MediaQueryList2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/syntax/node/MediaQueryList.cjs"(exports) {
    "use strict";
    var types = require_types3();
    var name = "MediaQueryList";
    var structure = {
      children: [[
        "MediaQuery"
      ]]
    };
    function parse() {
      const children = this.createList();
      this.skipSC();
      while (!this.eof) {
        children.push(this.MediaQuery());
        if (this.tokenType !== types.Comma) {
          break;
        }
        this.next();
      }
      return {
        type: "MediaQueryList",
        loc: this.getLocationFromList(children),
        children
      };
    }
    function generate(node) {
      this.children(node, () => this.token(types.Comma, ","));
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/syntax/node/Nth.cjs
var require_Nth2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/syntax/node/Nth.cjs"(exports) {
    "use strict";
    var types = require_types3();
    var name = "Nth";
    var structure = {
      nth: ["AnPlusB", "Identifier"],
      selector: ["SelectorList", null]
    };
    function parse() {
      this.skipSC();
      const start = this.tokenStart;
      let end = start;
      let selector = null;
      let nth;
      if (this.lookupValue(0, "odd") || this.lookupValue(0, "even")) {
        nth = this.Identifier();
      } else {
        nth = this.AnPlusB();
      }
      end = this.tokenStart;
      this.skipSC();
      if (this.lookupValue(0, "of")) {
        this.next();
        selector = this.SelectorList();
        end = this.tokenStart;
      }
      return {
        type: "Nth",
        loc: this.getLocation(start, end),
        nth,
        selector
      };
    }
    function generate(node) {
      this.node(node.nth);
      if (node.selector !== null) {
        this.token(types.Ident, "of");
        this.node(node.selector);
      }
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/syntax/node/Number.cjs
var require_Number2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/syntax/node/Number.cjs"(exports) {
    "use strict";
    var types = require_types3();
    var name = "Number";
    var structure = {
      value: String
    };
    function parse() {
      return {
        type: "Number",
        loc: this.getLocation(this.tokenStart, this.tokenEnd),
        value: this.consume(types.Number)
      };
    }
    function generate(node) {
      this.token(types.Number, node.value);
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/syntax/node/Operator.cjs
var require_Operator2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/syntax/node/Operator.cjs"(exports) {
    "use strict";
    var name = "Operator";
    var structure = {
      value: String
    };
    function parse() {
      const start = this.tokenStart;
      this.next();
      return {
        type: "Operator",
        loc: this.getLocation(start, this.tokenStart),
        value: this.substrToCursor(start)
      };
    }
    function generate(node) {
      this.tokenize(node.value);
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/syntax/node/Parentheses.cjs
var require_Parentheses2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/syntax/node/Parentheses.cjs"(exports) {
    "use strict";
    var types = require_types3();
    var name = "Parentheses";
    var structure = {
      children: [[]]
    };
    function parse(readSequence, recognizer) {
      const start = this.tokenStart;
      let children = null;
      this.eat(types.LeftParenthesis);
      children = readSequence.call(this, recognizer);
      if (!this.eof) {
        this.eat(types.RightParenthesis);
      }
      return {
        type: "Parentheses",
        loc: this.getLocation(start, this.tokenStart),
        children
      };
    }
    function generate(node) {
      this.token(types.LeftParenthesis, "(");
      this.children(node);
      this.token(types.RightParenthesis, ")");
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/syntax/node/Percentage.cjs
var require_Percentage2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/syntax/node/Percentage.cjs"(exports) {
    "use strict";
    var types = require_types3();
    var name = "Percentage";
    var structure = {
      value: String
    };
    function parse() {
      return {
        type: "Percentage",
        loc: this.getLocation(this.tokenStart, this.tokenEnd),
        value: this.consumeNumber(types.Percentage)
      };
    }
    function generate(node) {
      this.token(types.Percentage, node.value + "%");
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/syntax/node/PseudoClassSelector.cjs
var require_PseudoClassSelector2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/syntax/node/PseudoClassSelector.cjs"(exports) {
    "use strict";
    var types = require_types3();
    var name = "PseudoClassSelector";
    var walkContext = "function";
    var structure = {
      name: String,
      children: [["Raw"], null]
    };
    function parse() {
      const start = this.tokenStart;
      let children = null;
      let name2;
      let nameLowerCase;
      this.eat(types.Colon);
      if (this.tokenType === types.Function) {
        name2 = this.consumeFunctionName();
        nameLowerCase = name2.toLowerCase();
        if (hasOwnProperty.call(this.pseudo, nameLowerCase)) {
          this.skipSC();
          children = this.pseudo[nameLowerCase].call(this);
          this.skipSC();
        } else {
          children = this.createList();
          children.push(
            this.Raw(this.tokenIndex, null, false)
          );
        }
        this.eat(types.RightParenthesis);
      } else {
        name2 = this.consume(types.Ident);
      }
      return {
        type: "PseudoClassSelector",
        loc: this.getLocation(start, this.tokenStart),
        name: name2,
        children
      };
    }
    function generate(node) {
      this.token(types.Colon, ":");
      if (node.children === null) {
        this.token(types.Ident, node.name);
      } else {
        this.token(types.Function, node.name + "(");
        this.children(node);
        this.token(types.RightParenthesis, ")");
      }
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
    exports.walkContext = walkContext;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/syntax/node/PseudoElementSelector.cjs
var require_PseudoElementSelector2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/syntax/node/PseudoElementSelector.cjs"(exports) {
    "use strict";
    var types = require_types3();
    var name = "PseudoElementSelector";
    var walkContext = "function";
    var structure = {
      name: String,
      children: [["Raw"], null]
    };
    function parse() {
      const start = this.tokenStart;
      let children = null;
      let name2;
      let nameLowerCase;
      this.eat(types.Colon);
      this.eat(types.Colon);
      if (this.tokenType === types.Function) {
        name2 = this.consumeFunctionName();
        nameLowerCase = name2.toLowerCase();
        if (hasOwnProperty.call(this.pseudo, nameLowerCase)) {
          this.skipSC();
          children = this.pseudo[nameLowerCase].call(this);
          this.skipSC();
        } else {
          children = this.createList();
          children.push(
            this.Raw(this.tokenIndex, null, false)
          );
        }
        this.eat(types.RightParenthesis);
      } else {
        name2 = this.consume(types.Ident);
      }
      return {
        type: "PseudoElementSelector",
        loc: this.getLocation(start, this.tokenStart),
        name: name2,
        children
      };
    }
    function generate(node) {
      this.token(types.Colon, ":");
      this.token(types.Colon, ":");
      if (node.children === null) {
        this.token(types.Ident, node.name);
      } else {
        this.token(types.Function, node.name + "(");
        this.children(node);
        this.token(types.RightParenthesis, ")");
      }
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
    exports.walkContext = walkContext;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/syntax/node/Ratio.cjs
var require_Ratio2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/syntax/node/Ratio.cjs"(exports) {
    "use strict";
    var types = require_types3();
    var charCodeDefinitions = require_char_code_definitions2();
    var SOLIDUS = 47;
    var FULLSTOP = 46;
    function consumeNumber() {
      this.skipSC();
      const value = this.consume(types.Number);
      for (let i = 0; i < value.length; i++) {
        const code = value.charCodeAt(i);
        if (!charCodeDefinitions.isDigit(code) && code !== FULLSTOP) {
          this.error("Unsigned number is expected", this.tokenStart - value.length + i);
        }
      }
      if (Number(value) === 0) {
        this.error("Zero number is not allowed", this.tokenStart - value.length);
      }
      return value;
    }
    var name = "Ratio";
    var structure = {
      left: String,
      right: String
    };
    function parse() {
      const start = this.tokenStart;
      const left = consumeNumber.call(this);
      let right;
      this.skipSC();
      this.eatDelim(SOLIDUS);
      right = consumeNumber.call(this);
      return {
        type: "Ratio",
        loc: this.getLocation(start, this.tokenStart),
        left,
        right
      };
    }
    function generate(node) {
      this.token(types.Number, node.left);
      this.token(types.Delim, "/");
      this.token(types.Number, node.right);
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/syntax/node/Raw.cjs
var require_Raw2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/syntax/node/Raw.cjs"(exports) {
    "use strict";
    var types = require_types3();
    function getOffsetExcludeWS() {
      if (this.tokenIndex > 0) {
        if (this.lookupType(-1) === types.WhiteSpace) {
          return this.tokenIndex > 1 ? this.getTokenStart(this.tokenIndex - 1) : this.firstCharOffset;
        }
      }
      return this.tokenStart;
    }
    var name = "Raw";
    var structure = {
      value: String
    };
    function parse(startToken, consumeUntil, excludeWhiteSpace) {
      const startOffset = this.getTokenStart(startToken);
      let endOffset;
      this.skipUntilBalanced(startToken, consumeUntil || this.consumeUntilBalanceEnd);
      if (excludeWhiteSpace && this.tokenStart > startOffset) {
        endOffset = getOffsetExcludeWS.call(this);
      } else {
        endOffset = this.tokenStart;
      }
      return {
        type: "Raw",
        loc: this.getLocation(startOffset, endOffset),
        value: this.substring(startOffset, endOffset)
      };
    }
    function generate(node) {
      this.tokenize(node.value);
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/syntax/node/Rule.cjs
var require_Rule2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/syntax/node/Rule.cjs"(exports) {
    "use strict";
    var types = require_types3();
    function consumeRaw(startToken) {
      return this.Raw(startToken, this.consumeUntilLeftCurlyBracket, true);
    }
    function consumePrelude() {
      const prelude = this.SelectorList();
      if (prelude.type !== "Raw" && this.eof === false && this.tokenType !== types.LeftCurlyBracket) {
        this.error();
      }
      return prelude;
    }
    var name = "Rule";
    var walkContext = "rule";
    var structure = {
      prelude: ["SelectorList", "Raw"],
      block: ["Block"]
    };
    function parse() {
      const startToken = this.tokenIndex;
      const startOffset = this.tokenStart;
      let prelude;
      let block;
      if (this.parseRulePrelude) {
        prelude = this.parseWithFallback(consumePrelude, consumeRaw);
      } else {
        prelude = consumeRaw.call(this, startToken);
      }
      block = this.Block(true);
      return {
        type: "Rule",
        loc: this.getLocation(startOffset, this.tokenStart),
        prelude,
        block
      };
    }
    function generate(node) {
      this.node(node.prelude);
      this.node(node.block);
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
    exports.walkContext = walkContext;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/syntax/node/Selector.cjs
var require_Selector2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/syntax/node/Selector.cjs"(exports) {
    "use strict";
    var name = "Selector";
    var structure = {
      children: [[
        "TypeSelector",
        "IdSelector",
        "ClassSelector",
        "AttributeSelector",
        "PseudoClassSelector",
        "PseudoElementSelector",
        "Combinator",
        "WhiteSpace"
      ]]
    };
    function parse() {
      const children = this.readSequence(this.scope.Selector);
      if (this.getFirstListNode(children) === null) {
        this.error("Selector is expected");
      }
      return {
        type: "Selector",
        loc: this.getLocationFromList(children),
        children
      };
    }
    function generate(node) {
      this.children(node);
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/syntax/node/SelectorList.cjs
var require_SelectorList2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/syntax/node/SelectorList.cjs"(exports) {
    "use strict";
    var types = require_types3();
    var name = "SelectorList";
    var walkContext = "selector";
    var structure = {
      children: [[
        "Selector",
        "Raw"
      ]]
    };
    function parse() {
      const children = this.createList();
      while (!this.eof) {
        children.push(this.Selector());
        if (this.tokenType === types.Comma) {
          this.next();
          continue;
        }
        break;
      }
      return {
        type: "SelectorList",
        loc: this.getLocationFromList(children),
        children
      };
    }
    function generate(node) {
      this.children(node, () => this.token(types.Comma, ","));
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
    exports.walkContext = walkContext;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/utils/string.cjs
var require_string2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/utils/string.cjs"(exports) {
    "use strict";
    var charCodeDefinitions = require_char_code_definitions2();
    var utils = require_utils3();
    var REVERSE_SOLIDUS = 92;
    var QUOTATION_MARK = 34;
    var APOSTROPHE = 39;
    function decode(str) {
      const len = str.length;
      const firstChar = str.charCodeAt(0);
      const start = firstChar === QUOTATION_MARK || firstChar === APOSTROPHE ? 1 : 0;
      const end = start === 1 && len > 1 && str.charCodeAt(len - 1) === firstChar ? len - 2 : len - 1;
      let decoded = "";
      for (let i = start; i <= end; i++) {
        let code = str.charCodeAt(i);
        if (code === REVERSE_SOLIDUS) {
          if (i === end) {
            if (i !== len - 1) {
              decoded = str.substr(i + 1);
            }
            break;
          }
          code = str.charCodeAt(++i);
          if (charCodeDefinitions.isValidEscape(REVERSE_SOLIDUS, code)) {
            const escapeStart = i - 1;
            const escapeEnd = utils.consumeEscaped(str, escapeStart);
            i = escapeEnd - 1;
            decoded += utils.decodeEscaped(str.substring(escapeStart + 1, escapeEnd));
          } else {
            if (code === 13 && str.charCodeAt(i + 1) === 10) {
              i++;
            }
          }
        } else {
          decoded += str[i];
        }
      }
      return decoded;
    }
    function encode(str, apostrophe) {
      const quote = apostrophe ? "'" : '"';
      const quoteCode = apostrophe ? APOSTROPHE : QUOTATION_MARK;
      let encoded = "";
      let wsBeforeHexIsNeeded = false;
      for (let i = 0; i < str.length; i++) {
        const code = str.charCodeAt(i);
        if (code === 0) {
          encoded += "\uFFFD";
          continue;
        }
        if (code <= 31 || code === 127) {
          encoded += "\\" + code.toString(16);
          wsBeforeHexIsNeeded = true;
          continue;
        }
        if (code === quoteCode || code === REVERSE_SOLIDUS) {
          encoded += "\\" + str.charAt(i);
          wsBeforeHexIsNeeded = false;
        } else {
          if (wsBeforeHexIsNeeded && (charCodeDefinitions.isHexDigit(code) || charCodeDefinitions.isWhiteSpace(code))) {
            encoded += " ";
          }
          encoded += str.charAt(i);
          wsBeforeHexIsNeeded = false;
        }
      }
      return quote + encoded + quote;
    }
    exports.decode = decode;
    exports.encode = encode;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/syntax/node/String.cjs
var require_String2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/syntax/node/String.cjs"(exports) {
    "use strict";
    var string = require_string2();
    var types = require_types3();
    var name = "String";
    var structure = {
      value: String
    };
    function parse() {
      return {
        type: "String",
        loc: this.getLocation(this.tokenStart, this.tokenEnd),
        value: string.decode(this.consume(types.String))
      };
    }
    function generate(node) {
      this.token(types.String, string.encode(node.value));
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/syntax/node/StyleSheet.cjs
var require_StyleSheet2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/syntax/node/StyleSheet.cjs"(exports) {
    "use strict";
    var types = require_types3();
    var EXCLAMATIONMARK = 33;
    function consumeRaw(startToken) {
      return this.Raw(startToken, null, false);
    }
    var name = "StyleSheet";
    var walkContext = "stylesheet";
    var structure = {
      children: [[
        "Comment",
        "CDO",
        "CDC",
        "Atrule",
        "Rule",
        "Raw"
      ]]
    };
    function parse() {
      const start = this.tokenStart;
      const children = this.createList();
      let child;
      while (!this.eof) {
        switch (this.tokenType) {
          case types.WhiteSpace:
            this.next();
            continue;
          case types.Comment:
            if (this.charCodeAt(this.tokenStart + 2) !== EXCLAMATIONMARK) {
              this.next();
              continue;
            }
            child = this.Comment();
            break;
          case types.CDO:
            child = this.CDO();
            break;
          case types.CDC:
            child = this.CDC();
            break;
          case types.AtKeyword:
            child = this.parseWithFallback(this.Atrule, consumeRaw);
            break;
          default:
            child = this.parseWithFallback(this.Rule, consumeRaw);
        }
        children.push(child);
      }
      return {
        type: "StyleSheet",
        loc: this.getLocation(start, this.tokenStart),
        children
      };
    }
    function generate(node) {
      this.children(node);
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
    exports.walkContext = walkContext;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/syntax/node/TypeSelector.cjs
var require_TypeSelector2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/syntax/node/TypeSelector.cjs"(exports) {
    "use strict";
    var types = require_types3();
    var ASTERISK = 42;
    var VERTICALLINE = 124;
    function eatIdentifierOrAsterisk() {
      if (this.tokenType !== types.Ident && this.isDelim(ASTERISK) === false) {
        this.error("Identifier or asterisk is expected");
      }
      this.next();
    }
    var name = "TypeSelector";
    var structure = {
      name: String
    };
    function parse() {
      const start = this.tokenStart;
      if (this.isDelim(VERTICALLINE)) {
        this.next();
        eatIdentifierOrAsterisk.call(this);
      } else {
        eatIdentifierOrAsterisk.call(this);
        if (this.isDelim(VERTICALLINE)) {
          this.next();
          eatIdentifierOrAsterisk.call(this);
        }
      }
      return {
        type: "TypeSelector",
        loc: this.getLocation(start, this.tokenStart),
        name: this.substrToCursor(start)
      };
    }
    function generate(node) {
      this.tokenize(node.name);
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/syntax/node/UnicodeRange.cjs
var require_UnicodeRange2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/syntax/node/UnicodeRange.cjs"(exports) {
    "use strict";
    var types = require_types3();
    var charCodeDefinitions = require_char_code_definitions2();
    var PLUSSIGN = 43;
    var HYPHENMINUS = 45;
    var QUESTIONMARK = 63;
    function eatHexSequence(offset, allowDash) {
      let len = 0;
      for (let pos = this.tokenStart + offset; pos < this.tokenEnd; pos++) {
        const code = this.charCodeAt(pos);
        if (code === HYPHENMINUS && allowDash && len !== 0) {
          eatHexSequence.call(this, offset + len + 1, false);
          return -1;
        }
        if (!charCodeDefinitions.isHexDigit(code)) {
          this.error(
            allowDash && len !== 0 ? "Hyphen minus" + (len < 6 ? " or hex digit" : "") + " is expected" : len < 6 ? "Hex digit is expected" : "Unexpected input",
            pos
          );
        }
        if (++len > 6) {
          this.error("Too many hex digits", pos);
        }
      }
      this.next();
      return len;
    }
    function eatQuestionMarkSequence(max) {
      let count = 0;
      while (this.isDelim(QUESTIONMARK)) {
        if (++count > max) {
          this.error("Too many question marks");
        }
        this.next();
      }
    }
    function startsWith(code) {
      if (this.charCodeAt(this.tokenStart) !== code) {
        this.error((code === PLUSSIGN ? "Plus sign" : "Hyphen minus") + " is expected");
      }
    }
    function scanUnicodeRange() {
      let hexLength = 0;
      switch (this.tokenType) {
        case types.Number:
          hexLength = eatHexSequence.call(this, 1, true);
          if (this.isDelim(QUESTIONMARK)) {
            eatQuestionMarkSequence.call(this, 6 - hexLength);
            break;
          }
          if (this.tokenType === types.Dimension || this.tokenType === types.Number) {
            startsWith.call(this, HYPHENMINUS);
            eatHexSequence.call(this, 1, false);
            break;
          }
          break;
        case types.Dimension:
          hexLength = eatHexSequence.call(this, 1, true);
          if (hexLength > 0) {
            eatQuestionMarkSequence.call(this, 6 - hexLength);
          }
          break;
        default:
          this.eatDelim(PLUSSIGN);
          if (this.tokenType === types.Ident) {
            hexLength = eatHexSequence.call(this, 0, true);
            if (hexLength > 0) {
              eatQuestionMarkSequence.call(this, 6 - hexLength);
            }
            break;
          }
          if (this.isDelim(QUESTIONMARK)) {
            this.next();
            eatQuestionMarkSequence.call(this, 5);
            break;
          }
          this.error("Hex digit or question mark is expected");
      }
    }
    var name = "UnicodeRange";
    var structure = {
      value: String
    };
    function parse() {
      const start = this.tokenStart;
      this.eatIdent("u");
      scanUnicodeRange.call(this);
      return {
        type: "UnicodeRange",
        loc: this.getLocation(start, this.tokenStart),
        value: this.substrToCursor(start)
      };
    }
    function generate(node) {
      this.tokenize(node.value);
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/utils/url.cjs
var require_url3 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/utils/url.cjs"(exports) {
    "use strict";
    var charCodeDefinitions = require_char_code_definitions2();
    var utils = require_utils3();
    var SPACE = 32;
    var REVERSE_SOLIDUS = 92;
    var QUOTATION_MARK = 34;
    var APOSTROPHE = 39;
    var LEFTPARENTHESIS = 40;
    var RIGHTPARENTHESIS = 41;
    function decode(str) {
      const len = str.length;
      let start = 4;
      let end = str.charCodeAt(len - 1) === RIGHTPARENTHESIS ? len - 2 : len - 1;
      let decoded = "";
      while (start < end && charCodeDefinitions.isWhiteSpace(str.charCodeAt(start))) {
        start++;
      }
      while (start < end && charCodeDefinitions.isWhiteSpace(str.charCodeAt(end))) {
        end--;
      }
      for (let i = start; i <= end; i++) {
        let code = str.charCodeAt(i);
        if (code === REVERSE_SOLIDUS) {
          if (i === end) {
            if (i !== len - 1) {
              decoded = str.substr(i + 1);
            }
            break;
          }
          code = str.charCodeAt(++i);
          if (charCodeDefinitions.isValidEscape(REVERSE_SOLIDUS, code)) {
            const escapeStart = i - 1;
            const escapeEnd = utils.consumeEscaped(str, escapeStart);
            i = escapeEnd - 1;
            decoded += utils.decodeEscaped(str.substring(escapeStart + 1, escapeEnd));
          } else {
            if (code === 13 && str.charCodeAt(i + 1) === 10) {
              i++;
            }
          }
        } else {
          decoded += str[i];
        }
      }
      return decoded;
    }
    function encode(str) {
      let encoded = "";
      let wsBeforeHexIsNeeded = false;
      for (let i = 0; i < str.length; i++) {
        const code = str.charCodeAt(i);
        if (code === 0) {
          encoded += "\uFFFD";
          continue;
        }
        if (code <= 31 || code === 127) {
          encoded += "\\" + code.toString(16);
          wsBeforeHexIsNeeded = true;
          continue;
        }
        if (code === SPACE || code === REVERSE_SOLIDUS || code === QUOTATION_MARK || code === APOSTROPHE || code === LEFTPARENTHESIS || code === RIGHTPARENTHESIS) {
          encoded += "\\" + str.charAt(i);
          wsBeforeHexIsNeeded = false;
        } else {
          if (wsBeforeHexIsNeeded && charCodeDefinitions.isHexDigit(code)) {
            encoded += " ";
          }
          encoded += str.charAt(i);
          wsBeforeHexIsNeeded = false;
        }
      }
      return "url(" + encoded + ")";
    }
    exports.decode = decode;
    exports.encode = encode;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/syntax/node/Url.cjs
var require_Url2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/syntax/node/Url.cjs"(exports) {
    "use strict";
    var url = require_url3();
    var string = require_string2();
    var types = require_types3();
    var name = "Url";
    var structure = {
      value: String
    };
    function parse() {
      const start = this.tokenStart;
      let value;
      switch (this.tokenType) {
        case types.Url:
          value = url.decode(this.consume(types.Url));
          break;
        case types.Function:
          if (!this.cmpStr(this.tokenStart, this.tokenEnd, "url(")) {
            this.error("Function name must be `url`");
          }
          this.eat(types.Function);
          this.skipSC();
          value = string.decode(this.consume(types.String));
          this.skipSC();
          if (!this.eof) {
            this.eat(types.RightParenthesis);
          }
          break;
        default:
          this.error("Url or Function is expected");
      }
      return {
        type: "Url",
        loc: this.getLocation(start, this.tokenStart),
        value
      };
    }
    function generate(node) {
      this.token(types.Url, url.encode(node.value));
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/syntax/node/Value.cjs
var require_Value2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/syntax/node/Value.cjs"(exports) {
    "use strict";
    var name = "Value";
    var structure = {
      children: [[]]
    };
    function parse() {
      const start = this.tokenStart;
      const children = this.readSequence(this.scope.Value);
      return {
        type: "Value",
        loc: this.getLocation(start, this.tokenStart),
        children
      };
    }
    function generate(node) {
      this.children(node);
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/syntax/node/WhiteSpace.cjs
var require_WhiteSpace2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/syntax/node/WhiteSpace.cjs"(exports) {
    "use strict";
    var types = require_types3();
    var SPACE = Object.freeze({
      type: "WhiteSpace",
      loc: null,
      value: " "
    });
    var name = "WhiteSpace";
    var structure = {
      value: String
    };
    function parse() {
      this.eat(types.WhiteSpace);
      return SPACE;
    }
    function generate(node) {
      this.token(types.WhiteSpace, node.value);
    }
    exports.generate = generate;
    exports.name = name;
    exports.parse = parse;
    exports.structure = structure;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/syntax/node/index.cjs
var require_node5 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/syntax/node/index.cjs"(exports) {
    "use strict";
    var AnPlusB = require_AnPlusB2();
    var Atrule = require_Atrule2();
    var AtrulePrelude = require_AtrulePrelude2();
    var AttributeSelector = require_AttributeSelector2();
    var Block = require_Block2();
    var Brackets = require_Brackets2();
    var CDC = require_CDC2();
    var CDO = require_CDO2();
    var ClassSelector = require_ClassSelector2();
    var Combinator = require_Combinator2();
    var Comment = require_Comment2();
    var Declaration = require_Declaration2();
    var DeclarationList = require_DeclarationList2();
    var Dimension = require_Dimension2();
    var Function2 = require_Function2();
    var Hash = require_Hash2();
    var Identifier = require_Identifier2();
    var IdSelector = require_IdSelector2();
    var MediaFeature = require_MediaFeature2();
    var MediaQuery = require_MediaQuery2();
    var MediaQueryList = require_MediaQueryList2();
    var Nth = require_Nth2();
    var Number$1 = require_Number2();
    var Operator = require_Operator2();
    var Parentheses = require_Parentheses2();
    var Percentage = require_Percentage2();
    var PseudoClassSelector = require_PseudoClassSelector2();
    var PseudoElementSelector = require_PseudoElementSelector2();
    var Ratio = require_Ratio2();
    var Raw = require_Raw2();
    var Rule = require_Rule2();
    var Selector = require_Selector2();
    var SelectorList = require_SelectorList2();
    var String$1 = require_String2();
    var StyleSheet = require_StyleSheet2();
    var TypeSelector = require_TypeSelector2();
    var UnicodeRange = require_UnicodeRange2();
    var Url = require_Url2();
    var Value = require_Value2();
    var WhiteSpace = require_WhiteSpace2();
    exports.AnPlusB = AnPlusB;
    exports.Atrule = Atrule;
    exports.AtrulePrelude = AtrulePrelude;
    exports.AttributeSelector = AttributeSelector;
    exports.Block = Block;
    exports.Brackets = Brackets;
    exports.CDC = CDC;
    exports.CDO = CDO;
    exports.ClassSelector = ClassSelector;
    exports.Combinator = Combinator;
    exports.Comment = Comment;
    exports.Declaration = Declaration;
    exports.DeclarationList = DeclarationList;
    exports.Dimension = Dimension;
    exports.Function = Function2;
    exports.Hash = Hash;
    exports.Identifier = Identifier;
    exports.IdSelector = IdSelector;
    exports.MediaFeature = MediaFeature;
    exports.MediaQuery = MediaQuery;
    exports.MediaQueryList = MediaQueryList;
    exports.Nth = Nth;
    exports.Number = Number$1;
    exports.Operator = Operator;
    exports.Parentheses = Parentheses;
    exports.Percentage = Percentage;
    exports.PseudoClassSelector = PseudoClassSelector;
    exports.PseudoElementSelector = PseudoElementSelector;
    exports.Ratio = Ratio;
    exports.Raw = Raw;
    exports.Rule = Rule;
    exports.Selector = Selector;
    exports.SelectorList = SelectorList;
    exports.String = String$1;
    exports.StyleSheet = StyleSheet;
    exports.TypeSelector = TypeSelector;
    exports.UnicodeRange = UnicodeRange;
    exports.Url = Url;
    exports.Value = Value;
    exports.WhiteSpace = WhiteSpace;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/syntax/config/lexer.cjs
var require_lexer2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/syntax/config/lexer.cjs"(exports, module2) {
    "use strict";
    var data = require_data2();
    var index = require_node5();
    var lexerConfig = {
      generic: true,
      ...data,
      node: index
    };
    module2.exports = lexerConfig;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/syntax/scope/default.cjs
var require_default2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/syntax/scope/default.cjs"(exports, module2) {
    "use strict";
    var types = require_types3();
    var NUMBERSIGN = 35;
    var ASTERISK = 42;
    var PLUSSIGN = 43;
    var HYPHENMINUS = 45;
    var SOLIDUS = 47;
    var U = 117;
    function defaultRecognizer(context) {
      switch (this.tokenType) {
        case types.Hash:
          return this.Hash();
        case types.Comma:
          return this.Operator();
        case types.LeftParenthesis:
          return this.Parentheses(this.readSequence, context.recognizer);
        case types.LeftSquareBracket:
          return this.Brackets(this.readSequence, context.recognizer);
        case types.String:
          return this.String();
        case types.Dimension:
          return this.Dimension();
        case types.Percentage:
          return this.Percentage();
        case types.Number:
          return this.Number();
        case types.Function:
          return this.cmpStr(this.tokenStart, this.tokenEnd, "url(") ? this.Url() : this.Function(this.readSequence, context.recognizer);
        case types.Url:
          return this.Url();
        case types.Ident:
          if (this.cmpChar(this.tokenStart, U) && this.cmpChar(this.tokenStart + 1, PLUSSIGN)) {
            return this.UnicodeRange();
          } else {
            return this.Identifier();
          }
        case types.Delim: {
          const code = this.charCodeAt(this.tokenStart);
          if (code === SOLIDUS || code === ASTERISK || code === PLUSSIGN || code === HYPHENMINUS) {
            return this.Operator();
          }
          if (code === NUMBERSIGN) {
            this.error("Hex or identifier is expected", this.tokenStart + 1);
          }
          break;
        }
      }
    }
    module2.exports = defaultRecognizer;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/syntax/scope/atrulePrelude.cjs
var require_atrulePrelude2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/syntax/scope/atrulePrelude.cjs"(exports, module2) {
    "use strict";
    var _default = require_default2();
    var atrulePrelude = {
      getNode: _default
    };
    module2.exports = atrulePrelude;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/syntax/scope/selector.cjs
var require_selector2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/syntax/scope/selector.cjs"(exports, module2) {
    "use strict";
    var types = require_types3();
    var NUMBERSIGN = 35;
    var ASTERISK = 42;
    var PLUSSIGN = 43;
    var SOLIDUS = 47;
    var FULLSTOP = 46;
    var GREATERTHANSIGN = 62;
    var VERTICALLINE = 124;
    var TILDE = 126;
    function onWhiteSpace(next, children) {
      if (children.last !== null && children.last.type !== "Combinator" && next !== null && next.type !== "Combinator") {
        children.push({
          // FIXME: this.Combinator() should be used instead
          type: "Combinator",
          loc: null,
          name: " "
        });
      }
    }
    function getNode() {
      switch (this.tokenType) {
        case types.LeftSquareBracket:
          return this.AttributeSelector();
        case types.Hash:
          return this.IdSelector();
        case types.Colon:
          if (this.lookupType(1) === types.Colon) {
            return this.PseudoElementSelector();
          } else {
            return this.PseudoClassSelector();
          }
        case types.Ident:
          return this.TypeSelector();
        case types.Number:
        case types.Percentage:
          return this.Percentage();
        case types.Dimension:
          if (this.charCodeAt(this.tokenStart) === FULLSTOP) {
            this.error("Identifier is expected", this.tokenStart + 1);
          }
          break;
        case types.Delim: {
          const code = this.charCodeAt(this.tokenStart);
          switch (code) {
            case PLUSSIGN:
            case GREATERTHANSIGN:
            case TILDE:
            case SOLIDUS:
              return this.Combinator();
            case FULLSTOP:
              return this.ClassSelector();
            case ASTERISK:
            case VERTICALLINE:
              return this.TypeSelector();
            case NUMBERSIGN:
              return this.IdSelector();
          }
          break;
        }
      }
    }
    var Selector = {
      onWhiteSpace,
      getNode
    };
    module2.exports = Selector;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/syntax/function/expression.cjs
var require_expression2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/syntax/function/expression.cjs"(exports, module2) {
    "use strict";
    function expressionFn() {
      return this.createSingleNodeList(
        this.Raw(this.tokenIndex, null, false)
      );
    }
    module2.exports = expressionFn;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/syntax/function/var.cjs
var require_var2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/syntax/function/var.cjs"(exports, module2) {
    "use strict";
    var types = require_types3();
    function varFn() {
      const children = this.createList();
      this.skipSC();
      children.push(this.Identifier());
      this.skipSC();
      if (this.tokenType === types.Comma) {
        children.push(this.Operator());
        const startIndex = this.tokenIndex;
        const value = this.parseCustomProperty ? this.Value(null) : this.Raw(this.tokenIndex, this.consumeUntilExclamationMarkOrSemicolon, false);
        if (value.type === "Value" && value.children.isEmpty) {
          for (let offset = startIndex - this.tokenIndex; offset <= 0; offset++) {
            if (this.lookupType(offset) === types.WhiteSpace) {
              value.children.appendData({
                type: "WhiteSpace",
                loc: null,
                value: " "
              });
              break;
            }
          }
        }
        children.push(value);
      }
      return children;
    }
    module2.exports = varFn;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/syntax/scope/value.cjs
var require_value2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/syntax/scope/value.cjs"(exports, module2) {
    "use strict";
    var _default = require_default2();
    var expression = require_expression2();
    var _var = require_var2();
    function isPlusMinusOperator(node) {
      return node !== null && node.type === "Operator" && (node.value[node.value.length - 1] === "-" || node.value[node.value.length - 1] === "+");
    }
    var value = {
      getNode: _default,
      onWhiteSpace(next, children) {
        if (isPlusMinusOperator(next)) {
          next.value = " " + next.value;
        }
        if (isPlusMinusOperator(children.last)) {
          children.last.value += " ";
        }
      },
      "expression": expression,
      "var": _var
    };
    module2.exports = value;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/syntax/scope/index.cjs
var require_scope2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/syntax/scope/index.cjs"(exports) {
    "use strict";
    var atrulePrelude = require_atrulePrelude2();
    var selector = require_selector2();
    var value = require_value2();
    exports.AtrulePrelude = atrulePrelude;
    exports.Selector = selector;
    exports.Value = value;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/syntax/atrule/font-face.cjs
var require_font_face2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/syntax/atrule/font-face.cjs"(exports, module2) {
    "use strict";
    var fontFace = {
      parse: {
        prelude: null,
        block() {
          return this.Block(true);
        }
      }
    };
    module2.exports = fontFace;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/syntax/atrule/import.cjs
var require_import2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/syntax/atrule/import.cjs"(exports, module2) {
    "use strict";
    var types = require_types3();
    var importAtrule = {
      parse: {
        prelude() {
          const children = this.createList();
          this.skipSC();
          switch (this.tokenType) {
            case types.String:
              children.push(this.String());
              break;
            case types.Url:
            case types.Function:
              children.push(this.Url());
              break;
            default:
              this.error("String or url() is expected");
          }
          if (this.lookupNonWSType(0) === types.Ident || this.lookupNonWSType(0) === types.LeftParenthesis) {
            children.push(this.MediaQueryList());
          }
          return children;
        },
        block: null
      }
    };
    module2.exports = importAtrule;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/syntax/atrule/media.cjs
var require_media2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/syntax/atrule/media.cjs"(exports, module2) {
    "use strict";
    var media = {
      parse: {
        prelude() {
          return this.createSingleNodeList(
            this.MediaQueryList()
          );
        },
        block() {
          return this.Block(false);
        }
      }
    };
    module2.exports = media;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/syntax/atrule/page.cjs
var require_page2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/syntax/atrule/page.cjs"(exports, module2) {
    "use strict";
    var page = {
      parse: {
        prelude() {
          return this.createSingleNodeList(
            this.SelectorList()
          );
        },
        block() {
          return this.Block(true);
        }
      }
    };
    module2.exports = page;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/syntax/atrule/supports.cjs
var require_supports2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/syntax/atrule/supports.cjs"(exports, module2) {
    "use strict";
    var types = require_types3();
    function consumeRaw() {
      return this.createSingleNodeList(
        this.Raw(this.tokenIndex, null, false)
      );
    }
    function parentheses() {
      this.skipSC();
      if (this.tokenType === types.Ident && this.lookupNonWSType(1) === types.Colon) {
        return this.createSingleNodeList(
          this.Declaration()
        );
      }
      return readSequence.call(this);
    }
    function readSequence() {
      const children = this.createList();
      let child;
      this.skipSC();
      scan:
        while (!this.eof) {
          switch (this.tokenType) {
            case types.Comment:
            case types.WhiteSpace:
              this.next();
              continue;
            case types.Function:
              child = this.Function(consumeRaw, this.scope.AtrulePrelude);
              break;
            case types.Ident:
              child = this.Identifier();
              break;
            case types.LeftParenthesis:
              child = this.Parentheses(parentheses, this.scope.AtrulePrelude);
              break;
            default:
              break scan;
          }
          children.push(child);
        }
      return children;
    }
    var supports = {
      parse: {
        prelude() {
          const children = readSequence.call(this);
          if (this.getFirstListNode(children) === null) {
            this.error("Condition is expected");
          }
          return children;
        },
        block() {
          return this.Block(false);
        }
      }
    };
    module2.exports = supports;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/syntax/atrule/index.cjs
var require_atrule2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/syntax/atrule/index.cjs"(exports, module2) {
    "use strict";
    var fontFace = require_font_face2();
    var _import = require_import2();
    var media = require_media2();
    var page = require_page2();
    var supports = require_supports2();
    var atrule = {
      "font-face": fontFace,
      "import": _import,
      media,
      page,
      supports
    };
    module2.exports = atrule;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/syntax/pseudo/index.cjs
var require_pseudo2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/syntax/pseudo/index.cjs"(exports, module2) {
    "use strict";
    var selectorList = {
      parse() {
        return this.createSingleNodeList(
          this.SelectorList()
        );
      }
    };
    var selector = {
      parse() {
        return this.createSingleNodeList(
          this.Selector()
        );
      }
    };
    var identList = {
      parse() {
        return this.createSingleNodeList(
          this.Identifier()
        );
      }
    };
    var nth = {
      parse() {
        return this.createSingleNodeList(
          this.Nth()
        );
      }
    };
    var pseudo = {
      "dir": identList,
      "has": selectorList,
      "lang": identList,
      "matches": selectorList,
      "is": selectorList,
      "-moz-any": selectorList,
      "-webkit-any": selectorList,
      "where": selectorList,
      "not": selectorList,
      "nth-child": nth,
      "nth-last-child": nth,
      "nth-last-of-type": nth,
      "nth-of-type": nth,
      "slotted": selector
    };
    module2.exports = pseudo;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/syntax/node/index-parse.cjs
var require_index_parse2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/syntax/node/index-parse.cjs"(exports) {
    "use strict";
    var AnPlusB = require_AnPlusB2();
    var Atrule = require_Atrule2();
    var AtrulePrelude = require_AtrulePrelude2();
    var AttributeSelector = require_AttributeSelector2();
    var Block = require_Block2();
    var Brackets = require_Brackets2();
    var CDC = require_CDC2();
    var CDO = require_CDO2();
    var ClassSelector = require_ClassSelector2();
    var Combinator = require_Combinator2();
    var Comment = require_Comment2();
    var Declaration = require_Declaration2();
    var DeclarationList = require_DeclarationList2();
    var Dimension = require_Dimension2();
    var Function2 = require_Function2();
    var Hash = require_Hash2();
    var Identifier = require_Identifier2();
    var IdSelector = require_IdSelector2();
    var MediaFeature = require_MediaFeature2();
    var MediaQuery = require_MediaQuery2();
    var MediaQueryList = require_MediaQueryList2();
    var Nth = require_Nth2();
    var Number2 = require_Number2();
    var Operator = require_Operator2();
    var Parentheses = require_Parentheses2();
    var Percentage = require_Percentage2();
    var PseudoClassSelector = require_PseudoClassSelector2();
    var PseudoElementSelector = require_PseudoElementSelector2();
    var Ratio = require_Ratio2();
    var Raw = require_Raw2();
    var Rule = require_Rule2();
    var Selector = require_Selector2();
    var SelectorList = require_SelectorList2();
    var String2 = require_String2();
    var StyleSheet = require_StyleSheet2();
    var TypeSelector = require_TypeSelector2();
    var UnicodeRange = require_UnicodeRange2();
    var Url = require_Url2();
    var Value = require_Value2();
    var WhiteSpace = require_WhiteSpace2();
    exports.AnPlusB = AnPlusB.parse;
    exports.Atrule = Atrule.parse;
    exports.AtrulePrelude = AtrulePrelude.parse;
    exports.AttributeSelector = AttributeSelector.parse;
    exports.Block = Block.parse;
    exports.Brackets = Brackets.parse;
    exports.CDC = CDC.parse;
    exports.CDO = CDO.parse;
    exports.ClassSelector = ClassSelector.parse;
    exports.Combinator = Combinator.parse;
    exports.Comment = Comment.parse;
    exports.Declaration = Declaration.parse;
    exports.DeclarationList = DeclarationList.parse;
    exports.Dimension = Dimension.parse;
    exports.Function = Function2.parse;
    exports.Hash = Hash.parse;
    exports.Identifier = Identifier.parse;
    exports.IdSelector = IdSelector.parse;
    exports.MediaFeature = MediaFeature.parse;
    exports.MediaQuery = MediaQuery.parse;
    exports.MediaQueryList = MediaQueryList.parse;
    exports.Nth = Nth.parse;
    exports.Number = Number2.parse;
    exports.Operator = Operator.parse;
    exports.Parentheses = Parentheses.parse;
    exports.Percentage = Percentage.parse;
    exports.PseudoClassSelector = PseudoClassSelector.parse;
    exports.PseudoElementSelector = PseudoElementSelector.parse;
    exports.Ratio = Ratio.parse;
    exports.Raw = Raw.parse;
    exports.Rule = Rule.parse;
    exports.Selector = Selector.parse;
    exports.SelectorList = SelectorList.parse;
    exports.String = String2.parse;
    exports.StyleSheet = StyleSheet.parse;
    exports.TypeSelector = TypeSelector.parse;
    exports.UnicodeRange = UnicodeRange.parse;
    exports.Url = Url.parse;
    exports.Value = Value.parse;
    exports.WhiteSpace = WhiteSpace.parse;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/syntax/config/parser.cjs
var require_parser4 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/syntax/config/parser.cjs"(exports, module2) {
    "use strict";
    var index = require_scope2();
    var index$1 = require_atrule2();
    var index$2 = require_pseudo2();
    var indexParse = require_index_parse2();
    var config = {
      parseContext: {
        default: "StyleSheet",
        stylesheet: "StyleSheet",
        atrule: "Atrule",
        atrulePrelude(options) {
          return this.AtrulePrelude(options.atrule ? String(options.atrule) : null);
        },
        mediaQueryList: "MediaQueryList",
        mediaQuery: "MediaQuery",
        rule: "Rule",
        selectorList: "SelectorList",
        selector: "Selector",
        block() {
          return this.Block(true);
        },
        declarationList: "DeclarationList",
        declaration: "Declaration",
        value: "Value"
      },
      scope: index,
      atrule: index$1,
      pseudo: index$2,
      node: indexParse
    };
    module2.exports = config;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/syntax/config/walker.cjs
var require_walker2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/syntax/config/walker.cjs"(exports, module2) {
    "use strict";
    var index = require_node5();
    var config = {
      node: index
    };
    module2.exports = config;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/syntax/index.cjs
var require_syntax2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/syntax/index.cjs"(exports, module2) {
    "use strict";
    var create = require_create10();
    var lexer = require_lexer2();
    var parser = require_parser4();
    var walker = require_walker2();
    var syntax = create({
      ...lexer,
      ...parser,
      ...walker
    });
    module2.exports = syntax;
  }
});

// node_modules/csso/node_modules/css-tree/package.json
var require_package3 = __commonJS({
  "node_modules/csso/node_modules/css-tree/package.json"(exports, module2) {
    module2.exports = {
      name: "css-tree",
      version: "2.2.1",
      description: "A tool set for CSS: fast detailed parser (CSS \u2192 AST), walker (AST traversal), generator (AST \u2192 CSS) and lexer (validation and matching) based on specs and browser implementations",
      author: "Roman Dvornov <rdvornov@gmail.com> (https://github.com/lahmatiy)",
      license: "MIT",
      repository: "csstree/csstree",
      keywords: [
        "css",
        "ast",
        "tokenizer",
        "parser",
        "walker",
        "lexer",
        "generator",
        "utils",
        "syntax",
        "validation"
      ],
      type: "module",
      module: "./lib/index.js",
      main: "./cjs/index.cjs",
      exports: {
        ".": {
          import: "./lib/index.js",
          require: "./cjs/index.cjs"
        },
        "./dist/*": "./dist/*.js",
        "./package.json": "./package.json",
        "./tokenizer": {
          import: "./lib/tokenizer/index.js",
          require: "./cjs/tokenizer/index.cjs"
        },
        "./parser": {
          import: "./lib/parser/index.js",
          require: "./cjs/parser/index.cjs"
        },
        "./selector-parser": {
          import: "./lib/parser/parse-selector.js",
          require: "./cjs/parser/parse-selector.cjs"
        },
        "./generator": {
          import: "./lib/generator/index.js",
          require: "./cjs/generator/index.cjs"
        },
        "./walker": {
          import: "./lib/walker/index.js",
          require: "./cjs/walker/index.cjs"
        },
        "./convertor": {
          import: "./lib/convertor/index.js",
          require: "./cjs/convertor/index.cjs"
        },
        "./lexer": {
          import: "./lib/lexer/index.js",
          require: "./cjs/lexer/index.cjs"
        },
        "./definition-syntax": {
          import: "./lib/definition-syntax/index.js",
          require: "./cjs/definition-syntax/index.cjs"
        },
        "./definition-syntax-data": {
          import: "./lib/data.js",
          require: "./cjs/data.cjs"
        },
        "./definition-syntax-data-patch": {
          import: "./lib/data-patch.js",
          require: "./cjs/data-patch.cjs"
        },
        "./utils": {
          import: "./lib/utils/index.js",
          require: "./cjs/utils/index.cjs"
        }
      },
      browser: {
        "./cjs/data.cjs": "./dist/data.cjs",
        "./cjs/version.cjs": "./dist/version.cjs",
        "./lib/data.js": "./dist/data.js",
        "./lib/version.js": "./dist/version.js"
      },
      unpkg: "dist/csstree.esm.js",
      jsdelivr: "dist/csstree.esm.js",
      scripts: {
        watch: "npm run build -- --watch",
        build: "npm run bundle && npm run esm-to-cjs --",
        "build-and-test": "npm run build && npm run test:dist && npm run test:cjs",
        bundle: "node scripts/bundle",
        "bundle-and-test": "npm run bundle && npm run test:dist",
        "esm-to-cjs": "node scripts/esm-to-cjs.cjs",
        "esm-to-cjs-and-test": "npm run esm-to-cjs && npm run test:cjs",
        lint: "eslint lib scripts && node scripts/review-syntax-patch --lint && node scripts/update-docs --lint",
        "lint-and-test": "npm run lint && npm test",
        "update:docs": "node scripts/update-docs",
        "review:syntax-patch": "node scripts/review-syntax-patch",
        test: "mocha lib/__tests --reporter ${REPORTER:-progress}",
        "test:cjs": "mocha cjs/__tests --reporter ${REPORTER:-progress}",
        "test:dist": "mocha dist/__tests --reporter ${REPORTER:-progress}",
        coverage: "c8 --exclude lib/__tests --reporter=lcovonly npm test",
        prepublishOnly: "npm run lint-and-test && npm run build-and-test",
        hydrogen: "node --trace-hydrogen --trace-phase=Z --trace-deopt --code-comments --hydrogen-track-positions --redirect-code-traces --redirect-code-traces-to=code.asm --trace_hydrogen_file=code.cfg --print-opt-code bin/parse --stat -o /dev/null"
      },
      dependencies: {
        "mdn-data": "2.0.28",
        "source-map-js": "^1.0.1"
      },
      devDependencies: {
        c8: "^7.7.1",
        clap: "^2.0.1",
        esbuild: "^0.14.53",
        eslint: "^8.4.1",
        "json-to-ast": "^2.1.0",
        mocha: "^9.1.4",
        rollup: "^2.68.0"
      },
      engines: {
        node: "^10 || ^12.20.0 || ^14.13.0 || >=15.0.0",
        npm: ">=7.0.0"
      },
      files: [
        "data",
        "dist",
        "cjs",
        "!cjs/__tests",
        "lib",
        "!lib/__tests"
      ]
    };
  }
});

// node_modules/csso/node_modules/css-tree/cjs/version.cjs
var require_version3 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/version.cjs"(exports) {
    "use strict";
    var { version } = require_package3();
    exports.version = version;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/definition-syntax/index.cjs
var require_definition_syntax2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/definition-syntax/index.cjs"(exports) {
    "use strict";
    var SyntaxError2 = require_SyntaxError4();
    var generate = require_generate2();
    var parse = require_parse7();
    var walk = require_walk3();
    exports.SyntaxError = SyntaxError2.SyntaxError;
    exports.generate = generate.generate;
    exports.parse = parse.parse;
    exports.walk = walk.walk;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/utils/clone.cjs
var require_clone2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/utils/clone.cjs"(exports) {
    "use strict";
    var List = require_List2();
    function clone(node) {
      const result = {};
      for (const key in node) {
        let value = node[key];
        if (value) {
          if (Array.isArray(value) || value instanceof List.List) {
            value = value.map(clone);
          } else if (value.constructor === Object) {
            value = clone(value);
          }
        }
        result[key] = value;
      }
      return result;
    }
    exports.clone = clone;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/utils/ident.cjs
var require_ident2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/utils/ident.cjs"(exports) {
    "use strict";
    var charCodeDefinitions = require_char_code_definitions2();
    var utils = require_utils3();
    var REVERSE_SOLIDUS = 92;
    function decode(str) {
      const end = str.length - 1;
      let decoded = "";
      for (let i = 0; i < str.length; i++) {
        let code = str.charCodeAt(i);
        if (code === REVERSE_SOLIDUS) {
          if (i === end) {
            break;
          }
          code = str.charCodeAt(++i);
          if (charCodeDefinitions.isValidEscape(REVERSE_SOLIDUS, code)) {
            const escapeStart = i - 1;
            const escapeEnd = utils.consumeEscaped(str, escapeStart);
            i = escapeEnd - 1;
            decoded += utils.decodeEscaped(str.substring(escapeStart + 1, escapeEnd));
          } else {
            if (code === 13 && str.charCodeAt(i + 1) === 10) {
              i++;
            }
          }
        } else {
          decoded += str[i];
        }
      }
      return decoded;
    }
    function encode(str) {
      let encoded = "";
      if (str.length === 1 && str.charCodeAt(0) === 45) {
        return "\\-";
      }
      for (let i = 0; i < str.length; i++) {
        const code = str.charCodeAt(i);
        if (code === 0) {
          encoded += "\uFFFD";
          continue;
        }
        if (
          // If the character is in the range [\1-\1f] (U+0001 to U+001F) or is U+007F ...
          // Note: Do not compare with 0x0001 since 0x0000 is precessed before
          code <= 31 || code === 127 || // [or] ... is in the range [0-9] (U+0030 to U+0039),
          code >= 48 && code <= 57 && // If the character is the first character ...
          (i === 0 || // If the character is the second character ... and the first character is a "-" (U+002D)
          i === 1 && str.charCodeAt(0) === 45)
        ) {
          encoded += "\\" + code.toString(16) + " ";
          continue;
        }
        if (charCodeDefinitions.isName(code)) {
          encoded += str.charAt(i);
        } else {
          encoded += "\\" + str.charAt(i);
        }
      }
      return encoded;
    }
    exports.decode = decode;
    exports.encode = encode;
  }
});

// node_modules/csso/node_modules/css-tree/cjs/index.cjs
var require_cjs2 = __commonJS({
  "node_modules/csso/node_modules/css-tree/cjs/index.cjs"(exports) {
    "use strict";
    var index$1 = require_syntax2();
    var version = require_version3();
    var create = require_create10();
    var List = require_List2();
    var Lexer = require_Lexer2();
    var index = require_definition_syntax2();
    var clone = require_clone2();
    var names$1 = require_names5();
    var ident = require_ident2();
    var string = require_string2();
    var url = require_url3();
    var types = require_types3();
    var names = require_names4();
    var TokenStream = require_TokenStream2();
    var {
      tokenize,
      parse,
      generate,
      lexer,
      createLexer,
      walk,
      find,
      findLast,
      findAll,
      toPlainObject,
      fromPlainObject,
      fork
    } = index$1;
    exports.version = version.version;
    exports.createSyntax = create;
    exports.List = List.List;
    exports.Lexer = Lexer.Lexer;
    exports.definitionSyntax = index;
    exports.clone = clone.clone;
    exports.isCustomProperty = names$1.isCustomProperty;
    exports.keyword = names$1.keyword;
    exports.property = names$1.property;
    exports.vendorPrefix = names$1.vendorPrefix;
    exports.ident = ident;
    exports.string = string;
    exports.url = url;
    exports.tokenTypes = types;
    exports.tokenNames = names;
    exports.TokenStream = TokenStream.TokenStream;
    exports.createLexer = createLexer;
    exports.find = find;
    exports.findAll = findAll;
    exports.findLast = findLast;
    exports.fork = fork;
    exports.fromPlainObject = fromPlainObject;
    exports.generate = generate;
    exports.lexer = lexer;
    exports.parse = parse;
    exports.toPlainObject = toPlainObject;
    exports.tokenize = tokenize;
    exports.walk = walk;
  }
});

// node_modules/csso/cjs/usage.cjs
var require_usage = __commonJS({
  "node_modules/csso/cjs/usage.cjs"(exports) {
    "use strict";
    var { hasOwnProperty: hasOwnProperty2 } = Object.prototype;
    function buildMap(list, caseInsensitive) {
      const map = /* @__PURE__ */ Object.create(null);
      if (!Array.isArray(list)) {
        return null;
      }
      for (let name of list) {
        if (caseInsensitive) {
          name = name.toLowerCase();
        }
        map[name] = true;
      }
      return map;
    }
    function buildList(data) {
      if (!data) {
        return null;
      }
      const tags = buildMap(data.tags, true);
      const ids = buildMap(data.ids);
      const classes = buildMap(data.classes);
      if (tags === null && ids === null && classes === null) {
        return null;
      }
      return {
        tags,
        ids,
        classes
      };
    }
    function buildIndex(data) {
      let scopes = false;
      if (data.scopes && Array.isArray(data.scopes)) {
        scopes = /* @__PURE__ */ Object.create(null);
        for (let i = 0; i < data.scopes.length; i++) {
          const list = data.scopes[i];
          if (!list || !Array.isArray(list)) {
            throw new Error("Wrong usage format");
          }
          for (const name of list) {
            if (hasOwnProperty2.call(scopes, name)) {
              throw new Error(`Class can't be used for several scopes: ${name}`);
            }
            scopes[name] = i + 1;
          }
        }
      }
      return {
        whitelist: buildList(data),
        blacklist: buildList(data.blacklist),
        scopes
      };
    }
    exports.buildIndex = buildIndex;
  }
});

// node_modules/csso/cjs/clean/utils.cjs
var require_utils4 = __commonJS({
  "node_modules/csso/cjs/clean/utils.cjs"(exports) {
    "use strict";
    function hasNoChildren(node) {
      return !node || !node.children || node.children.isEmpty;
    }
    function isNodeChildrenList(node, list) {
      return node !== null && node.children === list;
    }
    exports.hasNoChildren = hasNoChildren;
    exports.isNodeChildrenList = isNodeChildrenList;
  }
});

// node_modules/csso/cjs/clean/Atrule.cjs
var require_Atrule3 = __commonJS({
  "node_modules/csso/cjs/clean/Atrule.cjs"(exports, module2) {
    "use strict";
    var cssTree = require_cjs2();
    var utils = require_utils4();
    function cleanAtrule(node, item, list) {
      if (node.block) {
        if (this.stylesheet !== null) {
          this.stylesheet.firstAtrulesAllowed = false;
        }
        if (utils.hasNoChildren(node.block)) {
          list.remove(item);
          return;
        }
      }
      switch (node.name) {
        case "charset":
          if (utils.hasNoChildren(node.prelude)) {
            list.remove(item);
            return;
          }
          if (item.prev) {
            list.remove(item);
            return;
          }
          break;
        case "import":
          if (this.stylesheet === null || !this.stylesheet.firstAtrulesAllowed) {
            list.remove(item);
            return;
          }
          list.prevUntil(item.prev, function(rule) {
            if (rule.type === "Atrule") {
              if (rule.name === "import" || rule.name === "charset") {
                return;
              }
            }
            this.root.firstAtrulesAllowed = false;
            list.remove(item);
            return true;
          }, this);
          break;
        default: {
          const name = cssTree.keyword(node.name).basename;
          if (name === "keyframes" || name === "media" || name === "supports") {
            if (utils.hasNoChildren(node.prelude) || utils.hasNoChildren(node.block)) {
              list.remove(item);
            }
          }
        }
      }
    }
    module2.exports = cleanAtrule;
  }
});

// node_modules/csso/cjs/clean/Comment.cjs
var require_Comment3 = __commonJS({
  "node_modules/csso/cjs/clean/Comment.cjs"(exports, module2) {
    "use strict";
    function cleanComment(data, item, list) {
      list.remove(item);
    }
    module2.exports = cleanComment;
  }
});

// node_modules/csso/cjs/clean/Declaration.cjs
var require_Declaration3 = __commonJS({
  "node_modules/csso/cjs/clean/Declaration.cjs"(exports, module2) {
    "use strict";
    var cssTree = require_cjs2();
    function cleanDeclartion(node, item, list) {
      if (node.value.children && node.value.children.isEmpty) {
        list.remove(item);
        return;
      }
      if (cssTree.property(node.property).custom) {
        if (/\S/.test(node.value.value)) {
          node.value.value = node.value.value.trim();
        }
      }
    }
    module2.exports = cleanDeclartion;
  }
});

// node_modules/csso/cjs/clean/Raw.cjs
var require_Raw3 = __commonJS({
  "node_modules/csso/cjs/clean/Raw.cjs"(exports, module2) {
    "use strict";
    var utils = require_utils4();
    function cleanRaw(node, item, list) {
      if (utils.isNodeChildrenList(this.stylesheet, list) || utils.isNodeChildrenList(this.block, list)) {
        list.remove(item);
      }
    }
    module2.exports = cleanRaw;
  }
});

// node_modules/csso/cjs/clean/Rule.cjs
var require_Rule3 = __commonJS({
  "node_modules/csso/cjs/clean/Rule.cjs"(exports, module2) {
    "use strict";
    var cssTree = require_cjs2();
    var utils = require_utils4();
    var { hasOwnProperty: hasOwnProperty2 } = Object.prototype;
    var skipUsageFilteringAtrule = /* @__PURE__ */ new Set(["keyframes"]);
    function cleanUnused(selectorList, usageData) {
      selectorList.children.forEach((selector, item, list) => {
        let shouldRemove = false;
        cssTree.walk(selector, function(node) {
          if (this.selector === null || this.selector === selectorList) {
            switch (node.type) {
              case "SelectorList":
                if (this.function === null || this.function.name.toLowerCase() !== "not") {
                  if (cleanUnused(node, usageData)) {
                    shouldRemove = true;
                  }
                }
                break;
              case "ClassSelector":
                if (usageData.whitelist !== null && usageData.whitelist.classes !== null && !hasOwnProperty2.call(usageData.whitelist.classes, node.name)) {
                  shouldRemove = true;
                }
                if (usageData.blacklist !== null && usageData.blacklist.classes !== null && hasOwnProperty2.call(usageData.blacklist.classes, node.name)) {
                  shouldRemove = true;
                }
                break;
              case "IdSelector":
                if (usageData.whitelist !== null && usageData.whitelist.ids !== null && !hasOwnProperty2.call(usageData.whitelist.ids, node.name)) {
                  shouldRemove = true;
                }
                if (usageData.blacklist !== null && usageData.blacklist.ids !== null && hasOwnProperty2.call(usageData.blacklist.ids, node.name)) {
                  shouldRemove = true;
                }
                break;
              case "TypeSelector":
                if (node.name.charAt(node.name.length - 1) !== "*") {
                  if (usageData.whitelist !== null && usageData.whitelist.tags !== null && !hasOwnProperty2.call(usageData.whitelist.tags, node.name.toLowerCase())) {
                    shouldRemove = true;
                  }
                  if (usageData.blacklist !== null && usageData.blacklist.tags !== null && hasOwnProperty2.call(usageData.blacklist.tags, node.name.toLowerCase())) {
                    shouldRemove = true;
                  }
                }
                break;
            }
          }
        });
        if (shouldRemove) {
          list.remove(item);
        }
      });
      return selectorList.children.isEmpty;
    }
    function cleanRule(node, item, list, options) {
      if (utils.hasNoChildren(node.prelude) || utils.hasNoChildren(node.block)) {
        list.remove(item);
        return;
      }
      if (this.atrule && skipUsageFilteringAtrule.has(cssTree.keyword(this.atrule.name).basename)) {
        return;
      }
      const { usage } = options;
      if (usage && (usage.whitelist !== null || usage.blacklist !== null)) {
        cleanUnused(node.prelude, usage);
        if (utils.hasNoChildren(node.prelude)) {
          list.remove(item);
          return;
        }
      }
    }
    module2.exports = cleanRule;
  }
});

// node_modules/csso/cjs/clean/TypeSelector.cjs
var require_TypeSelector3 = __commonJS({
  "node_modules/csso/cjs/clean/TypeSelector.cjs"(exports, module2) {
    "use strict";
    function cleanTypeSelector(node, item, list) {
      const name = item.data.name;
      if (name !== "*") {
        return;
      }
      const nextType = item.next && item.next.data.type;
      if (nextType === "IdSelector" || nextType === "ClassSelector" || nextType === "AttributeSelector" || nextType === "PseudoClassSelector" || nextType === "PseudoElementSelector") {
        list.remove(item);
      }
    }
    module2.exports = cleanTypeSelector;
  }
});

// node_modules/csso/cjs/clean/WhiteSpace.cjs
var require_WhiteSpace3 = __commonJS({
  "node_modules/csso/cjs/clean/WhiteSpace.cjs"(exports, module2) {
    "use strict";
    function cleanWhitespace(node, item, list) {
      list.remove(item);
    }
    module2.exports = cleanWhitespace;
  }
});

// node_modules/csso/cjs/clean/index.cjs
var require_clean = __commonJS({
  "node_modules/csso/cjs/clean/index.cjs"(exports, module2) {
    "use strict";
    var cssTree = require_cjs2();
    var Atrule = require_Atrule3();
    var Comment = require_Comment3();
    var Declaration = require_Declaration3();
    var Raw = require_Raw3();
    var Rule = require_Rule3();
    var TypeSelector = require_TypeSelector3();
    var WhiteSpace = require_WhiteSpace3();
    var handlers = {
      Atrule,
      Comment,
      Declaration,
      Raw,
      Rule,
      TypeSelector,
      WhiteSpace
    };
    function clean(ast, options) {
      cssTree.walk(ast, {
        leave(node, item, list) {
          if (handlers.hasOwnProperty(node.type)) {
            handlers[node.type].call(this, node, item, list, options);
          }
        }
      });
    }
    module2.exports = clean;
  }
});

// node_modules/csso/cjs/replace/atrule/keyframes.cjs
var require_keyframes = __commonJS({
  "node_modules/csso/cjs/replace/atrule/keyframes.cjs"(exports, module2) {
    "use strict";
    function compressKeyframes(node) {
      node.block.children.forEach((rule) => {
        rule.prelude.children.forEach((simpleselector) => {
          simpleselector.children.forEach((data, item) => {
            if (data.type === "Percentage" && data.value === "100") {
              item.data = {
                type: "TypeSelector",
                loc: data.loc,
                name: "to"
              };
            } else if (data.type === "TypeSelector" && data.name === "from") {
              item.data = {
                type: "Percentage",
                loc: data.loc,
                value: "0"
              };
            }
          });
        });
      });
    }
    module2.exports = compressKeyframes;
  }
});

// node_modules/csso/cjs/replace/Atrule.cjs
var require_Atrule4 = __commonJS({
  "node_modules/csso/cjs/replace/Atrule.cjs"(exports, module2) {
    "use strict";
    var cssTree = require_cjs2();
    var keyframes = require_keyframes();
    function Atrule(node) {
      if (cssTree.keyword(node.name).basename === "keyframes") {
        keyframes(node);
      }
    }
    module2.exports = Atrule;
  }
});

// node_modules/csso/cjs/replace/AttributeSelector.cjs
var require_AttributeSelector3 = __commonJS({
  "node_modules/csso/cjs/replace/AttributeSelector.cjs"(exports, module2) {
    "use strict";
    var blockUnquoteRx = /^(-?\d|--)|[\u0000-\u002c\u002e\u002f\u003A-\u0040\u005B-\u005E\u0060\u007B-\u009f]/;
    function canUnquote(value) {
      if (value === "" || value === "-") {
        return false;
      }
      return !blockUnquoteRx.test(value);
    }
    function AttributeSelector(node) {
      const attrValue = node.value;
      if (!attrValue || attrValue.type !== "String") {
        return;
      }
      if (canUnquote(attrValue.value)) {
        node.value = {
          type: "Identifier",
          loc: attrValue.loc,
          name: attrValue.value
        };
      }
    }
    module2.exports = AttributeSelector;
  }
});

// node_modules/csso/cjs/replace/property/font.cjs
var require_font = __commonJS({
  "node_modules/csso/cjs/replace/property/font.cjs"(exports, module2) {
    "use strict";
    function compressFont(node) {
      const list = node.children;
      list.forEachRight(function(node2, item) {
        if (node2.type === "Identifier") {
          if (node2.name === "bold") {
            item.data = {
              type: "Number",
              loc: node2.loc,
              value: "700"
            };
          } else if (node2.name === "normal") {
            const prev = item.prev;
            if (prev && prev.data.type === "Operator" && prev.data.value === "/") {
              this.remove(prev);
            }
            this.remove(item);
          }
        }
      });
      if (list.isEmpty) {
        list.insert(list.createItem({
          type: "Identifier",
          name: "normal"
        }));
      }
    }
    module2.exports = compressFont;
  }
});

// node_modules/csso/cjs/replace/property/font-weight.cjs
var require_font_weight = __commonJS({
  "node_modules/csso/cjs/replace/property/font-weight.cjs"(exports, module2) {
    "use strict";
    function compressFontWeight(node) {
      const value = node.children.head.data;
      if (value.type === "Identifier") {
        switch (value.name) {
          case "normal":
            node.children.head.data = {
              type: "Number",
              loc: value.loc,
              value: "400"
            };
            break;
          case "bold":
            node.children.head.data = {
              type: "Number",
              loc: value.loc,
              value: "700"
            };
            break;
        }
      }
    }
    module2.exports = compressFontWeight;
  }
});

// node_modules/csso/cjs/replace/property/background.cjs
var require_background = __commonJS({
  "node_modules/csso/cjs/replace/property/background.cjs"(exports, module2) {
    "use strict";
    var cssTree = require_cjs2();
    function compressBackground(node) {
      function flush() {
        if (!buffer.length) {
          buffer.unshift(
            {
              type: "Number",
              loc: null,
              value: "0"
            },
            {
              type: "Number",
              loc: null,
              value: "0"
            }
          );
        }
        newValue.push.apply(newValue, buffer);
        buffer = [];
      }
      let newValue = [];
      let buffer = [];
      node.children.forEach((node2) => {
        if (node2.type === "Operator" && node2.value === ",") {
          flush();
          newValue.push(node2);
          return;
        }
        if (node2.type === "Identifier") {
          if (node2.name === "transparent" || node2.name === "none" || node2.name === "repeat" || node2.name === "scroll") {
            return;
          }
        }
        buffer.push(node2);
      });
      flush();
      node.children = new cssTree.List().fromArray(newValue);
    }
    module2.exports = compressBackground;
  }
});

// node_modules/csso/cjs/replace/property/border.cjs
var require_border = __commonJS({
  "node_modules/csso/cjs/replace/property/border.cjs"(exports, module2) {
    "use strict";
    function compressBorder(node) {
      node.children.forEach((node2, item, list) => {
        if (node2.type === "Identifier" && node2.name.toLowerCase() === "none") {
          if (list.head === list.tail) {
            item.data = {
              type: "Number",
              loc: node2.loc,
              value: "0"
            };
          } else {
            list.remove(item);
          }
        }
      });
    }
    module2.exports = compressBorder;
  }
});

// node_modules/csso/cjs/replace/Value.cjs
var require_Value3 = __commonJS({
  "node_modules/csso/cjs/replace/Value.cjs"(exports, module2) {
    "use strict";
    var cssTree = require_cjs2();
    var font = require_font();
    var fontWeight = require_font_weight();
    var background = require_background();
    var border = require_border();
    var handlers = {
      "font": font,
      "font-weight": fontWeight,
      "background": background,
      "border": border,
      "outline": border
    };
    function compressValue(node) {
      if (!this.declaration) {
        return;
      }
      const property = cssTree.property(this.declaration.property);
      if (handlers.hasOwnProperty(property.basename)) {
        handlers[property.basename](node);
      }
    }
    module2.exports = compressValue;
  }
});

// node_modules/csso/cjs/replace/Number.cjs
var require_Number3 = __commonJS({
  "node_modules/csso/cjs/replace/Number.cjs"(exports) {
    "use strict";
    var OMIT_PLUSSIGN = /^(?:\+|(-))?0*(\d*)(?:\.0*|(\.\d*?)0*)?$/;
    var KEEP_PLUSSIGN = /^([\+\-])?0*(\d*)(?:\.0*|(\.\d*?)0*)?$/;
    var unsafeToRemovePlusSignAfter = /* @__PURE__ */ new Set([
      "Dimension",
      "Hash",
      "Identifier",
      "Number",
      "Raw",
      "UnicodeRange"
    ]);
    function packNumber(value, item) {
      const regexp = item && item.prev !== null && unsafeToRemovePlusSignAfter.has(item.prev.data.type) ? KEEP_PLUSSIGN : OMIT_PLUSSIGN;
      value = String(value).replace(regexp, "$1$2$3");
      if (value === "" || value === "-") {
        value = "0";
      }
      return value;
    }
    function Number2(node) {
      node.value = packNumber(node.value);
    }
    exports.Number = Number2;
    exports.packNumber = packNumber;
  }
});

// node_modules/csso/cjs/replace/Dimension.cjs
var require_Dimension3 = __commonJS({
  "node_modules/csso/cjs/replace/Dimension.cjs"(exports, module2) {
    "use strict";
    var _Number = require_Number3();
    var MATH_FUNCTIONS = /* @__PURE__ */ new Set([
      "calc",
      "min",
      "max",
      "clamp"
    ]);
    var LENGTH_UNIT = /* @__PURE__ */ new Set([
      // absolute length units
      "px",
      "mm",
      "cm",
      "in",
      "pt",
      "pc",
      // relative length units
      "em",
      "ex",
      "ch",
      "rem",
      // viewport-percentage lengths
      "vh",
      "vw",
      "vmin",
      "vmax",
      "vm"
    ]);
    function compressDimension(node, item) {
      const value = _Number.packNumber(node.value);
      node.value = value;
      if (value === "0" && this.declaration !== null && this.atrulePrelude === null) {
        const unit = node.unit.toLowerCase();
        if (!LENGTH_UNIT.has(unit)) {
          return;
        }
        if (this.declaration.property === "-ms-flex" || this.declaration.property === "flex") {
          return;
        }
        if (this.function && MATH_FUNCTIONS.has(this.function.name)) {
          return;
        }
        item.data = {
          type: "Number",
          loc: node.loc,
          value
        };
      }
    }
    module2.exports = compressDimension;
  }
});

// node_modules/csso/cjs/replace/Percentage.cjs
var require_Percentage3 = __commonJS({
  "node_modules/csso/cjs/replace/Percentage.cjs"(exports, module2) {
    "use strict";
    var cssTree = require_cjs2();
    var _Number = require_Number3();
    var blacklist = /* @__PURE__ */ new Set([
      // see https://github.com/jakubpawlowicz/clean-css/issues/957
      "width",
      "min-width",
      "max-width",
      "height",
      "min-height",
      "max-height",
      // issue #410: Don’t remove units in flex-basis value for (-ms-)flex shorthand
      // issue #362: shouldn't remove unit in -ms-flex since it breaks flex in IE10/11
      // issue #200: shouldn't remove unit in flex since it breaks flex in IE10/11
      "flex",
      "-ms-flex"
    ]);
    function compressPercentage(node, item) {
      node.value = _Number.packNumber(node.value);
      if (node.value === "0" && this.declaration && !blacklist.has(this.declaration.property)) {
        item.data = {
          type: "Number",
          loc: node.loc,
          value: node.value
        };
        if (!cssTree.lexer.matchDeclaration(this.declaration).isType(item.data, "length")) {
          item.data = node;
        }
      }
    }
    module2.exports = compressPercentage;
  }
});

// node_modules/csso/cjs/replace/Url.cjs
var require_Url3 = __commonJS({
  "node_modules/csso/cjs/replace/Url.cjs"(exports, module2) {
    "use strict";
    function Url(node) {
      node.value = node.value.replace(/\\/g, "/");
    }
    module2.exports = Url;
  }
});

// node_modules/csso/cjs/replace/color.cjs
var require_color = __commonJS({
  "node_modules/csso/cjs/replace/color.cjs"(exports) {
    "use strict";
    var cssTree = require_cjs2();
    var _Number = require_Number3();
    var NAME_TO_HEX = {
      "aliceblue": "f0f8ff",
      "antiquewhite": "faebd7",
      "aqua": "0ff",
      "aquamarine": "7fffd4",
      "azure": "f0ffff",
      "beige": "f5f5dc",
      "bisque": "ffe4c4",
      "black": "000",
      "blanchedalmond": "ffebcd",
      "blue": "00f",
      "blueviolet": "8a2be2",
      "brown": "a52a2a",
      "burlywood": "deb887",
      "cadetblue": "5f9ea0",
      "chartreuse": "7fff00",
      "chocolate": "d2691e",
      "coral": "ff7f50",
      "cornflowerblue": "6495ed",
      "cornsilk": "fff8dc",
      "crimson": "dc143c",
      "cyan": "0ff",
      "darkblue": "00008b",
      "darkcyan": "008b8b",
      "darkgoldenrod": "b8860b",
      "darkgray": "a9a9a9",
      "darkgrey": "a9a9a9",
      "darkgreen": "006400",
      "darkkhaki": "bdb76b",
      "darkmagenta": "8b008b",
      "darkolivegreen": "556b2f",
      "darkorange": "ff8c00",
      "darkorchid": "9932cc",
      "darkred": "8b0000",
      "darksalmon": "e9967a",
      "darkseagreen": "8fbc8f",
      "darkslateblue": "483d8b",
      "darkslategray": "2f4f4f",
      "darkslategrey": "2f4f4f",
      "darkturquoise": "00ced1",
      "darkviolet": "9400d3",
      "deeppink": "ff1493",
      "deepskyblue": "00bfff",
      "dimgray": "696969",
      "dimgrey": "696969",
      "dodgerblue": "1e90ff",
      "firebrick": "b22222",
      "floralwhite": "fffaf0",
      "forestgreen": "228b22",
      "fuchsia": "f0f",
      "gainsboro": "dcdcdc",
      "ghostwhite": "f8f8ff",
      "gold": "ffd700",
      "goldenrod": "daa520",
      "gray": "808080",
      "grey": "808080",
      "green": "008000",
      "greenyellow": "adff2f",
      "honeydew": "f0fff0",
      "hotpink": "ff69b4",
      "indianred": "cd5c5c",
      "indigo": "4b0082",
      "ivory": "fffff0",
      "khaki": "f0e68c",
      "lavender": "e6e6fa",
      "lavenderblush": "fff0f5",
      "lawngreen": "7cfc00",
      "lemonchiffon": "fffacd",
      "lightblue": "add8e6",
      "lightcoral": "f08080",
      "lightcyan": "e0ffff",
      "lightgoldenrodyellow": "fafad2",
      "lightgray": "d3d3d3",
      "lightgrey": "d3d3d3",
      "lightgreen": "90ee90",
      "lightpink": "ffb6c1",
      "lightsalmon": "ffa07a",
      "lightseagreen": "20b2aa",
      "lightskyblue": "87cefa",
      "lightslategray": "789",
      "lightslategrey": "789",
      "lightsteelblue": "b0c4de",
      "lightyellow": "ffffe0",
      "lime": "0f0",
      "limegreen": "32cd32",
      "linen": "faf0e6",
      "magenta": "f0f",
      "maroon": "800000",
      "mediumaquamarine": "66cdaa",
      "mediumblue": "0000cd",
      "mediumorchid": "ba55d3",
      "mediumpurple": "9370db",
      "mediumseagreen": "3cb371",
      "mediumslateblue": "7b68ee",
      "mediumspringgreen": "00fa9a",
      "mediumturquoise": "48d1cc",
      "mediumvioletred": "c71585",
      "midnightblue": "191970",
      "mintcream": "f5fffa",
      "mistyrose": "ffe4e1",
      "moccasin": "ffe4b5",
      "navajowhite": "ffdead",
      "navy": "000080",
      "oldlace": "fdf5e6",
      "olive": "808000",
      "olivedrab": "6b8e23",
      "orange": "ffa500",
      "orangered": "ff4500",
      "orchid": "da70d6",
      "palegoldenrod": "eee8aa",
      "palegreen": "98fb98",
      "paleturquoise": "afeeee",
      "palevioletred": "db7093",
      "papayawhip": "ffefd5",
      "peachpuff": "ffdab9",
      "peru": "cd853f",
      "pink": "ffc0cb",
      "plum": "dda0dd",
      "powderblue": "b0e0e6",
      "purple": "800080",
      "rebeccapurple": "639",
      "red": "f00",
      "rosybrown": "bc8f8f",
      "royalblue": "4169e1",
      "saddlebrown": "8b4513",
      "salmon": "fa8072",
      "sandybrown": "f4a460",
      "seagreen": "2e8b57",
      "seashell": "fff5ee",
      "sienna": "a0522d",
      "silver": "c0c0c0",
      "skyblue": "87ceeb",
      "slateblue": "6a5acd",
      "slategray": "708090",
      "slategrey": "708090",
      "snow": "fffafa",
      "springgreen": "00ff7f",
      "steelblue": "4682b4",
      "tan": "d2b48c",
      "teal": "008080",
      "thistle": "d8bfd8",
      "tomato": "ff6347",
      "turquoise": "40e0d0",
      "violet": "ee82ee",
      "wheat": "f5deb3",
      "white": "fff",
      "whitesmoke": "f5f5f5",
      "yellow": "ff0",
      "yellowgreen": "9acd32"
    };
    var HEX_TO_NAME = {
      "800000": "maroon",
      "800080": "purple",
      "808000": "olive",
      "808080": "gray",
      "00ffff": "cyan",
      "f0ffff": "azure",
      "f5f5dc": "beige",
      "ffe4c4": "bisque",
      "000000": "black",
      "0000ff": "blue",
      "a52a2a": "brown",
      "ff7f50": "coral",
      "ffd700": "gold",
      "008000": "green",
      "4b0082": "indigo",
      "fffff0": "ivory",
      "f0e68c": "khaki",
      "00ff00": "lime",
      "faf0e6": "linen",
      "000080": "navy",
      "ffa500": "orange",
      "da70d6": "orchid",
      "cd853f": "peru",
      "ffc0cb": "pink",
      "dda0dd": "plum",
      "f00": "red",
      "ff0000": "red",
      "fa8072": "salmon",
      "a0522d": "sienna",
      "c0c0c0": "silver",
      "fffafa": "snow",
      "d2b48c": "tan",
      "008080": "teal",
      "ff6347": "tomato",
      "ee82ee": "violet",
      "f5deb3": "wheat",
      "ffffff": "white",
      "ffff00": "yellow"
    };
    function hueToRgb(p, q, t) {
      if (t < 0) {
        t += 1;
      }
      if (t > 1) {
        t -= 1;
      }
      if (t < 1 / 6) {
        return p + (q - p) * 6 * t;
      }
      if (t < 1 / 2) {
        return q;
      }
      if (t < 2 / 3) {
        return p + (q - p) * (2 / 3 - t) * 6;
      }
      return p;
    }
    function hslToRgb(h, s, l, a) {
      let r;
      let g;
      let b;
      if (s === 0) {
        r = g = b = l;
      } else {
        const q = l < 0.5 ? l * (1 + s) : l + s - l * s;
        const p = 2 * l - q;
        r = hueToRgb(p, q, h + 1 / 3);
        g = hueToRgb(p, q, h);
        b = hueToRgb(p, q, h - 1 / 3);
      }
      return [
        Math.round(r * 255),
        Math.round(g * 255),
        Math.round(b * 255),
        a
      ];
    }
    function toHex(value) {
      value = value.toString(16);
      return value.length === 1 ? "0" + value : value;
    }
    function parseFunctionArgs(functionArgs, count, rgb) {
      let cursor = functionArgs.head;
      let args = [];
      let wasValue = false;
      while (cursor !== null) {
        const { type, value } = cursor.data;
        switch (type) {
          case "Number":
          case "Percentage":
            if (wasValue) {
              return;
            }
            wasValue = true;
            args.push({
              type,
              value: Number(value)
            });
            break;
          case "Operator":
            if (value === ",") {
              if (!wasValue) {
                return;
              }
              wasValue = false;
            } else if (wasValue || value !== "+") {
              return;
            }
            break;
          default:
            return;
        }
        cursor = cursor.next;
      }
      if (args.length !== count) {
        return;
      }
      if (args.length === 4) {
        if (args[3].type !== "Number") {
          return;
        }
        args[3].type = "Alpha";
      }
      if (rgb) {
        if (args[0].type !== args[1].type || args[0].type !== args[2].type) {
          return;
        }
      } else {
        if (args[0].type !== "Number" || args[1].type !== "Percentage" || args[2].type !== "Percentage") {
          return;
        }
        args[0].type = "Angle";
      }
      return args.map(function(arg) {
        let value = Math.max(0, arg.value);
        switch (arg.type) {
          case "Number":
            value = Math.min(value, 255);
            break;
          case "Percentage":
            value = Math.min(value, 100) / 100;
            if (!rgb) {
              return value;
            }
            value = 255 * value;
            break;
          case "Angle":
            return (value % 360 + 360) % 360 / 360;
          case "Alpha":
            return Math.min(value, 1);
        }
        return Math.round(value);
      });
    }
    function compressFunction(node, item) {
      let functionName = node.name;
      let args;
      if (functionName === "rgba" || functionName === "hsla") {
        args = parseFunctionArgs(node.children, 4, functionName === "rgba");
        if (!args) {
          return;
        }
        if (functionName === "hsla") {
          args = hslToRgb(...args);
          node.name = "rgba";
        }
        if (args[3] === 0) {
          const scopeFunctionName = this.function && this.function.name;
          if (args[0] === 0 && args[1] === 0 && args[2] === 0 || !/^(?:to|from|color-stop)$|gradient$/i.test(scopeFunctionName)) {
            item.data = {
              type: "Identifier",
              loc: node.loc,
              name: "transparent"
            };
            return;
          }
        }
        if (args[3] !== 1) {
          node.children.forEach((node2, item2, list) => {
            if (node2.type === "Operator") {
              if (node2.value !== ",") {
                list.remove(item2);
              }
              return;
            }
            item2.data = {
              type: "Number",
              loc: node2.loc,
              value: _Number.packNumber(args.shift())
            };
          });
          return;
        }
        functionName = "rgb";
      }
      if (functionName === "hsl") {
        args = args || parseFunctionArgs(node.children, 3, false);
        if (!args) {
          return;
        }
        args = hslToRgb(...args);
        functionName = "rgb";
      }
      if (functionName === "rgb") {
        args = args || parseFunctionArgs(node.children, 3, true);
        if (!args) {
          return;
        }
        item.data = {
          type: "Hash",
          loc: node.loc,
          value: toHex(args[0]) + toHex(args[1]) + toHex(args[2])
        };
        compressHex(item.data, item);
      }
    }
    function compressIdent(node, item) {
      if (this.declaration === null) {
        return;
      }
      let color = node.name.toLowerCase();
      if (NAME_TO_HEX.hasOwnProperty(color) && cssTree.lexer.matchDeclaration(this.declaration).isType(node, "color")) {
        const hex = NAME_TO_HEX[color];
        if (hex.length + 1 <= color.length) {
          item.data = {
            type: "Hash",
            loc: node.loc,
            value: hex
          };
        } else {
          if (color === "grey") {
            color = "gray";
          }
          node.name = color;
        }
      }
    }
    function compressHex(node, item) {
      let color = node.value.toLowerCase();
      if (color.length === 6 && color[0] === color[1] && color[2] === color[3] && color[4] === color[5]) {
        color = color[0] + color[2] + color[4];
      }
      if (HEX_TO_NAME[color]) {
        item.data = {
          type: "Identifier",
          loc: node.loc,
          name: HEX_TO_NAME[color]
        };
      } else {
        node.value = color;
      }
    }
    exports.compressFunction = compressFunction;
    exports.compressHex = compressHex;
    exports.compressIdent = compressIdent;
  }
});

// node_modules/csso/cjs/replace/index.cjs
var require_replace = __commonJS({
  "node_modules/csso/cjs/replace/index.cjs"(exports, module2) {
    "use strict";
    var cssTree = require_cjs2();
    var Atrule = require_Atrule4();
    var AttributeSelector = require_AttributeSelector3();
    var Value = require_Value3();
    var Dimension = require_Dimension3();
    var Percentage = require_Percentage3();
    var _Number = require_Number3();
    var Url = require_Url3();
    var color = require_color();
    var handlers = {
      Atrule,
      AttributeSelector,
      Value,
      Dimension,
      Percentage,
      Number: _Number.Number,
      Url,
      Hash: color.compressHex,
      Identifier: color.compressIdent,
      Function: color.compressFunction
    };
    function replace(ast) {
      cssTree.walk(ast, {
        leave(node, item, list) {
          if (handlers.hasOwnProperty(node.type)) {
            handlers[node.type].call(this, node, item, list);
          }
        }
      });
    }
    module2.exports = replace;
  }
});

// node_modules/csso/cjs/restructure/prepare/createDeclarationIndexer.cjs
var require_createDeclarationIndexer = __commonJS({
  "node_modules/csso/cjs/restructure/prepare/createDeclarationIndexer.cjs"(exports, module2) {
    "use strict";
    var cssTree = require_cjs2();
    var Index = class {
      constructor() {
        this.map = /* @__PURE__ */ new Map();
      }
      resolve(str) {
        let index = this.map.get(str);
        if (index === void 0) {
          index = this.map.size + 1;
          this.map.set(str, index);
        }
        return index;
      }
    };
    function createDeclarationIndexer() {
      const ids = new Index();
      return function markDeclaration(node) {
        const id = cssTree.generate(node);
        node.id = ids.resolve(id);
        node.length = id.length;
        node.fingerprint = null;
        return node;
      };
    }
    module2.exports = createDeclarationIndexer;
  }
});

// node_modules/csso/cjs/restructure/prepare/specificity.cjs
var require_specificity = __commonJS({
  "node_modules/csso/cjs/restructure/prepare/specificity.cjs"(exports, module2) {
    "use strict";
    var cssTree = require_cjs2();
    function ensureSelectorList(node) {
      if (node.type === "Raw") {
        return cssTree.parse(node.value, { context: "selectorList" });
      }
      return node;
    }
    function maxSpecificity(a, b) {
      for (let i = 0; i < 3; i++) {
        if (a[i] !== b[i]) {
          return a[i] > b[i] ? a : b;
        }
      }
      return a;
    }
    function maxSelectorListSpecificity(selectorList) {
      return ensureSelectorList(selectorList).children.reduce(
        (result, node) => maxSpecificity(specificity(node), result),
        [0, 0, 0]
      );
    }
    function specificity(simpleSelector) {
      let A = 0;
      let B = 0;
      let C = 0;
      simpleSelector.children.forEach((node) => {
        switch (node.type) {
          case "IdSelector":
            A++;
            break;
          case "ClassSelector":
          case "AttributeSelector":
            B++;
            break;
          case "PseudoClassSelector":
            switch (node.name.toLowerCase()) {
              case "not":
              case "has":
              case "is":
              case "matches":
              case "-webkit-any":
              case "-moz-any": {
                const [a, b, c] = maxSelectorListSpecificity(node.children.first);
                A += a;
                B += b;
                C += c;
                break;
              }
              case "nth-child":
              case "nth-last-child": {
                const arg = node.children.first;
                if (arg.type === "Nth" && arg.selector) {
                  const [a, b, c] = maxSelectorListSpecificity(arg.selector);
                  A += a;
                  B += b + 1;
                  C += c;
                } else {
                  B++;
                }
                break;
              }
              case "where":
                break;
              case "before":
              case "after":
              case "first-line":
              case "first-letter":
                C++;
                break;
              default:
                B++;
            }
            break;
          case "TypeSelector":
            if (!node.name.endsWith("*")) {
              C++;
            }
            break;
          case "PseudoElementSelector":
            C++;
            break;
        }
      });
      return [A, B, C];
    }
    module2.exports = specificity;
  }
});

// node_modules/csso/cjs/restructure/prepare/processSelector.cjs
var require_processSelector = __commonJS({
  "node_modules/csso/cjs/restructure/prepare/processSelector.cjs"(exports, module2) {
    "use strict";
    var cssTree = require_cjs2();
    var specificity = require_specificity();
    var nonFreezePseudoElements = /* @__PURE__ */ new Set([
      "first-letter",
      "first-line",
      "after",
      "before"
    ]);
    var nonFreezePseudoClasses = /* @__PURE__ */ new Set([
      "link",
      "visited",
      "hover",
      "active",
      "first-letter",
      "first-line",
      "after",
      "before"
    ]);
    function processSelector(node, usageData) {
      const pseudos = /* @__PURE__ */ new Set();
      node.prelude.children.forEach(function(simpleSelector) {
        let tagName = "*";
        let scope = 0;
        simpleSelector.children.forEach(function(node2) {
          switch (node2.type) {
            case "ClassSelector":
              if (usageData && usageData.scopes) {
                const classScope = usageData.scopes[node2.name] || 0;
                if (scope !== 0 && classScope !== scope) {
                  throw new Error("Selector can't has classes from different scopes: " + cssTree.generate(simpleSelector));
                }
                scope = classScope;
              }
              break;
            case "PseudoClassSelector": {
              const name = node2.name.toLowerCase();
              if (!nonFreezePseudoClasses.has(name)) {
                pseudos.add(`:${name}`);
              }
              break;
            }
            case "PseudoElementSelector": {
              const name = node2.name.toLowerCase();
              if (!nonFreezePseudoElements.has(name)) {
                pseudos.add(`::${name}`);
              }
              break;
            }
            case "TypeSelector":
              tagName = node2.name.toLowerCase();
              break;
            case "AttributeSelector":
              if (node2.flags) {
                pseudos.add(`[${node2.flags.toLowerCase()}]`);
              }
              break;
            case "Combinator":
              tagName = "*";
              break;
          }
        });
        simpleSelector.compareMarker = specificity(simpleSelector).toString();
        simpleSelector.id = null;
        simpleSelector.id = cssTree.generate(simpleSelector);
        if (scope) {
          simpleSelector.compareMarker += ":" + scope;
        }
        if (tagName !== "*") {
          simpleSelector.compareMarker += "," + tagName;
        }
      });
      node.pseudoSignature = pseudos.size > 0 ? [...pseudos].sort().join(",") : false;
    }
    module2.exports = processSelector;
  }
});

// node_modules/csso/cjs/restructure/prepare/index.cjs
var require_prepare = __commonJS({
  "node_modules/csso/cjs/restructure/prepare/index.cjs"(exports, module2) {
    "use strict";
    var cssTree = require_cjs2();
    var createDeclarationIndexer = require_createDeclarationIndexer();
    var processSelector = require_processSelector();
    function prepare(ast, options) {
      const markDeclaration = createDeclarationIndexer();
      cssTree.walk(ast, {
        visit: "Rule",
        enter(node) {
          node.block.children.forEach(markDeclaration);
          processSelector(node, options.usage);
        }
      });
      cssTree.walk(ast, {
        visit: "Atrule",
        enter(node) {
          if (node.prelude) {
            node.prelude.id = null;
            node.prelude.id = cssTree.generate(node.prelude);
          }
          if (cssTree.keyword(node.name).basename === "keyframes") {
            node.block.avoidRulesMerge = true;
            node.block.children.forEach(function(rule) {
              rule.prelude.children.forEach(function(simpleselector) {
                simpleselector.compareMarker = simpleselector.id;
              });
            });
          }
        }
      });
      return {
        declaration: markDeclaration
      };
    }
    module2.exports = prepare;
  }
});

// node_modules/csso/cjs/restructure/1-mergeAtrule.cjs
var require_mergeAtrule = __commonJS({
  "node_modules/csso/cjs/restructure/1-mergeAtrule.cjs"(exports, module2) {
    "use strict";
    var cssTree = require_cjs2();
    var { hasOwnProperty: hasOwnProperty2 } = Object.prototype;
    function addRuleToMap(map, item, list, single) {
      const node = item.data;
      const name = cssTree.keyword(node.name).basename;
      const id = node.name.toLowerCase() + "/" + (node.prelude ? node.prelude.id : null);
      if (!hasOwnProperty2.call(map, name)) {
        map[name] = /* @__PURE__ */ Object.create(null);
      }
      if (single) {
        delete map[name][id];
      }
      if (!hasOwnProperty2.call(map[name], id)) {
        map[name][id] = new cssTree.List();
      }
      map[name][id].append(list.remove(item));
    }
    function relocateAtrules(ast, options) {
      const collected = /* @__PURE__ */ Object.create(null);
      let topInjectPoint = null;
      ast.children.forEach(function(node, item, list) {
        if (node.type === "Atrule") {
          const name = cssTree.keyword(node.name).basename;
          switch (name) {
            case "keyframes":
              addRuleToMap(collected, item, list, true);
              return;
            case "media":
              if (options.forceMediaMerge) {
                addRuleToMap(collected, item, list, false);
                return;
              }
              break;
          }
          if (topInjectPoint === null && name !== "charset" && name !== "import") {
            topInjectPoint = item;
          }
        } else {
          if (topInjectPoint === null) {
            topInjectPoint = item;
          }
        }
      });
      for (const atrule in collected) {
        for (const id in collected[atrule]) {
          ast.children.insertList(
            collected[atrule][id],
            atrule === "media" ? null : topInjectPoint
          );
        }
      }
    }
    function isMediaRule(node) {
      return node.type === "Atrule" && node.name === "media";
    }
    function processAtrule(node, item, list) {
      if (!isMediaRule(node)) {
        return;
      }
      const prev = item.prev && item.prev.data;
      if (!prev || !isMediaRule(prev)) {
        return;
      }
      if (node.prelude && prev.prelude && node.prelude.id === prev.prelude.id) {
        prev.block.children.appendList(node.block.children);
        list.remove(item);
      }
    }
    function rejoinAtrule(ast, options) {
      relocateAtrules(ast, options);
      cssTree.walk(ast, {
        visit: "Atrule",
        reverse: true,
        enter: processAtrule
      });
    }
    module2.exports = rejoinAtrule;
  }
});

// node_modules/csso/cjs/restructure/utils.cjs
var require_utils5 = __commonJS({
  "node_modules/csso/cjs/restructure/utils.cjs"(exports) {
    "use strict";
    var { hasOwnProperty: hasOwnProperty2 } = Object.prototype;
    function isEqualSelectors(a, b) {
      let cursor1 = a.head;
      let cursor2 = b.head;
      while (cursor1 !== null && cursor2 !== null && cursor1.data.id === cursor2.data.id) {
        cursor1 = cursor1.next;
        cursor2 = cursor2.next;
      }
      return cursor1 === null && cursor2 === null;
    }
    function isEqualDeclarations(a, b) {
      let cursor1 = a.head;
      let cursor2 = b.head;
      while (cursor1 !== null && cursor2 !== null && cursor1.data.id === cursor2.data.id) {
        cursor1 = cursor1.next;
        cursor2 = cursor2.next;
      }
      return cursor1 === null && cursor2 === null;
    }
    function compareDeclarations(declarations1, declarations2) {
      const result = {
        eq: [],
        ne1: [],
        ne2: [],
        ne2overrided: []
      };
      const fingerprints = /* @__PURE__ */ Object.create(null);
      const declarations2hash = /* @__PURE__ */ Object.create(null);
      for (let cursor = declarations2.head; cursor; cursor = cursor.next) {
        declarations2hash[cursor.data.id] = true;
      }
      for (let cursor = declarations1.head; cursor; cursor = cursor.next) {
        const data = cursor.data;
        if (data.fingerprint) {
          fingerprints[data.fingerprint] = data.important;
        }
        if (declarations2hash[data.id]) {
          declarations2hash[data.id] = false;
          result.eq.push(data);
        } else {
          result.ne1.push(data);
        }
      }
      for (let cursor = declarations2.head; cursor; cursor = cursor.next) {
        const data = cursor.data;
        if (declarations2hash[data.id]) {
          if (!hasOwnProperty2.call(fingerprints, data.fingerprint) || !fingerprints[data.fingerprint] && data.important) {
            result.ne2.push(data);
          }
          result.ne2overrided.push(data);
        }
      }
      return result;
    }
    function addSelectors(dest, source) {
      source.forEach((sourceData) => {
        const newStr = sourceData.id;
        let cursor = dest.head;
        while (cursor) {
          const nextStr = cursor.data.id;
          if (nextStr === newStr) {
            return;
          }
          if (nextStr > newStr) {
            break;
          }
          cursor = cursor.next;
        }
        dest.insert(dest.createItem(sourceData), cursor);
      });
      return dest;
    }
    function hasSimilarSelectors(selectors1, selectors2) {
      let cursor1 = selectors1.head;
      while (cursor1 !== null) {
        let cursor2 = selectors2.head;
        while (cursor2 !== null) {
          if (cursor1.data.compareMarker === cursor2.data.compareMarker) {
            return true;
          }
          cursor2 = cursor2.next;
        }
        cursor1 = cursor1.next;
      }
      return false;
    }
    function unsafeToSkipNode(node) {
      switch (node.type) {
        case "Rule":
          return hasSimilarSelectors(node.prelude.children, this);
        case "Atrule":
          if (node.block) {
            return node.block.children.some(unsafeToSkipNode, this);
          }
          break;
        case "Declaration":
          return false;
      }
      return true;
    }
    exports.addSelectors = addSelectors;
    exports.compareDeclarations = compareDeclarations;
    exports.hasSimilarSelectors = hasSimilarSelectors;
    exports.isEqualDeclarations = isEqualDeclarations;
    exports.isEqualSelectors = isEqualSelectors;
    exports.unsafeToSkipNode = unsafeToSkipNode;
  }
});

// node_modules/csso/cjs/restructure/2-initialMergeRuleset.cjs
var require_initialMergeRuleset = __commonJS({
  "node_modules/csso/cjs/restructure/2-initialMergeRuleset.cjs"(exports, module2) {
    "use strict";
    var cssTree = require_cjs2();
    var utils = require_utils5();
    function processRule(node, item, list) {
      const selectors = node.prelude.children;
      const declarations = node.block.children;
      list.prevUntil(item.prev, function(prev) {
        if (prev.type !== "Rule") {
          return utils.unsafeToSkipNode.call(selectors, prev);
        }
        const prevSelectors = prev.prelude.children;
        const prevDeclarations = prev.block.children;
        if (node.pseudoSignature === prev.pseudoSignature) {
          if (utils.isEqualSelectors(prevSelectors, selectors)) {
            prevDeclarations.appendList(declarations);
            list.remove(item);
            return true;
          }
          if (utils.isEqualDeclarations(declarations, prevDeclarations)) {
            utils.addSelectors(prevSelectors, selectors);
            list.remove(item);
            return true;
          }
        }
        return utils.hasSimilarSelectors(selectors, prevSelectors);
      });
    }
    function initialMergeRule(ast) {
      cssTree.walk(ast, {
        visit: "Rule",
        enter: processRule
      });
    }
    module2.exports = initialMergeRule;
  }
});

// node_modules/csso/cjs/restructure/3-disjoinRuleset.cjs
var require_disjoinRuleset = __commonJS({
  "node_modules/csso/cjs/restructure/3-disjoinRuleset.cjs"(exports, module2) {
    "use strict";
    var cssTree = require_cjs2();
    function processRule(node, item, list) {
      const selectors = node.prelude.children;
      while (selectors.head !== selectors.tail) {
        const newSelectors = new cssTree.List();
        newSelectors.insert(selectors.remove(selectors.head));
        list.insert(list.createItem({
          type: "Rule",
          loc: node.loc,
          prelude: {
            type: "SelectorList",
            loc: node.prelude.loc,
            children: newSelectors
          },
          block: {
            type: "Block",
            loc: node.block.loc,
            children: node.block.children.copy()
          },
          pseudoSignature: node.pseudoSignature
        }), item);
      }
    }
    function disjoinRule(ast) {
      cssTree.walk(ast, {
        visit: "Rule",
        reverse: true,
        enter: processRule
      });
    }
    module2.exports = disjoinRule;
  }
});

// node_modules/csso/cjs/restructure/4-restructShorthand.cjs
var require_restructShorthand = __commonJS({
  "node_modules/csso/cjs/restructure/4-restructShorthand.cjs"(exports, module2) {
    "use strict";
    var cssTree = require_cjs2();
    var REPLACE = 1;
    var REMOVE = 2;
    var TOP = 0;
    var RIGHT = 1;
    var BOTTOM = 2;
    var LEFT = 3;
    var SIDES = ["top", "right", "bottom", "left"];
    var SIDE = {
      "margin-top": "top",
      "margin-right": "right",
      "margin-bottom": "bottom",
      "margin-left": "left",
      "padding-top": "top",
      "padding-right": "right",
      "padding-bottom": "bottom",
      "padding-left": "left",
      "border-top-color": "top",
      "border-right-color": "right",
      "border-bottom-color": "bottom",
      "border-left-color": "left",
      "border-top-width": "top",
      "border-right-width": "right",
      "border-bottom-width": "bottom",
      "border-left-width": "left",
      "border-top-style": "top",
      "border-right-style": "right",
      "border-bottom-style": "bottom",
      "border-left-style": "left"
    };
    var MAIN_PROPERTY = {
      "margin": "margin",
      "margin-top": "margin",
      "margin-right": "margin",
      "margin-bottom": "margin",
      "margin-left": "margin",
      "padding": "padding",
      "padding-top": "padding",
      "padding-right": "padding",
      "padding-bottom": "padding",
      "padding-left": "padding",
      "border-color": "border-color",
      "border-top-color": "border-color",
      "border-right-color": "border-color",
      "border-bottom-color": "border-color",
      "border-left-color": "border-color",
      "border-width": "border-width",
      "border-top-width": "border-width",
      "border-right-width": "border-width",
      "border-bottom-width": "border-width",
      "border-left-width": "border-width",
      "border-style": "border-style",
      "border-top-style": "border-style",
      "border-right-style": "border-style",
      "border-bottom-style": "border-style",
      "border-left-style": "border-style"
    };
    var TRBL = class {
      constructor(name) {
        this.name = name;
        this.loc = null;
        this.iehack = void 0;
        this.sides = {
          "top": null,
          "right": null,
          "bottom": null,
          "left": null
        };
      }
      getValueSequence(declaration, count) {
        const values = [];
        let iehack = "";
        const hasBadValues = declaration.value.type !== "Value" || declaration.value.children.some(function(child) {
          let special = false;
          switch (child.type) {
            case "Identifier":
              switch (child.name) {
                case "\\0":
                case "\\9":
                  iehack = child.name;
                  return;
                case "inherit":
                case "initial":
                case "unset":
                case "revert":
                  special = child.name;
                  break;
              }
              break;
            case "Dimension":
              switch (child.unit) {
                case "rem":
                case "vw":
                case "vh":
                case "vmin":
                case "vmax":
                case "vm":
                  special = child.unit;
                  break;
              }
              break;
            case "Hash":
            case "Number":
            case "Percentage":
              break;
            case "Function":
              if (child.name === "var") {
                return true;
              }
              special = child.name;
              break;
            default:
              return true;
          }
          values.push({
            node: child,
            special,
            important: declaration.important
          });
        });
        if (hasBadValues || values.length > count) {
          return false;
        }
        if (typeof this.iehack === "string" && this.iehack !== iehack) {
          return false;
        }
        this.iehack = iehack;
        return values;
      }
      canOverride(side, value) {
        const currentValue = this.sides[side];
        return !currentValue || value.important && !currentValue.important;
      }
      add(name, declaration) {
        function attemptToAdd() {
          const sides = this.sides;
          const side = SIDE[name];
          if (side) {
            if (side in sides === false) {
              return false;
            }
            const values = this.getValueSequence(declaration, 1);
            if (!values || !values.length) {
              return false;
            }
            for (const key in sides) {
              if (sides[key] !== null && sides[key].special !== values[0].special) {
                return false;
              }
            }
            if (!this.canOverride(side, values[0])) {
              return true;
            }
            sides[side] = values[0];
            return true;
          } else if (name === this.name) {
            const values = this.getValueSequence(declaration, 4);
            if (!values || !values.length) {
              return false;
            }
            switch (values.length) {
              case 1:
                values[RIGHT] = values[TOP];
                values[BOTTOM] = values[TOP];
                values[LEFT] = values[TOP];
                break;
              case 2:
                values[BOTTOM] = values[TOP];
                values[LEFT] = values[RIGHT];
                break;
              case 3:
                values[LEFT] = values[RIGHT];
                break;
            }
            for (let i = 0; i < 4; i++) {
              for (const key in sides) {
                if (sides[key] !== null && sides[key].special !== values[i].special) {
                  return false;
                }
              }
            }
            for (let i = 0; i < 4; i++) {
              if (this.canOverride(SIDES[i], values[i])) {
                sides[SIDES[i]] = values[i];
              }
            }
            return true;
          }
        }
        if (!attemptToAdd.call(this)) {
          return false;
        }
        if (!this.loc) {
          this.loc = declaration.loc;
        }
        return true;
      }
      isOkToMinimize() {
        const top = this.sides.top;
        const right = this.sides.right;
        const bottom = this.sides.bottom;
        const left = this.sides.left;
        if (top && right && bottom && left) {
          const important = top.important + right.important + bottom.important + left.important;
          return important === 0 || important === 4;
        }
        return false;
      }
      getValue() {
        const result = new cssTree.List();
        const sides = this.sides;
        const values = [
          sides.top,
          sides.right,
          sides.bottom,
          sides.left
        ];
        const stringValues = [
          cssTree.generate(sides.top.node),
          cssTree.generate(sides.right.node),
          cssTree.generate(sides.bottom.node),
          cssTree.generate(sides.left.node)
        ];
        if (stringValues[LEFT] === stringValues[RIGHT]) {
          values.pop();
          if (stringValues[BOTTOM] === stringValues[TOP]) {
            values.pop();
            if (stringValues[RIGHT] === stringValues[TOP]) {
              values.pop();
            }
          }
        }
        for (let i = 0; i < values.length; i++) {
          result.appendData(values[i].node);
        }
        if (this.iehack) {
          result.appendData({
            type: "Identifier",
            loc: null,
            name: this.iehack
          });
        }
        return {
          type: "Value",
          loc: null,
          children: result
        };
      }
      getDeclaration() {
        return {
          type: "Declaration",
          loc: this.loc,
          important: this.sides.top.important,
          property: this.name,
          value: this.getValue()
        };
      }
    };
    function processRule(rule, shorts, shortDeclarations, lastShortSelector) {
      const declarations = rule.block.children;
      const selector = rule.prelude.children.first.id;
      rule.block.children.forEachRight(function(declaration, item) {
        const property = declaration.property;
        if (!MAIN_PROPERTY.hasOwnProperty(property)) {
          return;
        }
        const key = MAIN_PROPERTY[property];
        let shorthand;
        let operation;
        if (!lastShortSelector || selector === lastShortSelector) {
          if (key in shorts) {
            operation = REMOVE;
            shorthand = shorts[key];
          }
        }
        if (!shorthand || !shorthand.add(property, declaration)) {
          operation = REPLACE;
          shorthand = new TRBL(key);
          if (!shorthand.add(property, declaration)) {
            lastShortSelector = null;
            return;
          }
        }
        shorts[key] = shorthand;
        shortDeclarations.push({
          operation,
          block: declarations,
          item,
          shorthand
        });
        lastShortSelector = selector;
      });
      return lastShortSelector;
    }
    function processShorthands(shortDeclarations, markDeclaration) {
      shortDeclarations.forEach(function(item) {
        const shorthand = item.shorthand;
        if (!shorthand.isOkToMinimize()) {
          return;
        }
        if (item.operation === REPLACE) {
          item.item.data = markDeclaration(shorthand.getDeclaration());
        } else {
          item.block.remove(item.item);
        }
      });
    }
    function restructBlock(ast, indexer) {
      const stylesheetMap = {};
      const shortDeclarations = [];
      cssTree.walk(ast, {
        visit: "Rule",
        reverse: true,
        enter(node) {
          const stylesheet = this.block || this.stylesheet;
          const ruleId = (node.pseudoSignature || "") + "|" + node.prelude.children.first.id;
          let ruleMap;
          let shorts;
          if (!stylesheetMap.hasOwnProperty(stylesheet.id)) {
            ruleMap = {
              lastShortSelector: null
            };
            stylesheetMap[stylesheet.id] = ruleMap;
          } else {
            ruleMap = stylesheetMap[stylesheet.id];
          }
          if (ruleMap.hasOwnProperty(ruleId)) {
            shorts = ruleMap[ruleId];
          } else {
            shorts = {};
            ruleMap[ruleId] = shorts;
          }
          ruleMap.lastShortSelector = processRule.call(this, node, shorts, shortDeclarations, ruleMap.lastShortSelector);
        }
      });
      processShorthands(shortDeclarations, indexer.declaration);
    }
    module2.exports = restructBlock;
  }
});

// node_modules/csso/cjs/restructure/6-restructBlock.cjs
var require_restructBlock = __commonJS({
  "node_modules/csso/cjs/restructure/6-restructBlock.cjs"(exports, module2) {
    "use strict";
    var cssTree = require_cjs2();
    var fingerprintId = 1;
    var dontRestructure = /* @__PURE__ */ new Set([
      "src"
      // https://github.com/afelix/csso/issues/50
    ]);
    var DONT_MIX_VALUE = {
      // https://developer.mozilla.org/en-US/docs/Web/CSS/display#Browser_compatibility
      "display": /table|ruby|flex|-(flex)?box$|grid|contents|run-in/i,
      // https://developer.mozilla.org/en/docs/Web/CSS/text-align
      "text-align": /^(start|end|match-parent|justify-all)$/i
    };
    var SAFE_VALUES = {
      cursor: [
        "auto",
        "crosshair",
        "default",
        "move",
        "text",
        "wait",
        "help",
        "n-resize",
        "e-resize",
        "s-resize",
        "w-resize",
        "ne-resize",
        "nw-resize",
        "se-resize",
        "sw-resize",
        "pointer",
        "progress",
        "not-allowed",
        "no-drop",
        "vertical-text",
        "all-scroll",
        "col-resize",
        "row-resize"
      ],
      overflow: [
        "hidden",
        "visible",
        "scroll",
        "auto"
      ],
      position: [
        "static",
        "relative",
        "absolute",
        "fixed"
      ]
    };
    var NEEDLESS_TABLE = {
      "border-width": ["border"],
      "border-style": ["border"],
      "border-color": ["border"],
      "border-top": ["border"],
      "border-right": ["border"],
      "border-bottom": ["border"],
      "border-left": ["border"],
      "border-top-width": ["border-top", "border-width", "border"],
      "border-right-width": ["border-right", "border-width", "border"],
      "border-bottom-width": ["border-bottom", "border-width", "border"],
      "border-left-width": ["border-left", "border-width", "border"],
      "border-top-style": ["border-top", "border-style", "border"],
      "border-right-style": ["border-right", "border-style", "border"],
      "border-bottom-style": ["border-bottom", "border-style", "border"],
      "border-left-style": ["border-left", "border-style", "border"],
      "border-top-color": ["border-top", "border-color", "border"],
      "border-right-color": ["border-right", "border-color", "border"],
      "border-bottom-color": ["border-bottom", "border-color", "border"],
      "border-left-color": ["border-left", "border-color", "border"],
      "margin-top": ["margin"],
      "margin-right": ["margin"],
      "margin-bottom": ["margin"],
      "margin-left": ["margin"],
      "padding-top": ["padding"],
      "padding-right": ["padding"],
      "padding-bottom": ["padding"],
      "padding-left": ["padding"],
      "font-style": ["font"],
      "font-variant": ["font"],
      "font-weight": ["font"],
      "font-size": ["font"],
      "font-family": ["font"],
      "list-style-type": ["list-style"],
      "list-style-position": ["list-style"],
      "list-style-image": ["list-style"]
    };
    function getPropertyFingerprint(propertyName, declaration, fingerprints) {
      const realName = cssTree.property(propertyName).basename;
      if (realName === "background") {
        return propertyName + ":" + cssTree.generate(declaration.value);
      }
      const declarationId = declaration.id;
      let fingerprint = fingerprints[declarationId];
      if (!fingerprint) {
        switch (declaration.value.type) {
          case "Value":
            const special = {};
            let vendorId = "";
            let iehack = "";
            let raw = false;
            declaration.value.children.forEach(function walk(node) {
              switch (node.type) {
                case "Value":
                case "Brackets":
                case "Parentheses":
                  node.children.forEach(walk);
                  break;
                case "Raw":
                  raw = true;
                  break;
                case "Identifier": {
                  const { name } = node;
                  if (!vendorId) {
                    vendorId = cssTree.keyword(name).vendor;
                  }
                  if (/\\[09]/.test(name)) {
                    iehack = RegExp.lastMatch;
                  }
                  if (SAFE_VALUES.hasOwnProperty(realName)) {
                    if (SAFE_VALUES[realName].indexOf(name) === -1) {
                      special[name] = true;
                    }
                  } else if (DONT_MIX_VALUE.hasOwnProperty(realName)) {
                    if (DONT_MIX_VALUE[realName].test(name)) {
                      special[name] = true;
                    }
                  }
                  break;
                }
                case "Function": {
                  let { name } = node;
                  if (!vendorId) {
                    vendorId = cssTree.keyword(name).vendor;
                  }
                  if (name === "rect") {
                    const hasComma = node.children.some(
                      (node2) => node2.type === "Operator" && node2.value === ","
                    );
                    if (!hasComma) {
                      name = "rect-backward";
                    }
                  }
                  special[name + "()"] = true;
                  node.children.forEach(walk);
                  break;
                }
                case "Dimension": {
                  const { unit } = node;
                  if (/\\[09]/.test(unit)) {
                    iehack = RegExp.lastMatch;
                  }
                  switch (unit) {
                    case "rem":
                    case "vw":
                    case "vh":
                    case "vmin":
                    case "vmax":
                    case "vm":
                      special[unit] = true;
                      break;
                  }
                  break;
                }
              }
            });
            fingerprint = raw ? "!" + fingerprintId++ : "!" + Object.keys(special).sort() + "|" + iehack + vendorId;
            break;
          case "Raw":
            fingerprint = "!" + declaration.value.value;
            break;
          default:
            fingerprint = cssTree.generate(declaration.value);
        }
        fingerprints[declarationId] = fingerprint;
      }
      return propertyName + fingerprint;
    }
    function needless(props, declaration, fingerprints) {
      const property = cssTree.property(declaration.property);
      if (NEEDLESS_TABLE.hasOwnProperty(property.basename)) {
        const table = NEEDLESS_TABLE[property.basename];
        for (const entry of table) {
          const ppre = getPropertyFingerprint(property.prefix + entry, declaration, fingerprints);
          const prev = props.hasOwnProperty(ppre) ? props[ppre] : null;
          if (prev && (!declaration.important || prev.item.data.important)) {
            return prev;
          }
        }
      }
    }
    function processRule(rule, item, list, props, fingerprints) {
      const declarations = rule.block.children;
      declarations.forEachRight(function(declaration, declarationItem) {
        const { property } = declaration;
        const fingerprint = getPropertyFingerprint(property, declaration, fingerprints);
        const prev = props[fingerprint];
        if (prev && !dontRestructure.has(property)) {
          if (declaration.important && !prev.item.data.important) {
            props[fingerprint] = {
              block: declarations,
              item: declarationItem
            };
            prev.block.remove(prev.item);
          } else {
            declarations.remove(declarationItem);
          }
        } else {
          const prev2 = needless(props, declaration, fingerprints);
          if (prev2) {
            declarations.remove(declarationItem);
          } else {
            declaration.fingerprint = fingerprint;
            props[fingerprint] = {
              block: declarations,
              item: declarationItem
            };
          }
        }
      });
      if (declarations.isEmpty) {
        list.remove(item);
      }
    }
    function restructBlock(ast) {
      const stylesheetMap = {};
      const fingerprints = /* @__PURE__ */ Object.create(null);
      cssTree.walk(ast, {
        visit: "Rule",
        reverse: true,
        enter(node, item, list) {
          const stylesheet = this.block || this.stylesheet;
          const ruleId = (node.pseudoSignature || "") + "|" + node.prelude.children.first.id;
          let ruleMap;
          let props;
          if (!stylesheetMap.hasOwnProperty(stylesheet.id)) {
            ruleMap = {};
            stylesheetMap[stylesheet.id] = ruleMap;
          } else {
            ruleMap = stylesheetMap[stylesheet.id];
          }
          if (ruleMap.hasOwnProperty(ruleId)) {
            props = ruleMap[ruleId];
          } else {
            props = {};
            ruleMap[ruleId] = props;
          }
          processRule.call(this, node, item, list, props, fingerprints);
        }
      });
    }
    module2.exports = restructBlock;
  }
});

// node_modules/csso/cjs/restructure/7-mergeRuleset.cjs
var require_mergeRuleset = __commonJS({
  "node_modules/csso/cjs/restructure/7-mergeRuleset.cjs"(exports, module2) {
    "use strict";
    var cssTree = require_cjs2();
    var utils = require_utils5();
    function processRule(node, item, list) {
      const selectors = node.prelude.children;
      const declarations = node.block.children;
      const nodeCompareMarker = selectors.first.compareMarker;
      const skippedCompareMarkers = {};
      list.nextUntil(item.next, function(next, nextItem) {
        if (next.type !== "Rule") {
          return utils.unsafeToSkipNode.call(selectors, next);
        }
        if (node.pseudoSignature !== next.pseudoSignature) {
          return true;
        }
        const nextFirstSelector = next.prelude.children.head;
        const nextDeclarations = next.block.children;
        const nextCompareMarker = nextFirstSelector.data.compareMarker;
        if (nextCompareMarker in skippedCompareMarkers) {
          return true;
        }
        if (selectors.head === selectors.tail) {
          if (selectors.first.id === nextFirstSelector.data.id) {
            declarations.appendList(nextDeclarations);
            list.remove(nextItem);
            return;
          }
        }
        if (utils.isEqualDeclarations(declarations, nextDeclarations)) {
          const nextStr = nextFirstSelector.data.id;
          selectors.some((data, item2) => {
            const curStr = data.id;
            if (nextStr < curStr) {
              selectors.insert(nextFirstSelector, item2);
              return true;
            }
            if (!item2.next) {
              selectors.insert(nextFirstSelector);
              return true;
            }
          });
          list.remove(nextItem);
          return;
        }
        if (nextCompareMarker === nodeCompareMarker) {
          return true;
        }
        skippedCompareMarkers[nextCompareMarker] = true;
      });
    }
    function mergeRule(ast) {
      cssTree.walk(ast, {
        visit: "Rule",
        enter: processRule
      });
    }
    module2.exports = mergeRule;
  }
});

// node_modules/csso/cjs/restructure/8-restructRuleset.cjs
var require_restructRuleset = __commonJS({
  "node_modules/csso/cjs/restructure/8-restructRuleset.cjs"(exports, module2) {
    "use strict";
    var cssTree = require_cjs2();
    var utils = require_utils5();
    function calcSelectorLength(list) {
      return list.reduce((res, data) => res + data.id.length + 1, 0) - 1;
    }
    function calcDeclarationsLength(tokens) {
      let length = 0;
      for (const token of tokens) {
        length += token.length;
      }
      return length + // declarations
      tokens.length - 1;
    }
    function processRule(node, item, list) {
      const avoidRulesMerge = this.block !== null ? this.block.avoidRulesMerge : false;
      const selectors = node.prelude.children;
      const block = node.block;
      const disallowDownMarkers = /* @__PURE__ */ Object.create(null);
      let allowMergeUp = true;
      let allowMergeDown = true;
      list.prevUntil(item.prev, function(prev, prevItem) {
        const prevBlock = prev.block;
        const prevType = prev.type;
        if (prevType !== "Rule") {
          const unsafe = utils.unsafeToSkipNode.call(selectors, prev);
          if (!unsafe && prevType === "Atrule" && prevBlock) {
            cssTree.walk(prevBlock, {
              visit: "Rule",
              enter(node2) {
                node2.prelude.children.forEach((data) => {
                  disallowDownMarkers[data.compareMarker] = true;
                });
              }
            });
          }
          return unsafe;
        }
        if (node.pseudoSignature !== prev.pseudoSignature) {
          return true;
        }
        const prevSelectors = prev.prelude.children;
        allowMergeDown = !prevSelectors.some(
          (selector) => selector.compareMarker in disallowDownMarkers
        );
        if (!allowMergeDown && !allowMergeUp) {
          return true;
        }
        if (allowMergeUp && utils.isEqualSelectors(prevSelectors, selectors)) {
          prevBlock.children.appendList(block.children);
          list.remove(item);
          return true;
        }
        const diff = utils.compareDeclarations(block.children, prevBlock.children);
        if (diff.eq.length) {
          if (!diff.ne1.length && !diff.ne2.length) {
            if (allowMergeDown) {
              utils.addSelectors(selectors, prevSelectors);
              list.remove(prevItem);
            }
            return true;
          } else if (!avoidRulesMerge) {
            if (diff.ne1.length && !diff.ne2.length) {
              const selectorLength = calcSelectorLength(selectors);
              const blockLength = calcDeclarationsLength(diff.eq);
              if (allowMergeUp && selectorLength < blockLength) {
                utils.addSelectors(prevSelectors, selectors);
                block.children.fromArray(diff.ne1);
              }
            } else if (!diff.ne1.length && diff.ne2.length) {
              const selectorLength = calcSelectorLength(prevSelectors);
              const blockLength = calcDeclarationsLength(diff.eq);
              if (allowMergeDown && selectorLength < blockLength) {
                utils.addSelectors(selectors, prevSelectors);
                prevBlock.children.fromArray(diff.ne2);
              }
            } else {
              const newSelector = {
                type: "SelectorList",
                loc: null,
                children: utils.addSelectors(prevSelectors.copy(), selectors)
              };
              const newBlockLength = calcSelectorLength(newSelector.children) + 2;
              const blockLength = calcDeclarationsLength(diff.eq);
              if (blockLength >= newBlockLength) {
                const newItem = list.createItem({
                  type: "Rule",
                  loc: null,
                  prelude: newSelector,
                  block: {
                    type: "Block",
                    loc: null,
                    children: new cssTree.List().fromArray(diff.eq)
                  },
                  pseudoSignature: node.pseudoSignature
                });
                block.children.fromArray(diff.ne1);
                prevBlock.children.fromArray(diff.ne2overrided);
                if (allowMergeUp) {
                  list.insert(newItem, prevItem);
                } else {
                  list.insert(newItem, item);
                }
                return true;
              }
            }
          }
        }
        if (allowMergeUp) {
          allowMergeUp = !prevSelectors.some(
            (prevSelector) => selectors.some(
              (selector) => selector.compareMarker === prevSelector.compareMarker
            )
          );
        }
        prevSelectors.forEach((data) => {
          disallowDownMarkers[data.compareMarker] = true;
        });
      });
    }
    function restructRule(ast) {
      cssTree.walk(ast, {
        visit: "Rule",
        reverse: true,
        enter: processRule
      });
    }
    module2.exports = restructRule;
  }
});

// node_modules/csso/cjs/restructure/index.cjs
var require_restructure = __commonJS({
  "node_modules/csso/cjs/restructure/index.cjs"(exports, module2) {
    "use strict";
    var index = require_prepare();
    var _1MergeAtrule = require_mergeAtrule();
    var _2InitialMergeRuleset = require_initialMergeRuleset();
    var _3DisjoinRuleset = require_disjoinRuleset();
    var _4RestructShorthand = require_restructShorthand();
    var _6RestructBlock = require_restructBlock();
    var _7MergeRuleset = require_mergeRuleset();
    var _8RestructRuleset = require_restructRuleset();
    function restructure(ast, options) {
      const indexer = index(ast, options);
      options.logger("prepare", ast);
      _1MergeAtrule(ast, options);
      options.logger("mergeAtrule", ast);
      _2InitialMergeRuleset(ast);
      options.logger("initialMergeRuleset", ast);
      _3DisjoinRuleset(ast);
      options.logger("disjoinRuleset", ast);
      _4RestructShorthand(ast, indexer);
      options.logger("restructShorthand", ast);
      _6RestructBlock(ast);
      options.logger("restructBlock", ast);
      _7MergeRuleset(ast);
      options.logger("mergeRuleset", ast);
      _8RestructRuleset(ast);
      options.logger("restructRuleset", ast);
    }
    module2.exports = restructure;
  }
});

// node_modules/csso/cjs/compress.cjs
var require_compress = __commonJS({
  "node_modules/csso/cjs/compress.cjs"(exports, module2) {
    "use strict";
    var cssTree = require_cjs2();
    var usage = require_usage();
    var index = require_clean();
    var index$1 = require_replace();
    var index$2 = require_restructure();
    function readChunk(input, specialComments) {
      const children = new cssTree.List();
      let nonSpaceTokenInBuffer = false;
      let protectedComment;
      input.nextUntil(input.head, (node, item, list) => {
        if (node.type === "Comment") {
          if (!specialComments || node.value.charAt(0) !== "!") {
            list.remove(item);
            return;
          }
          if (nonSpaceTokenInBuffer || protectedComment) {
            return true;
          }
          list.remove(item);
          protectedComment = node;
          return;
        }
        if (node.type !== "WhiteSpace") {
          nonSpaceTokenInBuffer = true;
        }
        children.insert(list.remove(item));
      });
      return {
        comment: protectedComment,
        stylesheet: {
          type: "StyleSheet",
          loc: null,
          children
        }
      };
    }
    function compressChunk(ast, firstAtrulesAllowed, num, options) {
      options.logger(`Compress block #${num}`, null, true);
      let seed = 1;
      if (ast.type === "StyleSheet") {
        ast.firstAtrulesAllowed = firstAtrulesAllowed;
        ast.id = seed++;
      }
      cssTree.walk(ast, {
        visit: "Atrule",
        enter(node) {
          if (node.block !== null) {
            node.block.id = seed++;
          }
        }
      });
      options.logger("init", ast);
      index(ast, options);
      options.logger("clean", ast);
      index$1(ast);
      options.logger("replace", ast);
      if (options.restructuring) {
        index$2(ast, options);
      }
      return ast;
    }
    function getCommentsOption(options) {
      let comments = "comments" in options ? options.comments : "exclamation";
      if (typeof comments === "boolean") {
        comments = comments ? "exclamation" : false;
      } else if (comments !== "exclamation" && comments !== "first-exclamation") {
        comments = false;
      }
      return comments;
    }
    function getRestructureOption(options) {
      if ("restructure" in options) {
        return options.restructure;
      }
      return "restructuring" in options ? options.restructuring : true;
    }
    function wrapBlock(block) {
      return new cssTree.List().appendData({
        type: "Rule",
        loc: null,
        prelude: {
          type: "SelectorList",
          loc: null,
          children: new cssTree.List().appendData({
            type: "Selector",
            loc: null,
            children: new cssTree.List().appendData({
              type: "TypeSelector",
              loc: null,
              name: "x"
            })
          })
        },
        block
      });
    }
    function compress(ast, options) {
      ast = ast || { type: "StyleSheet", loc: null, children: new cssTree.List() };
      options = options || {};
      const compressOptions = {
        logger: typeof options.logger === "function" ? options.logger : function() {
        },
        restructuring: getRestructureOption(options),
        forceMediaMerge: Boolean(options.forceMediaMerge),
        usage: options.usage ? usage.buildIndex(options.usage) : false
      };
      const output = new cssTree.List();
      let specialComments = getCommentsOption(options);
      let firstAtrulesAllowed = true;
      let input;
      let chunk;
      let chunkNum = 1;
      let chunkChildren;
      if (options.clone) {
        ast = cssTree.clone(ast);
      }
      if (ast.type === "StyleSheet") {
        input = ast.children;
        ast.children = output;
      } else {
        input = wrapBlock(ast);
      }
      do {
        chunk = readChunk(input, Boolean(specialComments));
        compressChunk(chunk.stylesheet, firstAtrulesAllowed, chunkNum++, compressOptions);
        chunkChildren = chunk.stylesheet.children;
        if (chunk.comment) {
          if (!output.isEmpty) {
            output.insert(cssTree.List.createItem({
              type: "Raw",
              value: "\n"
            }));
          }
          output.insert(cssTree.List.createItem(chunk.comment));
          if (!chunkChildren.isEmpty) {
            output.insert(cssTree.List.createItem({
              type: "Raw",
              value: "\n"
            }));
          }
        }
        if (firstAtrulesAllowed && !chunkChildren.isEmpty) {
          const lastRule = chunkChildren.last;
          if (lastRule.type !== "Atrule" || lastRule.name !== "import" && lastRule.name !== "charset") {
            firstAtrulesAllowed = false;
          }
        }
        if (specialComments !== "exclamation") {
          specialComments = false;
        }
        output.appendList(chunkChildren);
      } while (!input.isEmpty);
      return {
        ast
      };
    }
    module2.exports = compress;
  }
});

// node_modules/csso/cjs/syntax.cjs
var require_syntax3 = __commonJS({
  "node_modules/csso/cjs/syntax.cjs"(exports) {
    "use strict";
    var cssTree = require_cjs2();
    var compress = require_compress();
    var specificity = require_specificity();
    function encodeString(value) {
      const stringApostrophe = cssTree.string.encode(value, true);
      const stringQuote = cssTree.string.encode(value);
      return stringApostrophe.length < stringQuote.length ? stringApostrophe : stringQuote;
    }
    var {
      lexer,
      tokenize,
      parse,
      generate,
      walk,
      find,
      findLast,
      findAll,
      fromPlainObject,
      toPlainObject
    } = cssTree.fork({
      node: {
        String: {
          generate(node) {
            this.token(cssTree.tokenTypes.String, encodeString(node.value));
          }
        },
        Url: {
          generate(node) {
            const encodedUrl = cssTree.url.encode(node.value);
            const string = encodeString(node.value);
            this.token(
              cssTree.tokenTypes.Url,
              encodedUrl.length <= string.length + 5 ? encodedUrl : "url(" + string + ")"
            );
          }
        }
      }
    });
    exports.compress = compress;
    exports.specificity = specificity;
    exports.find = find;
    exports.findAll = findAll;
    exports.findLast = findLast;
    exports.fromPlainObject = fromPlainObject;
    exports.generate = generate;
    exports.lexer = lexer;
    exports.parse = parse;
    exports.toPlainObject = toPlainObject;
    exports.tokenize = tokenize;
    exports.walk = walk;
  }
});

// node_modules/csso/cjs/utils.cjs
var require_utils6 = __commonJS({
  "node_modules/csso/cjs/utils.cjs"(exports) {
    "use strict";
    var processSelector = require_processSelector();
    var utils$1 = require_utils5();
    exports.processSelector = processSelector;
    exports.addSelectors = utils$1.addSelectors;
    exports.compareDeclarations = utils$1.compareDeclarations;
    exports.hasSimilarSelectors = utils$1.hasSimilarSelectors;
    exports.isEqualDeclarations = utils$1.isEqualDeclarations;
    exports.isEqualSelectors = utils$1.isEqualSelectors;
    exports.unsafeToSkipNode = utils$1.unsafeToSkipNode;
  }
});

// node_modules/csso/cjs/index.cjs
var require_cjs3 = __commonJS({
  "node_modules/csso/cjs/index.cjs"(exports) {
    "use strict";
    var version = require_version2();
    var syntax = require_syntax3();
    var utils = require_utils6();
    var { parse, generate, compress } = syntax;
    function debugOutput(name, options, startTime, data) {
      if (options.debug) {
        console.error(`## ${name} done in %d ms
`, Date.now() - startTime);
      }
      return data;
    }
    function createDefaultLogger(level) {
      let lastDebug;
      return function logger(title, ast) {
        let line = title;
        if (ast) {
          line = `[${((Date.now() - lastDebug) / 1e3).toFixed(3)}s] ${line}`;
        }
        if (level > 1 && ast) {
          let css = generate(ast);
          if (level === 2 && css.length > 256) {
            css = css.substr(0, 256) + "...";
          }
          line += `
  ${css}
`;
        }
        console.error(line);
        lastDebug = Date.now();
      };
    }
    function buildCompressOptions(options) {
      options = { ...options };
      if (typeof options.logger !== "function" && options.debug) {
        options.logger = createDefaultLogger(options.debug);
      }
      return options;
    }
    function runHandler(ast, options, handlers) {
      if (!Array.isArray(handlers)) {
        handlers = [handlers];
      }
      handlers.forEach((fn) => fn(ast, options));
    }
    function minify(context, source, options) {
      options = options || {};
      const filename = options.filename || "<unknown>";
      let result;
      const ast = debugOutput(
        "parsing",
        options,
        Date.now(),
        parse(source, {
          context,
          filename,
          positions: Boolean(options.sourceMap)
        })
      );
      if (options.beforeCompress) {
        debugOutput(
          "beforeCompress",
          options,
          Date.now(),
          runHandler(ast, options, options.beforeCompress)
        );
      }
      const compressResult = debugOutput(
        "compress",
        options,
        Date.now(),
        compress(ast, buildCompressOptions(options))
      );
      if (options.afterCompress) {
        debugOutput(
          "afterCompress",
          options,
          Date.now(),
          runHandler(compressResult, options, options.afterCompress)
        );
      }
      if (options.sourceMap) {
        result = debugOutput("generate(sourceMap: true)", options, Date.now(), (() => {
          const tmp = generate(compressResult.ast, { sourceMap: true });
          tmp.map._file = filename;
          tmp.map.setSourceContent(filename, source);
          return tmp;
        })());
      } else {
        result = debugOutput("generate", options, Date.now(), {
          css: generate(compressResult.ast),
          map: null
        });
      }
      return result;
    }
    function minifyStylesheet(source, options) {
      return minify("stylesheet", source, options);
    }
    function minifyBlock(source, options) {
      return minify("declarationList", source, options);
    }
    exports.version = version.version;
    exports.syntax = syntax;
    exports.utils = utils;
    exports.minify = minifyStylesheet;
    exports.minifyBlock = minifyBlock;
  }
});

// node_modules/svgo/lib/style.js
var require_style = __commonJS({
  "node_modules/svgo/lib/style.js"(exports) {
    "use strict";
    var csstree = require_cjs();
    var {
      // @ts-ignore internal api
      syntax: { specificity }
    } = require_cjs3();
    var { visit, matches } = require_xast();
    var {
      attrsGroups,
      inheritableAttrs,
      presentationNonInheritableGroupAttrs
    } = require_collections();
    var csstreeWalkSkip = csstree.walk.skip;
    var parseRule = (ruleNode, dynamic) => {
      const declarations = [];
      ruleNode.block.children.forEach((cssNode) => {
        if (cssNode.type === "Declaration") {
          declarations.push({
            name: cssNode.property,
            value: csstree.generate(cssNode.value),
            important: cssNode.important === true
          });
        }
      });
      const rules = [];
      csstree.walk(ruleNode.prelude, (node) => {
        if (node.type === "Selector") {
          const newNode = csstree.clone(node);
          let hasPseudoClasses = false;
          csstree.walk(newNode, (pseudoClassNode, item, list) => {
            if (pseudoClassNode.type === "PseudoClassSelector") {
              hasPseudoClasses = true;
              list.remove(item);
            }
          });
          rules.push({
            specificity: specificity(node),
            dynamic: hasPseudoClasses || dynamic,
            // compute specificity from original node to consider pseudo classes
            selector: csstree.generate(newNode),
            declarations
          });
        }
      });
      return rules;
    };
    var parseStylesheet = (css, dynamic) => {
      const rules = [];
      const ast = csstree.parse(css, {
        parseValue: false,
        parseAtrulePrelude: false
      });
      csstree.walk(ast, (cssNode) => {
        if (cssNode.type === "Rule") {
          rules.push(...parseRule(cssNode, dynamic || false));
          return csstreeWalkSkip;
        }
        if (cssNode.type === "Atrule") {
          if (cssNode.name === "keyframes") {
            return csstreeWalkSkip;
          }
          csstree.walk(cssNode, (ruleNode) => {
            if (ruleNode.type === "Rule") {
              rules.push(...parseRule(ruleNode, dynamic || true));
              return csstreeWalkSkip;
            }
          });
          return csstreeWalkSkip;
        }
      });
      return rules;
    };
    var parseStyleDeclarations = (css) => {
      const declarations = [];
      const ast = csstree.parse(css, {
        context: "declarationList",
        parseValue: false
      });
      csstree.walk(ast, (cssNode) => {
        if (cssNode.type === "Declaration") {
          declarations.push({
            name: cssNode.property,
            value: csstree.generate(cssNode.value),
            important: cssNode.important === true
          });
        }
      });
      return declarations;
    };
    var computeOwnStyle = (stylesheet, node) => {
      const computedStyle = {};
      const importantStyles = /* @__PURE__ */ new Map();
      for (const [name, value] of Object.entries(node.attributes)) {
        if (attrsGroups.presentation.includes(name)) {
          computedStyle[name] = { type: "static", inherited: false, value };
          importantStyles.set(name, false);
        }
      }
      for (const { selector, declarations, dynamic } of stylesheet.rules) {
        if (matches(node, selector)) {
          for (const { name, value, important } of declarations) {
            const computed = computedStyle[name];
            if (computed && computed.type === "dynamic") {
              continue;
            }
            if (dynamic) {
              computedStyle[name] = { type: "dynamic", inherited: false };
              continue;
            }
            if (computed == null || important === true || importantStyles.get(name) === false) {
              computedStyle[name] = { type: "static", inherited: false, value };
              importantStyles.set(name, important);
            }
          }
        }
      }
      const styleDeclarations = node.attributes.style == null ? [] : parseStyleDeclarations(node.attributes.style);
      for (const { name, value, important } of styleDeclarations) {
        const computed = computedStyle[name];
        if (computed && computed.type === "dynamic") {
          continue;
        }
        if (computed == null || important === true || importantStyles.get(name) === false) {
          computedStyle[name] = { type: "static", inherited: false, value };
          importantStyles.set(name, important);
        }
      }
      return computedStyle;
    };
    var compareSpecificity = (a, b) => {
      for (let i = 0; i < 4; i += 1) {
        if (a[i] < b[i]) {
          return -1;
        } else if (a[i] > b[i]) {
          return 1;
        }
      }
      return 0;
    };
    exports.compareSpecificity = compareSpecificity;
    var collectStylesheet = (root) => {
      const rules = [];
      const parents = /* @__PURE__ */ new Map();
      visit(root, {
        element: {
          enter: (node, parentNode) => {
            parents.set(node, parentNode);
            if (node.name === "style") {
              const dynamic = node.attributes.media != null && node.attributes.media !== "all";
              if (node.attributes.type == null || node.attributes.type === "" || node.attributes.type === "text/css") {
                const children = node.children;
                for (const child of children) {
                  if (child.type === "text" || child.type === "cdata") {
                    rules.push(...parseStylesheet(child.value, dynamic));
                  }
                }
              }
            }
          }
        }
      });
      rules.sort((a, b) => compareSpecificity(a.specificity, b.specificity));
      return { rules, parents };
    };
    exports.collectStylesheet = collectStylesheet;
    var computeStyle = (stylesheet, node) => {
      const { parents } = stylesheet;
      const computedStyles = computeOwnStyle(stylesheet, node);
      let parent = parents.get(node);
      while (parent != null && parent.type !== "root") {
        const inheritedStyles = computeOwnStyle(stylesheet, parent);
        for (const [name, computed] of Object.entries(inheritedStyles)) {
          if (computedStyles[name] == null && // ignore not inheritable styles
          inheritableAttrs.includes(name) === true && presentationNonInheritableGroupAttrs.includes(name) === false) {
            computedStyles[name] = { ...computed, inherited: true };
          }
        }
        parent = parents.get(parent);
      }
      return computedStyles;
    };
    exports.computeStyle = computeStyle;
  }
});

// node_modules/svgo/plugins/inlineStyles.js
var require_inlineStyles = __commonJS({
  "node_modules/svgo/plugins/inlineStyles.js"(exports) {
    "use strict";
    var csstree = require_cjs();
    var {
      // @ts-ignore internal api
      syntax: { specificity }
    } = require_cjs3();
    var {
      visitSkip,
      querySelectorAll,
      detachNodeFromParent
    } = require_xast();
    var { compareSpecificity } = require_style();
    exports.name = "inlineStyles";
    exports.description = "inline styles (additional options)";
    exports.fn = (root, params) => {
      const {
        onlyMatchedOnce = true,
        removeMatchedSelectors = true,
        useMqs = ["", "screen"],
        usePseudos = [""]
      } = params;
      const styles = [];
      let selectors = [];
      return {
        element: {
          enter: (node, parentNode) => {
            if (node.name === "foreignObject") {
              return visitSkip;
            }
            if (node.name !== "style" || node.children.length === 0) {
              return;
            }
            if (node.attributes.type != null && node.attributes.type !== "" && node.attributes.type !== "text/css") {
              return;
            }
            let cssText = "";
            for (const child of node.children) {
              if (child.type === "text" || child.type === "cdata") {
                cssText += child.value;
              }
            }
            let cssAst = null;
            try {
              cssAst = csstree.parse(cssText, {
                parseValue: false,
                parseCustomProperty: false
              });
            } catch (e) {
              return;
            }
            if (cssAst.type === "StyleSheet") {
              styles.push({ node, parentNode, cssAst });
            }
            csstree.walk(cssAst, {
              visit: "Selector",
              enter(node2, item) {
                const atrule = this.atrule;
                const rule = this.rule;
                if (rule == null) {
                  return;
                }
                let mq = "";
                if (atrule != null) {
                  mq = atrule.name;
                  if (atrule.prelude != null) {
                    mq += ` ${csstree.generate(atrule.prelude)}`;
                  }
                }
                if (useMqs.includes(mq) === false) {
                  return;
                }
                const pseudos = [];
                if (node2.type === "Selector") {
                  node2.children.forEach((childNode, childItem, childList) => {
                    if (childNode.type === "PseudoClassSelector" || childNode.type === "PseudoElementSelector") {
                      pseudos.push({ item: childItem, list: childList });
                    }
                  });
                }
                const pseudoSelectors = csstree.generate({
                  type: "Selector",
                  children: new csstree.List().fromArray(
                    pseudos.map((pseudo) => pseudo.item.data)
                  )
                });
                if (usePseudos.includes(pseudoSelectors) === false) {
                  return;
                }
                for (const pseudo of pseudos) {
                  pseudo.list.remove(pseudo.item);
                }
                selectors.push({ node: node2, item, rule });
              }
            });
          }
        },
        root: {
          exit: () => {
            var _a;
            if (styles.length === 0) {
              return;
            }
            const sortedSelectors = [...selectors].sort((a, b) => {
              const aSpecificity = specificity(a.item.data);
              const bSpecificity = specificity(b.item.data);
              return compareSpecificity(aSpecificity, bSpecificity);
            }).reverse();
            for (const selector of sortedSelectors) {
              const selectorText = csstree.generate(selector.item.data);
              const matchedElements = [];
              try {
                for (const node of querySelectorAll(root, selectorText)) {
                  if (node.type === "element") {
                    matchedElements.push(node);
                  }
                }
              } catch (selectError) {
                continue;
              }
              if (matchedElements.length === 0) {
                continue;
              }
              if (onlyMatchedOnce && matchedElements.length > 1) {
                continue;
              }
              for (const selectedEl of matchedElements) {
                const styleDeclarationList = csstree.parse(
                  (_a = selectedEl.attributes.style) != null ? _a : "",
                  {
                    context: "declarationList",
                    parseValue: false
                  }
                );
                if (styleDeclarationList.type !== "DeclarationList") {
                  continue;
                }
                const styleDeclarationItems = /* @__PURE__ */ new Map();
                csstree.walk(styleDeclarationList, {
                  visit: "Declaration",
                  enter(node, item) {
                    styleDeclarationItems.set(node.property.toLowerCase(), item);
                  }
                });
                csstree.walk(selector.rule, {
                  visit: "Declaration",
                  enter(ruleDeclaration) {
                    const matchedItem = styleDeclarationItems.get(
                      ruleDeclaration.property
                    );
                    const ruleDeclarationItem = styleDeclarationList.children.createItem(ruleDeclaration);
                    if (matchedItem == null) {
                      styleDeclarationList.children.append(ruleDeclarationItem);
                    } else if (matchedItem.data.important !== true && ruleDeclaration.important === true) {
                      styleDeclarationList.children.replace(
                        matchedItem,
                        ruleDeclarationItem
                      );
                      styleDeclarationItems.set(
                        ruleDeclaration.property,
                        ruleDeclarationItem
                      );
                    }
                  }
                });
                const newStyles = csstree.generate(styleDeclarationList);
                if (newStyles.length !== 0) {
                  selectedEl.attributes.style = newStyles;
                }
              }
              if (removeMatchedSelectors && matchedElements.length !== 0 && selector.rule.prelude.type === "SelectorList") {
                selector.rule.prelude.children.remove(selector.item);
              }
              selector.matchedElements = matchedElements;
            }
            if (removeMatchedSelectors === false) {
              return;
            }
            for (const selector of sortedSelectors) {
              if (selector.matchedElements == null) {
                continue;
              }
              if (onlyMatchedOnce && selector.matchedElements.length > 1) {
                continue;
              }
              for (const selectedEl of selector.matchedElements) {
                const classList = new Set(
                  selectedEl.attributes.class == null ? null : selectedEl.attributes.class.split(" ")
                );
                for (const child of selector.node.children) {
                  if (child.type === "ClassSelector") {
                    classList.delete(child.name);
                  }
                }
                if (classList.size === 0) {
                  delete selectedEl.attributes.class;
                } else {
                  selectedEl.attributes.class = Array.from(classList).join(" ");
                }
                const firstSubSelector = selector.node.children.first;
                if (firstSubSelector != null && firstSubSelector.type === "IdSelector" && selectedEl.attributes.id === firstSubSelector.name) {
                  delete selectedEl.attributes.id;
                }
              }
            }
            for (const style of styles) {
              csstree.walk(style.cssAst, {
                visit: "Rule",
                enter: function(node, item, list) {
                  if (node.type === "Rule" && node.prelude.type === "SelectorList" && node.prelude.children.isEmpty) {
                    list.remove(item);
                  }
                }
              });
              if (style.cssAst.children.isEmpty) {
                detachNodeFromParent(style.node, style.parentNode);
              } else {
                const firstChild = style.node.children[0];
                if (firstChild.type === "text" || firstChild.type === "cdata") {
                  firstChild.value = csstree.generate(style.cssAst);
                }
              }
            }
          }
        }
      };
    };
  }
});

// node_modules/svgo/lib/svgo/tools.js
var require_tools = __commonJS({
  "node_modules/svgo/lib/svgo/tools.js"(exports) {
    "use strict";
    var { attrsGroups } = require_collections();
    exports.encodeSVGDatauri = (str, type) => {
      var prefix = "data:image/svg+xml";
      if (!type || type === "base64") {
        prefix += ";base64,";
        str = prefix + Buffer.from(str).toString("base64");
      } else if (type === "enc") {
        str = prefix + "," + encodeURIComponent(str);
      } else if (type === "unenc") {
        str = prefix + "," + str;
      }
      return str;
    };
    exports.decodeSVGDatauri = (str) => {
      var regexp = /data:image\/svg\+xml(;charset=[^;,]*)?(;base64)?,(.*)/;
      var match = regexp.exec(str);
      if (!match)
        return str;
      var data = match[3];
      if (match[2]) {
        str = Buffer.from(data, "base64").toString("utf8");
      } else if (data.charAt(0) === "%") {
        str = decodeURIComponent(data);
      } else if (data.charAt(0) === "<") {
        str = data;
      }
      return str;
    };
    exports.cleanupOutData = (data, params, command) => {
      let str = "";
      let delimiter;
      let prev;
      data.forEach((item, i) => {
        delimiter = " ";
        if (i == 0)
          delimiter = "";
        if (params.noSpaceAfterFlags && (command == "A" || command == "a")) {
          var pos = i % 7;
          if (pos == 4 || pos == 5)
            delimiter = "";
        }
        const itemStr = params.leadingZero ? removeLeadingZero(item) : item.toString();
        if (params.negativeExtraSpace && delimiter != "" && (item < 0 || itemStr.charAt(0) === "." && prev % 1 !== 0)) {
          delimiter = "";
        }
        prev = item;
        str += delimiter + itemStr;
      });
      return str;
    };
    var removeLeadingZero = (num) => {
      var strNum = num.toString();
      if (0 < num && num < 1 && strNum.charAt(0) === "0") {
        strNum = strNum.slice(1);
      } else if (-1 < num && num < 0 && strNum.charAt(1) === "0") {
        strNum = strNum.charAt(0) + strNum.slice(2);
      }
      return strNum;
    };
    exports.removeLeadingZero = removeLeadingZero;
    var hasScripts = (node) => {
      if (node.name === "script" && node.children.length !== 0) {
        return true;
      }
      if (node.name === "a") {
        const hasJsLinks = Object.entries(node.attributes).some(
          ([attrKey, attrValue]) => (attrKey === "href" || attrKey.endsWith(":href")) && attrValue != null && attrValue.trimStart().startsWith("javascript:")
        );
        if (hasJsLinks) {
          return true;
        }
      }
      const eventAttrs = [
        ...attrsGroups.animationEvent,
        ...attrsGroups.documentEvent,
        ...attrsGroups.documentElementEvent,
        ...attrsGroups.globalEvent,
        ...attrsGroups.graphicalEvent
      ];
      return eventAttrs.some((attr) => node.attributes[attr] != null);
    };
    exports.hasScripts = hasScripts;
  }
});

// node_modules/svgo/plugins/minifyStyles.js
var require_minifyStyles = __commonJS({
  "node_modules/svgo/plugins/minifyStyles.js"(exports) {
    "use strict";
    var csso = require_cjs3();
    var { detachNodeFromParent } = require_xast();
    var { hasScripts } = require_tools();
    exports.name = "minifyStyles";
    exports.description = "minifies styles and removes unused styles";
    exports.fn = (_root, { usage, ...params }) => {
      const styleElements = /* @__PURE__ */ new Map();
      const elementsWithStyleAttributes = [];
      const tagsUsage = /* @__PURE__ */ new Set();
      const idsUsage = /* @__PURE__ */ new Set();
      const classesUsage = /* @__PURE__ */ new Set();
      let enableTagsUsage = true;
      let enableIdsUsage = true;
      let enableClassesUsage = true;
      let forceUsageDeoptimized = false;
      if (typeof usage === "boolean") {
        enableTagsUsage = usage;
        enableIdsUsage = usage;
        enableClassesUsage = usage;
      } else if (usage) {
        enableTagsUsage = usage.tags == null ? true : usage.tags;
        enableIdsUsage = usage.ids == null ? true : usage.ids;
        enableClassesUsage = usage.classes == null ? true : usage.classes;
        forceUsageDeoptimized = usage.force == null ? false : usage.force;
      }
      let deoptimized = false;
      return {
        element: {
          enter: (node, parentNode) => {
            if (hasScripts(node)) {
              deoptimized = true;
            }
            tagsUsage.add(node.name);
            if (node.attributes.id != null) {
              idsUsage.add(node.attributes.id);
            }
            if (node.attributes.class != null) {
              for (const className of node.attributes.class.split(/\s+/)) {
                classesUsage.add(className);
              }
            }
            if (node.name === "style" && node.children.length !== 0) {
              styleElements.set(node, parentNode);
            } else if (node.attributes.style != null) {
              elementsWithStyleAttributes.push(node);
            }
          }
        },
        root: {
          exit: () => {
            const cssoUsage = {};
            if (!deoptimized || forceUsageDeoptimized) {
              if (enableTagsUsage) {
                cssoUsage.tags = Array.from(tagsUsage);
              }
              if (enableIdsUsage) {
                cssoUsage.ids = Array.from(idsUsage);
              }
              if (enableClassesUsage) {
                cssoUsage.classes = Array.from(classesUsage);
              }
            }
            for (const [styleNode, styleNodeParent] of styleElements.entries()) {
              if (styleNode.children[0].type === "text" || styleNode.children[0].type === "cdata") {
                const cssText = styleNode.children[0].value;
                const minified = csso.minify(cssText, {
                  ...params,
                  usage: cssoUsage
                }).css;
                if (minified.length === 0) {
                  detachNodeFromParent(styleNode, styleNodeParent);
                  continue;
                }
                if (cssText.indexOf(">") >= 0 || cssText.indexOf("<") >= 0) {
                  styleNode.children[0].type = "cdata";
                  styleNode.children[0].value = minified;
                } else {
                  styleNode.children[0].type = "text";
                  styleNode.children[0].value = minified;
                }
              }
            }
            for (const node of elementsWithStyleAttributes) {
              const elemStyle = node.attributes.style;
              node.attributes.style = csso.minifyBlock(elemStyle, {
                ...params
              }).css;
            }
          }
        }
      };
    };
  }
});

// node_modules/svgo/plugins/cleanupIds.js
var require_cleanupIds = __commonJS({
  "node_modules/svgo/plugins/cleanupIds.js"(exports) {
    "use strict";
    var { visitSkip } = require_xast();
    var { hasScripts } = require_tools();
    var { referencesProps } = require_collections();
    exports.name = "cleanupIds";
    exports.description = "removes unused IDs and minifies used";
    var regReferencesUrl = /\burl\((["'])?#(.+?)\1\)/g;
    var regReferencesHref = /^#(.+?)$/;
    var regReferencesBegin = /(\D+)\./;
    var generateIdChars = [
      "a",
      "b",
      "c",
      "d",
      "e",
      "f",
      "g",
      "h",
      "i",
      "j",
      "k",
      "l",
      "m",
      "n",
      "o",
      "p",
      "q",
      "r",
      "s",
      "t",
      "u",
      "v",
      "w",
      "x",
      "y",
      "z",
      "A",
      "B",
      "C",
      "D",
      "E",
      "F",
      "G",
      "H",
      "I",
      "J",
      "K",
      "L",
      "M",
      "N",
      "O",
      "P",
      "Q",
      "R",
      "S",
      "T",
      "U",
      "V",
      "W",
      "X",
      "Y",
      "Z"
    ];
    var maxIdIndex = generateIdChars.length - 1;
    var hasStringPrefix = (string, prefixes) => {
      for (const prefix of prefixes) {
        if (string.startsWith(prefix)) {
          return true;
        }
      }
      return false;
    };
    var generateId = (currentId) => {
      if (currentId == null) {
        return [0];
      }
      currentId[currentId.length - 1] += 1;
      for (let i = currentId.length - 1; i > 0; i--) {
        if (currentId[i] > maxIdIndex) {
          currentId[i] = 0;
          if (currentId[i - 1] !== void 0) {
            currentId[i - 1]++;
          }
        }
      }
      if (currentId[0] > maxIdIndex) {
        currentId[0] = 0;
        currentId.unshift(0);
      }
      return currentId;
    };
    var getIdString = (arr) => {
      return arr.map((i) => generateIdChars[i]).join("");
    };
    exports.fn = (_root, params) => {
      const {
        remove = true,
        minify = true,
        preserve = [],
        preservePrefixes = [],
        force = false
      } = params;
      const preserveIds = new Set(
        Array.isArray(preserve) ? preserve : preserve ? [preserve] : []
      );
      const preserveIdPrefixes = Array.isArray(preservePrefixes) ? preservePrefixes : preservePrefixes ? [preservePrefixes] : [];
      const nodeById = /* @__PURE__ */ new Map();
      const referencesById = /* @__PURE__ */ new Map();
      let deoptimized = false;
      return {
        element: {
          enter: (node) => {
            if (!force) {
              if (node.name === "style" && node.children.length !== 0 || hasScripts(node)) {
                deoptimized = true;
                return;
              }
              if (node.name === "svg") {
                let hasDefsOnly = true;
                for (const child of node.children) {
                  if (child.type !== "element" || child.name !== "defs") {
                    hasDefsOnly = false;
                    break;
                  }
                }
                if (hasDefsOnly) {
                  return visitSkip;
                }
              }
            }
            for (const [name, value] of Object.entries(node.attributes)) {
              if (name === "id") {
                const id = value;
                if (nodeById.has(id)) {
                  delete node.attributes.id;
                } else {
                  nodeById.set(id, node);
                }
              } else {
                let ids = [];
                if (referencesProps.includes(name)) {
                  const matches = value.matchAll(regReferencesUrl);
                  for (const match of matches) {
                    ids.push(match[2]);
                  }
                }
                if (name === "href" || name.endsWith(":href")) {
                  const match = value.match(regReferencesHref);
                  if (match != null) {
                    ids.push(match[1]);
                  }
                }
                if (name === "begin") {
                  const match = value.match(regReferencesBegin);
                  if (match != null) {
                    ids.push(match[1]);
                  }
                }
                for (const id of ids) {
                  let refs = referencesById.get(id);
                  if (refs == null) {
                    refs = [];
                    referencesById.set(id, refs);
                  }
                  refs.push({ element: node, name });
                }
              }
            }
          }
        },
        root: {
          exit: () => {
            if (deoptimized) {
              return;
            }
            const isIdPreserved = (id) => preserveIds.has(id) || hasStringPrefix(id, preserveIdPrefixes);
            let currentId = null;
            for (const [id, refs] of referencesById) {
              const node = nodeById.get(id);
              if (node != null) {
                if (minify && isIdPreserved(id) === false) {
                  let currentIdString = null;
                  do {
                    currentId = generateId(currentId);
                    currentIdString = getIdString(currentId);
                  } while (isIdPreserved(currentIdString) || referencesById.has(currentIdString) && nodeById.get(currentIdString) == null);
                  node.attributes.id = currentIdString;
                  for (const { element, name } of refs) {
                    const value = element.attributes[name];
                    if (value.includes("#")) {
                      element.attributes[name] = value.replace(
                        `#${id}`,
                        `#${currentIdString}`
                      );
                    } else {
                      element.attributes[name] = value.replace(
                        `${id}.`,
                        `${currentIdString}.`
                      );
                    }
                  }
                }
                nodeById.delete(id);
              }
            }
            if (remove) {
              for (const [id, node] of nodeById) {
                if (isIdPreserved(id) === false) {
                  delete node.attributes.id;
                }
              }
            }
          }
        }
      };
    };
  }
});

// node_modules/svgo/plugins/removeUselessDefs.js
var require_removeUselessDefs = __commonJS({
  "node_modules/svgo/plugins/removeUselessDefs.js"(exports) {
    "use strict";
    var { detachNodeFromParent } = require_xast();
    var { elemsGroups } = require_collections();
    exports.name = "removeUselessDefs";
    exports.description = "removes elements in <defs> without id";
    exports.fn = () => {
      return {
        element: {
          enter: (node, parentNode) => {
            if (node.name === "defs") {
              const usefulNodes = [];
              collectUsefulNodes(node, usefulNodes);
              if (usefulNodes.length === 0) {
                detachNodeFromParent(node, parentNode);
              }
              for (const usefulNode of usefulNodes) {
                Object.defineProperty(usefulNode, "parentNode", {
                  writable: true,
                  value: node
                });
              }
              node.children = usefulNodes;
            } else if (elemsGroups.nonRendering.includes(node.name) && node.attributes.id == null) {
              detachNodeFromParent(node, parentNode);
            }
          }
        }
      };
    };
    var collectUsefulNodes = (node, usefulNodes) => {
      for (const child of node.children) {
        if (child.type === "element") {
          if (child.attributes.id != null || child.name === "style") {
            usefulNodes.push(child);
          } else {
            collectUsefulNodes(child, usefulNodes);
          }
        }
      }
    };
  }
});

// node_modules/svgo/plugins/cleanupNumericValues.js
var require_cleanupNumericValues = __commonJS({
  "node_modules/svgo/plugins/cleanupNumericValues.js"(exports) {
    "use strict";
    var { removeLeadingZero } = require_tools();
    exports.name = "cleanupNumericValues";
    exports.description = "rounds numeric values to the fixed precision, removes default \u2018px\u2019 units";
    var regNumericValues = /^([-+]?\d*\.?\d+([eE][-+]?\d+)?)(px|pt|pc|mm|cm|m|in|ft|em|ex|%)?$/;
    var absoluteLengths = {
      // relative to px
      cm: 96 / 2.54,
      mm: 96 / 25.4,
      in: 96,
      pt: 4 / 3,
      pc: 16,
      px: 1
    };
    exports.fn = (_root, params) => {
      const {
        floatPrecision = 3,
        leadingZero = true,
        defaultPx = true,
        convertToPx = true
      } = params;
      return {
        element: {
          enter: (node) => {
            if (node.attributes.viewBox != null) {
              const nums = node.attributes.viewBox.split(/\s,?\s*|,\s*/g);
              node.attributes.viewBox = nums.map((value) => {
                const num = Number(value);
                return Number.isNaN(num) ? value : Number(num.toFixed(floatPrecision));
              }).join(" ");
            }
            for (const [name, value] of Object.entries(node.attributes)) {
              if (name === "version") {
                continue;
              }
              const match = value.match(regNumericValues);
              if (match) {
                let num = Number(Number(match[1]).toFixed(floatPrecision));
                let matchedUnit = match[3] || "";
                let units = matchedUnit;
                if (convertToPx && units !== "" && units in absoluteLengths) {
                  const pxNum = Number(
                    (absoluteLengths[units] * Number(match[1])).toFixed(
                      floatPrecision
                    )
                  );
                  if (pxNum.toString().length < match[0].length) {
                    num = pxNum;
                    units = "px";
                  }
                }
                let str;
                if (leadingZero) {
                  str = removeLeadingZero(num);
                } else {
                  str = num.toString();
                }
                if (defaultPx && units === "px") {
                  units = "";
                }
                node.attributes[name] = str + units;
              }
            }
          }
        }
      };
    };
  }
});

// node_modules/svgo/plugins/convertColors.js
var require_convertColors = __commonJS({
  "node_modules/svgo/plugins/convertColors.js"(exports) {
    "use strict";
    var collections = require_collections();
    exports.name = "convertColors";
    exports.description = "converts colors: rgb() to #rrggbb and #rrggbb to #rgb";
    var rNumber = "([+-]?(?:\\d*\\.\\d+|\\d+\\.?)%?)";
    var rComma = "\\s*,\\s*";
    var regRGB = new RegExp(
      "^rgb\\(\\s*" + rNumber + rComma + rNumber + rComma + rNumber + "\\s*\\)$"
    );
    var regHEX = /^#(([a-fA-F0-9])\2){3}$/;
    var convertRgbToHex = ([r, g, b]) => {
      const hexNumber = (
        // operator precedence is (+) > (<<) > (|)
        (256 + // [1][0]
        r << // [1][r]
        8 | // [1][r][0]
        g) << // [1][r][g]
        8 | // [1][r][g][0]
        b
      );
      return "#" + hexNumber.toString(16).slice(1).toUpperCase();
    };
    exports.fn = (_root, params) => {
      const {
        currentColor = false,
        names2hex = true,
        rgb2hex = true,
        shorthex = true,
        shortname = true
      } = params;
      return {
        element: {
          enter: (node) => {
            for (const [name, value] of Object.entries(node.attributes)) {
              if (collections.colorsProps.includes(name)) {
                let val = value;
                if (currentColor) {
                  let matched;
                  if (typeof currentColor === "string") {
                    matched = val === currentColor;
                  } else if (currentColor instanceof RegExp) {
                    matched = currentColor.exec(val) != null;
                  } else {
                    matched = val !== "none";
                  }
                  if (matched) {
                    val = "currentColor";
                  }
                }
                if (names2hex) {
                  const colorName = val.toLowerCase();
                  if (collections.colorsNames[colorName] != null) {
                    val = collections.colorsNames[colorName];
                  }
                }
                if (rgb2hex) {
                  let match = val.match(regRGB);
                  if (match != null) {
                    let nums = match.slice(1, 4).map((m) => {
                      let n;
                      if (m.indexOf("%") > -1) {
                        n = Math.round(parseFloat(m) * 2.55);
                      } else {
                        n = Number(m);
                      }
                      return Math.max(0, Math.min(n, 255));
                    });
                    val = convertRgbToHex(nums);
                  }
                }
                if (shorthex) {
                  let match = val.match(regHEX);
                  if (match != null) {
                    val = "#" + match[0][1] + match[0][3] + match[0][5];
                  }
                }
                if (shortname) {
                  const colorName = val.toLowerCase();
                  if (collections.colorsShortNames[colorName] != null) {
                    val = collections.colorsShortNames[colorName];
                  }
                }
                node.attributes[name] = val;
              }
            }
          }
        }
      };
    };
  }
});

// node_modules/svgo/plugins/removeUnknownsAndDefaults.js
var require_removeUnknownsAndDefaults = __commonJS({
  "node_modules/svgo/plugins/removeUnknownsAndDefaults.js"(exports) {
    "use strict";
    var { visitSkip, detachNodeFromParent } = require_xast();
    var { collectStylesheet, computeStyle } = require_style();
    var {
      elems,
      attrsGroups,
      elemsGroups,
      attrsGroupsDefaults,
      presentationNonInheritableGroupAttrs
    } = require_collections();
    exports.name = "removeUnknownsAndDefaults";
    exports.description = "removes unknown elements content and attributes, removes attrs with default values";
    var allowedChildrenPerElement = /* @__PURE__ */ new Map();
    var allowedAttributesPerElement = /* @__PURE__ */ new Map();
    var attributesDefaultsPerElement = /* @__PURE__ */ new Map();
    for (const [name, config] of Object.entries(elems)) {
      const allowedChildren = /* @__PURE__ */ new Set();
      if (config.content) {
        for (const elementName of config.content) {
          allowedChildren.add(elementName);
        }
      }
      if (config.contentGroups) {
        for (const contentGroupName of config.contentGroups) {
          const elemsGroup = elemsGroups[contentGroupName];
          if (elemsGroup) {
            for (const elementName of elemsGroup) {
              allowedChildren.add(elementName);
            }
          }
        }
      }
      const allowedAttributes = /* @__PURE__ */ new Set();
      if (config.attrs) {
        for (const attrName of config.attrs) {
          allowedAttributes.add(attrName);
        }
      }
      const attributesDefaults = /* @__PURE__ */ new Map();
      if (config.defaults) {
        for (const [attrName, defaultValue] of Object.entries(config.defaults)) {
          attributesDefaults.set(attrName, defaultValue);
        }
      }
      for (const attrsGroupName of config.attrsGroups) {
        const attrsGroup = attrsGroups[attrsGroupName];
        if (attrsGroup) {
          for (const attrName of attrsGroup) {
            allowedAttributes.add(attrName);
          }
        }
        const groupDefaults = attrsGroupsDefaults[attrsGroupName];
        if (groupDefaults) {
          for (const [attrName, defaultValue] of Object.entries(groupDefaults)) {
            attributesDefaults.set(attrName, defaultValue);
          }
        }
      }
      allowedChildrenPerElement.set(name, allowedChildren);
      allowedAttributesPerElement.set(name, allowedAttributes);
      attributesDefaultsPerElement.set(name, attributesDefaults);
    }
    exports.fn = (root, params) => {
      const {
        unknownContent = true,
        unknownAttrs = true,
        defaultAttrs = true,
        uselessOverrides = true,
        keepDataAttrs = true,
        keepAriaAttrs = true,
        keepRoleAttr = false
      } = params;
      const stylesheet = collectStylesheet(root);
      return {
        element: {
          enter: (node, parentNode) => {
            if (node.name.includes(":")) {
              return;
            }
            if (node.name === "foreignObject") {
              return visitSkip;
            }
            if (unknownContent && parentNode.type === "element") {
              const allowedChildren = allowedChildrenPerElement.get(
                parentNode.name
              );
              if (allowedChildren == null || allowedChildren.size === 0) {
                if (allowedChildrenPerElement.get(node.name) == null) {
                  detachNodeFromParent(node, parentNode);
                  return;
                }
              } else {
                if (allowedChildren.has(node.name) === false) {
                  detachNodeFromParent(node, parentNode);
                  return;
                }
              }
            }
            const allowedAttributes = allowedAttributesPerElement.get(node.name);
            const attributesDefaults = attributesDefaultsPerElement.get(node.name);
            const computedParentStyle = parentNode.type === "element" ? computeStyle(stylesheet, parentNode) : null;
            for (const [name, value] of Object.entries(node.attributes)) {
              if (keepDataAttrs && name.startsWith("data-")) {
                continue;
              }
              if (keepAriaAttrs && name.startsWith("aria-")) {
                continue;
              }
              if (keepRoleAttr && name === "role") {
                continue;
              }
              if (name === "xmlns") {
                continue;
              }
              if (name.includes(":")) {
                const [prefix] = name.split(":");
                if (prefix !== "xml" && prefix !== "xlink") {
                  continue;
                }
              }
              if (unknownAttrs && allowedAttributes && allowedAttributes.has(name) === false) {
                delete node.attributes[name];
              }
              if (defaultAttrs && node.attributes.id == null && attributesDefaults && attributesDefaults.get(name) === value) {
                if ((computedParentStyle == null ? void 0 : computedParentStyle[name]) == null) {
                  delete node.attributes[name];
                }
              }
              if (uselessOverrides && node.attributes.id == null) {
                const style = computedParentStyle == null ? void 0 : computedParentStyle[name];
                if (presentationNonInheritableGroupAttrs.includes(name) === false && style != null && style.type === "static" && style.value === value) {
                  delete node.attributes[name];
                }
              }
            }
          }
        }
      };
    };
  }
});

// node_modules/svgo/plugins/removeNonInheritableGroupAttrs.js
var require_removeNonInheritableGroupAttrs = __commonJS({
  "node_modules/svgo/plugins/removeNonInheritableGroupAttrs.js"(exports) {
    "use strict";
    var {
      inheritableAttrs,
      attrsGroups,
      presentationNonInheritableGroupAttrs
    } = require_collections();
    exports.name = "removeNonInheritableGroupAttrs";
    exports.description = "removes non-inheritable group\u2019s presentational attributes";
    exports.fn = () => {
      return {
        element: {
          enter: (node) => {
            if (node.name === "g") {
              for (const name of Object.keys(node.attributes)) {
                if (attrsGroups.presentation.includes(name) === true && inheritableAttrs.includes(name) === false && presentationNonInheritableGroupAttrs.includes(name) === false) {
                  delete node.attributes[name];
                }
              }
            }
          }
        }
      };
    };
  }
});

// node_modules/svgo/plugins/removeUselessStrokeAndFill.js
var require_removeUselessStrokeAndFill = __commonJS({
  "node_modules/svgo/plugins/removeUselessStrokeAndFill.js"(exports) {
    "use strict";
    var { visit, visitSkip, detachNodeFromParent } = require_xast();
    var { collectStylesheet, computeStyle } = require_style();
    var { hasScripts } = require_tools();
    var { elemsGroups } = require_collections();
    exports.name = "removeUselessStrokeAndFill";
    exports.description = "removes useless stroke and fill attributes";
    exports.fn = (root, params) => {
      const {
        stroke: removeStroke = true,
        fill: removeFill = true,
        removeNone = false
      } = params;
      let hasStyleOrScript = false;
      visit(root, {
        element: {
          enter: (node) => {
            if (node.name === "style" || hasScripts(node)) {
              hasStyleOrScript = true;
            }
          }
        }
      });
      if (hasStyleOrScript) {
        return null;
      }
      const stylesheet = collectStylesheet(root);
      return {
        element: {
          enter: (node, parentNode) => {
            if (node.attributes.id != null) {
              return visitSkip;
            }
            if (elemsGroups.shape.includes(node.name) == false) {
              return;
            }
            const computedStyle = computeStyle(stylesheet, node);
            const stroke = computedStyle.stroke;
            const strokeOpacity = computedStyle["stroke-opacity"];
            const strokeWidth = computedStyle["stroke-width"];
            const markerEnd = computedStyle["marker-end"];
            const fill = computedStyle.fill;
            const fillOpacity = computedStyle["fill-opacity"];
            const computedParentStyle = parentNode.type === "element" ? computeStyle(stylesheet, parentNode) : null;
            const parentStroke = computedParentStyle == null ? null : computedParentStyle.stroke;
            if (removeStroke) {
              if (stroke == null || stroke.type === "static" && stroke.value == "none" || strokeOpacity != null && strokeOpacity.type === "static" && strokeOpacity.value === "0" || strokeWidth != null && strokeWidth.type === "static" && strokeWidth.value === "0") {
                if (strokeWidth != null && strokeWidth.type === "static" && strokeWidth.value === "0" || markerEnd == null) {
                  for (const name of Object.keys(node.attributes)) {
                    if (name.startsWith("stroke")) {
                      delete node.attributes[name];
                    }
                  }
                  if (parentStroke != null && parentStroke.type === "static" && parentStroke.value !== "none") {
                    node.attributes.stroke = "none";
                  }
                }
              }
            }
            if (removeFill) {
              if (fill != null && fill.type === "static" && fill.value === "none" || fillOpacity != null && fillOpacity.type === "static" && fillOpacity.value === "0") {
                for (const name of Object.keys(node.attributes)) {
                  if (name.startsWith("fill-")) {
                    delete node.attributes[name];
                  }
                }
                if (fill == null || fill.type === "static" && fill.value !== "none") {
                  node.attributes.fill = "none";
                }
              }
            }
            if (removeNone) {
              if ((stroke == null || node.attributes.stroke === "none") && (fill != null && fill.type === "static" && fill.value === "none" || node.attributes.fill === "none")) {
                detachNodeFromParent(node, parentNode);
              }
            }
          }
        }
      };
    };
  }
});

// node_modules/svgo/plugins/removeViewBox.js
var require_removeViewBox = __commonJS({
  "node_modules/svgo/plugins/removeViewBox.js"(exports) {
    "use strict";
    exports.name = "removeViewBox";
    exports.description = "removes viewBox attribute when possible";
    var viewBoxElems = ["svg", "pattern", "symbol"];
    exports.fn = () => {
      return {
        element: {
          enter: (node, parentNode) => {
            if (viewBoxElems.includes(node.name) && node.attributes.viewBox != null && node.attributes.width != null && node.attributes.height != null) {
              if (node.name === "svg" && parentNode.type !== "root") {
                return;
              }
              const nums = node.attributes.viewBox.split(/[ ,]+/g);
              if (nums[0] === "0" && nums[1] === "0" && node.attributes.width.replace(/px$/, "") === nums[2] && // could use parseFloat too
              node.attributes.height.replace(/px$/, "") === nums[3]) {
                delete node.attributes.viewBox;
              }
            }
          }
        }
      };
    };
  }
});

// node_modules/svgo/plugins/cleanupEnableBackground.js
var require_cleanupEnableBackground = __commonJS({
  "node_modules/svgo/plugins/cleanupEnableBackground.js"(exports) {
    "use strict";
    var { visit } = require_xast();
    exports.name = "cleanupEnableBackground";
    exports.description = "remove or cleanup enable-background attribute when possible";
    exports.fn = (root) => {
      const regEnableBackground = /^new\s0\s0\s([-+]?\d*\.?\d+([eE][-+]?\d+)?)\s([-+]?\d*\.?\d+([eE][-+]?\d+)?)$/;
      let hasFilter = false;
      visit(root, {
        element: {
          enter: (node) => {
            if (node.name === "filter") {
              hasFilter = true;
            }
          }
        }
      });
      return {
        element: {
          enter: (node) => {
            if (node.attributes["enable-background"] == null) {
              return;
            }
            if (hasFilter) {
              if ((node.name === "svg" || node.name === "mask" || node.name === "pattern") && node.attributes.width != null && node.attributes.height != null) {
                const match = node.attributes["enable-background"].match(regEnableBackground);
                if (match != null && node.attributes.width === match[1] && node.attributes.height === match[3]) {
                  if (node.name === "svg") {
                    delete node.attributes["enable-background"];
                  } else {
                    node.attributes["enable-background"] = "new";
                  }
                }
              }
            } else {
              delete node.attributes["enable-background"];
            }
          }
        }
      };
    };
  }
});

// node_modules/svgo/lib/path.js
var require_path = __commonJS({
  "node_modules/svgo/lib/path.js"(exports) {
    "use strict";
    var { removeLeadingZero } = require_tools();
    var argsCountPerCommand = {
      M: 2,
      m: 2,
      Z: 0,
      z: 0,
      L: 2,
      l: 2,
      H: 1,
      h: 1,
      V: 1,
      v: 1,
      C: 6,
      c: 6,
      S: 4,
      s: 4,
      Q: 4,
      q: 4,
      T: 2,
      t: 2,
      A: 7,
      a: 7
    };
    var isCommand = (c) => {
      return c in argsCountPerCommand;
    };
    var isWsp = (c) => {
      const codePoint = c.codePointAt(0);
      return codePoint === 32 || codePoint === 9 || codePoint === 13 || codePoint === 10;
    };
    var isDigit = (c) => {
      const codePoint = c.codePointAt(0);
      if (codePoint == null) {
        return false;
      }
      return 48 <= codePoint && codePoint <= 57;
    };
    var readNumber = (string, cursor) => {
      let i = cursor;
      let value = "";
      let state = (
        /** @type {ReadNumberState} */
        "none"
      );
      for (; i < string.length; i += 1) {
        const c = string[i];
        if (c === "+" || c === "-") {
          if (state === "none") {
            state = "sign";
            value += c;
            continue;
          }
          if (state === "e") {
            state = "exponent_sign";
            value += c;
            continue;
          }
        }
        if (isDigit(c)) {
          if (state === "none" || state === "sign" || state === "whole") {
            state = "whole";
            value += c;
            continue;
          }
          if (state === "decimal_point" || state === "decimal") {
            state = "decimal";
            value += c;
            continue;
          }
          if (state === "e" || state === "exponent_sign" || state === "exponent") {
            state = "exponent";
            value += c;
            continue;
          }
        }
        if (c === ".") {
          if (state === "none" || state === "sign" || state === "whole") {
            state = "decimal_point";
            value += c;
            continue;
          }
        }
        if (c === "E" || c == "e") {
          if (state === "whole" || state === "decimal_point" || state === "decimal") {
            state = "e";
            value += c;
            continue;
          }
        }
        break;
      }
      const number = Number.parseFloat(value);
      if (Number.isNaN(number)) {
        return [cursor, null];
      } else {
        return [i - 1, number];
      }
    };
    var parsePathData = (string) => {
      const pathData = [];
      let command = null;
      let args = (
        /** @type {number[]} */
        []
      );
      let argsCount = 0;
      let canHaveComma = false;
      let hadComma = false;
      for (let i = 0; i < string.length; i += 1) {
        const c = string.charAt(i);
        if (isWsp(c)) {
          continue;
        }
        if (canHaveComma && c === ",") {
          if (hadComma) {
            break;
          }
          hadComma = true;
          continue;
        }
        if (isCommand(c)) {
          if (hadComma) {
            return pathData;
          }
          if (command == null) {
            if (c !== "M" && c !== "m") {
              return pathData;
            }
          } else {
            if (args.length !== 0) {
              return pathData;
            }
          }
          command = c;
          args = [];
          argsCount = argsCountPerCommand[command];
          canHaveComma = false;
          if (argsCount === 0) {
            pathData.push({ command, args });
          }
          continue;
        }
        if (command == null) {
          return pathData;
        }
        let newCursor = i;
        let number = null;
        if (command === "A" || command === "a") {
          const position = args.length;
          if (position === 0 || position === 1) {
            if (c !== "+" && c !== "-") {
              [newCursor, number] = readNumber(string, i);
            }
          }
          if (position === 2 || position === 5 || position === 6) {
            [newCursor, number] = readNumber(string, i);
          }
          if (position === 3 || position === 4) {
            if (c === "0") {
              number = 0;
            }
            if (c === "1") {
              number = 1;
            }
          }
        } else {
          [newCursor, number] = readNumber(string, i);
        }
        if (number == null) {
          return pathData;
        }
        args.push(number);
        canHaveComma = true;
        hadComma = false;
        i = newCursor;
        if (args.length === argsCount) {
          pathData.push({ command, args });
          if (command === "M") {
            command = "L";
          }
          if (command === "m") {
            command = "l";
          }
          args = [];
        }
      }
      return pathData;
    };
    exports.parsePathData = parsePathData;
    var stringifyNumber = (number, precision) => {
      if (precision != null) {
        const ratio = 10 ** precision;
        number = Math.round(number * ratio) / ratio;
      }
      return removeLeadingZero(number);
    };
    var stringifyArgs = (command, args, precision, disableSpaceAfterFlags) => {
      let result = "";
      let prev = "";
      for (let i = 0; i < args.length; i += 1) {
        const number = args[i];
        const numberString = stringifyNumber(number, precision);
        if (disableSpaceAfterFlags && (command === "A" || command === "a") && // consider combined arcs
        (i % 7 === 4 || i % 7 === 5)) {
          result += numberString;
        } else if (i === 0 || numberString.startsWith("-")) {
          result += numberString;
        } else if (prev.includes(".") && numberString.startsWith(".")) {
          result += numberString;
        } else {
          result += ` ${numberString}`;
        }
        prev = numberString;
      }
      return result;
    };
    var stringifyPathData = ({ pathData, precision, disableSpaceAfterFlags }) => {
      let combined = [];
      for (let i = 0; i < pathData.length; i += 1) {
        const { command, args } = pathData[i];
        if (i === 0) {
          combined.push({ command, args });
        } else {
          const last = combined[combined.length - 1];
          if (i === 1) {
            if (command === "L") {
              last.command = "M";
            }
            if (command === "l") {
              last.command = "m";
            }
          }
          if (last.command === command && last.command !== "M" && last.command !== "m" || // combine matching moveto and lineto sequences
          last.command === "M" && command === "L" || last.command === "m" && command === "l") {
            last.args = [...last.args, ...args];
          } else {
            combined.push({ command, args });
          }
        }
      }
      let result = "";
      for (const { command, args } of combined) {
        result += command + stringifyArgs(command, args, precision, disableSpaceAfterFlags);
      }
      return result;
    };
    exports.stringifyPathData = stringifyPathData;
  }
});

// node_modules/svgo/plugins/removeHiddenElems.js
var require_removeHiddenElems = __commonJS({
  "node_modules/svgo/plugins/removeHiddenElems.js"(exports) {
    "use strict";
    var { elemsGroups, referencesProps } = require_collections();
    var {
      visit,
      visitSkip,
      querySelector,
      detachNodeFromParent
    } = require_xast();
    var { collectStylesheet, computeStyle } = require_style();
    var { parsePathData } = require_path();
    var nonRendering = elemsGroups.nonRendering;
    exports.name = "removeHiddenElems";
    exports.description = "removes hidden elements (zero sized, with absent attributes)";
    exports.fn = (root, params) => {
      const {
        isHidden = true,
        displayNone = true,
        opacity0 = true,
        circleR0 = true,
        ellipseRX0 = true,
        ellipseRY0 = true,
        rectWidth0 = true,
        rectHeight0 = true,
        patternWidth0 = true,
        patternHeight0 = true,
        imageWidth0 = true,
        imageHeight0 = true,
        pathEmptyD = true,
        polylineEmptyPoints = true,
        polygonEmptyPoints = true
      } = params;
      const stylesheet = collectStylesheet(root);
      const nonRenderedNodes = /* @__PURE__ */ new Map();
      visit(root, {
        element: {
          enter: (node, parentNode) => {
            if (nonRendering.includes(node.name)) {
              nonRenderedNodes.set(node, parentNode);
              return visitSkip;
            }
            const computedStyle = computeStyle(stylesheet, node);
            if (opacity0 && computedStyle.opacity && computedStyle.opacity.type === "static" && computedStyle.opacity.value === "0") {
              detachNodeFromParent(node, parentNode);
              return;
            }
          }
        }
      });
      return {
        element: {
          enter: (node, parentNode) => {
            const computedStyle = computeStyle(stylesheet, node);
            if (isHidden && computedStyle.visibility && computedStyle.visibility.type === "static" && computedStyle.visibility.value === "hidden" && // keep if any descendant enables visibility
            querySelector(node, "[visibility=visible]") == null) {
              detachNodeFromParent(node, parentNode);
              return;
            }
            if (displayNone && computedStyle.display && computedStyle.display.type === "static" && computedStyle.display.value === "none" && // markers with display: none still rendered
            node.name !== "marker") {
              detachNodeFromParent(node, parentNode);
              return;
            }
            if (circleR0 && node.name === "circle" && node.children.length === 0 && node.attributes.r === "0") {
              detachNodeFromParent(node, parentNode);
              return;
            }
            if (ellipseRX0 && node.name === "ellipse" && node.children.length === 0 && node.attributes.rx === "0") {
              detachNodeFromParent(node, parentNode);
              return;
            }
            if (ellipseRY0 && node.name === "ellipse" && node.children.length === 0 && node.attributes.ry === "0") {
              detachNodeFromParent(node, parentNode);
              return;
            }
            if (rectWidth0 && node.name === "rect" && node.children.length === 0 && node.attributes.width === "0") {
              detachNodeFromParent(node, parentNode);
              return;
            }
            if (rectHeight0 && rectWidth0 && node.name === "rect" && node.children.length === 0 && node.attributes.height === "0") {
              detachNodeFromParent(node, parentNode);
              return;
            }
            if (patternWidth0 && node.name === "pattern" && node.attributes.width === "0") {
              detachNodeFromParent(node, parentNode);
              return;
            }
            if (patternHeight0 && node.name === "pattern" && node.attributes.height === "0") {
              detachNodeFromParent(node, parentNode);
              return;
            }
            if (imageWidth0 && node.name === "image" && node.attributes.width === "0") {
              detachNodeFromParent(node, parentNode);
              return;
            }
            if (imageHeight0 && node.name === "image" && node.attributes.height === "0") {
              detachNodeFromParent(node, parentNode);
              return;
            }
            if (pathEmptyD && node.name === "path") {
              if (node.attributes.d == null) {
                detachNodeFromParent(node, parentNode);
                return;
              }
              const pathData = parsePathData(node.attributes.d);
              if (pathData.length === 0) {
                detachNodeFromParent(node, parentNode);
                return;
              }
              if (pathData.length === 1 && computedStyle["marker-start"] == null && computedStyle["marker-end"] == null) {
                detachNodeFromParent(node, parentNode);
                return;
              }
              return;
            }
            if (polylineEmptyPoints && node.name === "polyline" && node.attributes.points == null) {
              detachNodeFromParent(node, parentNode);
              return;
            }
            if (polygonEmptyPoints && node.name === "polygon" && node.attributes.points == null) {
              detachNodeFromParent(node, parentNode);
              return;
            }
          },
          exit: (node, parentNode) => {
            if (node.name !== "svg" || parentNode.type !== "root") {
              return;
            }
            for (const [
              nonRenderedNode,
              nonRenderedParent
            ] of nonRenderedNodes.entries()) {
              if (nonRenderedNode.attributes.id == null) {
                detachNodeFromParent(node, nonRenderedParent);
                continue;
              }
              const selector = referencesProps.map((attr) => `[${attr}="url(#${nonRenderedNode.attributes.id})"]`).join(",");
              const element = querySelector(root, selector);
              if (element == null) {
                detachNodeFromParent(node, nonRenderedParent);
              }
            }
          }
        }
      };
    };
  }
});

// node_modules/svgo/plugins/removeEmptyText.js
var require_removeEmptyText = __commonJS({
  "node_modules/svgo/plugins/removeEmptyText.js"(exports) {
    "use strict";
    var { detachNodeFromParent } = require_xast();
    exports.name = "removeEmptyText";
    exports.description = "removes empty <text> elements";
    exports.fn = (root, params) => {
      const { text = true, tspan = true, tref = true } = params;
      return {
        element: {
          enter: (node, parentNode) => {
            if (text && node.name === "text" && node.children.length === 0) {
              detachNodeFromParent(node, parentNode);
            }
            if (tspan && node.name === "tspan" && node.children.length === 0) {
              detachNodeFromParent(node, parentNode);
            }
            if (tref && node.name === "tref" && node.attributes["xlink:href"] == null) {
              detachNodeFromParent(node, parentNode);
            }
          }
        }
      };
    };
  }
});

// node_modules/svgo/plugins/convertShapeToPath.js
var require_convertShapeToPath = __commonJS({
  "node_modules/svgo/plugins/convertShapeToPath.js"(exports) {
    "use strict";
    var { stringifyPathData } = require_path();
    var { detachNodeFromParent } = require_xast();
    exports.name = "convertShapeToPath";
    exports.description = "converts basic shapes to more compact path form";
    var regNumber = /[-+]?(?:\d*\.\d+|\d+\.?)(?:[eE][-+]?\d+)?/g;
    exports.fn = (root, params) => {
      const { convertArcs = false, floatPrecision: precision } = params;
      return {
        element: {
          enter: (node, parentNode) => {
            if (node.name === "rect" && node.attributes.width != null && node.attributes.height != null && node.attributes.rx == null && node.attributes.ry == null) {
              const x = Number(node.attributes.x || "0");
              const y = Number(node.attributes.y || "0");
              const width = Number(node.attributes.width);
              const height = Number(node.attributes.height);
              if (Number.isNaN(x - y + width - height))
                return;
              const pathData = [
                { command: "M", args: [x, y] },
                { command: "H", args: [x + width] },
                { command: "V", args: [y + height] },
                { command: "H", args: [x] },
                { command: "z", args: [] }
              ];
              node.name = "path";
              node.attributes.d = stringifyPathData({ pathData, precision });
              delete node.attributes.x;
              delete node.attributes.y;
              delete node.attributes.width;
              delete node.attributes.height;
            }
            if (node.name === "line") {
              const x1 = Number(node.attributes.x1 || "0");
              const y1 = Number(node.attributes.y1 || "0");
              const x2 = Number(node.attributes.x2 || "0");
              const y2 = Number(node.attributes.y2 || "0");
              if (Number.isNaN(x1 - y1 + x2 - y2))
                return;
              const pathData = [
                { command: "M", args: [x1, y1] },
                { command: "L", args: [x2, y2] }
              ];
              node.name = "path";
              node.attributes.d = stringifyPathData({ pathData, precision });
              delete node.attributes.x1;
              delete node.attributes.y1;
              delete node.attributes.x2;
              delete node.attributes.y2;
            }
            if ((node.name === "polyline" || node.name === "polygon") && node.attributes.points != null) {
              const coords = (node.attributes.points.match(regNumber) || []).map(
                Number
              );
              if (coords.length < 4) {
                detachNodeFromParent(node, parentNode);
                return;
              }
              const pathData = [];
              for (let i = 0; i < coords.length; i += 2) {
                pathData.push({
                  command: i === 0 ? "M" : "L",
                  args: coords.slice(i, i + 2)
                });
              }
              if (node.name === "polygon") {
                pathData.push({ command: "z", args: [] });
              }
              node.name = "path";
              node.attributes.d = stringifyPathData({ pathData, precision });
              delete node.attributes.points;
            }
            if (node.name === "circle" && convertArcs) {
              const cx = Number(node.attributes.cx || "0");
              const cy = Number(node.attributes.cy || "0");
              const r = Number(node.attributes.r || "0");
              if (Number.isNaN(cx - cy + r)) {
                return;
              }
              const pathData = [
                { command: "M", args: [cx, cy - r] },
                { command: "A", args: [r, r, 0, 1, 0, cx, cy + r] },
                { command: "A", args: [r, r, 0, 1, 0, cx, cy - r] },
                { command: "z", args: [] }
              ];
              node.name = "path";
              node.attributes.d = stringifyPathData({ pathData, precision });
              delete node.attributes.cx;
              delete node.attributes.cy;
              delete node.attributes.r;
            }
            if (node.name === "ellipse" && convertArcs) {
              const ecx = Number(node.attributes.cx || "0");
              const ecy = Number(node.attributes.cy || "0");
              const rx = Number(node.attributes.rx || "0");
              const ry = Number(node.attributes.ry || "0");
              if (Number.isNaN(ecx - ecy + rx - ry)) {
                return;
              }
              const pathData = [
                { command: "M", args: [ecx, ecy - ry] },
                { command: "A", args: [rx, ry, 0, 1, 0, ecx, ecy + ry] },
                { command: "A", args: [rx, ry, 0, 1, 0, ecx, ecy - ry] },
                { command: "z", args: [] }
              ];
              node.name = "path";
              node.attributes.d = stringifyPathData({ pathData, precision });
              delete node.attributes.cx;
              delete node.attributes.cy;
              delete node.attributes.rx;
              delete node.attributes.ry;
            }
          }
        }
      };
    };
  }
});

// node_modules/svgo/plugins/convertEllipseToCircle.js
var require_convertEllipseToCircle = __commonJS({
  "node_modules/svgo/plugins/convertEllipseToCircle.js"(exports) {
    "use strict";
    exports.name = "convertEllipseToCircle";
    exports.description = "converts non-eccentric <ellipse>s to <circle>s";
    exports.fn = () => {
      return {
        element: {
          enter: (node) => {
            if (node.name === "ellipse") {
              const rx = node.attributes.rx || "0";
              const ry = node.attributes.ry || "0";
              if (rx === ry || rx === "auto" || ry === "auto") {
                node.name = "circle";
                const radius = rx === "auto" ? ry : rx;
                delete node.attributes.rx;
                delete node.attributes.ry;
                node.attributes.r = radius;
              }
            }
          }
        }
      };
    };
  }
});

// node_modules/svgo/plugins/moveElemsAttrsToGroup.js
var require_moveElemsAttrsToGroup = __commonJS({
  "node_modules/svgo/plugins/moveElemsAttrsToGroup.js"(exports) {
    "use strict";
    var { visit } = require_xast();
    var { inheritableAttrs, pathElems } = require_collections();
    exports.name = "moveElemsAttrsToGroup";
    exports.description = "Move common attributes of group children to the group";
    exports.fn = (root) => {
      let deoptimizedWithStyles = false;
      visit(root, {
        element: {
          enter: (node) => {
            if (node.name === "style") {
              deoptimizedWithStyles = true;
            }
          }
        }
      });
      return {
        element: {
          exit: (node) => {
            if (node.name !== "g" || node.children.length <= 1) {
              return;
            }
            if (deoptimizedWithStyles) {
              return;
            }
            const commonAttributes = /* @__PURE__ */ new Map();
            let initial = true;
            let everyChildIsPath = true;
            for (const child of node.children) {
              if (child.type === "element") {
                if (pathElems.includes(child.name) === false) {
                  everyChildIsPath = false;
                }
                if (initial) {
                  initial = false;
                  for (const [name, value] of Object.entries(child.attributes)) {
                    if (inheritableAttrs.includes(name)) {
                      commonAttributes.set(name, value);
                    }
                  }
                } else {
                  for (const [name, value] of commonAttributes) {
                    if (child.attributes[name] !== value) {
                      commonAttributes.delete(name);
                    }
                  }
                }
              }
            }
            if (node.attributes["clip-path"] != null || node.attributes.mask != null) {
              commonAttributes.delete("transform");
            }
            if (everyChildIsPath) {
              commonAttributes.delete("transform");
            }
            for (const [name, value] of commonAttributes) {
              if (name === "transform") {
                if (node.attributes.transform != null) {
                  node.attributes.transform = `${node.attributes.transform} ${value}`;
                } else {
                  node.attributes.transform = value;
                }
              } else {
                node.attributes[name] = value;
              }
            }
            for (const child of node.children) {
              if (child.type === "element") {
                for (const [name] of commonAttributes) {
                  delete child.attributes[name];
                }
              }
            }
          }
        }
      };
    };
  }
});

// node_modules/svgo/plugins/moveGroupAttrsToElems.js
var require_moveGroupAttrsToElems = __commonJS({
  "node_modules/svgo/plugins/moveGroupAttrsToElems.js"(exports) {
    "use strict";
    var { pathElems, referencesProps } = require_collections();
    exports.name = "moveGroupAttrsToElems";
    exports.description = "moves some group attributes to the content elements";
    var pathElemsWithGroupsAndText = [...pathElems, "g", "text"];
    exports.fn = () => {
      return {
        element: {
          enter: (node) => {
            if (node.name === "g" && node.children.length !== 0 && node.attributes.transform != null && Object.entries(node.attributes).some(
              ([name, value]) => referencesProps.includes(name) && value.includes("url(")
            ) === false && node.children.every(
              (child) => child.type === "element" && pathElemsWithGroupsAndText.includes(child.name) && child.attributes.id == null
            )) {
              for (const child of node.children) {
                const value = node.attributes.transform;
                if (child.type === "element") {
                  if (child.attributes.transform != null) {
                    child.attributes.transform = `${value} ${child.attributes.transform}`;
                  } else {
                    child.attributes.transform = value;
                  }
                }
              }
              delete node.attributes.transform;
            }
          }
        }
      };
    };
  }
});

// node_modules/svgo/plugins/collapseGroups.js
var require_collapseGroups = __commonJS({
  "node_modules/svgo/plugins/collapseGroups.js"(exports) {
    "use strict";
    var { inheritableAttrs, elemsGroups } = require_collections();
    exports.name = "collapseGroups";
    exports.description = "collapses useless groups";
    var hasAnimatedAttr = (node, name) => {
      if (node.type === "element") {
        if (elemsGroups.animation.includes(node.name) && node.attributes.attributeName === name) {
          return true;
        }
        for (const child of node.children) {
          if (hasAnimatedAttr(child, name)) {
            return true;
          }
        }
      }
      return false;
    };
    exports.fn = () => {
      return {
        element: {
          exit: (node, parentNode) => {
            if (parentNode.type === "root" || parentNode.name === "switch") {
              return;
            }
            if (node.name !== "g" || node.children.length === 0) {
              return;
            }
            if (Object.keys(node.attributes).length !== 0 && node.children.length === 1) {
              const firstChild = node.children[0];
              if (firstChild.type === "element" && firstChild.attributes.id == null && node.attributes.filter == null && (node.attributes.class == null || firstChild.attributes.class == null) && (node.attributes["clip-path"] == null && node.attributes.mask == null || firstChild.name === "g" && node.attributes.transform == null && firstChild.attributes.transform == null)) {
                for (const [name, value] of Object.entries(node.attributes)) {
                  if (hasAnimatedAttr(firstChild, name)) {
                    return;
                  }
                  if (firstChild.attributes[name] == null) {
                    firstChild.attributes[name] = value;
                  } else if (name === "transform") {
                    firstChild.attributes[name] = value + " " + firstChild.attributes[name];
                  } else if (firstChild.attributes[name] === "inherit") {
                    firstChild.attributes[name] = value;
                  } else if (inheritableAttrs.includes(name) === false && firstChild.attributes[name] !== value) {
                    return;
                  }
                  delete node.attributes[name];
                }
              }
            }
            if (Object.keys(node.attributes).length === 0) {
              for (const child of node.children) {
                if (child.type === "element" && elemsGroups.animation.includes(child.name)) {
                  return;
                }
              }
              const index = parentNode.children.indexOf(node);
              parentNode.children.splice(index, 1, ...node.children);
              for (const child of node.children) {
                Object.defineProperty(child, "parentNode", {
                  writable: true,
                  value: parentNode
                });
              }
            }
          }
        }
      };
    };
  }
});

// node_modules/svgo/plugins/_path.js
var require_path2 = __commonJS({
  "node_modules/svgo/plugins/_path.js"(exports) {
    "use strict";
    var { parsePathData, stringifyPathData } = require_path();
    var prevCtrlPoint;
    var path2js = (path) => {
      if (path.pathJS)
        return path.pathJS;
      const pathData = [];
      const newPathData = parsePathData(path.attributes.d);
      for (const { command, args } of newPathData) {
        pathData.push({ command, args });
      }
      if (pathData.length && pathData[0].command == "m") {
        pathData[0].command = "M";
      }
      path.pathJS = pathData;
      return pathData;
    };
    exports.path2js = path2js;
    var convertRelativeToAbsolute = (data) => {
      const newData = [];
      let start = [0, 0];
      let cursor = [0, 0];
      for (let { command, args } of data) {
        args = args.slice();
        if (command === "m") {
          args[0] += cursor[0];
          args[1] += cursor[1];
          command = "M";
        }
        if (command === "M") {
          cursor[0] = args[0];
          cursor[1] = args[1];
          start[0] = cursor[0];
          start[1] = cursor[1];
        }
        if (command === "h") {
          args[0] += cursor[0];
          command = "H";
        }
        if (command === "H") {
          cursor[0] = args[0];
        }
        if (command === "v") {
          args[0] += cursor[1];
          command = "V";
        }
        if (command === "V") {
          cursor[1] = args[0];
        }
        if (command === "l") {
          args[0] += cursor[0];
          args[1] += cursor[1];
          command = "L";
        }
        if (command === "L") {
          cursor[0] = args[0];
          cursor[1] = args[1];
        }
        if (command === "c") {
          args[0] += cursor[0];
          args[1] += cursor[1];
          args[2] += cursor[0];
          args[3] += cursor[1];
          args[4] += cursor[0];
          args[5] += cursor[1];
          command = "C";
        }
        if (command === "C") {
          cursor[0] = args[4];
          cursor[1] = args[5];
        }
        if (command === "s") {
          args[0] += cursor[0];
          args[1] += cursor[1];
          args[2] += cursor[0];
          args[3] += cursor[1];
          command = "S";
        }
        if (command === "S") {
          cursor[0] = args[2];
          cursor[1] = args[3];
        }
        if (command === "q") {
          args[0] += cursor[0];
          args[1] += cursor[1];
          args[2] += cursor[0];
          args[3] += cursor[1];
          command = "Q";
        }
        if (command === "Q") {
          cursor[0] = args[2];
          cursor[1] = args[3];
        }
        if (command === "t") {
          args[0] += cursor[0];
          args[1] += cursor[1];
          command = "T";
        }
        if (command === "T") {
          cursor[0] = args[0];
          cursor[1] = args[1];
        }
        if (command === "a") {
          args[5] += cursor[0];
          args[6] += cursor[1];
          command = "A";
        }
        if (command === "A") {
          cursor[0] = args[5];
          cursor[1] = args[6];
        }
        if (command === "z" || command === "Z") {
          cursor[0] = start[0];
          cursor[1] = start[1];
          command = "z";
        }
        newData.push({ command, args });
      }
      return newData;
    };
    exports.js2path = function(path, data, params) {
      path.pathJS = data;
      const pathData = [];
      for (const item of data) {
        if (pathData.length !== 0 && (item.command === "M" || item.command === "m")) {
          const last = pathData[pathData.length - 1];
          if (last.command === "M" || last.command === "m") {
            pathData.pop();
          }
        }
        pathData.push({
          command: item.command,
          args: item.args
        });
      }
      path.attributes.d = stringifyPathData({
        pathData,
        precision: params.floatPrecision,
        disableSpaceAfterFlags: params.noSpaceAfterFlags
      });
    };
    function set(dest, source) {
      dest[0] = source[source.length - 2];
      dest[1] = source[source.length - 1];
      return dest;
    }
    exports.intersects = function(path1, path2) {
      const points1 = gatherPoints(convertRelativeToAbsolute(path1));
      const points2 = gatherPoints(convertRelativeToAbsolute(path2));
      if (points1.maxX <= points2.minX || points2.maxX <= points1.minX || points1.maxY <= points2.minY || points2.maxY <= points1.minY || points1.list.every((set1) => {
        return points2.list.every((set2) => {
          return set1.list[set1.maxX][0] <= set2.list[set2.minX][0] || set2.list[set2.maxX][0] <= set1.list[set1.minX][0] || set1.list[set1.maxY][1] <= set2.list[set2.minY][1] || set2.list[set2.maxY][1] <= set1.list[set1.minY][1];
        });
      }))
        return false;
      const hullNest1 = points1.list.map(convexHull);
      const hullNest2 = points2.list.map(convexHull);
      return hullNest1.some(function(hull1) {
        if (hull1.list.length < 3)
          return false;
        return hullNest2.some(function(hull2) {
          if (hull2.list.length < 3)
            return false;
          var simplex = [getSupport(hull1, hull2, [1, 0])], direction = minus(simplex[0]);
          var iterations = 1e4;
          while (true) {
            if (iterations-- == 0) {
              console.error(
                "Error: infinite loop while processing mergePaths plugin."
              );
              return true;
            }
            simplex.push(getSupport(hull1, hull2, direction));
            if (dot(direction, simplex[simplex.length - 1]) <= 0)
              return false;
            if (processSimplex(simplex, direction))
              return true;
          }
        });
      });
      function getSupport(a, b, direction) {
        return sub(supportPoint(a, direction), supportPoint(b, minus(direction)));
      }
      function supportPoint(polygon, direction) {
        var index = direction[1] >= 0 ? direction[0] < 0 ? polygon.maxY : polygon.maxX : direction[0] < 0 ? polygon.minX : polygon.minY, max = -Infinity, value;
        while ((value = dot(polygon.list[index], direction)) > max) {
          max = value;
          index = ++index % polygon.list.length;
        }
        return polygon.list[(index || polygon.list.length) - 1];
      }
    };
    function processSimplex(simplex, direction) {
      if (simplex.length == 2) {
        let a = simplex[1], b = simplex[0], AO = minus(simplex[1]), AB = sub(b, a);
        if (dot(AO, AB) > 0) {
          set(direction, orth(AB, a));
        } else {
          set(direction, AO);
          simplex.shift();
        }
      } else {
        let a = simplex[2], b = simplex[1], c = simplex[0], AB = sub(b, a), AC = sub(c, a), AO = minus(a), ACB = orth(AB, AC), ABC = orth(AC, AB);
        if (dot(ACB, AO) > 0) {
          if (dot(AB, AO) > 0) {
            set(direction, ACB);
            simplex.shift();
          } else {
            set(direction, AO);
            simplex.splice(0, 2);
          }
        } else if (dot(ABC, AO) > 0) {
          if (dot(AC, AO) > 0) {
            set(direction, ABC);
            simplex.splice(1, 1);
          } else {
            set(direction, AO);
            simplex.splice(0, 2);
          }
        } else
          return true;
      }
      return false;
    }
    function minus(v) {
      return [-v[0], -v[1]];
    }
    function sub(v1, v2) {
      return [v1[0] - v2[0], v1[1] - v2[1]];
    }
    function dot(v1, v2) {
      return v1[0] * v2[0] + v1[1] * v2[1];
    }
    function orth(v, from) {
      var o = [-v[1], v[0]];
      return dot(o, minus(from)) < 0 ? minus(o) : o;
    }
    function gatherPoints(pathData) {
      const points = { list: [], minX: 0, minY: 0, maxX: 0, maxY: 0 };
      const addPoint = (path, point) => {
        if (!path.list.length || point[1] > path.list[path.maxY][1]) {
          path.maxY = path.list.length;
          points.maxY = points.list.length ? Math.max(point[1], points.maxY) : point[1];
        }
        if (!path.list.length || point[0] > path.list[path.maxX][0]) {
          path.maxX = path.list.length;
          points.maxX = points.list.length ? Math.max(point[0], points.maxX) : point[0];
        }
        if (!path.list.length || point[1] < path.list[path.minY][1]) {
          path.minY = path.list.length;
          points.minY = points.list.length ? Math.min(point[1], points.minY) : point[1];
        }
        if (!path.list.length || point[0] < path.list[path.minX][0]) {
          path.minX = path.list.length;
          points.minX = points.list.length ? Math.min(point[0], points.minX) : point[0];
        }
        path.list.push(point);
      };
      for (let i = 0; i < pathData.length; i += 1) {
        const pathDataItem = pathData[i];
        let subPath = points.list.length === 0 ? { list: [], minX: 0, minY: 0, maxX: 0, maxY: 0 } : points.list[points.list.length - 1];
        let prev = i === 0 ? null : pathData[i - 1];
        let basePoint = subPath.list.length === 0 ? null : subPath.list[subPath.list.length - 1];
        let data = pathDataItem.args;
        let ctrlPoint = basePoint;
        const toAbsolute = (n, i2) => n + (basePoint == null ? 0 : basePoint[i2 % 2]);
        switch (pathDataItem.command) {
          case "M":
            subPath = { list: [], minX: 0, minY: 0, maxX: 0, maxY: 0 };
            points.list.push(subPath);
            break;
          case "H":
            if (basePoint != null) {
              addPoint(subPath, [data[0], basePoint[1]]);
            }
            break;
          case "V":
            if (basePoint != null) {
              addPoint(subPath, [basePoint[0], data[0]]);
            }
            break;
          case "Q":
            addPoint(subPath, data.slice(0, 2));
            prevCtrlPoint = [data[2] - data[0], data[3] - data[1]];
            break;
          case "T":
            if (basePoint != null && prev != null && (prev.command == "Q" || prev.command == "T")) {
              ctrlPoint = [
                basePoint[0] + prevCtrlPoint[0],
                basePoint[1] + prevCtrlPoint[1]
              ];
              addPoint(subPath, ctrlPoint);
              prevCtrlPoint = [data[0] - ctrlPoint[0], data[1] - ctrlPoint[1]];
            }
            break;
          case "C":
            if (basePoint != null) {
              addPoint(subPath, [
                0.5 * (basePoint[0] + data[0]),
                0.5 * (basePoint[1] + data[1])
              ]);
            }
            addPoint(subPath, [
              0.5 * (data[0] + data[2]),
              0.5 * (data[1] + data[3])
            ]);
            addPoint(subPath, [
              0.5 * (data[2] + data[4]),
              0.5 * (data[3] + data[5])
            ]);
            prevCtrlPoint = [data[4] - data[2], data[5] - data[3]];
            break;
          case "S":
            if (basePoint != null && prev != null && (prev.command == "C" || prev.command == "S")) {
              addPoint(subPath, [
                basePoint[0] + 0.5 * prevCtrlPoint[0],
                basePoint[1] + 0.5 * prevCtrlPoint[1]
              ]);
              ctrlPoint = [
                basePoint[0] + prevCtrlPoint[0],
                basePoint[1] + prevCtrlPoint[1]
              ];
            }
            if (ctrlPoint != null) {
              addPoint(subPath, [
                0.5 * (ctrlPoint[0] + data[0]),
                0.5 * (ctrlPoint[1] + data[1])
              ]);
            }
            addPoint(subPath, [
              0.5 * (data[0] + data[2]),
              0.5 * (data[1] + data[3])
            ]);
            prevCtrlPoint = [data[2] - data[0], data[3] - data[1]];
            break;
          case "A":
            if (basePoint != null) {
              var curves = a2c.apply(0, basePoint.concat(data));
              for (var cData; (cData = curves.splice(0, 6).map(toAbsolute)).length; ) {
                if (basePoint != null) {
                  addPoint(subPath, [
                    0.5 * (basePoint[0] + cData[0]),
                    0.5 * (basePoint[1] + cData[1])
                  ]);
                }
                addPoint(subPath, [
                  0.5 * (cData[0] + cData[2]),
                  0.5 * (cData[1] + cData[3])
                ]);
                addPoint(subPath, [
                  0.5 * (cData[2] + cData[4]),
                  0.5 * (cData[3] + cData[5])
                ]);
                if (curves.length)
                  addPoint(subPath, basePoint = cData.slice(-2));
              }
            }
            break;
        }
        if (data.length >= 2)
          addPoint(subPath, data.slice(-2));
      }
      return points;
    }
    function convexHull(points) {
      points.list.sort(function(a, b) {
        return a[0] == b[0] ? a[1] - b[1] : a[0] - b[0];
      });
      var lower = [], minY = 0, bottom = 0;
      for (let i = 0; i < points.list.length; i++) {
        while (lower.length >= 2 && cross(lower[lower.length - 2], lower[lower.length - 1], points.list[i]) <= 0) {
          lower.pop();
        }
        if (points.list[i][1] < points.list[minY][1]) {
          minY = i;
          bottom = lower.length;
        }
        lower.push(points.list[i]);
      }
      var upper = [], maxY = points.list.length - 1, top = 0;
      for (let i = points.list.length; i--; ) {
        while (upper.length >= 2 && cross(upper[upper.length - 2], upper[upper.length - 1], points.list[i]) <= 0) {
          upper.pop();
        }
        if (points.list[i][1] > points.list[maxY][1]) {
          maxY = i;
          top = upper.length;
        }
        upper.push(points.list[i]);
      }
      upper.pop();
      lower.pop();
      const hullList = lower.concat(upper);
      const hull = {
        list: hullList,
        minX: 0,
        // by sorting
        maxX: lower.length,
        minY: bottom,
        maxY: (lower.length + top) % hullList.length
      };
      return hull;
    }
    function cross(o, a, b) {
      return (a[0] - o[0]) * (b[1] - o[1]) - (a[1] - o[1]) * (b[0] - o[0]);
    }
    var a2c = (x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) => {
      const _120 = Math.PI * 120 / 180;
      const rad = Math.PI / 180 * (+angle || 0);
      let res = [];
      const rotateX = (x3, y3, rad2) => {
        return x3 * Math.cos(rad2) - y3 * Math.sin(rad2);
      };
      const rotateY = (x3, y3, rad2) => {
        return x3 * Math.sin(rad2) + y3 * Math.cos(rad2);
      };
      if (!recursive) {
        x1 = rotateX(x1, y1, -rad);
        y1 = rotateY(x1, y1, -rad);
        x2 = rotateX(x2, y2, -rad);
        y2 = rotateY(x2, y2, -rad);
        var x = (x1 - x2) / 2, y = (y1 - y2) / 2;
        var h = x * x / (rx * rx) + y * y / (ry * ry);
        if (h > 1) {
          h = Math.sqrt(h);
          rx = h * rx;
          ry = h * ry;
        }
        var rx2 = rx * rx;
        var ry2 = ry * ry;
        var k = (large_arc_flag == sweep_flag ? -1 : 1) * Math.sqrt(
          Math.abs(
            (rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x)
          )
        );
        var cx = k * rx * y / ry + (x1 + x2) / 2;
        var cy = k * -ry * x / rx + (y1 + y2) / 2;
        var f1 = Math.asin(Number(((y1 - cy) / ry).toFixed(9)));
        var f2 = Math.asin(Number(((y2 - cy) / ry).toFixed(9)));
        f1 = x1 < cx ? Math.PI - f1 : f1;
        f2 = x2 < cx ? Math.PI - f2 : f2;
        f1 < 0 && (f1 = Math.PI * 2 + f1);
        f2 < 0 && (f2 = Math.PI * 2 + f2);
        if (sweep_flag && f1 > f2) {
          f1 = f1 - Math.PI * 2;
        }
        if (!sweep_flag && f2 > f1) {
          f2 = f2 - Math.PI * 2;
        }
      } else {
        f1 = recursive[0];
        f2 = recursive[1];
        cx = recursive[2];
        cy = recursive[3];
      }
      var df = f2 - f1;
      if (Math.abs(df) > _120) {
        var f2old = f2, x2old = x2, y2old = y2;
        f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);
        x2 = cx + rx * Math.cos(f2);
        y2 = cy + ry * Math.sin(f2);
        res = a2c(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [
          f2,
          f2old,
          cx,
          cy
        ]);
      }
      df = f2 - f1;
      var c1 = Math.cos(f1), s1 = Math.sin(f1), c2 = Math.cos(f2), s2 = Math.sin(f2), t = Math.tan(df / 4), hx = 4 / 3 * rx * t, hy = 4 / 3 * ry * t, m = [
        -hx * s1,
        hy * c1,
        x2 + hx * s2 - x1,
        y2 - hy * c2 - y1,
        x2 - x1,
        y2 - y1
      ];
      if (recursive) {
        return m.concat(res);
      } else {
        res = m.concat(res);
        var newres = [];
        for (var i = 0, n = res.length; i < n; i++) {
          newres[i] = i % 2 ? rotateY(res[i - 1], res[i], rad) : rotateX(res[i], res[i + 1], rad);
        }
        return newres;
      }
    };
  }
});

// node_modules/svgo/plugins/_transforms.js
var require_transforms = __commonJS({
  "node_modules/svgo/plugins/_transforms.js"(exports) {
    "use strict";
    var regTransformTypes = /matrix|translate|scale|rotate|skewX|skewY/;
    var regTransformSplit = /\s*(matrix|translate|scale|rotate|skewX|skewY)\s*\(\s*(.+?)\s*\)[\s,]*/;
    var regNumericValues = /[-+]?(?:\d*\.\d+|\d+\.?)(?:[eE][-+]?\d+)?/g;
    exports.transform2js = (transformString) => {
      const transforms = [];
      let current = null;
      for (const item of transformString.split(regTransformSplit)) {
        var num;
        if (item) {
          if (regTransformTypes.test(item)) {
            current = { name: item, data: [] };
            transforms.push(current);
          } else {
            while (num = regNumericValues.exec(item)) {
              num = Number(num);
              if (current != null) {
                current.data.push(num);
              }
            }
          }
        }
      }
      return current == null || current.data.length == 0 ? [] : transforms;
    };
    exports.transformsMultiply = (transforms) => {
      const matrixData = transforms.map((transform2) => {
        if (transform2.name === "matrix") {
          return transform2.data;
        }
        return transformToMatrix(transform2);
      });
      const matrixTransform = {
        name: "matrix",
        data: matrixData.length > 0 ? matrixData.reduce(multiplyTransformMatrices) : []
      };
      return matrixTransform;
    };
    var mth = {
      /**
       * @type {(deg: number) => number}
       */
      rad: (deg) => {
        return deg * Math.PI / 180;
      },
      /**
       * @type {(rad: number) => number}
       */
      deg: (rad) => {
        return rad * 180 / Math.PI;
      },
      /**
       * @type {(deg: number) => number}
       */
      cos: (deg) => {
        return Math.cos(mth.rad(deg));
      },
      /**
       * @type {(val: number, floatPrecision: number) => number}
       */
      acos: (val, floatPrecision) => {
        return Number(mth.deg(Math.acos(val)).toFixed(floatPrecision));
      },
      /**
       * @type {(deg: number) => number}
       */
      sin: (deg) => {
        return Math.sin(mth.rad(deg));
      },
      /**
       * @type {(val: number, floatPrecision: number) => number}
       */
      asin: (val, floatPrecision) => {
        return Number(mth.deg(Math.asin(val)).toFixed(floatPrecision));
      },
      /**
       * @type {(deg: number) => number}
       */
      tan: (deg) => {
        return Math.tan(mth.rad(deg));
      },
      /**
       * @type {(val: number, floatPrecision: number) => number}
       */
      atan: (val, floatPrecision) => {
        return Number(mth.deg(Math.atan(val)).toFixed(floatPrecision));
      }
    };
    exports.matrixToTransform = (transform2, params) => {
      let floatPrecision = params.floatPrecision;
      let data = transform2.data;
      let transforms = [];
      let sx = Number(
        Math.hypot(data[0], data[1]).toFixed(params.transformPrecision)
      );
      let sy = Number(
        ((data[0] * data[3] - data[1] * data[2]) / sx).toFixed(
          params.transformPrecision
        )
      );
      let colsSum = data[0] * data[2] + data[1] * data[3];
      let rowsSum = data[0] * data[1] + data[2] * data[3];
      let scaleBefore = rowsSum != 0 || sx == sy;
      if (data[4] || data[5]) {
        transforms.push({
          name: "translate",
          data: data.slice(4, data[5] ? 6 : 5)
        });
      }
      if (!data[1] && data[2]) {
        transforms.push({
          name: "skewX",
          data: [mth.atan(data[2] / sy, floatPrecision)]
        });
      } else if (data[1] && !data[2]) {
        transforms.push({
          name: "skewY",
          data: [mth.atan(data[1] / data[0], floatPrecision)]
        });
        sx = data[0];
        sy = data[3];
      } else if (!colsSum || sx == 1 && sy == 1 || !scaleBefore) {
        if (!scaleBefore) {
          sx = (data[0] < 0 ? -1 : 1) * Math.hypot(data[0], data[2]);
          sy = (data[3] < 0 ? -1 : 1) * Math.hypot(data[1], data[3]);
          transforms.push({ name: "scale", data: [sx, sy] });
        }
        var angle = Math.min(Math.max(-1, data[0] / sx), 1), rotate = [
          mth.acos(angle, floatPrecision) * ((scaleBefore ? 1 : sy) * data[1] < 0 ? -1 : 1)
        ];
        if (rotate[0])
          transforms.push({ name: "rotate", data: rotate });
        if (rowsSum && colsSum)
          transforms.push({
            name: "skewX",
            data: [mth.atan(colsSum / (sx * sx), floatPrecision)]
          });
        if (rotate[0] && (data[4] || data[5])) {
          transforms.shift();
          var cos = data[0] / sx, sin = data[1] / (scaleBefore ? sx : sy), x = data[4] * (scaleBefore ? 1 : sy), y = data[5] * (scaleBefore ? 1 : sx), denom = (Math.pow(1 - cos, 2) + Math.pow(sin, 2)) * (scaleBefore ? 1 : sx * sy);
          rotate.push(((1 - cos) * x - sin * y) / denom);
          rotate.push(((1 - cos) * y + sin * x) / denom);
        }
      } else if (data[1] || data[2]) {
        return [transform2];
      }
      if (scaleBefore && (sx != 1 || sy != 1) || !transforms.length)
        transforms.push({
          name: "scale",
          data: sx == sy ? [sx] : [sx, sy]
        });
      return transforms;
    };
    var transformToMatrix = (transform2) => {
      if (transform2.name === "matrix") {
        return transform2.data;
      }
      switch (transform2.name) {
        case "translate":
          return [1, 0, 0, 1, transform2.data[0], transform2.data[1] || 0];
        case "scale":
          return [
            transform2.data[0],
            0,
            0,
            transform2.data[1] || transform2.data[0],
            0,
            0
          ];
        case "rotate":
          var cos = mth.cos(transform2.data[0]), sin = mth.sin(transform2.data[0]), cx = transform2.data[1] || 0, cy = transform2.data[2] || 0;
          return [
            cos,
            sin,
            -sin,
            cos,
            (1 - cos) * cx + sin * cy,
            (1 - cos) * cy - sin * cx
          ];
        case "skewX":
          return [1, 0, mth.tan(transform2.data[0]), 1, 0, 0];
        case "skewY":
          return [1, mth.tan(transform2.data[0]), 0, 1, 0, 0];
        default:
          throw Error(`Unknown transform ${transform2.name}`);
      }
    };
    exports.transformArc = (cursor, arc, transform2) => {
      const x = arc[5] - cursor[0];
      const y = arc[6] - cursor[1];
      let a = arc[0];
      let b = arc[1];
      const rot = arc[2] * Math.PI / 180;
      const cos = Math.cos(rot);
      const sin = Math.sin(rot);
      if (a > 0 && b > 0) {
        let h = Math.pow(x * cos + y * sin, 2) / (4 * a * a) + Math.pow(y * cos - x * sin, 2) / (4 * b * b);
        if (h > 1) {
          h = Math.sqrt(h);
          a *= h;
          b *= h;
        }
      }
      const ellipse = [a * cos, a * sin, -b * sin, b * cos, 0, 0];
      const m = multiplyTransformMatrices(transform2, ellipse);
      const lastCol = m[2] * m[2] + m[3] * m[3];
      const squareSum = m[0] * m[0] + m[1] * m[1] + lastCol;
      const root = Math.hypot(m[0] - m[3], m[1] + m[2]) * Math.hypot(m[0] + m[3], m[1] - m[2]);
      if (!root) {
        arc[0] = arc[1] = Math.sqrt(squareSum / 2);
        arc[2] = 0;
      } else {
        const majorAxisSqr = (squareSum + root) / 2;
        const minorAxisSqr = (squareSum - root) / 2;
        const major = Math.abs(majorAxisSqr - lastCol) > 1e-6;
        const sub = (major ? majorAxisSqr : minorAxisSqr) - lastCol;
        const rowsSum = m[0] * m[2] + m[1] * m[3];
        const term1 = m[0] * sub + m[2] * rowsSum;
        const term2 = m[1] * sub + m[3] * rowsSum;
        arc[0] = Math.sqrt(majorAxisSqr);
        arc[1] = Math.sqrt(minorAxisSqr);
        arc[2] = ((major ? term2 < 0 : term1 > 0) ? -1 : 1) * Math.acos((major ? term1 : term2) / Math.hypot(term1, term2)) * 180 / Math.PI;
      }
      if (transform2[0] < 0 !== transform2[3] < 0) {
        arc[4] = 1 - arc[4];
      }
      return arc;
    };
    var multiplyTransformMatrices = (a, b) => {
      return [
        a[0] * b[0] + a[2] * b[1],
        a[1] * b[0] + a[3] * b[1],
        a[0] * b[2] + a[2] * b[3],
        a[1] * b[2] + a[3] * b[3],
        a[0] * b[4] + a[2] * b[5] + a[4],
        a[1] * b[4] + a[3] * b[5] + a[5]
      ];
    };
  }
});

// node_modules/svgo/plugins/applyTransforms.js
var require_applyTransforms = __commonJS({
  "node_modules/svgo/plugins/applyTransforms.js"(exports) {
    "use strict";
    var { collectStylesheet, computeStyle } = require_style();
    var {
      transformsMultiply,
      transform2js,
      transformArc
    } = require_transforms();
    var { path2js } = require_path2();
    var { removeLeadingZero } = require_tools();
    var { referencesProps, attrsGroupsDefaults } = require_collections();
    var regNumericValues = /[-+]?(\d*\.\d+|\d+\.?)(?:[eE][-+]?\d+)?/g;
    var applyTransforms = (root, params) => {
      const stylesheet = collectStylesheet(root);
      return {
        element: {
          enter: (node) => {
            const computedStyle = computeStyle(stylesheet, node);
            if (node.attributes.d == null) {
              return;
            }
            if (node.attributes.id != null) {
              return;
            }
            if (node.attributes.transform == null || node.attributes.transform === "" || // styles are not considered when applying transform
            // can be fixed properly with new style engine
            node.attributes.style != null || Object.entries(node.attributes).some(
              ([name, value]) => referencesProps.includes(name) && value.includes("url(")
            )) {
              return;
            }
            const matrix = transformsMultiply(
              transform2js(node.attributes.transform)
            );
            const stroke = computedStyle.stroke != null && computedStyle.stroke.type === "static" ? computedStyle.stroke.value : null;
            const strokeWidth = computedStyle["stroke-width"] != null && computedStyle["stroke-width"].type === "static" ? computedStyle["stroke-width"].value : null;
            const transformPrecision = params.transformPrecision;
            if (computedStyle.stroke != null && computedStyle.stroke.type === "dynamic" || computedStyle.strokeWidth != null && computedStyle["stroke-width"].type === "dynamic") {
              return;
            }
            const scale = Number(
              Math.sqrt(
                matrix.data[0] * matrix.data[0] + matrix.data[1] * matrix.data[1]
              ).toFixed(transformPrecision)
            );
            if (stroke && stroke != "none") {
              if (params.applyTransformsStroked === false) {
                return;
              }
              if ((matrix.data[0] !== matrix.data[3] || matrix.data[1] !== -matrix.data[2]) && (matrix.data[0] !== -matrix.data[3] || matrix.data[1] !== matrix.data[2])) {
                return;
              }
              if (scale !== 1) {
                if (node.attributes["vector-effect"] !== "non-scaling-stroke") {
                  node.attributes["stroke-width"] = (strokeWidth || attrsGroupsDefaults.presentation["stroke-width"]).trim().replace(
                    regNumericValues,
                    (num) => removeLeadingZero(Number(num) * scale)
                  );
                  if (node.attributes["stroke-dashoffset"] != null) {
                    node.attributes["stroke-dashoffset"] = node.attributes["stroke-dashoffset"].trim().replace(
                      regNumericValues,
                      (num) => removeLeadingZero(Number(num) * scale)
                    );
                  }
                  if (node.attributes["stroke-dasharray"] != null) {
                    node.attributes["stroke-dasharray"] = node.attributes["stroke-dasharray"].trim().replace(
                      regNumericValues,
                      (num) => removeLeadingZero(Number(num) * scale)
                    );
                  }
                }
              }
            }
            const pathData = path2js(node);
            applyMatrixToPathData(pathData, matrix.data);
            delete node.attributes.transform;
          }
        }
      };
    };
    exports.applyTransforms = applyTransforms;
    var transformAbsolutePoint = (matrix, x, y) => {
      const newX = matrix[0] * x + matrix[2] * y + matrix[4];
      const newY = matrix[1] * x + matrix[3] * y + matrix[5];
      return [newX, newY];
    };
    var transformRelativePoint = (matrix, x, y) => {
      const newX = matrix[0] * x + matrix[2] * y;
      const newY = matrix[1] * x + matrix[3] * y;
      return [newX, newY];
    };
    var applyMatrixToPathData = (pathData, matrix) => {
      const start = [0, 0];
      const cursor = [0, 0];
      for (const pathItem of pathData) {
        let { command, args } = pathItem;
        if (command === "M") {
          cursor[0] = args[0];
          cursor[1] = args[1];
          start[0] = cursor[0];
          start[1] = cursor[1];
          const [x, y] = transformAbsolutePoint(matrix, args[0], args[1]);
          args[0] = x;
          args[1] = y;
        }
        if (command === "m") {
          cursor[0] += args[0];
          cursor[1] += args[1];
          start[0] = cursor[0];
          start[1] = cursor[1];
          const [x, y] = transformRelativePoint(matrix, args[0], args[1]);
          args[0] = x;
          args[1] = y;
        }
        if (command === "H") {
          command = "L";
          args = [args[0], cursor[1]];
        }
        if (command === "h") {
          command = "l";
          args = [args[0], 0];
        }
        if (command === "V") {
          command = "L";
          args = [cursor[0], args[0]];
        }
        if (command === "v") {
          command = "l";
          args = [0, args[0]];
        }
        if (command === "L") {
          cursor[0] = args[0];
          cursor[1] = args[1];
          const [x, y] = transformAbsolutePoint(matrix, args[0], args[1]);
          args[0] = x;
          args[1] = y;
        }
        if (command === "l") {
          cursor[0] += args[0];
          cursor[1] += args[1];
          const [x, y] = transformRelativePoint(matrix, args[0], args[1]);
          args[0] = x;
          args[1] = y;
        }
        if (command === "C") {
          cursor[0] = args[4];
          cursor[1] = args[5];
          const [x1, y1] = transformAbsolutePoint(matrix, args[0], args[1]);
          const [x2, y2] = transformAbsolutePoint(matrix, args[2], args[3]);
          const [x, y] = transformAbsolutePoint(matrix, args[4], args[5]);
          args[0] = x1;
          args[1] = y1;
          args[2] = x2;
          args[3] = y2;
          args[4] = x;
          args[5] = y;
        }
        if (command === "c") {
          cursor[0] += args[4];
          cursor[1] += args[5];
          const [x1, y1] = transformRelativePoint(matrix, args[0], args[1]);
          const [x2, y2] = transformRelativePoint(matrix, args[2], args[3]);
          const [x, y] = transformRelativePoint(matrix, args[4], args[5]);
          args[0] = x1;
          args[1] = y1;
          args[2] = x2;
          args[3] = y2;
          args[4] = x;
          args[5] = y;
        }
        if (command === "S") {
          cursor[0] = args[2];
          cursor[1] = args[3];
          const [x2, y2] = transformAbsolutePoint(matrix, args[0], args[1]);
          const [x, y] = transformAbsolutePoint(matrix, args[2], args[3]);
          args[0] = x2;
          args[1] = y2;
          args[2] = x;
          args[3] = y;
        }
        if (command === "s") {
          cursor[0] += args[2];
          cursor[1] += args[3];
          const [x2, y2] = transformRelativePoint(matrix, args[0], args[1]);
          const [x, y] = transformRelativePoint(matrix, args[2], args[3]);
          args[0] = x2;
          args[1] = y2;
          args[2] = x;
          args[3] = y;
        }
        if (command === "Q") {
          cursor[0] = args[2];
          cursor[1] = args[3];
          const [x1, y1] = transformAbsolutePoint(matrix, args[0], args[1]);
          const [x, y] = transformAbsolutePoint(matrix, args[2], args[3]);
          args[0] = x1;
          args[1] = y1;
          args[2] = x;
          args[3] = y;
        }
        if (command === "q") {
          cursor[0] += args[2];
          cursor[1] += args[3];
          const [x1, y1] = transformRelativePoint(matrix, args[0], args[1]);
          const [x, y] = transformRelativePoint(matrix, args[2], args[3]);
          args[0] = x1;
          args[1] = y1;
          args[2] = x;
          args[3] = y;
        }
        if (command === "T") {
          cursor[0] = args[0];
          cursor[1] = args[1];
          const [x, y] = transformAbsolutePoint(matrix, args[0], args[1]);
          args[0] = x;
          args[1] = y;
        }
        if (command === "t") {
          cursor[0] += args[0];
          cursor[1] += args[1];
          const [x, y] = transformRelativePoint(matrix, args[0], args[1]);
          args[0] = x;
          args[1] = y;
        }
        if (command === "A") {
          transformArc(cursor, args, matrix);
          cursor[0] = args[5];
          cursor[1] = args[6];
          if (Math.abs(args[2]) > 80) {
            const a = args[0];
            const rotation = args[2];
            args[0] = args[1];
            args[1] = a;
            args[2] = rotation + (rotation > 0 ? -90 : 90);
          }
          const [x, y] = transformAbsolutePoint(matrix, args[5], args[6]);
          args[5] = x;
          args[6] = y;
        }
        if (command === "a") {
          transformArc([0, 0], args, matrix);
          cursor[0] += args[5];
          cursor[1] += args[6];
          if (Math.abs(args[2]) > 80) {
            const a = args[0];
            const rotation = args[2];
            args[0] = args[1];
            args[1] = a;
            args[2] = rotation + (rotation > 0 ? -90 : 90);
          }
          const [x, y] = transformRelativePoint(matrix, args[5], args[6]);
          args[5] = x;
          args[6] = y;
        }
        if (command === "z" || command === "Z") {
          cursor[0] = start[0];
          cursor[1] = start[1];
        }
        pathItem.command = command;
        pathItem.args = args;
      }
    };
  }
});

// node_modules/svgo/plugins/convertPathData.js
var require_convertPathData = __commonJS({
  "node_modules/svgo/plugins/convertPathData.js"(exports) {
    "use strict";
    var { collectStylesheet, computeStyle } = require_style();
    var { visit } = require_xast();
    var { pathElems } = require_collections();
    var { path2js, js2path } = require_path2();
    var { applyTransforms } = require_applyTransforms();
    var { cleanupOutData } = require_tools();
    exports.name = "convertPathData";
    exports.description = "optimizes path data: writes in shorter form, applies transformations";
    var roundData;
    var precision;
    var error;
    var arcThreshold;
    var arcTolerance;
    exports.fn = (root, params) => {
      const {
        // TODO convert to separate plugin in v3
        applyTransforms: _applyTransforms = true,
        applyTransformsStroked = true,
        makeArcs = {
          threshold: 2.5,
          // coefficient of rounding error
          tolerance: 0.5
          // percentage of radius
        },
        straightCurves = true,
        lineShorthands = true,
        curveSmoothShorthands = true,
        floatPrecision = 3,
        transformPrecision = 5,
        removeUseless = true,
        collapseRepeated = true,
        utilizeAbsolute = true,
        leadingZero = true,
        negativeExtraSpace = true,
        noSpaceAfterFlags = false,
        // a20 60 45 0 1 30 20 → a20 60 45 0130 20
        forceAbsolutePath = false
      } = params;
      const newParams = {
        applyTransforms: _applyTransforms,
        applyTransformsStroked,
        makeArcs,
        straightCurves,
        lineShorthands,
        curveSmoothShorthands,
        floatPrecision,
        transformPrecision,
        removeUseless,
        collapseRepeated,
        utilizeAbsolute,
        leadingZero,
        negativeExtraSpace,
        noSpaceAfterFlags,
        forceAbsolutePath
      };
      if (_applyTransforms) {
        visit(
          root,
          // @ts-ignore
          applyTransforms(root, {
            transformPrecision,
            applyTransformsStroked
          })
        );
      }
      const stylesheet = collectStylesheet(root);
      return {
        element: {
          enter: (node) => {
            if (pathElems.includes(node.name) && node.attributes.d != null) {
              const computedStyle = computeStyle(stylesheet, node);
              precision = floatPrecision;
              error = precision !== false ? +Math.pow(0.1, precision).toFixed(precision) : 0.01;
              roundData = precision > 0 && precision < 20 ? strongRound : round;
              if (makeArcs) {
                arcThreshold = makeArcs.threshold;
                arcTolerance = makeArcs.tolerance;
              }
              const hasMarkerMid = computedStyle["marker-mid"] != null;
              const maybeHasStroke = computedStyle.stroke && (computedStyle.stroke.type === "dynamic" || computedStyle.stroke.value !== "none");
              const maybeHasLinecap = computedStyle["stroke-linecap"] && (computedStyle["stroke-linecap"].type === "dynamic" || computedStyle["stroke-linecap"].value !== "butt");
              const maybeHasStrokeAndLinecap = maybeHasStroke && maybeHasLinecap;
              var data = path2js(node);
              if (data.length) {
                convertToRelative(data);
                data = filters(data, newParams, {
                  maybeHasStrokeAndLinecap,
                  hasMarkerMid
                });
                if (utilizeAbsolute) {
                  data = convertToMixed(data, newParams);
                }
                js2path(node, data, newParams);
              }
            }
          }
        }
      };
    };
    var convertToRelative = (pathData) => {
      let start = [0, 0];
      let cursor = [0, 0];
      let prevCoords = [0, 0];
      for (let i = 0; i < pathData.length; i += 1) {
        const pathItem = pathData[i];
        let { command, args } = pathItem;
        if (command === "m") {
          cursor[0] += args[0];
          cursor[1] += args[1];
          start[0] = cursor[0];
          start[1] = cursor[1];
        }
        if (command === "M") {
          if (i !== 0) {
            command = "m";
          }
          args[0] -= cursor[0];
          args[1] -= cursor[1];
          cursor[0] += args[0];
          cursor[1] += args[1];
          start[0] = cursor[0];
          start[1] = cursor[1];
        }
        if (command === "l") {
          cursor[0] += args[0];
          cursor[1] += args[1];
        }
        if (command === "L") {
          command = "l";
          args[0] -= cursor[0];
          args[1] -= cursor[1];
          cursor[0] += args[0];
          cursor[1] += args[1];
        }
        if (command === "h") {
          cursor[0] += args[0];
        }
        if (command === "H") {
          command = "h";
          args[0] -= cursor[0];
          cursor[0] += args[0];
        }
        if (command === "v") {
          cursor[1] += args[0];
        }
        if (command === "V") {
          command = "v";
          args[0] -= cursor[1];
          cursor[1] += args[0];
        }
        if (command === "c") {
          cursor[0] += args[4];
          cursor[1] += args[5];
        }
        if (command === "C") {
          command = "c";
          args[0] -= cursor[0];
          args[1] -= cursor[1];
          args[2] -= cursor[0];
          args[3] -= cursor[1];
          args[4] -= cursor[0];
          args[5] -= cursor[1];
          cursor[0] += args[4];
          cursor[1] += args[5];
        }
        if (command === "s") {
          cursor[0] += args[2];
          cursor[1] += args[3];
        }
        if (command === "S") {
          command = "s";
          args[0] -= cursor[0];
          args[1] -= cursor[1];
          args[2] -= cursor[0];
          args[3] -= cursor[1];
          cursor[0] += args[2];
          cursor[1] += args[3];
        }
        if (command === "q") {
          cursor[0] += args[2];
          cursor[1] += args[3];
        }
        if (command === "Q") {
          command = "q";
          args[0] -= cursor[0];
          args[1] -= cursor[1];
          args[2] -= cursor[0];
          args[3] -= cursor[1];
          cursor[0] += args[2];
          cursor[1] += args[3];
        }
        if (command === "t") {
          cursor[0] += args[0];
          cursor[1] += args[1];
        }
        if (command === "T") {
          command = "t";
          args[0] -= cursor[0];
          args[1] -= cursor[1];
          cursor[0] += args[0];
          cursor[1] += args[1];
        }
        if (command === "a") {
          cursor[0] += args[5];
          cursor[1] += args[6];
        }
        if (command === "A") {
          command = "a";
          args[5] -= cursor[0];
          args[6] -= cursor[1];
          cursor[0] += args[5];
          cursor[1] += args[6];
        }
        if (command === "Z" || command === "z") {
          cursor[0] = start[0];
          cursor[1] = start[1];
        }
        pathItem.command = command;
        pathItem.args = args;
        pathItem.base = prevCoords;
        pathItem.coords = [cursor[0], cursor[1]];
        prevCoords = pathItem.coords;
      }
      return pathData;
    };
    function filters(path, params, { maybeHasStrokeAndLinecap, hasMarkerMid }) {
      var stringify = data2Path.bind(null, params), relSubpoint = [0, 0], pathBase = [0, 0], prev = {};
      path = path.filter(function(item, index, path2) {
        let command = item.command;
        let data = item.args;
        let next = path2[index + 1];
        if (command !== "Z" && command !== "z") {
          var sdata = data, circle;
          if (command === "s") {
            sdata = [0, 0].concat(data);
            var pdata = prev.args, n = pdata.length;
            sdata[0] = pdata[n - 2] - pdata[n - 4];
            sdata[1] = pdata[n - 1] - pdata[n - 3];
          }
          if (params.makeArcs && (command == "c" || command == "s") && isConvex(sdata) && (circle = findCircle(sdata))) {
            var r = roundData([circle.radius])[0], angle = findArcAngle(sdata, circle), sweep = sdata[5] * sdata[0] - sdata[4] * sdata[1] > 0 ? 1 : 0, arc = {
              command: "a",
              args: [r, r, 0, 0, sweep, sdata[4], sdata[5]],
              // @ts-ignore
              coords: item.coords.slice(),
              // @ts-ignore
              base: item.base
            }, output = [arc], relCenter = [
              circle.center[0] - sdata[4],
              circle.center[1] - sdata[5]
            ], relCircle = { center: relCenter, radius: circle.radius }, arcCurves = [item], hasPrev = 0, suffix = "", nextLonghand;
            if (
              // @ts-ignore
              prev.command == "c" && // @ts-ignore
              isConvex(prev.args) && // @ts-ignore
              isArcPrev(prev.args, circle) || // @ts-ignore
              prev.command == "a" && prev.sdata && isArcPrev(prev.sdata, circle)
            ) {
              arcCurves.unshift(prev);
              arc.base = prev.base;
              arc.args[5] = arc.coords[0] - arc.base[0];
              arc.args[6] = arc.coords[1] - arc.base[1];
              var prevData = prev.command == "a" ? prev.sdata : prev.args;
              var prevAngle = findArcAngle(prevData, {
                center: [
                  prevData[4] + circle.center[0],
                  prevData[5] + circle.center[1]
                ],
                radius: circle.radius
              });
              angle += prevAngle;
              if (angle > Math.PI)
                arc.args[3] = 1;
              hasPrev = 1;
            }
            for (var j = index; (next = path2[++j]) && ~"cs".indexOf(next.command); ) {
              var nextData = next.args;
              if (next.command == "s") {
                nextLonghand = makeLonghand(
                  { command: "s", args: next.args.slice() },
                  path2[j - 1].args
                );
                nextData = nextLonghand.args;
                nextLonghand.args = nextData.slice(0, 2);
                suffix = stringify([nextLonghand]);
              }
              if (isConvex(nextData) && isArc(nextData, relCircle)) {
                angle += findArcAngle(nextData, relCircle);
                if (angle - 2 * Math.PI > 1e-3)
                  break;
                if (angle > Math.PI)
                  arc.args[3] = 1;
                arcCurves.push(next);
                if (2 * Math.PI - angle > 1e-3) {
                  arc.coords = next.coords;
                  arc.args[5] = arc.coords[0] - arc.base[0];
                  arc.args[6] = arc.coords[1] - arc.base[1];
                } else {
                  arc.args[5] = 2 * (relCircle.center[0] - nextData[4]);
                  arc.args[6] = 2 * (relCircle.center[1] - nextData[5]);
                  arc.coords = [
                    // @ts-ignore
                    arc.base[0] + arc.args[5],
                    // @ts-ignore
                    arc.base[1] + arc.args[6]
                  ];
                  arc = {
                    command: "a",
                    args: [
                      r,
                      r,
                      0,
                      0,
                      sweep,
                      // @ts-ignore
                      next.coords[0] - arc.coords[0],
                      // @ts-ignore
                      next.coords[1] - arc.coords[1]
                    ],
                    // @ts-ignore
                    coords: next.coords,
                    // @ts-ignore
                    base: arc.coords
                  };
                  output.push(arc);
                  j++;
                  break;
                }
                relCenter[0] -= nextData[4];
                relCenter[1] -= nextData[5];
              } else
                break;
            }
            if ((stringify(output) + suffix).length < stringify(arcCurves).length) {
              if (path2[j] && path2[j].command == "s") {
                makeLonghand(path2[j], path2[j - 1].args);
              }
              if (hasPrev) {
                var prevArc = output.shift();
                roundData(prevArc.args);
                relSubpoint[0] += prevArc.args[5] - prev.args[prev.args.length - 2];
                relSubpoint[1] += prevArc.args[6] - prev.args[prev.args.length - 1];
                prev.command = "a";
                prev.args = prevArc.args;
                item.base = prev.coords = prevArc.coords;
              }
              arc = output.shift();
              if (arcCurves.length == 1) {
                item.sdata = sdata.slice();
              } else if (arcCurves.length - 1 - hasPrev > 0) {
                path2.splice.apply(
                  path2,
                  // @ts-ignore
                  [index + 1, arcCurves.length - 1 - hasPrev].concat(output)
                );
              }
              if (!arc)
                return false;
              command = "a";
              data = arc.args;
              item.coords = arc.coords;
            }
          }
          if (precision !== false) {
            if (command === "m" || command === "l" || command === "t" || command === "q" || command === "s" || command === "c") {
              for (var i = data.length; i--; ) {
                data[i] += item.base[i % 2] - relSubpoint[i % 2];
              }
            } else if (command == "h") {
              data[0] += item.base[0] - relSubpoint[0];
            } else if (command == "v") {
              data[0] += item.base[1] - relSubpoint[1];
            } else if (command == "a") {
              data[5] += item.base[0] - relSubpoint[0];
              data[6] += item.base[1] - relSubpoint[1];
            }
            roundData(data);
            if (command == "h")
              relSubpoint[0] += data[0];
            else if (command == "v")
              relSubpoint[1] += data[0];
            else {
              relSubpoint[0] += data[data.length - 2];
              relSubpoint[1] += data[data.length - 1];
            }
            roundData(relSubpoint);
            if (command === "M" || command === "m") {
              pathBase[0] = relSubpoint[0];
              pathBase[1] = relSubpoint[1];
            }
          }
          if (params.straightCurves) {
            if (command === "c" && isCurveStraightLine(data) || command === "s" && isCurveStraightLine(sdata)) {
              if (next && next.command == "s")
                makeLonghand(next, data);
              command = "l";
              data = data.slice(-2);
            } else if (command === "q" && isCurveStraightLine(data)) {
              if (next && next.command == "t")
                makeLonghand(next, data);
              command = "l";
              data = data.slice(-2);
            } else if (command === "t" && // @ts-ignore
            prev.command !== "q" && // @ts-ignore
            prev.command !== "t") {
              command = "l";
              data = data.slice(-2);
            } else if (command === "a" && (data[0] === 0 || data[1] === 0)) {
              command = "l";
              data = data.slice(-2);
            }
          }
          if (params.lineShorthands && command === "l") {
            if (data[1] === 0) {
              command = "h";
              data.pop();
            } else if (data[0] === 0) {
              command = "v";
              data.shift();
            }
          }
          if (params.collapseRepeated && hasMarkerMid === false && (command === "m" || command === "h" || command === "v") && // @ts-ignore
          prev.command && // @ts-ignore
          command == prev.command.toLowerCase() && (command != "h" && command != "v" || // @ts-ignore
          prev.args[0] >= 0 == data[0] >= 0)) {
            prev.args[0] += data[0];
            if (command != "h" && command != "v") {
              prev.args[1] += data[1];
            }
            prev.coords = item.coords;
            path2[index] = prev;
            return false;
          }
          if (params.curveSmoothShorthands && prev.command) {
            if (command === "c") {
              if (
                // @ts-ignore
                prev.command === "c" && // @ts-ignore
                data[0] === -(prev.args[2] - prev.args[4]) && // @ts-ignore
                data[1] === -(prev.args[3] - prev.args[5])
              ) {
                command = "s";
                data = data.slice(2);
              } else if (
                // @ts-ignore
                prev.command === "s" && // @ts-ignore
                data[0] === -(prev.args[0] - prev.args[2]) && // @ts-ignore
                data[1] === -(prev.args[1] - prev.args[3])
              ) {
                command = "s";
                data = data.slice(2);
              } else if (
                // @ts-ignore
                prev.command !== "c" && // @ts-ignore
                prev.command !== "s" && data[0] === 0 && data[1] === 0
              ) {
                command = "s";
                data = data.slice(2);
              }
            } else if (command === "q") {
              if (
                // @ts-ignore
                prev.command === "q" && // @ts-ignore
                data[0] === prev.args[2] - prev.args[0] && // @ts-ignore
                data[1] === prev.args[3] - prev.args[1]
              ) {
                command = "t";
                data = data.slice(2);
              } else if (
                // @ts-ignore
                prev.command === "t" && // @ts-ignore
                data[2] === prev.args[0] && // @ts-ignore
                data[3] === prev.args[1]
              ) {
                command = "t";
                data = data.slice(2);
              }
            }
          }
          if (params.removeUseless && !maybeHasStrokeAndLinecap) {
            if ((command === "l" || command === "h" || command === "v" || command === "q" || command === "t" || command === "c" || command === "s") && data.every(function(i2) {
              return i2 === 0;
            })) {
              path2[index] = prev;
              return false;
            }
            if (command === "a" && data[5] === 0 && data[6] === 0) {
              path2[index] = prev;
              return false;
            }
          }
          item.command = command;
          item.args = data;
          prev = item;
        } else {
          relSubpoint[0] = pathBase[0];
          relSubpoint[1] = pathBase[1];
          if (prev.command === "Z" || prev.command === "z")
            return false;
          prev = item;
        }
        return true;
      });
      return path;
    }
    function convertToMixed(path, params) {
      var prev = path[0];
      path = path.filter(function(item, index) {
        if (index == 0)
          return true;
        if (item.command === "Z" || item.command === "z") {
          prev = item;
          return true;
        }
        var command = item.command, data = item.args, adata = data.slice();
        if (command === "m" || command === "l" || command === "t" || command === "q" || command === "s" || command === "c") {
          for (var i = adata.length; i--; ) {
            adata[i] += item.base[i % 2];
          }
        } else if (command == "h") {
          adata[0] += item.base[0];
        } else if (command == "v") {
          adata[0] += item.base[1];
        } else if (command == "a") {
          adata[5] += item.base[0];
          adata[6] += item.base[1];
        }
        roundData(adata);
        var absoluteDataStr = cleanupOutData(adata, params), relativeDataStr = cleanupOutData(data, params);
        if (params.forceAbsolutePath || absoluteDataStr.length < relativeDataStr.length && !(params.negativeExtraSpace && command == prev.command && prev.command.charCodeAt(0) > 96 && absoluteDataStr.length == relativeDataStr.length - 1 && (data[0] < 0 || // @ts-ignore
        /^0\./.test(data[0]) && prev.args[prev.args.length - 1] % 1))) {
          item.command = command.toUpperCase();
          item.args = adata;
        }
        prev = item;
        return true;
      });
      return path;
    }
    function isConvex(data) {
      var center = getIntersection([
        0,
        0,
        data[2],
        data[3],
        data[0],
        data[1],
        data[4],
        data[5]
      ]);
      return center != null && data[2] < center[0] == center[0] < 0 && data[3] < center[1] == center[1] < 0 && data[4] < center[0] == center[0] < data[0] && data[5] < center[1] == center[1] < data[1];
    }
    function getIntersection(coords) {
      var a1 = coords[1] - coords[3], b1 = coords[2] - coords[0], c1 = coords[0] * coords[3] - coords[2] * coords[1], a2 = coords[5] - coords[7], b2 = coords[6] - coords[4], c2 = coords[4] * coords[7] - coords[5] * coords[6], denom = a1 * b2 - a2 * b1;
      if (!denom)
        return;
      var cross = [(b1 * c2 - b2 * c1) / denom, (a1 * c2 - a2 * c1) / -denom];
      if (!isNaN(cross[0]) && !isNaN(cross[1]) && isFinite(cross[0]) && isFinite(cross[1])) {
        return cross;
      }
    }
    function toFixed(num, precision2) {
      const pow = 10 ** precision2;
      return Math.round(num * pow) / pow;
    }
    function strongRound(data) {
      const precisionNum = precision || 0;
      for (let i = data.length; i-- > 0; ) {
        const fixed = toFixed(data[i], precisionNum);
        if (fixed !== data[i]) {
          const rounded = toFixed(data[i], precisionNum - 1);
          data[i] = toFixed(Math.abs(rounded - data[i]), precisionNum + 1) >= error ? fixed : rounded;
        }
      }
      return data;
    }
    function round(data) {
      for (var i = data.length; i-- > 0; ) {
        data[i] = Math.round(data[i]);
      }
      return data;
    }
    function isCurveStraightLine(data) {
      var i = data.length - 2, a = -data[i + 1], b = data[i], d = 1 / (a * a + b * b);
      if (i <= 1 || !isFinite(d))
        return false;
      while ((i -= 2) >= 0) {
        if (Math.sqrt(Math.pow(a * data[i] + b * data[i + 1], 2) * d) > error)
          return false;
      }
      return true;
    }
    function makeLonghand(item, data) {
      switch (item.command) {
        case "s":
          item.command = "c";
          break;
        case "t":
          item.command = "q";
          break;
      }
      item.args.unshift(
        data[data.length - 2] - data[data.length - 4],
        data[data.length - 1] - data[data.length - 3]
      );
      return item;
    }
    function getDistance(point1, point2) {
      return Math.hypot(point1[0] - point2[0], point1[1] - point2[1]);
    }
    function getCubicBezierPoint(curve, t) {
      var sqrT = t * t, cubT = sqrT * t, mt = 1 - t, sqrMt = mt * mt;
      return [
        3 * sqrMt * t * curve[0] + 3 * mt * sqrT * curve[2] + cubT * curve[4],
        3 * sqrMt * t * curve[1] + 3 * mt * sqrT * curve[3] + cubT * curve[5]
      ];
    }
    function findCircle(curve) {
      var midPoint = getCubicBezierPoint(curve, 1 / 2), m1 = [midPoint[0] / 2, midPoint[1] / 2], m2 = [(midPoint[0] + curve[4]) / 2, (midPoint[1] + curve[5]) / 2], center = getIntersection([
        m1[0],
        m1[1],
        m1[0] + m1[1],
        m1[1] - m1[0],
        m2[0],
        m2[1],
        m2[0] + (m2[1] - midPoint[1]),
        m2[1] - (m2[0] - midPoint[0])
      ]), radius = center && getDistance([0, 0], center), tolerance = Math.min(arcThreshold * error, arcTolerance * radius / 100);
      if (center && // @ts-ignore
      radius < 1e15 && [1 / 4, 3 / 4].every(function(point) {
        return Math.abs(
          // @ts-ignore
          getDistance(getCubicBezierPoint(curve, point), center) - radius
        ) <= tolerance;
      }))
        return { center, radius };
    }
    function isArc(curve, circle) {
      var tolerance = Math.min(
        arcThreshold * error,
        arcTolerance * circle.radius / 100
      );
      return [0, 1 / 4, 1 / 2, 3 / 4, 1].every(function(point) {
        return Math.abs(
          getDistance(getCubicBezierPoint(curve, point), circle.center) - circle.radius
        ) <= tolerance;
      });
    }
    function isArcPrev(curve, circle) {
      return isArc(curve, {
        center: [circle.center[0] + curve[4], circle.center[1] + curve[5]],
        radius: circle.radius
      });
    }
    function findArcAngle(curve, relCircle) {
      var x1 = -relCircle.center[0], y1 = -relCircle.center[1], x2 = curve[4] - relCircle.center[0], y2 = curve[5] - relCircle.center[1];
      return Math.acos(
        (x1 * x2 + y1 * y2) / Math.sqrt((x1 * x1 + y1 * y1) * (x2 * x2 + y2 * y2))
      );
    }
    function data2Path(params, pathData) {
      return pathData.reduce(function(pathString, item) {
        var strData = "";
        if (item.args) {
          strData = cleanupOutData(roundData(item.args.slice()), params);
        }
        return pathString + item.command + strData;
      }, "");
    }
  }
});

// node_modules/svgo/plugins/convertTransform.js
var require_convertTransform = __commonJS({
  "node_modules/svgo/plugins/convertTransform.js"(exports) {
    "use strict";
    var { cleanupOutData } = require_tools();
    var {
      transform2js,
      transformsMultiply,
      matrixToTransform
    } = require_transforms();
    exports.name = "convertTransform";
    exports.description = "collapses multiple transformations and optimizes it";
    exports.fn = (_root, params) => {
      const {
        convertToShorts: convertToShorts2 = true,
        // degPrecision = 3, // transformPrecision (or matrix precision) - 2 by default
        degPrecision,
        floatPrecision = 3,
        transformPrecision = 5,
        matrixToTransform: matrixToTransform2 = true,
        shortTranslate = true,
        shortScale = true,
        shortRotate = true,
        removeUseless: removeUseless2 = true,
        collapseIntoOne = true,
        leadingZero = true,
        negativeExtraSpace = false
      } = params;
      const newParams = {
        convertToShorts: convertToShorts2,
        degPrecision,
        floatPrecision,
        transformPrecision,
        matrixToTransform: matrixToTransform2,
        shortTranslate,
        shortScale,
        shortRotate,
        removeUseless: removeUseless2,
        collapseIntoOne,
        leadingZero,
        negativeExtraSpace
      };
      return {
        element: {
          enter: (node) => {
            if (node.attributes.transform != null) {
              convertTransform(node, "transform", newParams);
            }
            if (node.attributes.gradientTransform != null) {
              convertTransform(node, "gradientTransform", newParams);
            }
            if (node.attributes.patternTransform != null) {
              convertTransform(node, "patternTransform", newParams);
            }
          }
        }
      };
    };
    var convertTransform = (item, attrName, params) => {
      let data = transform2js(item.attributes[attrName]);
      params = definePrecision(data, params);
      if (params.collapseIntoOne && data.length > 1) {
        data = [transformsMultiply(data)];
      }
      if (params.convertToShorts) {
        data = convertToShorts(data, params);
      } else {
        data.forEach((item2) => roundTransform(item2, params));
      }
      if (params.removeUseless) {
        data = removeUseless(data);
      }
      if (data.length) {
        item.attributes[attrName] = js2transform(data, params);
      } else {
        delete item.attributes[attrName];
      }
    };
    var definePrecision = (data, { ...newParams }) => {
      const matrixData = [];
      for (const item of data) {
        if (item.name == "matrix") {
          matrixData.push(...item.data.slice(0, 4));
        }
      }
      let significantDigits = newParams.transformPrecision;
      if (matrixData.length) {
        newParams.transformPrecision = Math.min(
          newParams.transformPrecision,
          Math.max.apply(Math, matrixData.map(floatDigits)) || newParams.transformPrecision
        );
        significantDigits = Math.max.apply(
          Math,
          matrixData.map(
            (n) => n.toString().replace(/\D+/g, "").length
            // Number of digits in a number. 123.45 → 5
          )
        );
      }
      if (newParams.degPrecision == null) {
        newParams.degPrecision = Math.max(
          0,
          Math.min(newParams.floatPrecision, significantDigits - 2)
        );
      }
      return newParams;
    };
    var degRound = (data, params) => {
      if (params.degPrecision != null && params.degPrecision >= 1 && params.floatPrecision < 20) {
        return smartRound(params.degPrecision, data);
      } else {
        return round(data);
      }
    };
    var floatRound = (data, params) => {
      if (params.floatPrecision >= 1 && params.floatPrecision < 20) {
        return smartRound(params.floatPrecision, data);
      } else {
        return round(data);
      }
    };
    var transformRound = (data, params) => {
      if (params.transformPrecision >= 1 && params.floatPrecision < 20) {
        return smartRound(params.transformPrecision, data);
      } else {
        return round(data);
      }
    };
    var floatDigits = (n) => {
      const str = n.toString();
      return str.slice(str.indexOf(".")).length - 1;
    };
    var convertToShorts = (transforms, params) => {
      for (var i = 0; i < transforms.length; i++) {
        var transform2 = transforms[i];
        if (params.matrixToTransform && transform2.name === "matrix") {
          var decomposed = matrixToTransform(transform2, params);
          if (js2transform(decomposed, params).length <= js2transform([transform2], params).length) {
            transforms.splice(i, 1, ...decomposed);
          }
          transform2 = transforms[i];
        }
        roundTransform(transform2, params);
        if (params.shortTranslate && transform2.name === "translate" && transform2.data.length === 2 && !transform2.data[1]) {
          transform2.data.pop();
        }
        if (params.shortScale && transform2.name === "scale" && transform2.data.length === 2 && transform2.data[0] === transform2.data[1]) {
          transform2.data.pop();
        }
        if (params.shortRotate && transforms[i - 2] && transforms[i - 2].name === "translate" && transforms[i - 1].name === "rotate" && transforms[i].name === "translate" && transforms[i - 2].data[0] === -transforms[i].data[0] && transforms[i - 2].data[1] === -transforms[i].data[1]) {
          transforms.splice(i - 2, 3, {
            name: "rotate",
            data: [
              transforms[i - 1].data[0],
              transforms[i - 2].data[0],
              transforms[i - 2].data[1]
            ]
          });
          i -= 2;
        }
      }
      return transforms;
    };
    var removeUseless = (transforms) => {
      return transforms.filter((transform2) => {
        if (["translate", "rotate", "skewX", "skewY"].indexOf(transform2.name) > -1 && (transform2.data.length == 1 || transform2.name == "rotate") && !transform2.data[0] || // translate(0, 0)
        transform2.name == "translate" && !transform2.data[0] && !transform2.data[1] || // scale(1)
        transform2.name == "scale" && transform2.data[0] == 1 && (transform2.data.length < 2 || transform2.data[1] == 1) || // matrix(1 0 0 1 0 0)
        transform2.name == "matrix" && transform2.data[0] == 1 && transform2.data[3] == 1 && !(transform2.data[1] || transform2.data[2] || transform2.data[4] || transform2.data[5])) {
          return false;
        }
        return true;
      });
    };
    var js2transform = (transformJS, params) => {
      const transformString = transformJS.map((transform2) => {
        roundTransform(transform2, params);
        return `${transform2.name}(${cleanupOutData(transform2.data, params)})`;
      }).join("");
      return transformString;
    };
    var roundTransform = (transform2, params) => {
      switch (transform2.name) {
        case "translate":
          transform2.data = floatRound(transform2.data, params);
          break;
        case "rotate":
          transform2.data = [
            ...degRound(transform2.data.slice(0, 1), params),
            ...floatRound(transform2.data.slice(1), params)
          ];
          break;
        case "skewX":
        case "skewY":
          transform2.data = degRound(transform2.data, params);
          break;
        case "scale":
          transform2.data = transformRound(transform2.data, params);
          break;
        case "matrix":
          transform2.data = [
            ...transformRound(transform2.data.slice(0, 4), params),
            ...floatRound(transform2.data.slice(4), params)
          ];
          break;
      }
      return transform2;
    };
    var round = (data) => {
      return data.map(Math.round);
    };
    var smartRound = (precision, data) => {
      for (var i = data.length, tolerance = +Math.pow(0.1, precision).toFixed(precision); i--; ) {
        if (Number(data[i].toFixed(precision)) !== data[i]) {
          var rounded = +data[i].toFixed(precision - 1);
          data[i] = +Math.abs(rounded - data[i]).toFixed(precision + 1) >= tolerance ? +data[i].toFixed(precision) : rounded;
        }
      }
      return data;
    };
  }
});

// node_modules/svgo/plugins/removeEmptyAttrs.js
var require_removeEmptyAttrs = __commonJS({
  "node_modules/svgo/plugins/removeEmptyAttrs.js"(exports) {
    "use strict";
    var { attrsGroups } = require_collections();
    exports.name = "removeEmptyAttrs";
    exports.description = "removes empty attributes";
    exports.fn = () => {
      return {
        element: {
          enter: (node) => {
            for (const [name, value] of Object.entries(node.attributes)) {
              if (value === "" && // empty conditional processing attributes prevents elements from rendering
              attrsGroups.conditionalProcessing.includes(name) === false) {
                delete node.attributes[name];
              }
            }
          }
        }
      };
    };
  }
});

// node_modules/svgo/plugins/removeEmptyContainers.js
var require_removeEmptyContainers = __commonJS({
  "node_modules/svgo/plugins/removeEmptyContainers.js"(exports) {
    "use strict";
    var { detachNodeFromParent } = require_xast();
    var { elemsGroups } = require_collections();
    exports.name = "removeEmptyContainers";
    exports.description = "removes empty container elements";
    exports.fn = () => {
      return {
        element: {
          exit: (node, parentNode) => {
            if (node.name === "svg" || elemsGroups.container.includes(node.name) === false || node.children.length !== 0) {
              return;
            }
            if (node.name === "pattern" && Object.keys(node.attributes).length !== 0) {
              return;
            }
            if (node.name === "g" && node.attributes.filter != null) {
              return;
            }
            if (node.name === "mask" && node.attributes.id != null) {
              return;
            }
            detachNodeFromParent(node, parentNode);
          }
        }
      };
    };
  }
});

// node_modules/svgo/plugins/mergePaths.js
var require_mergePaths = __commonJS({
  "node_modules/svgo/plugins/mergePaths.js"(exports) {
    "use strict";
    var { detachNodeFromParent } = require_xast();
    var { collectStylesheet, computeStyle } = require_style();
    var { path2js, js2path, intersects } = require_path2();
    exports.name = "mergePaths";
    exports.description = "merges multiple paths in one if possible";
    exports.fn = (root, params) => {
      const {
        force = false,
        floatPrecision,
        noSpaceAfterFlags = false
        // a20 60 45 0 1 30 20 → a20 60 45 0130 20
      } = params;
      const stylesheet = collectStylesheet(root);
      return {
        element: {
          enter: (node) => {
            let prevChild = null;
            for (const child of node.children) {
              if (prevChild == null || prevChild.type !== "element" || prevChild.name !== "path" || prevChild.children.length !== 0 || prevChild.attributes.d == null) {
                prevChild = child;
                continue;
              }
              if (child.type !== "element" || child.name !== "path" || child.children.length !== 0 || child.attributes.d == null) {
                prevChild = child;
                continue;
              }
              const computedStyle = computeStyle(stylesheet, child);
              if (computedStyle["marker-start"] || computedStyle["marker-mid"] || computedStyle["marker-end"]) {
                prevChild = child;
                continue;
              }
              const prevChildAttrs = Object.keys(prevChild.attributes);
              const childAttrs = Object.keys(child.attributes);
              let attributesAreEqual = prevChildAttrs.length === childAttrs.length;
              for (const name of childAttrs) {
                if (name !== "d") {
                  if (prevChild.attributes[name] == null || prevChild.attributes[name] !== child.attributes[name]) {
                    attributesAreEqual = false;
                  }
                }
              }
              const prevPathJS = path2js(prevChild);
              const curPathJS = path2js(child);
              if (attributesAreEqual && (force || !intersects(prevPathJS, curPathJS))) {
                js2path(prevChild, prevPathJS.concat(curPathJS), {
                  floatPrecision,
                  noSpaceAfterFlags
                });
                detachNodeFromParent(child, node);
                continue;
              }
              prevChild = child;
            }
          }
        }
      };
    };
  }
});

// node_modules/svgo/plugins/removeUnusedNS.js
var require_removeUnusedNS = __commonJS({
  "node_modules/svgo/plugins/removeUnusedNS.js"(exports) {
    "use strict";
    exports.name = "removeUnusedNS";
    exports.description = "removes unused namespaces declaration";
    exports.fn = () => {
      const unusedNamespaces = /* @__PURE__ */ new Set();
      return {
        element: {
          enter: (node, parentNode) => {
            if (node.name === "svg" && parentNode.type === "root") {
              for (const name of Object.keys(node.attributes)) {
                if (name.startsWith("xmlns:")) {
                  const local = name.slice("xmlns:".length);
                  unusedNamespaces.add(local);
                }
              }
            }
            if (unusedNamespaces.size !== 0) {
              if (node.name.includes(":")) {
                const [ns] = node.name.split(":");
                if (unusedNamespaces.has(ns)) {
                  unusedNamespaces.delete(ns);
                }
              }
              for (const name of Object.keys(node.attributes)) {
                if (name.includes(":")) {
                  const [ns] = name.split(":");
                  unusedNamespaces.delete(ns);
                }
              }
            }
          },
          exit: (node, parentNode) => {
            if (node.name === "svg" && parentNode.type === "root") {
              for (const name of unusedNamespaces) {
                delete node.attributes[`xmlns:${name}`];
              }
            }
          }
        }
      };
    };
  }
});

// node_modules/svgo/plugins/sortAttrs.js
var require_sortAttrs = __commonJS({
  "node_modules/svgo/plugins/sortAttrs.js"(exports) {
    "use strict";
    exports.name = "sortAttrs";
    exports.description = "Sort element attributes for better compression";
    exports.fn = (_root, params) => {
      const {
        order = [
          "id",
          "width",
          "height",
          "x",
          "x1",
          "x2",
          "y",
          "y1",
          "y2",
          "cx",
          "cy",
          "r",
          "fill",
          "stroke",
          "marker",
          "d",
          "points"
        ],
        xmlnsOrder = "front"
      } = params;
      const getNsPriority = (name) => {
        if (xmlnsOrder === "front") {
          if (name === "xmlns") {
            return 3;
          }
          if (name.startsWith("xmlns:")) {
            return 2;
          }
        }
        if (name.includes(":")) {
          return 1;
        }
        return 0;
      };
      const compareAttrs = ([aName], [bName]) => {
        const aPriority = getNsPriority(aName);
        const bPriority = getNsPriority(bName);
        const priorityNs = bPriority - aPriority;
        if (priorityNs !== 0) {
          return priorityNs;
        }
        const [aPart] = aName.split("-");
        const [bPart] = bName.split("-");
        if (aPart !== bPart) {
          const aInOrderFlag = order.includes(aPart) ? 1 : 0;
          const bInOrderFlag = order.includes(bPart) ? 1 : 0;
          if (aInOrderFlag === 1 && bInOrderFlag === 1) {
            return order.indexOf(aPart) - order.indexOf(bPart);
          }
          const priorityOrder = bInOrderFlag - aInOrderFlag;
          if (priorityOrder !== 0) {
            return priorityOrder;
          }
        }
        return aName < bName ? -1 : 1;
      };
      return {
        element: {
          enter: (node) => {
            const attrs = Object.entries(node.attributes);
            attrs.sort(compareAttrs);
            const sortedAttributes = {};
            for (const [name, value] of attrs) {
              sortedAttributes[name] = value;
            }
            node.attributes = sortedAttributes;
          }
        }
      };
    };
  }
});

// node_modules/svgo/plugins/sortDefsChildren.js
var require_sortDefsChildren = __commonJS({
  "node_modules/svgo/plugins/sortDefsChildren.js"(exports) {
    "use strict";
    exports.name = "sortDefsChildren";
    exports.description = "Sorts children of <defs> to improve compression";
    exports.fn = () => {
      return {
        element: {
          enter: (node) => {
            if (node.name === "defs") {
              const frequencies = /* @__PURE__ */ new Map();
              for (const child of node.children) {
                if (child.type === "element") {
                  const frequency = frequencies.get(child.name);
                  if (frequency == null) {
                    frequencies.set(child.name, 1);
                  } else {
                    frequencies.set(child.name, frequency + 1);
                  }
                }
              }
              node.children.sort((a, b) => {
                if (a.type !== "element" || b.type !== "element") {
                  return 0;
                }
                const aFrequency = frequencies.get(a.name);
                const bFrequency = frequencies.get(b.name);
                if (aFrequency != null && bFrequency != null) {
                  const frequencyComparison = bFrequency - aFrequency;
                  if (frequencyComparison !== 0) {
                    return frequencyComparison;
                  }
                }
                const lengthComparison = b.name.length - a.name.length;
                if (lengthComparison !== 0) {
                  return lengthComparison;
                }
                if (a.name !== b.name) {
                  return a.name > b.name ? -1 : 1;
                }
                return 0;
              });
            }
          }
        }
      };
    };
  }
});

// node_modules/svgo/plugins/removeTitle.js
var require_removeTitle = __commonJS({
  "node_modules/svgo/plugins/removeTitle.js"(exports) {
    "use strict";
    var { detachNodeFromParent } = require_xast();
    exports.name = "removeTitle";
    exports.description = "removes <title>";
    exports.fn = () => {
      return {
        element: {
          enter: (node, parentNode) => {
            if (node.name === "title") {
              detachNodeFromParent(node, parentNode);
            }
          }
        }
      };
    };
  }
});

// node_modules/svgo/plugins/removeDesc.js
var require_removeDesc = __commonJS({
  "node_modules/svgo/plugins/removeDesc.js"(exports) {
    "use strict";
    var { detachNodeFromParent } = require_xast();
    exports.name = "removeDesc";
    exports.description = "removes <desc>";
    var standardDescs = /^(Created with|Created using)/;
    exports.fn = (root, params) => {
      const { removeAny = false } = params;
      return {
        element: {
          enter: (node, parentNode) => {
            if (node.name === "desc") {
              if (removeAny || node.children.length === 0 || node.children[0].type === "text" && standardDescs.test(node.children[0].value)) {
                detachNodeFromParent(node, parentNode);
              }
            }
          }
        }
      };
    };
  }
});

// node_modules/svgo/plugins/preset-default.js
var require_preset_default = __commonJS({
  "node_modules/svgo/plugins/preset-default.js"(exports, module2) {
    "use strict";
    var { createPreset } = require_plugins();
    var removeDoctype = require_removeDoctype();
    var removeXMLProcInst = require_removeXMLProcInst();
    var removeComments = require_removeComments();
    var removeMetadata = require_removeMetadata();
    var removeEditorsNSData = require_removeEditorsNSData();
    var cleanupAttrs = require_cleanupAttrs();
    var mergeStyles = require_mergeStyles();
    var inlineStyles = require_inlineStyles();
    var minifyStyles = require_minifyStyles();
    var cleanupIds = require_cleanupIds();
    var removeUselessDefs = require_removeUselessDefs();
    var cleanupNumericValues = require_cleanupNumericValues();
    var convertColors = require_convertColors();
    var removeUnknownsAndDefaults = require_removeUnknownsAndDefaults();
    var removeNonInheritableGroupAttrs = require_removeNonInheritableGroupAttrs();
    var removeUselessStrokeAndFill = require_removeUselessStrokeAndFill();
    var removeViewBox = require_removeViewBox();
    var cleanupEnableBackground = require_cleanupEnableBackground();
    var removeHiddenElems = require_removeHiddenElems();
    var removeEmptyText = require_removeEmptyText();
    var convertShapeToPath = require_convertShapeToPath();
    var convertEllipseToCircle = require_convertEllipseToCircle();
    var moveElemsAttrsToGroup = require_moveElemsAttrsToGroup();
    var moveGroupAttrsToElems = require_moveGroupAttrsToElems();
    var collapseGroups = require_collapseGroups();
    var convertPathData = require_convertPathData();
    var convertTransform = require_convertTransform();
    var removeEmptyAttrs = require_removeEmptyAttrs();
    var removeEmptyContainers = require_removeEmptyContainers();
    var mergePaths = require_mergePaths();
    var removeUnusedNS = require_removeUnusedNS();
    var sortAttrs = require_sortAttrs();
    var sortDefsChildren = require_sortDefsChildren();
    var removeTitle = require_removeTitle();
    var removeDesc = require_removeDesc();
    var presetDefault = createPreset({
      name: "preset-default",
      plugins: [
        removeDoctype,
        removeXMLProcInst,
        removeComments,
        removeMetadata,
        removeEditorsNSData,
        cleanupAttrs,
        mergeStyles,
        inlineStyles,
        minifyStyles,
        cleanupIds,
        removeUselessDefs,
        cleanupNumericValues,
        convertColors,
        removeUnknownsAndDefaults,
        removeNonInheritableGroupAttrs,
        removeUselessStrokeAndFill,
        removeViewBox,
        cleanupEnableBackground,
        removeHiddenElems,
        removeEmptyText,
        convertShapeToPath,
        convertEllipseToCircle,
        moveElemsAttrsToGroup,
        moveGroupAttrsToElems,
        collapseGroups,
        convertPathData,
        convertTransform,
        removeEmptyAttrs,
        removeEmptyContainers,
        mergePaths,
        removeUnusedNS,
        sortAttrs,
        sortDefsChildren,
        removeTitle,
        removeDesc
      ]
    });
    module2.exports = presetDefault;
  }
});

// node_modules/svgo/plugins/addAttributesToSVGElement.js
var require_addAttributesToSVGElement = __commonJS({
  "node_modules/svgo/plugins/addAttributesToSVGElement.js"(exports) {
    "use strict";
    exports.name = "addAttributesToSVGElement";
    exports.description = "adds attributes to an outer <svg> element";
    var ENOCLS = `Error in plugin "addAttributesToSVGElement": absent parameters.
It should have a list of "attributes" or one "attribute".
Config example:

plugins: [
  {
    name: 'addAttributesToSVGElement',
    params: {
      attribute: "mySvg"
    }
  }
]

plugins: [
  {
    name: 'addAttributesToSVGElement',
    params: {
      attributes: ["mySvg", "size-big"]
    }
  }
]

plugins: [
  {
    name: 'addAttributesToSVGElement',
    params: {
      attributes: [
        {
          focusable: false
        },
        {
          'data-image': icon
        }
      ]
    }
  }
]
`;
    exports.fn = (root, params) => {
      if (!Array.isArray(params.attributes) && !params.attribute) {
        console.error(ENOCLS);
        return null;
      }
      const attributes = params.attributes || [params.attribute];
      return {
        element: {
          enter: (node, parentNode) => {
            if (node.name === "svg" && parentNode.type === "root") {
              for (const attribute of attributes) {
                if (typeof attribute === "string") {
                  if (node.attributes[attribute] == null) {
                    node.attributes[attribute] = void 0;
                  }
                }
                if (typeof attribute === "object") {
                  for (const key of Object.keys(attribute)) {
                    if (node.attributes[key] == null) {
                      node.attributes[key] = attribute[key];
                    }
                  }
                }
              }
            }
          }
        }
      };
    };
  }
});

// node_modules/svgo/plugins/addClassesToSVGElement.js
var require_addClassesToSVGElement = __commonJS({
  "node_modules/svgo/plugins/addClassesToSVGElement.js"(exports) {
    "use strict";
    exports.name = "addClassesToSVGElement";
    exports.description = "adds classnames to an outer <svg> element";
    var ENOCLS = `Error in plugin "addClassesToSVGElement": absent parameters.
It should have a list of classes in "classNames" or one "className".
Config example:

plugins: [
  {
    name: "addClassesToSVGElement",
    params: {
      className: "mySvg"
    }
  }
]

plugins: [
  {
    name: "addClassesToSVGElement",
    params: {
      classNames: ["mySvg", "size-big"]
    }
  }
]
`;
    exports.fn = (root, params) => {
      if (!(Array.isArray(params.classNames) && params.classNames.some(String)) && !params.className) {
        console.error(ENOCLS);
        return null;
      }
      const classNames = params.classNames || [params.className];
      return {
        element: {
          enter: (node, parentNode) => {
            if (node.name === "svg" && parentNode.type === "root") {
              const classList = new Set(
                node.attributes.class == null ? null : node.attributes.class.split(" ")
              );
              for (const className of classNames) {
                if (className != null) {
                  classList.add(className);
                }
              }
              node.attributes.class = Array.from(classList).join(" ");
            }
          }
        }
      };
    };
  }
});

// node_modules/svgo/plugins/cleanupListOfValues.js
var require_cleanupListOfValues = __commonJS({
  "node_modules/svgo/plugins/cleanupListOfValues.js"(exports) {
    "use strict";
    var { removeLeadingZero } = require_tools();
    exports.name = "cleanupListOfValues";
    exports.description = "rounds list of values to the fixed precision";
    var regNumericValues = /^([-+]?\d*\.?\d+([eE][-+]?\d+)?)(px|pt|pc|mm|cm|m|in|ft|em|ex|%)?$/;
    var regSeparator = /\s+,?\s*|,\s*/;
    var absoluteLengths = {
      // relative to px
      cm: 96 / 2.54,
      mm: 96 / 25.4,
      in: 96,
      pt: 4 / 3,
      pc: 16,
      px: 1
    };
    exports.fn = (_root, params) => {
      const {
        floatPrecision = 3,
        leadingZero = true,
        defaultPx = true,
        convertToPx = true
      } = params;
      const roundValues = (lists) => {
        const roundedList = [];
        for (const elem of lists.split(regSeparator)) {
          const match = elem.match(regNumericValues);
          const matchNew = elem.match(/new/);
          if (match) {
            let num = Number(Number(match[1]).toFixed(floatPrecision));
            let matchedUnit = match[3] || "";
            let units = matchedUnit;
            if (convertToPx && units && units in absoluteLengths) {
              const pxNum = Number(
                (absoluteLengths[units] * Number(match[1])).toFixed(floatPrecision)
              );
              if (pxNum.toString().length < match[0].length) {
                num = pxNum;
                units = "px";
              }
            }
            let str;
            if (leadingZero) {
              str = removeLeadingZero(num);
            } else {
              str = num.toString();
            }
            if (defaultPx && units === "px") {
              units = "";
            }
            roundedList.push(str + units);
          } else if (matchNew) {
            roundedList.push("new");
          } else if (elem) {
            roundedList.push(elem);
          }
        }
        return roundedList.join(" ");
      };
      return {
        element: {
          enter: (node) => {
            if (node.attributes.points != null) {
              node.attributes.points = roundValues(node.attributes.points);
            }
            if (node.attributes["enable-background"] != null) {
              node.attributes["enable-background"] = roundValues(
                node.attributes["enable-background"]
              );
            }
            if (node.attributes.viewBox != null) {
              node.attributes.viewBox = roundValues(node.attributes.viewBox);
            }
            if (node.attributes["stroke-dasharray"] != null) {
              node.attributes["stroke-dasharray"] = roundValues(
                node.attributes["stroke-dasharray"]
              );
            }
            if (node.attributes.dx != null) {
              node.attributes.dx = roundValues(node.attributes.dx);
            }
            if (node.attributes.dy != null) {
              node.attributes.dy = roundValues(node.attributes.dy);
            }
            if (node.attributes.x != null) {
              node.attributes.x = roundValues(node.attributes.x);
            }
            if (node.attributes.y != null) {
              node.attributes.y = roundValues(node.attributes.y);
            }
          }
        }
      };
    };
  }
});

// node_modules/svgo/plugins/convertOneStopGradients.js
var require_convertOneStopGradients = __commonJS({
  "node_modules/svgo/plugins/convertOneStopGradients.js"(exports) {
    "use strict";
    var { attrsGroupsDefaults, colorsProps } = require_collections();
    var {
      detachNodeFromParent,
      querySelectorAll,
      querySelector
    } = require_xast();
    var { computeStyle, collectStylesheet } = require_style();
    exports.name = "convertOneStopGradients";
    exports.description = "converts one-stop (single color) gradients to a plain color";
    exports.fn = (root) => {
      const stylesheet = collectStylesheet(root);
      const effectedDefs = /* @__PURE__ */ new Set();
      const allDefs = /* @__PURE__ */ new Map();
      const gradientsToDetach = /* @__PURE__ */ new Map();
      let xlinkHrefCount = 0;
      return {
        element: {
          enter: (node, parentNode) => {
            if (node.attributes["xlink:href"] != null) {
              xlinkHrefCount++;
            }
            if (node.name === "defs") {
              allDefs.set(node, parentNode);
              return;
            }
            if (node.name !== "linearGradient" && node.name !== "radialGradient") {
              return;
            }
            const stops = node.children.filter((child) => {
              return child.type === "element" && child.name === "stop";
            });
            const href = node.attributes["xlink:href"] || node.attributes["href"];
            let effectiveNode = stops.length === 0 && href != null && href.startsWith("#") ? querySelector(root, href) : node;
            if (effectiveNode == null || effectiveNode.type !== "element") {
              gradientsToDetach.set(node, parentNode);
              return;
            }
            const effectiveStops = effectiveNode.children.filter((child) => {
              return child.type === "element" && child.name === "stop";
            });
            if (effectiveStops.length !== 1 || effectiveStops[0].type !== "element") {
              return;
            }
            if (parentNode.type === "element" && parentNode.name === "defs") {
              effectedDefs.add(parentNode);
            }
            gradientsToDetach.set(node, parentNode);
            let color;
            const style = computeStyle(stylesheet, effectiveStops[0])["stop-color"];
            if (style != null && style.type === "static") {
              color = style.value;
            }
            const selectorVal = `url(#${node.attributes.id})`;
            const selector = colorsProps.map((attr) => `[${attr}="${selectorVal}"]`).join(",");
            const elements = querySelectorAll(root, selector);
            for (const element of elements) {
              if (element.type !== "element") {
                continue;
              }
              for (const attr of colorsProps) {
                if (element.attributes[attr] !== selectorVal) {
                  continue;
                }
                if (color != null) {
                  element.attributes[attr] = color;
                } else {
                  delete element.attributes[attr];
                }
              }
            }
            const styledElements = querySelectorAll(
              root,
              `[style*=${selectorVal}]`
            );
            for (const element of styledElements) {
              if (element.type !== "element") {
                continue;
              }
              element.attributes.style = element.attributes.style.replace(
                selectorVal,
                color || attrsGroupsDefaults.presentation["stop-color"]
              );
            }
          },
          exit: (node) => {
            if (node.name === "svg") {
              for (const [gradient, parent] of gradientsToDetach.entries()) {
                if (gradient.attributes["xlink:href"] != null) {
                  xlinkHrefCount--;
                }
                detachNodeFromParent(gradient, parent);
              }
              if (xlinkHrefCount === 0) {
                delete node.attributes["xmlns:xlink"];
              }
              for (const [defs, parent] of allDefs.entries()) {
                if (effectedDefs.has(defs) && defs.children.length === 0) {
                  detachNodeFromParent(defs, parent);
                }
              }
            }
          }
        }
      };
    };
  }
});

// node_modules/svgo/plugins/convertStyleToAttrs.js
var require_convertStyleToAttrs = __commonJS({
  "node_modules/svgo/plugins/convertStyleToAttrs.js"(exports) {
    "use strict";
    var { attrsGroups } = require_collections();
    exports.name = "convertStyleToAttrs";
    exports.description = "converts style to attributes";
    var g = (...args) => {
      return "(?:" + args.join("|") + ")";
    };
    var stylingProps = attrsGroups.presentation;
    var rEscape = "\\\\(?:[0-9a-f]{1,6}\\s?|\\r\\n|.)";
    var rAttr = "\\s*(" + g("[^:;\\\\]", rEscape) + "*?)\\s*";
    var rSingleQuotes = "'(?:[^'\\n\\r\\\\]|" + rEscape + ")*?(?:'|$)";
    var rQuotes = '"(?:[^"\\n\\r\\\\]|' + rEscape + ')*?(?:"|$)';
    var rQuotedString = new RegExp("^" + g(rSingleQuotes, rQuotes) + "$");
    var rParenthesis = "\\(" + g(`[^'"()\\\\]+`, rEscape, rSingleQuotes, rQuotes) + "*?\\)";
    var rValue = "\\s*(" + g(
      `[^!'"();\\\\]+?`,
      rEscape,
      rSingleQuotes,
      rQuotes,
      rParenthesis,
      "[^;]*?"
    ) + "*?)";
    var rDeclEnd = "\\s*(?:;\\s*|$)";
    var rImportant = "(\\s*!important(?![-(\\w]))?";
    var regDeclarationBlock = new RegExp(
      rAttr + ":" + rValue + rImportant + rDeclEnd,
      "ig"
    );
    var regStripComments = new RegExp(
      g(rEscape, rSingleQuotes, rQuotes, "/\\*[^]*?\\*/"),
      "ig"
    );
    exports.fn = (_root, params) => {
      const { keepImportant = false } = params;
      return {
        element: {
          enter: (node) => {
            if (node.attributes.style != null) {
              let styles = [];
              const newAttributes = {};
              const styleValue = node.attributes.style.replace(
                regStripComments,
                (match) => {
                  return match[0] == "/" ? "" : match[0] == "\\" && /[-g-z]/i.test(match[1]) ? match[1] : match;
                }
              );
              regDeclarationBlock.lastIndex = 0;
              for (var rule; rule = regDeclarationBlock.exec(styleValue); ) {
                if (!keepImportant || !rule[3]) {
                  styles.push([rule[1], rule[2]]);
                }
              }
              if (styles.length) {
                styles = styles.filter(function(style) {
                  if (style[0]) {
                    var prop = style[0].toLowerCase(), val = style[1];
                    if (rQuotedString.test(val)) {
                      val = val.slice(1, -1);
                    }
                    if (stylingProps.includes(prop)) {
                      newAttributes[prop] = val;
                      return false;
                    }
                  }
                  return true;
                });
                Object.assign(node.attributes, newAttributes);
                if (styles.length) {
                  node.attributes.style = styles.map((declaration) => declaration.join(":")).join(";");
                } else {
                  delete node.attributes.style;
                }
              }
            }
          }
        }
      };
    };
  }
});

// node_modules/svgo/plugins/prefixIds.js
var require_prefixIds = __commonJS({
  "node_modules/svgo/plugins/prefixIds.js"(exports) {
    "use strict";
    var csstree = require_cjs();
    var { referencesProps } = require_collections();
    exports.name = "prefixIds";
    exports.description = "prefix IDs";
    var getBasename = (path) => {
      const matched = path.match(/[/\\]?([^/\\]+)$/);
      if (matched) {
        return matched[1];
      }
      return "";
    };
    var escapeIdentifierName = (str) => {
      return str.replace(/[. ]/g, "_");
    };
    var unquote = (string) => {
      if (string.startsWith('"') && string.endsWith('"') || string.startsWith("'") && string.endsWith("'")) {
        return string.slice(1, -1);
      }
      return string;
    };
    var prefixId = (prefixGenerator, body) => {
      const prefix = prefixGenerator(body);
      if (body.startsWith(prefix)) {
        return body;
      }
      return prefix + body;
    };
    var prefixReference = (prefixGenerator, reference) => {
      if (reference.startsWith("#")) {
        return "#" + prefixId(prefixGenerator, reference.slice(1));
      }
      return null;
    };
    var generatePrefix = (body, node, info, prefixGenerator, delim, history) => {
      if (typeof prefixGenerator === "function") {
        let prefix = history.get(body);
        if (prefix != null) {
          return prefix;
        }
        prefix = prefixGenerator(node, info) + delim;
        history.set(body, prefix);
        return prefix;
      }
      if (typeof prefixGenerator === "string") {
        return prefixGenerator + delim;
      }
      if (prefixGenerator === false) {
        return "";
      }
      if (info.path != null && info.path.length > 0) {
        return escapeIdentifierName(getBasename(info.path)) + delim;
      }
      return "prefix" + delim;
    };
    exports.fn = (_root, params, info) => {
      const {
        delim = "__",
        prefix,
        prefixIds = true,
        prefixClassNames = true
      } = params;
      const prefixMap = /* @__PURE__ */ new Map();
      return {
        element: {
          enter: (node) => {
            const prefixGenerator = (id) => generatePrefix(id, node, info, prefix, delim, prefixMap);
            if (node.name === "style") {
              if (node.children.length === 0) {
                return;
              }
              let cssText = "";
              if (node.children[0].type === "text" || node.children[0].type === "cdata") {
                cssText = node.children[0].value;
              }
              let cssAst = null;
              try {
                cssAst = csstree.parse(cssText, {
                  parseValue: true,
                  parseCustomProperty: false
                });
              } catch (e) {
                return;
              }
              csstree.walk(cssAst, (node2) => {
                if (prefixIds && node2.type === "IdSelector" || prefixClassNames && node2.type === "ClassSelector") {
                  node2.name = prefixId(prefixGenerator, node2.name);
                  return;
                }
                if (node2.type === "Url" && node2.value.length > 0) {
                  const prefixed = prefixReference(
                    prefixGenerator,
                    // @ts-ignore
                    unquote(node2.value)
                  );
                  if (prefixed != null) {
                    node2.value = prefixed;
                  }
                }
              });
              if (node.children[0].type === "text" || node.children[0].type === "cdata") {
                node.children[0].value = csstree.generate(cssAst);
              }
              return;
            }
            if (prefixIds && node.attributes.id != null && node.attributes.id.length !== 0) {
              node.attributes.id = prefixId(prefixGenerator, node.attributes.id);
            }
            if (prefixClassNames && node.attributes.class != null && node.attributes.class.length !== 0) {
              node.attributes.class = node.attributes.class.split(/\s+/).map((name) => prefixId(prefixGenerator, name)).join(" ");
            }
            for (const name of ["href", "xlink:href"]) {
              if (node.attributes[name] != null && node.attributes[name].length !== 0) {
                const prefixed = prefixReference(
                  prefixGenerator,
                  node.attributes[name]
                );
                if (prefixed != null) {
                  node.attributes[name] = prefixed;
                }
              }
            }
            for (const name of referencesProps) {
              if (node.attributes[name] != null && node.attributes[name].length !== 0) {
                node.attributes[name] = node.attributes[name].replace(
                  /url\((.*?)\)/gi,
                  (match, url) => {
                    const prefixed = prefixReference(prefixGenerator, url);
                    if (prefixed == null) {
                      return match;
                    }
                    return `url(${prefixed})`;
                  }
                );
              }
            }
            for (const name of ["begin", "end"]) {
              if (node.attributes[name] != null && node.attributes[name].length !== 0) {
                const parts = node.attributes[name].split(/\s*;\s+/).map((val) => {
                  if (val.endsWith(".end") || val.endsWith(".start")) {
                    const [id, postfix] = val.split(".");
                    return `${prefixId(prefixGenerator, id)}.${postfix}`;
                  }
                  return val;
                });
                node.attributes[name] = parts.join("; ");
              }
            }
          }
        }
      };
    };
  }
});

// node_modules/svgo/plugins/removeAttributesBySelector.js
var require_removeAttributesBySelector = __commonJS({
  "node_modules/svgo/plugins/removeAttributesBySelector.js"(exports) {
    "use strict";
    var { querySelectorAll } = require_xast();
    exports.name = "removeAttributesBySelector";
    exports.description = "removes attributes of elements that match a css selector";
    exports.fn = (root, params) => {
      const selectors = Array.isArray(params.selectors) ? params.selectors : [params];
      for (const { selector, attributes } of selectors) {
        const nodes = querySelectorAll(root, selector);
        for (const node of nodes) {
          if (node.type === "element") {
            if (Array.isArray(attributes)) {
              for (const name of attributes) {
                delete node.attributes[name];
              }
            } else {
              delete node.attributes[attributes];
            }
          }
        }
      }
      return {};
    };
  }
});

// node_modules/svgo/plugins/removeAttrs.js
var require_removeAttrs = __commonJS({
  "node_modules/svgo/plugins/removeAttrs.js"(exports) {
    "use strict";
    exports.name = "removeAttrs";
    exports.description = "removes specified attributes";
    var DEFAULT_SEPARATOR = ":";
    var ENOATTRS = `Warning: The plugin "removeAttrs" requires the "attrs" parameter.
It should have a pattern to remove, otherwise the plugin is a noop.
Config example:

plugins: [
  {
    name: "removeAttrs",
    params: {
      attrs: "(fill|stroke)"
    }
  }
]
`;
    exports.fn = (root, params) => {
      if (typeof params.attrs == "undefined") {
        console.warn(ENOATTRS);
        return null;
      }
      const elemSeparator = typeof params.elemSeparator == "string" ? params.elemSeparator : DEFAULT_SEPARATOR;
      const preserveCurrentColor = typeof params.preserveCurrentColor == "boolean" ? params.preserveCurrentColor : false;
      const attrs = Array.isArray(params.attrs) ? params.attrs : [params.attrs];
      return {
        element: {
          enter: (node) => {
            for (let pattern of attrs) {
              if (pattern.includes(elemSeparator) === false) {
                pattern = [".*", elemSeparator, pattern, elemSeparator, ".*"].join(
                  ""
                );
              } else if (pattern.split(elemSeparator).length < 3) {
                pattern = [pattern, elemSeparator, ".*"].join("");
              }
              const list = pattern.split(elemSeparator).map((value) => {
                if (value === "*") {
                  value = ".*";
                }
                return new RegExp(["^", value, "$"].join(""), "i");
              });
              if (list[0].test(node.name)) {
                for (const [name, value] of Object.entries(node.attributes)) {
                  const isFillCurrentColor = preserveCurrentColor && name == "fill" && value == "currentColor";
                  const isStrokeCurrentColor = preserveCurrentColor && name == "stroke" && value == "currentColor";
                  if (!isFillCurrentColor && !isStrokeCurrentColor && // matches attribute name
                  list[1].test(name) && // matches attribute value
                  list[2].test(value)) {
                    delete node.attributes[name];
                  }
                }
              }
            }
          }
        }
      };
    };
  }
});

// node_modules/svgo/plugins/removeDimensions.js
var require_removeDimensions = __commonJS({
  "node_modules/svgo/plugins/removeDimensions.js"(exports) {
    "use strict";
    exports.name = "removeDimensions";
    exports.description = "removes width and height in presence of viewBox (opposite to removeViewBox, disable it first)";
    exports.fn = () => {
      return {
        element: {
          enter: (node) => {
            if (node.name === "svg") {
              if (node.attributes.viewBox != null) {
                delete node.attributes.width;
                delete node.attributes.height;
              } else if (node.attributes.width != null && node.attributes.height != null && Number.isNaN(Number(node.attributes.width)) === false && Number.isNaN(Number(node.attributes.height)) === false) {
                const width = Number(node.attributes.width);
                const height = Number(node.attributes.height);
                node.attributes.viewBox = `0 0 ${width} ${height}`;
                delete node.attributes.width;
                delete node.attributes.height;
              }
            }
          }
        }
      };
    };
  }
});

// node_modules/svgo/plugins/removeElementsByAttr.js
var require_removeElementsByAttr = __commonJS({
  "node_modules/svgo/plugins/removeElementsByAttr.js"(exports) {
    "use strict";
    var { detachNodeFromParent } = require_xast();
    exports.name = "removeElementsByAttr";
    exports.description = "removes arbitrary elements by ID or className (disabled by default)";
    exports.fn = (root, params) => {
      const ids = params.id == null ? [] : Array.isArray(params.id) ? params.id : [params.id];
      const classes = params.class == null ? [] : Array.isArray(params.class) ? params.class : [params.class];
      return {
        element: {
          enter: (node, parentNode) => {
            if (node.attributes.id != null && ids.length !== 0) {
              if (ids.includes(node.attributes.id)) {
                detachNodeFromParent(node, parentNode);
              }
            }
            if (node.attributes.class && classes.length !== 0) {
              const classList = node.attributes.class.split(" ");
              for (const item of classes) {
                if (classList.includes(item)) {
                  detachNodeFromParent(node, parentNode);
                  break;
                }
              }
            }
          }
        }
      };
    };
  }
});

// node_modules/svgo/plugins/removeOffCanvasPaths.js
var require_removeOffCanvasPaths = __commonJS({
  "node_modules/svgo/plugins/removeOffCanvasPaths.js"(exports) {
    "use strict";
    var { visitSkip, detachNodeFromParent } = require_xast();
    var { parsePathData } = require_path();
    var { intersects } = require_path2();
    exports.name = "removeOffCanvasPaths";
    exports.description = "removes elements that are drawn outside of the viewbox (disabled by default)";
    exports.fn = () => {
      let viewBoxData = null;
      return {
        element: {
          enter: (node, parentNode) => {
            if (node.name === "svg" && parentNode.type === "root") {
              let viewBox = "";
              if (node.attributes.viewBox != null) {
                viewBox = node.attributes.viewBox;
              } else if (node.attributes.height != null && node.attributes.width != null) {
                viewBox = `0 0 ${node.attributes.width} ${node.attributes.height}`;
              }
              viewBox = viewBox.replace(/[,+]|px/g, " ").replace(/\s+/g, " ").replace(/^\s*|\s*$/g, "");
              const m = /^(-?\d*\.?\d+) (-?\d*\.?\d+) (\d*\.?\d+) (\d*\.?\d+)$/.exec(
                viewBox
              );
              if (m == null) {
                return;
              }
              const left = Number.parseFloat(m[1]);
              const top = Number.parseFloat(m[2]);
              const width = Number.parseFloat(m[3]);
              const height = Number.parseFloat(m[4]);
              viewBoxData = {
                left,
                top,
                right: left + width,
                bottom: top + height,
                width,
                height
              };
            }
            if (node.attributes.transform != null) {
              return visitSkip;
            }
            if (node.name === "path" && node.attributes.d != null && viewBoxData != null) {
              const pathData = parsePathData(node.attributes.d);
              let visible = false;
              for (const pathDataItem of pathData) {
                if (pathDataItem.command === "M") {
                  const [x, y] = pathDataItem.args;
                  if (x >= viewBoxData.left && x <= viewBoxData.right && y >= viewBoxData.top && y <= viewBoxData.bottom) {
                    visible = true;
                  }
                }
              }
              if (visible) {
                return;
              }
              if (pathData.length === 2) {
                pathData.push({ command: "z", args: [] });
              }
              const { left, top, width, height } = viewBoxData;
              const viewBoxPathData = [
                { command: "M", args: [left, top] },
                { command: "h", args: [width] },
                { command: "v", args: [height] },
                { command: "H", args: [left] },
                { command: "z", args: [] }
              ];
              if (intersects(viewBoxPathData, pathData) === false) {
                detachNodeFromParent(node, parentNode);
              }
            }
          }
        }
      };
    };
  }
});

// node_modules/svgo/plugins/removeRasterImages.js
var require_removeRasterImages = __commonJS({
  "node_modules/svgo/plugins/removeRasterImages.js"(exports) {
    "use strict";
    var { detachNodeFromParent } = require_xast();
    exports.name = "removeRasterImages";
    exports.description = "removes raster images (disabled by default)";
    exports.fn = () => {
      return {
        element: {
          enter: (node, parentNode) => {
            if (node.name === "image" && node.attributes["xlink:href"] != null && /(\.|image\/)(jpe?g|png|gif)/.test(node.attributes["xlink:href"])) {
              detachNodeFromParent(node, parentNode);
            }
          }
        }
      };
    };
  }
});

// node_modules/svgo/plugins/removeScriptElement.js
var require_removeScriptElement = __commonJS({
  "node_modules/svgo/plugins/removeScriptElement.js"(exports) {
    "use strict";
    var { detachNodeFromParent } = require_xast();
    var { attrsGroups } = require_collections();
    exports.name = "removeScriptElement";
    exports.description = "removes scripts (disabled by default)";
    var eventAttrs = [
      ...attrsGroups.animationEvent,
      ...attrsGroups.documentEvent,
      ...attrsGroups.documentElementEvent,
      ...attrsGroups.globalEvent,
      ...attrsGroups.graphicalEvent
    ];
    exports.fn = () => {
      return {
        element: {
          enter: (node, parentNode) => {
            if (node.name === "script") {
              detachNodeFromParent(node, parentNode);
              return;
            }
            for (const attr of eventAttrs) {
              if (node.attributes[attr] != null) {
                delete node.attributes[attr];
              }
            }
          },
          exit: (node, parentNode) => {
            if (node.name !== "a") {
              return;
            }
            for (const attr of Object.keys(node.attributes)) {
              if (attr === "href" || attr.endsWith(":href")) {
                if (node.attributes[attr] == null || !node.attributes[attr].trimStart().startsWith("javascript:")) {
                  continue;
                }
                const index = parentNode.children.indexOf(node);
                parentNode.children.splice(index, 1, ...node.children);
                for (const child of node.children) {
                  Object.defineProperty(child, "parentNode", {
                    writable: true,
                    value: parentNode
                  });
                }
              }
            }
          }
        }
      };
    };
  }
});

// node_modules/svgo/plugins/removeStyleElement.js
var require_removeStyleElement = __commonJS({
  "node_modules/svgo/plugins/removeStyleElement.js"(exports) {
    "use strict";
    var { detachNodeFromParent } = require_xast();
    exports.name = "removeStyleElement";
    exports.description = "removes <style> element (disabled by default)";
    exports.fn = () => {
      return {
        element: {
          enter: (node, parentNode) => {
            if (node.name === "style") {
              detachNodeFromParent(node, parentNode);
            }
          }
        }
      };
    };
  }
});

// node_modules/svgo/plugins/removeXMLNS.js
var require_removeXMLNS = __commonJS({
  "node_modules/svgo/plugins/removeXMLNS.js"(exports) {
    "use strict";
    exports.name = "removeXMLNS";
    exports.description = "removes xmlns attribute (for inline svg, disabled by default)";
    exports.fn = () => {
      return {
        element: {
          enter: (node) => {
            if (node.name === "svg") {
              delete node.attributes.xmlns;
              delete node.attributes["xmlns:xlink"];
            }
          }
        }
      };
    };
  }
});

// node_modules/svgo/plugins/reusePaths.js
var require_reusePaths = __commonJS({
  "node_modules/svgo/plugins/reusePaths.js"(exports) {
    "use strict";
    var { collectStylesheet } = require_style();
    var { detachNodeFromParent, querySelectorAll } = require_xast();
    exports.name = "reusePaths";
    exports.description = "Finds <path> elements with the same d, fill, and stroke, and converts them to <use> elements referencing a single <path> def.";
    exports.fn = (root) => {
      const stylesheet = collectStylesheet(root);
      const paths = /* @__PURE__ */ new Map();
      let svgDefs;
      const hrefs = /* @__PURE__ */ new Set();
      return {
        element: {
          enter: (node, parentNode) => {
            if (node.name === "path" && node.attributes.d != null) {
              const d = node.attributes.d;
              const fill = node.attributes.fill || "";
              const stroke = node.attributes.stroke || "";
              const key = d + ";s:" + stroke + ";f:" + fill;
              let list = paths.get(key);
              if (list == null) {
                list = [];
                paths.set(key, list);
              }
              list.push(node);
            }
            if (svgDefs == null && node.name === "defs" && parentNode.type === "element" && parentNode.name === "svg") {
              svgDefs = node;
            }
            if (node.name === "use") {
              for (const name of ["href", "xlink:href"]) {
                const href = node.attributes[name];
                if (href != null && href.startsWith("#") && href.length > 1) {
                  hrefs.add(href.slice(1));
                }
              }
            }
          },
          exit: (node, parentNode) => {
            if (node.name === "svg" && parentNode.type === "root") {
              let defsTag = svgDefs;
              if (defsTag == null) {
                defsTag = {
                  type: "element",
                  name: "defs",
                  attributes: {},
                  children: []
                };
                Object.defineProperty(defsTag, "parentNode", {
                  writable: true,
                  value: node
                });
              }
              let index = 0;
              for (const list of paths.values()) {
                if (list.length > 1) {
                  const reusablePath = {
                    type: "element",
                    name: "path",
                    attributes: {},
                    children: []
                  };
                  for (const attr of ["fill", "stroke", "d"]) {
                    if (list[0].attributes[attr] != null) {
                      reusablePath.attributes[attr] = list[0].attributes[attr];
                    }
                  }
                  const originalId = list[0].attributes.id;
                  if (originalId == null || hrefs.has(originalId) || stylesheet.rules.some(
                    (rule) => rule.selector === `#${originalId}`
                  )) {
                    reusablePath.attributes.id = "reuse-" + index++;
                  } else {
                    reusablePath.attributes.id = originalId;
                    delete list[0].attributes.id;
                  }
                  Object.defineProperty(reusablePath, "parentNode", {
                    writable: true,
                    value: defsTag
                  });
                  defsTag.children.push(reusablePath);
                  for (const pathNode of list) {
                    delete pathNode.attributes.d;
                    delete pathNode.attributes.stroke;
                    delete pathNode.attributes.fill;
                    if (defsTag.children.includes(pathNode) && pathNode.children.length === 0) {
                      if (Object.keys(pathNode.attributes).length === 0) {
                        detachNodeFromParent(pathNode, defsTag);
                        continue;
                      }
                      if (Object.keys(pathNode.attributes).length === 1 && pathNode.attributes.id != null) {
                        detachNodeFromParent(pathNode, defsTag);
                        const selector = `[xlink\\:href=#${pathNode.attributes.id}], [href=#${pathNode.attributes.id}]`;
                        for (const child of querySelectorAll(node, selector)) {
                          if (child.type !== "element") {
                            continue;
                          }
                          for (const name of ["href", "xlink:href"]) {
                            if (child.attributes[name] != null) {
                              child.attributes[name] = "#" + reusablePath.attributes.id;
                            }
                          }
                        }
                        continue;
                      }
                    }
                    pathNode.name = "use";
                    pathNode.attributes["xlink:href"] = "#" + reusablePath.attributes.id;
                  }
                }
              }
              if (defsTag.children.length !== 0) {
                if (node.attributes["xmlns:xlink"] == null) {
                  node.attributes["xmlns:xlink"] = "http://www.w3.org/1999/xlink";
                }
                if (svgDefs == null) {
                  node.children.unshift(defsTag);
                }
              }
            }
          }
        }
      };
    };
  }
});

// node_modules/svgo/lib/builtin.js
var require_builtin = __commonJS({
  "node_modules/svgo/lib/builtin.js"(exports) {
    "use strict";
    exports.builtin = [
      require_preset_default(),
      require_addAttributesToSVGElement(),
      require_addClassesToSVGElement(),
      require_cleanupAttrs(),
      require_cleanupEnableBackground(),
      require_cleanupIds(),
      require_cleanupListOfValues(),
      require_cleanupNumericValues(),
      require_collapseGroups(),
      require_convertColors(),
      require_convertEllipseToCircle(),
      require_convertOneStopGradients(),
      require_convertPathData(),
      require_convertShapeToPath(),
      require_convertStyleToAttrs(),
      require_convertTransform(),
      require_mergeStyles(),
      require_inlineStyles(),
      require_mergePaths(),
      require_minifyStyles(),
      require_moveElemsAttrsToGroup(),
      require_moveGroupAttrsToElems(),
      require_prefixIds(),
      require_removeAttributesBySelector(),
      require_removeAttrs(),
      require_removeComments(),
      require_removeDesc(),
      require_removeDimensions(),
      require_removeDoctype(),
      require_removeEditorsNSData(),
      require_removeElementsByAttr(),
      require_removeEmptyAttrs(),
      require_removeEmptyContainers(),
      require_removeEmptyText(),
      require_removeHiddenElems(),
      require_removeMetadata(),
      require_removeNonInheritableGroupAttrs(),
      require_removeOffCanvasPaths(),
      require_removeRasterImages(),
      require_removeScriptElement(),
      require_removeStyleElement(),
      require_removeTitle(),
      require_removeUnknownsAndDefaults(),
      require_removeUnusedNS(),
      require_removeUselessDefs(),
      require_removeUselessStrokeAndFill(),
      require_removeViewBox(),
      require_removeXMLNS(),
      require_removeXMLProcInst(),
      require_reusePaths(),
      require_sortAttrs(),
      require_sortDefsChildren()
    ];
  }
});

// node_modules/svgo/lib/svgo.js
var require_svgo = __commonJS({
  "node_modules/svgo/lib/svgo.js"(exports) {
    "use strict";
    var { parseSvg } = require_parser2();
    var { stringifySvg } = require_stringifier2();
    var { builtin } = require_builtin();
    var { invokePlugins } = require_plugins();
    var { encodeSVGDatauri } = require_tools();
    var pluginsMap = {};
    for (const plugin of builtin) {
      pluginsMap[plugin.name] = plugin;
    }
    var resolvePluginConfig = (plugin) => {
      if (typeof plugin === "string") {
        const builtinPlugin = pluginsMap[plugin];
        if (builtinPlugin == null) {
          throw Error(`Unknown builtin plugin "${plugin}" specified.`);
        }
        return {
          name: plugin,
          params: {},
          fn: builtinPlugin.fn
        };
      }
      if (typeof plugin === "object" && plugin != null) {
        if (plugin.name == null) {
          throw Error(`Plugin name should be specified`);
        }
        let fn = plugin.fn;
        if (fn == null) {
          const builtinPlugin = pluginsMap[plugin.name];
          if (builtinPlugin == null) {
            throw Error(`Unknown builtin plugin "${plugin.name}" specified.`);
          }
          fn = builtinPlugin.fn;
        }
        return {
          name: plugin.name,
          params: plugin.params,
          fn
        };
      }
      return null;
    };
    var optimize = (input, config) => {
      if (config == null) {
        config = {};
      }
      if (typeof config !== "object") {
        throw Error("Config should be an object");
      }
      const maxPassCount = config.multipass ? 10 : 1;
      let prevResultSize = Number.POSITIVE_INFINITY;
      let output = "";
      const info = {};
      if (config.path != null) {
        info.path = config.path;
      }
      for (let i = 0; i < maxPassCount; i += 1) {
        info.multipassCount = i;
        const ast = parseSvg(input, config.path);
        const plugins = config.plugins || ["preset-default"];
        if (!Array.isArray(plugins)) {
          throw Error(
            "malformed config, `plugins` property must be an array.\nSee more info here: https://github.com/svg/svgo#configuration"
          );
        }
        const resolvedPlugins = plugins.filter((plugin) => plugin != null).map(resolvePluginConfig);
        if (resolvedPlugins.length < plugins.length) {
          console.warn(
            "Warning: plugins list includes null or undefined elements, these will be ignored."
          );
        }
        const globalOverrides = {};
        if (config.floatPrecision != null) {
          globalOverrides.floatPrecision = config.floatPrecision;
        }
        invokePlugins(ast, info, resolvedPlugins, null, globalOverrides);
        output = stringifySvg(ast, config.js2svg);
        if (output.length < prevResultSize) {
          input = output;
          prevResultSize = output.length;
        } else {
          break;
        }
      }
      if (config.datauri) {
        output = encodeSVGDatauri(output, config.datauri);
      }
      return {
        data: output
      };
    };
    exports.optimize = optimize;
  }
});

// node_modules/svgo/lib/svgo-node.js
var require_svgo_node = __commonJS({
  "node_modules/svgo/lib/svgo-node.js"(exports) {
    "use strict";
    var os = require("os");
    var fs = require("fs");
    var { pathToFileURL } = require("url");
    var path = require("path");
    var { optimize: optimizeAgnostic } = require_svgo();
    var importConfig = async (configFile) => {
      let config;
      if (configFile.endsWith(".cjs")) {
        config = require(configFile);
      } else {
        const { default: imported } = await import(pathToFileURL(configFile));
        config = imported;
      }
      if (config == null || typeof config !== "object" || Array.isArray(config)) {
        throw Error(`Invalid config file "${configFile}"`);
      }
      return config;
    };
    var isFile = async (file) => {
      try {
        const stats = await fs.promises.stat(file);
        return stats.isFile();
      } catch (e) {
        return false;
      }
    };
    var loadConfig = async (configFile, cwd = process.cwd()) => {
      if (configFile != null) {
        if (path.isAbsolute(configFile)) {
          return await importConfig(configFile);
        } else {
          return await importConfig(path.join(cwd, configFile));
        }
      }
      let dir = cwd;
      while (true) {
        const js = path.join(dir, "svgo.config.js");
        if (await isFile(js)) {
          return await importConfig(js);
        }
        const mjs = path.join(dir, "svgo.config.mjs");
        if (await isFile(mjs)) {
          return await importConfig(mjs);
        }
        const cjs = path.join(dir, "svgo.config.cjs");
        if (await isFile(cjs)) {
          return await importConfig(cjs);
        }
        const parent = path.dirname(dir);
        if (dir === parent) {
          return null;
        }
        dir = parent;
      }
    };
    exports.loadConfig = loadConfig;
    var optimize = (input, config) => {
      if (config == null) {
        config = {};
      }
      if (typeof config !== "object") {
        throw Error("Config should be an object");
      }
      return optimizeAgnostic(input, {
        ...config,
        js2svg: {
          // platform specific default for end of line
          eol: os.EOL === "\r\n" ? "crlf" : "lf",
          ...config.js2svg
        }
      });
    };
    exports.optimize = optimize;
  }
});

// node_modules/postcss-svgo/src/lib/url.js
var require_url4 = __commonJS({
  "node_modules/postcss-svgo/src/lib/url.js"(exports, module2) {
    "use strict";
    function encode(data) {
      return data.replace(/"/g, "'").replace(/%/g, "%25").replace(/</g, "%3C").replace(/>/g, "%3E").replace(/&/g, "%26").replace(/#/g, "%23").replace(/\s+/g, " ");
    }
    var decode = decodeURIComponent;
    module2.exports = { encode, decode };
  }
});

// node_modules/postcss-svgo/src/index.js
var require_src5 = __commonJS({
  "node_modules/postcss-svgo/src/index.js"(exports, module2) {
    "use strict";
    var valueParser = require_lib();
    var { optimize } = require_svgo_node();
    var { encode, decode } = require_url4();
    var PLUGIN = "postcss-svgo";
    var dataURI = /data:image\/svg\+xml(;((charset=)?utf-8|base64))?,/i;
    var dataURIBase64 = /data:image\/svg\+xml;base64,/i;
    var escapedQuotes = /\b([\w-]+)\s*=\s*\\"([\S\s]+?)\\"/g;
    function minifySVG(input, opts) {
      let svg = input;
      let decodedUri, isUriEncoded;
      try {
        decodedUri = decode(input);
        isUriEncoded = decodedUri !== input;
      } catch (e) {
        isUriEncoded = false;
      }
      if (isUriEncoded) {
        svg = /** @type {string} */
        decodedUri;
      }
      if (opts.encode !== void 0) {
        isUriEncoded = opts.encode;
      }
      svg = svg.replace(escapedQuotes, '$1="$2"');
      const result = optimize(svg, opts);
      return {
        result: (
          /** @type {import('svgo').Output}*/
          result.data
        ),
        isUriEncoded
      };
    }
    function minify(decl, opts, postcssResult) {
      const parsed = valueParser(decl.value);
      const minified = parsed.walk((node) => {
        if (node.type !== "function" || node.value.toLowerCase() !== "url" || !node.nodes.length) {
          return;
        }
        let { value, quote } = (
          /** @type {valueParser.StringNode} */
          node.nodes[0]
        );
        let optimizedValue;
        try {
          if (dataURIBase64.test(value)) {
            const url = new URL(value);
            const base64String = `${url.protocol}${url.pathname}`.replace(
              dataURI,
              ""
            );
            const svg = Buffer.from(base64String, "base64").toString("utf8");
            const { result } = minifySVG(svg, opts);
            const data = Buffer.from(result).toString("base64");
            optimizedValue = "data:image/svg+xml;base64," + data + url.hash;
          } else if (dataURI.test(value)) {
            const svg = value.replace(dataURI, "");
            const { result, isUriEncoded } = minifySVG(svg, opts);
            let data = isUriEncoded ? encode(result) : result;
            data = data.replace(/#/g, "%23");
            optimizedValue = "data:image/svg+xml;charset=utf-8," + data;
            quote = isUriEncoded ? '"' : "'";
          } else {
            return;
          }
        } catch (error) {
          decl.warn(postcssResult, `${error}`);
          return;
        }
        node.nodes[0] = Object.assign({}, node.nodes[0], {
          value: optimizedValue,
          quote,
          type: "string",
          before: "",
          after: ""
        });
        return false;
      });
      decl.value = minified.toString();
    }
    function pluginCreator(opts = {}) {
      return {
        postcssPlugin: PLUGIN,
        OnceExit(css, { result }) {
          css.walkDecls((decl) => {
            if (!dataURI.test(decl.value)) {
              return;
            }
            minify(decl, opts, result);
          });
        }
      };
    }
    pluginCreator.postcss = true;
    module2.exports = pluginCreator;
  }
});

// node_modules/postcss-reduce-transforms/src/index.js
var require_src6 = __commonJS({
  "node_modules/postcss-reduce-transforms/src/index.js"(exports, module2) {
    "use strict";
    var valueParser = require_lib();
    function getValues(list, node, index) {
      if (index % 2 === 0) {
        let value = NaN;
        if (node.type === "function" && (node.value === "var" || node.value === "env") && node.nodes.length === 1) {
          value = valueParser.stringify(node.nodes);
        } else if (node.type === "word") {
          value = parseFloat(node.value);
        }
        return [...list, value];
      }
      return list;
    }
    function matrix3d(node, values) {
      if (values.length !== 16) {
        return;
      }
      if (values[15] && values[2] === 0 && values[3] === 0 && values[6] === 0 && values[7] === 0 && values[8] === 0 && values[9] === 0 && values[10] === 1 && values[11] === 0 && values[14] === 0 && values[15] === 1) {
        const { nodes } = node;
        node.value = "matrix";
        node.nodes = [
          nodes[0],
          // a
          nodes[1],
          // ,
          nodes[2],
          // b
          nodes[3],
          // ,
          nodes[8],
          // c
          nodes[9],
          // ,
          nodes[10],
          // d
          nodes[11],
          // ,
          nodes[24],
          // tx
          nodes[25],
          // ,
          nodes[26]
          // ty
        ];
      }
    }
    var rotate3dMappings = /* @__PURE__ */ new Map([
      [[1, 0, 0].toString(), "rotateX"],
      // rotate3d(1, 0, 0, a) => rotateX(a)
      [[0, 1, 0].toString(), "rotateY"],
      // rotate3d(0, 1, 0, a) => rotateY(a)
      [[0, 0, 1].toString(), "rotate"]
      // rotate3d(0, 0, 1, a) => rotate(a)
    ]);
    function rotate3d(node, values) {
      if (values.length !== 4) {
        return;
      }
      const { nodes } = node;
      const match = rotate3dMappings.get(values.slice(0, 3).toString());
      if (match) {
        node.value = match;
        node.nodes = [nodes[6]];
      }
    }
    function rotateZ(node, values) {
      if (values.length !== 1) {
        return;
      }
      node.value = "rotate";
    }
    function scale(node, values) {
      if (values.length !== 2) {
        return;
      }
      const { nodes } = node;
      const [first, second] = values;
      if (first === second) {
        node.nodes = [nodes[0]];
        return;
      }
      if (second === 1) {
        node.value = "scaleX";
        node.nodes = [nodes[0]];
        return;
      }
      if (first === 1) {
        node.value = "scaleY";
        node.nodes = [nodes[2]];
        return;
      }
    }
    function scale3d(node, values) {
      if (values.length !== 3) {
        return;
      }
      const { nodes } = node;
      const [first, second, third] = values;
      if (second === 1 && third === 1) {
        node.value = "scaleX";
        node.nodes = [nodes[0]];
        return;
      }
      if (first === 1 && third === 1) {
        node.value = "scaleY";
        node.nodes = [nodes[2]];
        return;
      }
      if (first === 1 && second === 1) {
        node.value = "scaleZ";
        node.nodes = [nodes[4]];
        return;
      }
    }
    function translate(node, values) {
      if (values.length !== 2) {
        return;
      }
      const { nodes } = node;
      if (values[1] === 0) {
        node.nodes = [nodes[0]];
        return;
      }
      if (values[0] === 0) {
        node.value = "translateY";
        node.nodes = [nodes[2]];
        return;
      }
    }
    function translate3d(node, values) {
      if (values.length !== 3) {
        return;
      }
      const { nodes } = node;
      if (values[0] === 0 && values[1] === 0) {
        node.value = "translateZ";
        node.nodes = [nodes[4]];
      }
    }
    var reducers = /* @__PURE__ */ new Map([
      ["matrix3d", matrix3d],
      ["rotate3d", rotate3d],
      ["rotateZ", rotateZ],
      ["scale", scale],
      ["scale3d", scale3d],
      ["translate", translate],
      ["translate3d", translate3d]
    ]);
    function normalizeReducerName(name) {
      const lowerCasedName = name.toLowerCase();
      if (lowerCasedName === "rotatez") {
        return "rotateZ";
      }
      return lowerCasedName;
    }
    function reduce(node) {
      if (node.type === "function") {
        const normalizedReducerName = normalizeReducerName(node.value);
        const reducer = reducers.get(normalizedReducerName);
        if (reducer !== void 0) {
          reducer(node, node.nodes.reduce(getValues, []));
        }
      }
      return false;
    }
    function pluginCreator() {
      return {
        postcssPlugin: "postcss-reduce-transforms",
        prepare() {
          const cache = /* @__PURE__ */ new Map();
          return {
            OnceExit(css) {
              css.walkDecls(/transform$/i, (decl) => {
                const value = decl.value;
                if (!value) {
                  return;
                }
                if (cache.has(value)) {
                  decl.value = cache.get(value);
                  return;
                }
                const result = valueParser(value).walk(reduce).toString();
                decl.value = result;
                cache.set(value, result);
              });
            }
          };
        }
      };
    }
    pluginCreator.postcss = true;
    module2.exports = pluginCreator;
  }
});

// node_modules/postcss-convert-values/src/lib/convert.js
var require_convert = __commonJS({
  "node_modules/postcss-convert-values/src/lib/convert.js"(exports, module2) {
    "use strict";
    var lengthConv = /* @__PURE__ */ new Map([
      ["in", 96],
      ["px", 1],
      ["pt", 4 / 3],
      ["pc", 16]
    ]);
    var timeConv = /* @__PURE__ */ new Map([
      ["s", 1e3],
      ["ms", 1]
    ]);
    var angleConv = /* @__PURE__ */ new Map([
      ["turn", 360],
      ["deg", 1]
    ]);
    function dropLeadingZero(number) {
      const value = String(number);
      if (number % 1) {
        if (value[0] === "0") {
          return value.slice(1);
        }
        if (value[0] === "-" && value[1] === "0") {
          return "-" + value.slice(2);
        }
      }
      return value;
    }
    function transform2(number, originalUnit, conversions) {
      let conversionUnits = [...conversions.keys()].filter((u) => {
        return originalUnit !== u;
      });
      const base = number * /** @type {number} */
      conversions.get(originalUnit);
      return conversionUnits.map(
        (u) => dropLeadingZero(base / /** @type {number} */
        conversions.get(u)) + u
      ).reduce((a, b) => a.length < b.length ? a : b);
    }
    module2.exports = function(number, unit, { time, length, angle }) {
      let value = dropLeadingZero(number) + (unit ? unit : "");
      let converted;
      const lowerCaseUnit = unit.toLowerCase();
      if (length !== false && lengthConv.has(lowerCaseUnit)) {
        converted = transform2(number, lowerCaseUnit, lengthConv);
      }
      if (time !== false && timeConv.has(lowerCaseUnit)) {
        converted = transform2(number, lowerCaseUnit, timeConv);
      }
      if (angle !== false && angleConv.has(lowerCaseUnit)) {
        converted = transform2(number, lowerCaseUnit, angleConv);
      }
      if (converted && converted.length < value.length) {
        value = converted;
      }
      return value;
    };
  }
});

// node_modules/postcss-convert-values/src/index.js
var require_src7 = __commonJS({
  "node_modules/postcss-convert-values/src/index.js"(exports, module2) {
    "use strict";
    var valueParser = require_lib();
    var browserslist = require_browserslist();
    var convert2 = require_convert();
    var LENGTH_UNITS = /* @__PURE__ */ new Set([
      "em",
      "ex",
      "ch",
      "rem",
      "vw",
      "vh",
      "vmin",
      "vmax",
      "cm",
      "mm",
      "q",
      "in",
      "pt",
      "pc",
      "px"
    ]);
    var notALength = /* @__PURE__ */ new Set([
      "descent-override",
      "ascent-override",
      "font-stretch",
      "size-adjust",
      "line-gap-override"
    ]);
    var keepWhenZero = /* @__PURE__ */ new Set([
      "stroke-dashoffset",
      "stroke-width",
      "line-height"
    ]);
    var keepZeroPercent = /* @__PURE__ */ new Set(["max-height", "height", "min-width"]);
    function stripLeadingDot(item) {
      if (item.charCodeAt(0) === ".".charCodeAt(0)) {
        return item.slice(1);
      } else {
        return item;
      }
    }
    function parseWord(node, opts, keepZeroUnit) {
      const pair = valueParser.unit(node.value);
      if (pair) {
        const num = Number(pair.number);
        const u = stripLeadingDot(pair.unit);
        if (num === 0) {
          node.value = 0 + (keepZeroUnit || !LENGTH_UNITS.has(u.toLowerCase()) && u !== "%" ? u : "");
        } else {
          node.value = convert2(num, u, opts);
          if (typeof opts.precision === "number" && u.toLowerCase() === "px" && pair.number.includes(".")) {
            const precision = Math.pow(10, opts.precision);
            node.value = Math.round(parseFloat(node.value) * precision) / precision + u;
          }
        }
      }
    }
    function clampOpacity(node) {
      const pair = valueParser.unit(node.value);
      if (!pair) {
        return;
      }
      let num = Number(pair.number);
      if (num > 1) {
        node.value = pair.unit === "%" ? num + pair.unit : 1 + pair.unit;
      } else if (num < 0) {
        node.value = 0 + pair.unit;
      }
    }
    function shouldKeepZeroUnit(decl, browsers) {
      const { parent } = decl;
      const lowerCasedProp = decl.prop.toLowerCase();
      return decl.value.includes("%") && keepZeroPercent.has(lowerCasedProp) && browsers.includes("ie 11") || parent && parent.parent && parent.parent.type === "atrule" && /** @type {import('postcss').AtRule} */
      parent.parent.name.toLowerCase() === "keyframes" && lowerCasedProp === "stroke-dasharray" || keepWhenZero.has(lowerCasedProp);
    }
    function transform2(opts, browsers, decl) {
      const lowerCasedProp = decl.prop.toLowerCase();
      if (lowerCasedProp.includes("flex") || lowerCasedProp.indexOf("--") === 0 || notALength.has(lowerCasedProp)) {
        return;
      }
      decl.value = valueParser(decl.value).walk((node) => {
        const lowerCasedValue = node.value.toLowerCase();
        if (node.type === "word") {
          parseWord(node, opts, shouldKeepZeroUnit(decl, browsers));
          if (lowerCasedProp === "opacity" || lowerCasedProp === "shape-image-threshold") {
            clampOpacity(node);
          }
        } else if (node.type === "function") {
          if (lowerCasedValue === "calc" || lowerCasedValue === "min" || lowerCasedValue === "max" || lowerCasedValue === "clamp" || lowerCasedValue === "hsl" || lowerCasedValue === "hsla") {
            valueParser.walk(node.nodes, (n) => {
              if (n.type === "word") {
                parseWord(n, opts, true);
              }
            });
            return false;
          }
          if (lowerCasedValue === "url") {
            return false;
          }
        }
      }).toString();
    }
    var plugin = "postcss-convert-values";
    function pluginCreator(opts = { precision: false }) {
      const browsers = browserslist(null, {
        stats: opts.stats,
        path: __dirname,
        env: opts.env
      });
      return {
        postcssPlugin: plugin,
        OnceExit(css) {
          css.walkDecls((decl) => transform2(opts, browsers, decl));
        }
      };
    }
    pluginCreator.postcss = true;
    module2.exports = pluginCreator;
  }
});

// node_modules/postcss-selector-parser/dist/util/unesc.js
var require_unesc = __commonJS({
  "node_modules/postcss-selector-parser/dist/util/unesc.js"(exports, module2) {
    "use strict";
    exports.__esModule = true;
    exports["default"] = unesc;
    function gobbleHex(str) {
      var lower = str.toLowerCase();
      var hex = "";
      var spaceTerminated = false;
      for (var i = 0; i < 6 && lower[i] !== void 0; i++) {
        var code = lower.charCodeAt(i);
        var valid = code >= 97 && code <= 102 || code >= 48 && code <= 57;
        spaceTerminated = code === 32;
        if (!valid) {
          break;
        }
        hex += lower[i];
      }
      if (hex.length === 0) {
        return void 0;
      }
      var codePoint = parseInt(hex, 16);
      var isSurrogate = codePoint >= 55296 && codePoint <= 57343;
      if (isSurrogate || codePoint === 0 || codePoint > 1114111) {
        return ["\uFFFD", hex.length + (spaceTerminated ? 1 : 0)];
      }
      return [String.fromCodePoint(codePoint), hex.length + (spaceTerminated ? 1 : 0)];
    }
    var CONTAINS_ESCAPE = /\\/;
    function unesc(str) {
      var needToProcess = CONTAINS_ESCAPE.test(str);
      if (!needToProcess) {
        return str;
      }
      var ret = "";
      for (var i = 0; i < str.length; i++) {
        if (str[i] === "\\") {
          var gobbled = gobbleHex(str.slice(i + 1, i + 7));
          if (gobbled !== void 0) {
            ret += gobbled[0];
            i += gobbled[1];
            continue;
          }
          if (str[i + 1] === "\\") {
            ret += "\\";
            i++;
            continue;
          }
          if (str.length === i + 1) {
            ret += str[i];
          }
          continue;
        }
        ret += str[i];
      }
      return ret;
    }
    module2.exports = exports.default;
  }
});

// node_modules/postcss-selector-parser/dist/util/getProp.js
var require_getProp = __commonJS({
  "node_modules/postcss-selector-parser/dist/util/getProp.js"(exports, module2) {
    "use strict";
    exports.__esModule = true;
    exports["default"] = getProp;
    function getProp(obj) {
      for (var _len = arguments.length, props = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        props[_key - 1] = arguments[_key];
      }
      while (props.length > 0) {
        var prop = props.shift();
        if (!obj[prop]) {
          return void 0;
        }
        obj = obj[prop];
      }
      return obj;
    }
    module2.exports = exports.default;
  }
});

// node_modules/postcss-selector-parser/dist/util/ensureObject.js
var require_ensureObject = __commonJS({
  "node_modules/postcss-selector-parser/dist/util/ensureObject.js"(exports, module2) {
    "use strict";
    exports.__esModule = true;
    exports["default"] = ensureObject;
    function ensureObject(obj) {
      for (var _len = arguments.length, props = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        props[_key - 1] = arguments[_key];
      }
      while (props.length > 0) {
        var prop = props.shift();
        if (!obj[prop]) {
          obj[prop] = {};
        }
        obj = obj[prop];
      }
    }
    module2.exports = exports.default;
  }
});

// node_modules/postcss-selector-parser/dist/util/stripComments.js
var require_stripComments = __commonJS({
  "node_modules/postcss-selector-parser/dist/util/stripComments.js"(exports, module2) {
    "use strict";
    exports.__esModule = true;
    exports["default"] = stripComments;
    function stripComments(str) {
      var s = "";
      var commentStart = str.indexOf("/*");
      var lastEnd = 0;
      while (commentStart >= 0) {
        s = s + str.slice(lastEnd, commentStart);
        var commentEnd = str.indexOf("*/", commentStart + 2);
        if (commentEnd < 0) {
          return s;
        }
        lastEnd = commentEnd + 2;
        commentStart = str.indexOf("/*", lastEnd);
      }
      s = s + str.slice(lastEnd);
      return s;
    }
    module2.exports = exports.default;
  }
});

// node_modules/postcss-selector-parser/dist/util/index.js
var require_util2 = __commonJS({
  "node_modules/postcss-selector-parser/dist/util/index.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.unesc = exports.stripComments = exports.getProp = exports.ensureObject = void 0;
    var _unesc = _interopRequireDefault(require_unesc());
    exports.unesc = _unesc["default"];
    var _getProp = _interopRequireDefault(require_getProp());
    exports.getProp = _getProp["default"];
    var _ensureObject = _interopRequireDefault(require_ensureObject());
    exports.ensureObject = _ensureObject["default"];
    var _stripComments = _interopRequireDefault(require_stripComments());
    exports.stripComments = _stripComments["default"];
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
  }
});

// node_modules/postcss-selector-parser/dist/selectors/node.js
var require_node6 = __commonJS({
  "node_modules/postcss-selector-parser/dist/selectors/node.js"(exports, module2) {
    "use strict";
    exports.__esModule = true;
    exports["default"] = void 0;
    var _util = require_util2();
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      Object.defineProperty(Constructor, "prototype", { writable: false });
      return Constructor;
    }
    var cloneNode = function cloneNode2(obj, parent) {
      if (typeof obj !== "object" || obj === null) {
        return obj;
      }
      var cloned = new obj.constructor();
      for (var i in obj) {
        if (!obj.hasOwnProperty(i)) {
          continue;
        }
        var value = obj[i];
        var type = typeof value;
        if (i === "parent" && type === "object") {
          if (parent) {
            cloned[i] = parent;
          }
        } else if (value instanceof Array) {
          cloned[i] = value.map(function(j) {
            return cloneNode2(j, cloned);
          });
        } else {
          cloned[i] = cloneNode2(value, cloned);
        }
      }
      return cloned;
    };
    var Node = /* @__PURE__ */ function() {
      function Node2(opts) {
        if (opts === void 0) {
          opts = {};
        }
        Object.assign(this, opts);
        this.spaces = this.spaces || {};
        this.spaces.before = this.spaces.before || "";
        this.spaces.after = this.spaces.after || "";
      }
      var _proto = Node2.prototype;
      _proto.remove = function remove() {
        if (this.parent) {
          this.parent.removeChild(this);
        }
        this.parent = void 0;
        return this;
      };
      _proto.replaceWith = function replaceWith() {
        if (this.parent) {
          for (var index in arguments) {
            this.parent.insertBefore(this, arguments[index]);
          }
          this.remove();
        }
        return this;
      };
      _proto.next = function next() {
        return this.parent.at(this.parent.index(this) + 1);
      };
      _proto.prev = function prev() {
        return this.parent.at(this.parent.index(this) - 1);
      };
      _proto.clone = function clone(overrides) {
        if (overrides === void 0) {
          overrides = {};
        }
        var cloned = cloneNode(this);
        for (var name in overrides) {
          cloned[name] = overrides[name];
        }
        return cloned;
      };
      _proto.appendToPropertyAndEscape = function appendToPropertyAndEscape(name, value, valueEscaped) {
        if (!this.raws) {
          this.raws = {};
        }
        var originalValue = this[name];
        var originalEscaped = this.raws[name];
        this[name] = originalValue + value;
        if (originalEscaped || valueEscaped !== value) {
          this.raws[name] = (originalEscaped || originalValue) + valueEscaped;
        } else {
          delete this.raws[name];
        }
      };
      _proto.setPropertyAndEscape = function setPropertyAndEscape(name, value, valueEscaped) {
        if (!this.raws) {
          this.raws = {};
        }
        this[name] = value;
        this.raws[name] = valueEscaped;
      };
      _proto.setPropertyWithoutEscape = function setPropertyWithoutEscape(name, value) {
        this[name] = value;
        if (this.raws) {
          delete this.raws[name];
        }
      };
      _proto.isAtPosition = function isAtPosition(line, column) {
        if (this.source && this.source.start && this.source.end) {
          if (this.source.start.line > line) {
            return false;
          }
          if (this.source.end.line < line) {
            return false;
          }
          if (this.source.start.line === line && this.source.start.column > column) {
            return false;
          }
          if (this.source.end.line === line && this.source.end.column < column) {
            return false;
          }
          return true;
        }
        return void 0;
      };
      _proto.stringifyProperty = function stringifyProperty(name) {
        return this.raws && this.raws[name] || this[name];
      };
      _proto.valueToString = function valueToString() {
        return String(this.stringifyProperty("value"));
      };
      _proto.toString = function toString() {
        return [this.rawSpaceBefore, this.valueToString(), this.rawSpaceAfter].join("");
      };
      _createClass(Node2, [{
        key: "rawSpaceBefore",
        get: function get() {
          var rawSpace = this.raws && this.raws.spaces && this.raws.spaces.before;
          if (rawSpace === void 0) {
            rawSpace = this.spaces && this.spaces.before;
          }
          return rawSpace || "";
        },
        set: function set(raw) {
          (0, _util.ensureObject)(this, "raws", "spaces");
          this.raws.spaces.before = raw;
        }
      }, {
        key: "rawSpaceAfter",
        get: function get() {
          var rawSpace = this.raws && this.raws.spaces && this.raws.spaces.after;
          if (rawSpace === void 0) {
            rawSpace = this.spaces.after;
          }
          return rawSpace || "";
        },
        set: function set(raw) {
          (0, _util.ensureObject)(this, "raws", "spaces");
          this.raws.spaces.after = raw;
        }
      }]);
      return Node2;
    }();
    exports["default"] = Node;
    module2.exports = exports.default;
  }
});

// node_modules/postcss-selector-parser/dist/selectors/types.js
var require_types4 = __commonJS({
  "node_modules/postcss-selector-parser/dist/selectors/types.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.UNIVERSAL = exports.TAG = exports.STRING = exports.SELECTOR = exports.ROOT = exports.PSEUDO = exports.NESTING = exports.ID = exports.COMMENT = exports.COMBINATOR = exports.CLASS = exports.ATTRIBUTE = void 0;
    var TAG = "tag";
    exports.TAG = TAG;
    var STRING = "string";
    exports.STRING = STRING;
    var SELECTOR = "selector";
    exports.SELECTOR = SELECTOR;
    var ROOT = "root";
    exports.ROOT = ROOT;
    var PSEUDO = "pseudo";
    exports.PSEUDO = PSEUDO;
    var NESTING = "nesting";
    exports.NESTING = NESTING;
    var ID = "id";
    exports.ID = ID;
    var COMMENT = "comment";
    exports.COMMENT = COMMENT;
    var COMBINATOR = "combinator";
    exports.COMBINATOR = COMBINATOR;
    var CLASS = "class";
    exports.CLASS = CLASS;
    var ATTRIBUTE = "attribute";
    exports.ATTRIBUTE = ATTRIBUTE;
    var UNIVERSAL = "universal";
    exports.UNIVERSAL = UNIVERSAL;
  }
});

// node_modules/postcss-selector-parser/dist/selectors/container.js
var require_container2 = __commonJS({
  "node_modules/postcss-selector-parser/dist/selectors/container.js"(exports, module2) {
    "use strict";
    exports.__esModule = true;
    exports["default"] = void 0;
    var _node = _interopRequireDefault(require_node6());
    var types = _interopRequireWildcard(require_types4());
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _createForOfIteratorHelperLoose(o, allowArrayLike) {
      var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
      if (it)
        return (it = it.call(o)).next.bind(it);
      if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") {
        if (it)
          o = it;
        var i = 0;
        return function() {
          if (i >= o.length)
            return { done: true };
          return { done: false, value: o[i++] };
        };
      }
      throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _unsupportedIterableToArray(o, minLen) {
      if (!o)
        return;
      if (typeof o === "string")
        return _arrayLikeToArray(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor)
        n = o.constructor.name;
      if (n === "Map" || n === "Set")
        return Array.from(o);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
        return _arrayLikeToArray(o, minLen);
    }
    function _arrayLikeToArray(arr, len) {
      if (len == null || len > arr.length)
        len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++) {
        arr2[i] = arr[i];
      }
      return arr2;
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      Object.defineProperty(Constructor, "prototype", { writable: false });
      return Constructor;
    }
    function _inheritsLoose(subClass, superClass) {
      subClass.prototype = Object.create(superClass.prototype);
      subClass.prototype.constructor = subClass;
      _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var Container = /* @__PURE__ */ function(_Node) {
      _inheritsLoose(Container2, _Node);
      function Container2(opts) {
        var _this;
        _this = _Node.call(this, opts) || this;
        if (!_this.nodes) {
          _this.nodes = [];
        }
        return _this;
      }
      var _proto = Container2.prototype;
      _proto.append = function append(selector) {
        selector.parent = this;
        this.nodes.push(selector);
        return this;
      };
      _proto.prepend = function prepend(selector) {
        selector.parent = this;
        this.nodes.unshift(selector);
        return this;
      };
      _proto.at = function at(index) {
        return this.nodes[index];
      };
      _proto.index = function index(child) {
        if (typeof child === "number") {
          return child;
        }
        return this.nodes.indexOf(child);
      };
      _proto.removeChild = function removeChild(child) {
        child = this.index(child);
        this.at(child).parent = void 0;
        this.nodes.splice(child, 1);
        var index;
        for (var id in this.indexes) {
          index = this.indexes[id];
          if (index >= child) {
            this.indexes[id] = index - 1;
          }
        }
        return this;
      };
      _proto.removeAll = function removeAll() {
        for (var _iterator = _createForOfIteratorHelperLoose(this.nodes), _step; !(_step = _iterator()).done; ) {
          var node = _step.value;
          node.parent = void 0;
        }
        this.nodes = [];
        return this;
      };
      _proto.empty = function empty() {
        return this.removeAll();
      };
      _proto.insertAfter = function insertAfter(oldNode, newNode) {
        newNode.parent = this;
        var oldIndex = this.index(oldNode);
        this.nodes.splice(oldIndex + 1, 0, newNode);
        newNode.parent = this;
        var index;
        for (var id in this.indexes) {
          index = this.indexes[id];
          if (oldIndex <= index) {
            this.indexes[id] = index + 1;
          }
        }
        return this;
      };
      _proto.insertBefore = function insertBefore(oldNode, newNode) {
        newNode.parent = this;
        var oldIndex = this.index(oldNode);
        this.nodes.splice(oldIndex, 0, newNode);
        newNode.parent = this;
        var index;
        for (var id in this.indexes) {
          index = this.indexes[id];
          if (index <= oldIndex) {
            this.indexes[id] = index + 1;
          }
        }
        return this;
      };
      _proto._findChildAtPosition = function _findChildAtPosition(line, col) {
        var found = void 0;
        this.each(function(node) {
          if (node.atPosition) {
            var foundChild = node.atPosition(line, col);
            if (foundChild) {
              found = foundChild;
              return false;
            }
          } else if (node.isAtPosition(line, col)) {
            found = node;
            return false;
          }
        });
        return found;
      };
      _proto.atPosition = function atPosition(line, col) {
        if (this.isAtPosition(line, col)) {
          return this._findChildAtPosition(line, col) || this;
        } else {
          return void 0;
        }
      };
      _proto._inferEndPosition = function _inferEndPosition() {
        if (this.last && this.last.source && this.last.source.end) {
          this.source = this.source || {};
          this.source.end = this.source.end || {};
          Object.assign(this.source.end, this.last.source.end);
        }
      };
      _proto.each = function each(callback) {
        if (!this.lastEach) {
          this.lastEach = 0;
        }
        if (!this.indexes) {
          this.indexes = {};
        }
        this.lastEach++;
        var id = this.lastEach;
        this.indexes[id] = 0;
        if (!this.length) {
          return void 0;
        }
        var index, result;
        while (this.indexes[id] < this.length) {
          index = this.indexes[id];
          result = callback(this.at(index), index);
          if (result === false) {
            break;
          }
          this.indexes[id] += 1;
        }
        delete this.indexes[id];
        if (result === false) {
          return false;
        }
      };
      _proto.walk = function walk(callback) {
        return this.each(function(node, i) {
          var result = callback(node, i);
          if (result !== false && node.length) {
            result = node.walk(callback);
          }
          if (result === false) {
            return false;
          }
        });
      };
      _proto.walkAttributes = function walkAttributes(callback) {
        var _this2 = this;
        return this.walk(function(selector) {
          if (selector.type === types.ATTRIBUTE) {
            return callback.call(_this2, selector);
          }
        });
      };
      _proto.walkClasses = function walkClasses(callback) {
        var _this3 = this;
        return this.walk(function(selector) {
          if (selector.type === types.CLASS) {
            return callback.call(_this3, selector);
          }
        });
      };
      _proto.walkCombinators = function walkCombinators(callback) {
        var _this4 = this;
        return this.walk(function(selector) {
          if (selector.type === types.COMBINATOR) {
            return callback.call(_this4, selector);
          }
        });
      };
      _proto.walkComments = function walkComments(callback) {
        var _this5 = this;
        return this.walk(function(selector) {
          if (selector.type === types.COMMENT) {
            return callback.call(_this5, selector);
          }
        });
      };
      _proto.walkIds = function walkIds(callback) {
        var _this6 = this;
        return this.walk(function(selector) {
          if (selector.type === types.ID) {
            return callback.call(_this6, selector);
          }
        });
      };
      _proto.walkNesting = function walkNesting(callback) {
        var _this7 = this;
        return this.walk(function(selector) {
          if (selector.type === types.NESTING) {
            return callback.call(_this7, selector);
          }
        });
      };
      _proto.walkPseudos = function walkPseudos(callback) {
        var _this8 = this;
        return this.walk(function(selector) {
          if (selector.type === types.PSEUDO) {
            return callback.call(_this8, selector);
          }
        });
      };
      _proto.walkTags = function walkTags(callback) {
        var _this9 = this;
        return this.walk(function(selector) {
          if (selector.type === types.TAG) {
            return callback.call(_this9, selector);
          }
        });
      };
      _proto.walkUniversals = function walkUniversals(callback) {
        var _this10 = this;
        return this.walk(function(selector) {
          if (selector.type === types.UNIVERSAL) {
            return callback.call(_this10, selector);
          }
        });
      };
      _proto.split = function split(callback) {
        var _this11 = this;
        var current = [];
        return this.reduce(function(memo, node, index) {
          var split2 = callback.call(_this11, node);
          current.push(node);
          if (split2) {
            memo.push(current);
            current = [];
          } else if (index === _this11.length - 1) {
            memo.push(current);
          }
          return memo;
        }, []);
      };
      _proto.map = function map(callback) {
        return this.nodes.map(callback);
      };
      _proto.reduce = function reduce(callback, memo) {
        return this.nodes.reduce(callback, memo);
      };
      _proto.every = function every(callback) {
        return this.nodes.every(callback);
      };
      _proto.some = function some(callback) {
        return this.nodes.some(callback);
      };
      _proto.filter = function filter(callback) {
        return this.nodes.filter(callback);
      };
      _proto.sort = function sort(callback) {
        return this.nodes.sort(callback);
      };
      _proto.toString = function toString() {
        return this.map(String).join("");
      };
      _createClass(Container2, [{
        key: "first",
        get: function get() {
          return this.at(0);
        }
      }, {
        key: "last",
        get: function get() {
          return this.at(this.length - 1);
        }
      }, {
        key: "length",
        get: function get() {
          return this.nodes.length;
        }
      }]);
      return Container2;
    }(_node["default"]);
    exports["default"] = Container;
    module2.exports = exports.default;
  }
});

// node_modules/postcss-selector-parser/dist/selectors/root.js
var require_root2 = __commonJS({
  "node_modules/postcss-selector-parser/dist/selectors/root.js"(exports, module2) {
    "use strict";
    exports.__esModule = true;
    exports["default"] = void 0;
    var _container = _interopRequireDefault(require_container2());
    var _types = require_types4();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      Object.defineProperty(Constructor, "prototype", { writable: false });
      return Constructor;
    }
    function _inheritsLoose(subClass, superClass) {
      subClass.prototype = Object.create(superClass.prototype);
      subClass.prototype.constructor = subClass;
      _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var Root = /* @__PURE__ */ function(_Container) {
      _inheritsLoose(Root2, _Container);
      function Root2(opts) {
        var _this;
        _this = _Container.call(this, opts) || this;
        _this.type = _types.ROOT;
        return _this;
      }
      var _proto = Root2.prototype;
      _proto.toString = function toString() {
        var str = this.reduce(function(memo, selector) {
          memo.push(String(selector));
          return memo;
        }, []).join(",");
        return this.trailingComma ? str + "," : str;
      };
      _proto.error = function error(message, options) {
        if (this._error) {
          return this._error(message, options);
        } else {
          return new Error(message);
        }
      };
      _createClass(Root2, [{
        key: "errorGenerator",
        set: function set(handler) {
          this._error = handler;
        }
      }]);
      return Root2;
    }(_container["default"]);
    exports["default"] = Root;
    module2.exports = exports.default;
  }
});

// node_modules/postcss-selector-parser/dist/selectors/selector.js
var require_selector3 = __commonJS({
  "node_modules/postcss-selector-parser/dist/selectors/selector.js"(exports, module2) {
    "use strict";
    exports.__esModule = true;
    exports["default"] = void 0;
    var _container = _interopRequireDefault(require_container2());
    var _types = require_types4();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _inheritsLoose(subClass, superClass) {
      subClass.prototype = Object.create(superClass.prototype);
      subClass.prototype.constructor = subClass;
      _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var Selector = /* @__PURE__ */ function(_Container) {
      _inheritsLoose(Selector2, _Container);
      function Selector2(opts) {
        var _this;
        _this = _Container.call(this, opts) || this;
        _this.type = _types.SELECTOR;
        return _this;
      }
      return Selector2;
    }(_container["default"]);
    exports["default"] = Selector;
    module2.exports = exports.default;
  }
});

// node_modules/cssesc/cssesc.js
var require_cssesc = __commonJS({
  "node_modules/cssesc/cssesc.js"(exports, module2) {
    "use strict";
    var object = {};
    var hasOwnProperty2 = object.hasOwnProperty;
    var merge = function merge2(options, defaults) {
      if (!options) {
        return defaults;
      }
      var result = {};
      for (var key in defaults) {
        result[key] = hasOwnProperty2.call(options, key) ? options[key] : defaults[key];
      }
      return result;
    };
    var regexAnySingleEscape = /[ -,\.\/:-@\[-\^`\{-~]/;
    var regexSingleEscape = /[ -,\.\/:-@\[\]\^`\{-~]/;
    var regexExcessiveSpaces = /(^|\\+)?(\\[A-F0-9]{1,6})\x20(?![a-fA-F0-9\x20])/g;
    var cssesc = function cssesc2(string, options) {
      options = merge(options, cssesc2.options);
      if (options.quotes != "single" && options.quotes != "double") {
        options.quotes = "single";
      }
      var quote = options.quotes == "double" ? '"' : "'";
      var isIdentifier = options.isIdentifier;
      var firstChar = string.charAt(0);
      var output = "";
      var counter = 0;
      var length = string.length;
      while (counter < length) {
        var character = string.charAt(counter++);
        var codePoint = character.charCodeAt();
        var value = void 0;
        if (codePoint < 32 || codePoint > 126) {
          if (codePoint >= 55296 && codePoint <= 56319 && counter < length) {
            var extra = string.charCodeAt(counter++);
            if ((extra & 64512) == 56320) {
              codePoint = ((codePoint & 1023) << 10) + (extra & 1023) + 65536;
            } else {
              counter--;
            }
          }
          value = "\\" + codePoint.toString(16).toUpperCase() + " ";
        } else {
          if (options.escapeEverything) {
            if (regexAnySingleEscape.test(character)) {
              value = "\\" + character;
            } else {
              value = "\\" + codePoint.toString(16).toUpperCase() + " ";
            }
          } else if (/[\t\n\f\r\x0B]/.test(character)) {
            value = "\\" + codePoint.toString(16).toUpperCase() + " ";
          } else if (character == "\\" || !isIdentifier && (character == '"' && quote == character || character == "'" && quote == character) || isIdentifier && regexSingleEscape.test(character)) {
            value = "\\" + character;
          } else {
            value = character;
          }
        }
        output += value;
      }
      if (isIdentifier) {
        if (/^-[-\d]/.test(output)) {
          output = "\\-" + output.slice(1);
        } else if (/\d/.test(firstChar)) {
          output = "\\3" + firstChar + " " + output.slice(1);
        }
      }
      output = output.replace(regexExcessiveSpaces, function($0, $1, $2) {
        if ($1 && $1.length % 2) {
          return $0;
        }
        return ($1 || "") + $2;
      });
      if (!isIdentifier && options.wrap) {
        return quote + output + quote;
      }
      return output;
    };
    cssesc.options = {
      "escapeEverything": false,
      "isIdentifier": false,
      "quotes": "single",
      "wrap": false
    };
    cssesc.version = "3.0.0";
    module2.exports = cssesc;
  }
});

// node_modules/postcss-selector-parser/dist/selectors/className.js
var require_className = __commonJS({
  "node_modules/postcss-selector-parser/dist/selectors/className.js"(exports, module2) {
    "use strict";
    exports.__esModule = true;
    exports["default"] = void 0;
    var _cssesc = _interopRequireDefault(require_cssesc());
    var _util = require_util2();
    var _node = _interopRequireDefault(require_node6());
    var _types = require_types4();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      Object.defineProperty(Constructor, "prototype", { writable: false });
      return Constructor;
    }
    function _inheritsLoose(subClass, superClass) {
      subClass.prototype = Object.create(superClass.prototype);
      subClass.prototype.constructor = subClass;
      _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var ClassName = /* @__PURE__ */ function(_Node) {
      _inheritsLoose(ClassName2, _Node);
      function ClassName2(opts) {
        var _this;
        _this = _Node.call(this, opts) || this;
        _this.type = _types.CLASS;
        _this._constructed = true;
        return _this;
      }
      var _proto = ClassName2.prototype;
      _proto.valueToString = function valueToString() {
        return "." + _Node.prototype.valueToString.call(this);
      };
      _createClass(ClassName2, [{
        key: "value",
        get: function get() {
          return this._value;
        },
        set: function set(v) {
          if (this._constructed) {
            var escaped = (0, _cssesc["default"])(v, {
              isIdentifier: true
            });
            if (escaped !== v) {
              (0, _util.ensureObject)(this, "raws");
              this.raws.value = escaped;
            } else if (this.raws) {
              delete this.raws.value;
            }
          }
          this._value = v;
        }
      }]);
      return ClassName2;
    }(_node["default"]);
    exports["default"] = ClassName;
    module2.exports = exports.default;
  }
});

// node_modules/postcss-selector-parser/dist/selectors/comment.js
var require_comment2 = __commonJS({
  "node_modules/postcss-selector-parser/dist/selectors/comment.js"(exports, module2) {
    "use strict";
    exports.__esModule = true;
    exports["default"] = void 0;
    var _node = _interopRequireDefault(require_node6());
    var _types = require_types4();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _inheritsLoose(subClass, superClass) {
      subClass.prototype = Object.create(superClass.prototype);
      subClass.prototype.constructor = subClass;
      _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var Comment = /* @__PURE__ */ function(_Node) {
      _inheritsLoose(Comment2, _Node);
      function Comment2(opts) {
        var _this;
        _this = _Node.call(this, opts) || this;
        _this.type = _types.COMMENT;
        return _this;
      }
      return Comment2;
    }(_node["default"]);
    exports["default"] = Comment;
    module2.exports = exports.default;
  }
});

// node_modules/postcss-selector-parser/dist/selectors/id.js
var require_id = __commonJS({
  "node_modules/postcss-selector-parser/dist/selectors/id.js"(exports, module2) {
    "use strict";
    exports.__esModule = true;
    exports["default"] = void 0;
    var _node = _interopRequireDefault(require_node6());
    var _types = require_types4();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _inheritsLoose(subClass, superClass) {
      subClass.prototype = Object.create(superClass.prototype);
      subClass.prototype.constructor = subClass;
      _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var ID = /* @__PURE__ */ function(_Node) {
      _inheritsLoose(ID2, _Node);
      function ID2(opts) {
        var _this;
        _this = _Node.call(this, opts) || this;
        _this.type = _types.ID;
        return _this;
      }
      var _proto = ID2.prototype;
      _proto.valueToString = function valueToString() {
        return "#" + _Node.prototype.valueToString.call(this);
      };
      return ID2;
    }(_node["default"]);
    exports["default"] = ID;
    module2.exports = exports.default;
  }
});

// node_modules/postcss-selector-parser/dist/selectors/namespace.js
var require_namespace = __commonJS({
  "node_modules/postcss-selector-parser/dist/selectors/namespace.js"(exports, module2) {
    "use strict";
    exports.__esModule = true;
    exports["default"] = void 0;
    var _cssesc = _interopRequireDefault(require_cssesc());
    var _util = require_util2();
    var _node = _interopRequireDefault(require_node6());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      Object.defineProperty(Constructor, "prototype", { writable: false });
      return Constructor;
    }
    function _inheritsLoose(subClass, superClass) {
      subClass.prototype = Object.create(superClass.prototype);
      subClass.prototype.constructor = subClass;
      _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var Namespace = /* @__PURE__ */ function(_Node) {
      _inheritsLoose(Namespace2, _Node);
      function Namespace2() {
        return _Node.apply(this, arguments) || this;
      }
      var _proto = Namespace2.prototype;
      _proto.qualifiedName = function qualifiedName(value) {
        if (this.namespace) {
          return this.namespaceString + "|" + value;
        } else {
          return value;
        }
      };
      _proto.valueToString = function valueToString() {
        return this.qualifiedName(_Node.prototype.valueToString.call(this));
      };
      _createClass(Namespace2, [{
        key: "namespace",
        get: function get() {
          return this._namespace;
        },
        set: function set(namespace) {
          if (namespace === true || namespace === "*" || namespace === "&") {
            this._namespace = namespace;
            if (this.raws) {
              delete this.raws.namespace;
            }
            return;
          }
          var escaped = (0, _cssesc["default"])(namespace, {
            isIdentifier: true
          });
          this._namespace = namespace;
          if (escaped !== namespace) {
            (0, _util.ensureObject)(this, "raws");
            this.raws.namespace = escaped;
          } else if (this.raws) {
            delete this.raws.namespace;
          }
        }
      }, {
        key: "ns",
        get: function get() {
          return this._namespace;
        },
        set: function set(namespace) {
          this.namespace = namespace;
        }
      }, {
        key: "namespaceString",
        get: function get() {
          if (this.namespace) {
            var ns = this.stringifyProperty("namespace");
            if (ns === true) {
              return "";
            } else {
              return ns;
            }
          } else {
            return "";
          }
        }
      }]);
      return Namespace2;
    }(_node["default"]);
    exports["default"] = Namespace;
    module2.exports = exports.default;
  }
});

// node_modules/postcss-selector-parser/dist/selectors/tag.js
var require_tag = __commonJS({
  "node_modules/postcss-selector-parser/dist/selectors/tag.js"(exports, module2) {
    "use strict";
    exports.__esModule = true;
    exports["default"] = void 0;
    var _namespace = _interopRequireDefault(require_namespace());
    var _types = require_types4();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _inheritsLoose(subClass, superClass) {
      subClass.prototype = Object.create(superClass.prototype);
      subClass.prototype.constructor = subClass;
      _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var Tag = /* @__PURE__ */ function(_Namespace) {
      _inheritsLoose(Tag2, _Namespace);
      function Tag2(opts) {
        var _this;
        _this = _Namespace.call(this, opts) || this;
        _this.type = _types.TAG;
        return _this;
      }
      return Tag2;
    }(_namespace["default"]);
    exports["default"] = Tag;
    module2.exports = exports.default;
  }
});

// node_modules/postcss-selector-parser/dist/selectors/string.js
var require_string3 = __commonJS({
  "node_modules/postcss-selector-parser/dist/selectors/string.js"(exports, module2) {
    "use strict";
    exports.__esModule = true;
    exports["default"] = void 0;
    var _node = _interopRequireDefault(require_node6());
    var _types = require_types4();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _inheritsLoose(subClass, superClass) {
      subClass.prototype = Object.create(superClass.prototype);
      subClass.prototype.constructor = subClass;
      _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var String2 = /* @__PURE__ */ function(_Node) {
      _inheritsLoose(String3, _Node);
      function String3(opts) {
        var _this;
        _this = _Node.call(this, opts) || this;
        _this.type = _types.STRING;
        return _this;
      }
      return String3;
    }(_node["default"]);
    exports["default"] = String2;
    module2.exports = exports.default;
  }
});

// node_modules/postcss-selector-parser/dist/selectors/pseudo.js
var require_pseudo3 = __commonJS({
  "node_modules/postcss-selector-parser/dist/selectors/pseudo.js"(exports, module2) {
    "use strict";
    exports.__esModule = true;
    exports["default"] = void 0;
    var _container = _interopRequireDefault(require_container2());
    var _types = require_types4();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _inheritsLoose(subClass, superClass) {
      subClass.prototype = Object.create(superClass.prototype);
      subClass.prototype.constructor = subClass;
      _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var Pseudo = /* @__PURE__ */ function(_Container) {
      _inheritsLoose(Pseudo2, _Container);
      function Pseudo2(opts) {
        var _this;
        _this = _Container.call(this, opts) || this;
        _this.type = _types.PSEUDO;
        return _this;
      }
      var _proto = Pseudo2.prototype;
      _proto.toString = function toString() {
        var params = this.length ? "(" + this.map(String).join(",") + ")" : "";
        return [this.rawSpaceBefore, this.stringifyProperty("value"), params, this.rawSpaceAfter].join("");
      };
      return Pseudo2;
    }(_container["default"]);
    exports["default"] = Pseudo;
    module2.exports = exports.default;
  }
});

// node_modules/util-deprecate/node.js
var require_node7 = __commonJS({
  "node_modules/util-deprecate/node.js"(exports, module2) {
    module2.exports = require("util").deprecate;
  }
});

// node_modules/postcss-selector-parser/dist/selectors/attribute.js
var require_attribute = __commonJS({
  "node_modules/postcss-selector-parser/dist/selectors/attribute.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports["default"] = void 0;
    exports.unescapeValue = unescapeValue;
    var _cssesc = _interopRequireDefault(require_cssesc());
    var _unesc = _interopRequireDefault(require_unesc());
    var _namespace = _interopRequireDefault(require_namespace());
    var _types = require_types4();
    var _CSSESC_QUOTE_OPTIONS;
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      Object.defineProperty(Constructor, "prototype", { writable: false });
      return Constructor;
    }
    function _inheritsLoose(subClass, superClass) {
      subClass.prototype = Object.create(superClass.prototype);
      subClass.prototype.constructor = subClass;
      _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var deprecate = require_node7();
    var WRAPPED_IN_QUOTES = /^('|")([^]*)\1$/;
    var warnOfDeprecatedValueAssignment = deprecate(function() {
    }, "Assigning an attribute a value containing characters that might need to be escaped is deprecated. Call attribute.setValue() instead.");
    var warnOfDeprecatedQuotedAssignment = deprecate(function() {
    }, "Assigning attr.quoted is deprecated and has no effect. Assign to attr.quoteMark instead.");
    var warnOfDeprecatedConstructor = deprecate(function() {
    }, "Constructing an Attribute selector with a value without specifying quoteMark is deprecated. Note: The value should be unescaped now.");
    function unescapeValue(value) {
      var deprecatedUsage = false;
      var quoteMark = null;
      var unescaped = value;
      var m = unescaped.match(WRAPPED_IN_QUOTES);
      if (m) {
        quoteMark = m[1];
        unescaped = m[2];
      }
      unescaped = (0, _unesc["default"])(unescaped);
      if (unescaped !== value) {
        deprecatedUsage = true;
      }
      return {
        deprecatedUsage,
        unescaped,
        quoteMark
      };
    }
    function handleDeprecatedContructorOpts(opts) {
      if (opts.quoteMark !== void 0) {
        return opts;
      }
      if (opts.value === void 0) {
        return opts;
      }
      warnOfDeprecatedConstructor();
      var _unescapeValue = unescapeValue(opts.value), quoteMark = _unescapeValue.quoteMark, unescaped = _unescapeValue.unescaped;
      if (!opts.raws) {
        opts.raws = {};
      }
      if (opts.raws.value === void 0) {
        opts.raws.value = opts.value;
      }
      opts.value = unescaped;
      opts.quoteMark = quoteMark;
      return opts;
    }
    var Attribute = /* @__PURE__ */ function(_Namespace) {
      _inheritsLoose(Attribute2, _Namespace);
      function Attribute2(opts) {
        var _this;
        if (opts === void 0) {
          opts = {};
        }
        _this = _Namespace.call(this, handleDeprecatedContructorOpts(opts)) || this;
        _this.type = _types.ATTRIBUTE;
        _this.raws = _this.raws || {};
        Object.defineProperty(_this.raws, "unquoted", {
          get: deprecate(function() {
            return _this.value;
          }, "attr.raws.unquoted is deprecated. Call attr.value instead."),
          set: deprecate(function() {
            return _this.value;
          }, "Setting attr.raws.unquoted is deprecated and has no effect. attr.value is unescaped by default now.")
        });
        _this._constructed = true;
        return _this;
      }
      var _proto = Attribute2.prototype;
      _proto.getQuotedValue = function getQuotedValue(options) {
        if (options === void 0) {
          options = {};
        }
        var quoteMark = this._determineQuoteMark(options);
        var cssescopts = CSSESC_QUOTE_OPTIONS[quoteMark];
        var escaped = (0, _cssesc["default"])(this._value, cssescopts);
        return escaped;
      };
      _proto._determineQuoteMark = function _determineQuoteMark(options) {
        return options.smart ? this.smartQuoteMark(options) : this.preferredQuoteMark(options);
      };
      _proto.setValue = function setValue(value, options) {
        if (options === void 0) {
          options = {};
        }
        this._value = value;
        this._quoteMark = this._determineQuoteMark(options);
        this._syncRawValue();
      };
      _proto.smartQuoteMark = function smartQuoteMark(options) {
        var v = this.value;
        var numSingleQuotes = v.replace(/[^']/g, "").length;
        var numDoubleQuotes = v.replace(/[^"]/g, "").length;
        if (numSingleQuotes + numDoubleQuotes === 0) {
          var escaped = (0, _cssesc["default"])(v, {
            isIdentifier: true
          });
          if (escaped === v) {
            return Attribute2.NO_QUOTE;
          } else {
            var pref = this.preferredQuoteMark(options);
            if (pref === Attribute2.NO_QUOTE) {
              var quote = this.quoteMark || options.quoteMark || Attribute2.DOUBLE_QUOTE;
              var opts = CSSESC_QUOTE_OPTIONS[quote];
              var quoteValue = (0, _cssesc["default"])(v, opts);
              if (quoteValue.length < escaped.length) {
                return quote;
              }
            }
            return pref;
          }
        } else if (numDoubleQuotes === numSingleQuotes) {
          return this.preferredQuoteMark(options);
        } else if (numDoubleQuotes < numSingleQuotes) {
          return Attribute2.DOUBLE_QUOTE;
        } else {
          return Attribute2.SINGLE_QUOTE;
        }
      };
      _proto.preferredQuoteMark = function preferredQuoteMark(options) {
        var quoteMark = options.preferCurrentQuoteMark ? this.quoteMark : options.quoteMark;
        if (quoteMark === void 0) {
          quoteMark = options.preferCurrentQuoteMark ? options.quoteMark : this.quoteMark;
        }
        if (quoteMark === void 0) {
          quoteMark = Attribute2.DOUBLE_QUOTE;
        }
        return quoteMark;
      };
      _proto._syncRawValue = function _syncRawValue() {
        var rawValue = (0, _cssesc["default"])(this._value, CSSESC_QUOTE_OPTIONS[this.quoteMark]);
        if (rawValue === this._value) {
          if (this.raws) {
            delete this.raws.value;
          }
        } else {
          this.raws.value = rawValue;
        }
      };
      _proto._handleEscapes = function _handleEscapes(prop, value) {
        if (this._constructed) {
          var escaped = (0, _cssesc["default"])(value, {
            isIdentifier: true
          });
          if (escaped !== value) {
            this.raws[prop] = escaped;
          } else {
            delete this.raws[prop];
          }
        }
      };
      _proto._spacesFor = function _spacesFor(name) {
        var attrSpaces = {
          before: "",
          after: ""
        };
        var spaces = this.spaces[name] || {};
        var rawSpaces = this.raws.spaces && this.raws.spaces[name] || {};
        return Object.assign(attrSpaces, spaces, rawSpaces);
      };
      _proto._stringFor = function _stringFor(name, spaceName, concat) {
        if (spaceName === void 0) {
          spaceName = name;
        }
        if (concat === void 0) {
          concat = defaultAttrConcat;
        }
        var attrSpaces = this._spacesFor(spaceName);
        return concat(this.stringifyProperty(name), attrSpaces);
      };
      _proto.offsetOf = function offsetOf(name) {
        var count = 1;
        var attributeSpaces = this._spacesFor("attribute");
        count += attributeSpaces.before.length;
        if (name === "namespace" || name === "ns") {
          return this.namespace ? count : -1;
        }
        if (name === "attributeNS") {
          return count;
        }
        count += this.namespaceString.length;
        if (this.namespace) {
          count += 1;
        }
        if (name === "attribute") {
          return count;
        }
        count += this.stringifyProperty("attribute").length;
        count += attributeSpaces.after.length;
        var operatorSpaces = this._spacesFor("operator");
        count += operatorSpaces.before.length;
        var operator = this.stringifyProperty("operator");
        if (name === "operator") {
          return operator ? count : -1;
        }
        count += operator.length;
        count += operatorSpaces.after.length;
        var valueSpaces = this._spacesFor("value");
        count += valueSpaces.before.length;
        var value = this.stringifyProperty("value");
        if (name === "value") {
          return value ? count : -1;
        }
        count += value.length;
        count += valueSpaces.after.length;
        var insensitiveSpaces = this._spacesFor("insensitive");
        count += insensitiveSpaces.before.length;
        if (name === "insensitive") {
          return this.insensitive ? count : -1;
        }
        return -1;
      };
      _proto.toString = function toString() {
        var _this2 = this;
        var selector = [this.rawSpaceBefore, "["];
        selector.push(this._stringFor("qualifiedAttribute", "attribute"));
        if (this.operator && (this.value || this.value === "")) {
          selector.push(this._stringFor("operator"));
          selector.push(this._stringFor("value"));
          selector.push(this._stringFor("insensitiveFlag", "insensitive", function(attrValue, attrSpaces) {
            if (attrValue.length > 0 && !_this2.quoted && attrSpaces.before.length === 0 && !(_this2.spaces.value && _this2.spaces.value.after)) {
              attrSpaces.before = " ";
            }
            return defaultAttrConcat(attrValue, attrSpaces);
          }));
        }
        selector.push("]");
        selector.push(this.rawSpaceAfter);
        return selector.join("");
      };
      _createClass(Attribute2, [{
        key: "quoted",
        get: function get() {
          var qm = this.quoteMark;
          return qm === "'" || qm === '"';
        },
        set: function set(value) {
          warnOfDeprecatedQuotedAssignment();
        }
        /**
         * returns a single (`'`) or double (`"`) quote character if the value is quoted.
         * returns `null` if the value is not quoted.
         * returns `undefined` if the quotation state is unknown (this can happen when
         * the attribute is constructed without specifying a quote mark.)
         */
      }, {
        key: "quoteMark",
        get: function get() {
          return this._quoteMark;
        },
        set: function set(quoteMark) {
          if (!this._constructed) {
            this._quoteMark = quoteMark;
            return;
          }
          if (this._quoteMark !== quoteMark) {
            this._quoteMark = quoteMark;
            this._syncRawValue();
          }
        }
      }, {
        key: "qualifiedAttribute",
        get: function get() {
          return this.qualifiedName(this.raws.attribute || this.attribute);
        }
      }, {
        key: "insensitiveFlag",
        get: function get() {
          return this.insensitive ? "i" : "";
        }
      }, {
        key: "value",
        get: function get() {
          return this._value;
        },
        set: (
          /**
           * Before 3.0, the value had to be set to an escaped value including any wrapped
           * quote marks. In 3.0, the semantics of `Attribute.value` changed so that the value
           * is unescaped during parsing and any quote marks are removed.
           *
           * Because the ambiguity of this semantic change, if you set `attr.value = newValue`,
           * a deprecation warning is raised when the new value contains any characters that would
           * require escaping (including if it contains wrapped quotes).
           *
           * Instead, you should call `attr.setValue(newValue, opts)` and pass options that describe
           * how the new value is quoted.
           */
          function set(v) {
            if (this._constructed) {
              var _unescapeValue2 = unescapeValue(v), deprecatedUsage = _unescapeValue2.deprecatedUsage, unescaped = _unescapeValue2.unescaped, quoteMark = _unescapeValue2.quoteMark;
              if (deprecatedUsage) {
                warnOfDeprecatedValueAssignment();
              }
              if (unescaped === this._value && quoteMark === this._quoteMark) {
                return;
              }
              this._value = unescaped;
              this._quoteMark = quoteMark;
              this._syncRawValue();
            } else {
              this._value = v;
            }
          }
        )
      }, {
        key: "insensitive",
        get: function get() {
          return this._insensitive;
        },
        set: function set(insensitive) {
          if (!insensitive) {
            this._insensitive = false;
            if (this.raws && (this.raws.insensitiveFlag === "I" || this.raws.insensitiveFlag === "i")) {
              this.raws.insensitiveFlag = void 0;
            }
          }
          this._insensitive = insensitive;
        }
      }, {
        key: "attribute",
        get: function get() {
          return this._attribute;
        },
        set: function set(name) {
          this._handleEscapes("attribute", name);
          this._attribute = name;
        }
      }]);
      return Attribute2;
    }(_namespace["default"]);
    exports["default"] = Attribute;
    Attribute.NO_QUOTE = null;
    Attribute.SINGLE_QUOTE = "'";
    Attribute.DOUBLE_QUOTE = '"';
    var CSSESC_QUOTE_OPTIONS = (_CSSESC_QUOTE_OPTIONS = {
      "'": {
        quotes: "single",
        wrap: true
      },
      '"': {
        quotes: "double",
        wrap: true
      }
    }, _CSSESC_QUOTE_OPTIONS[null] = {
      isIdentifier: true
    }, _CSSESC_QUOTE_OPTIONS);
    function defaultAttrConcat(attrValue, attrSpaces) {
      return "" + attrSpaces.before + attrValue + attrSpaces.after;
    }
  }
});

// node_modules/postcss-selector-parser/dist/selectors/universal.js
var require_universal = __commonJS({
  "node_modules/postcss-selector-parser/dist/selectors/universal.js"(exports, module2) {
    "use strict";
    exports.__esModule = true;
    exports["default"] = void 0;
    var _namespace = _interopRequireDefault(require_namespace());
    var _types = require_types4();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _inheritsLoose(subClass, superClass) {
      subClass.prototype = Object.create(superClass.prototype);
      subClass.prototype.constructor = subClass;
      _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var Universal = /* @__PURE__ */ function(_Namespace) {
      _inheritsLoose(Universal2, _Namespace);
      function Universal2(opts) {
        var _this;
        _this = _Namespace.call(this, opts) || this;
        _this.type = _types.UNIVERSAL;
        _this.value = "*";
        return _this;
      }
      return Universal2;
    }(_namespace["default"]);
    exports["default"] = Universal;
    module2.exports = exports.default;
  }
});

// node_modules/postcss-selector-parser/dist/selectors/combinator.js
var require_combinator = __commonJS({
  "node_modules/postcss-selector-parser/dist/selectors/combinator.js"(exports, module2) {
    "use strict";
    exports.__esModule = true;
    exports["default"] = void 0;
    var _node = _interopRequireDefault(require_node6());
    var _types = require_types4();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _inheritsLoose(subClass, superClass) {
      subClass.prototype = Object.create(superClass.prototype);
      subClass.prototype.constructor = subClass;
      _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var Combinator = /* @__PURE__ */ function(_Node) {
      _inheritsLoose(Combinator2, _Node);
      function Combinator2(opts) {
        var _this;
        _this = _Node.call(this, opts) || this;
        _this.type = _types.COMBINATOR;
        return _this;
      }
      return Combinator2;
    }(_node["default"]);
    exports["default"] = Combinator;
    module2.exports = exports.default;
  }
});

// node_modules/postcss-selector-parser/dist/selectors/nesting.js
var require_nesting = __commonJS({
  "node_modules/postcss-selector-parser/dist/selectors/nesting.js"(exports, module2) {
    "use strict";
    exports.__esModule = true;
    exports["default"] = void 0;
    var _node = _interopRequireDefault(require_node6());
    var _types = require_types4();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _inheritsLoose(subClass, superClass) {
      subClass.prototype = Object.create(superClass.prototype);
      subClass.prototype.constructor = subClass;
      _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var Nesting = /* @__PURE__ */ function(_Node) {
      _inheritsLoose(Nesting2, _Node);
      function Nesting2(opts) {
        var _this;
        _this = _Node.call(this, opts) || this;
        _this.type = _types.NESTING;
        _this.value = "&";
        return _this;
      }
      return Nesting2;
    }(_node["default"]);
    exports["default"] = Nesting;
    module2.exports = exports.default;
  }
});

// node_modules/postcss-selector-parser/dist/sortAscending.js
var require_sortAscending = __commonJS({
  "node_modules/postcss-selector-parser/dist/sortAscending.js"(exports, module2) {
    "use strict";
    exports.__esModule = true;
    exports["default"] = sortAscending;
    function sortAscending(list) {
      return list.sort(function(a, b) {
        return a - b;
      });
    }
    module2.exports = exports.default;
  }
});

// node_modules/postcss-selector-parser/dist/tokenTypes.js
var require_tokenTypes = __commonJS({
  "node_modules/postcss-selector-parser/dist/tokenTypes.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.word = exports.tilde = exports.tab = exports.str = exports.space = exports.slash = exports.singleQuote = exports.semicolon = exports.plus = exports.pipe = exports.openSquare = exports.openParenthesis = exports.newline = exports.greaterThan = exports.feed = exports.equals = exports.doubleQuote = exports.dollar = exports.cr = exports.comment = exports.comma = exports.combinator = exports.colon = exports.closeSquare = exports.closeParenthesis = exports.caret = exports.bang = exports.backslash = exports.at = exports.asterisk = exports.ampersand = void 0;
    var ampersand = 38;
    exports.ampersand = ampersand;
    var asterisk = 42;
    exports.asterisk = asterisk;
    var at = 64;
    exports.at = at;
    var comma = 44;
    exports.comma = comma;
    var colon = 58;
    exports.colon = colon;
    var semicolon = 59;
    exports.semicolon = semicolon;
    var openParenthesis = 40;
    exports.openParenthesis = openParenthesis;
    var closeParenthesis = 41;
    exports.closeParenthesis = closeParenthesis;
    var openSquare = 91;
    exports.openSquare = openSquare;
    var closeSquare = 93;
    exports.closeSquare = closeSquare;
    var dollar = 36;
    exports.dollar = dollar;
    var tilde = 126;
    exports.tilde = tilde;
    var caret = 94;
    exports.caret = caret;
    var plus = 43;
    exports.plus = plus;
    var equals = 61;
    exports.equals = equals;
    var pipe = 124;
    exports.pipe = pipe;
    var greaterThan = 62;
    exports.greaterThan = greaterThan;
    var space = 32;
    exports.space = space;
    var singleQuote = 39;
    exports.singleQuote = singleQuote;
    var doubleQuote = 34;
    exports.doubleQuote = doubleQuote;
    var slash = 47;
    exports.slash = slash;
    var bang = 33;
    exports.bang = bang;
    var backslash = 92;
    exports.backslash = backslash;
    var cr = 13;
    exports.cr = cr;
    var feed = 12;
    exports.feed = feed;
    var newline = 10;
    exports.newline = newline;
    var tab = 9;
    exports.tab = tab;
    var str = singleQuote;
    exports.str = str;
    var comment = -1;
    exports.comment = comment;
    var word = -2;
    exports.word = word;
    var combinator = -3;
    exports.combinator = combinator;
  }
});

// node_modules/postcss-selector-parser/dist/tokenize.js
var require_tokenize2 = __commonJS({
  "node_modules/postcss-selector-parser/dist/tokenize.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.FIELDS = void 0;
    exports["default"] = tokenize;
    var t = _interopRequireWildcard(require_tokenTypes());
    var _unescapable;
    var _wordDelimiters;
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    var unescapable = (_unescapable = {}, _unescapable[t.tab] = true, _unescapable[t.newline] = true, _unescapable[t.cr] = true, _unescapable[t.feed] = true, _unescapable);
    var wordDelimiters = (_wordDelimiters = {}, _wordDelimiters[t.space] = true, _wordDelimiters[t.tab] = true, _wordDelimiters[t.newline] = true, _wordDelimiters[t.cr] = true, _wordDelimiters[t.feed] = true, _wordDelimiters[t.ampersand] = true, _wordDelimiters[t.asterisk] = true, _wordDelimiters[t.bang] = true, _wordDelimiters[t.comma] = true, _wordDelimiters[t.colon] = true, _wordDelimiters[t.semicolon] = true, _wordDelimiters[t.openParenthesis] = true, _wordDelimiters[t.closeParenthesis] = true, _wordDelimiters[t.openSquare] = true, _wordDelimiters[t.closeSquare] = true, _wordDelimiters[t.singleQuote] = true, _wordDelimiters[t.doubleQuote] = true, _wordDelimiters[t.plus] = true, _wordDelimiters[t.pipe] = true, _wordDelimiters[t.tilde] = true, _wordDelimiters[t.greaterThan] = true, _wordDelimiters[t.equals] = true, _wordDelimiters[t.dollar] = true, _wordDelimiters[t.caret] = true, _wordDelimiters[t.slash] = true, _wordDelimiters);
    var hex = {};
    var hexChars = "0123456789abcdefABCDEF";
    for (i = 0; i < hexChars.length; i++) {
      hex[hexChars.charCodeAt(i)] = true;
    }
    var i;
    function consumeWord(css, start) {
      var next = start;
      var code;
      do {
        code = css.charCodeAt(next);
        if (wordDelimiters[code]) {
          return next - 1;
        } else if (code === t.backslash) {
          next = consumeEscape(css, next) + 1;
        } else {
          next++;
        }
      } while (next < css.length);
      return next - 1;
    }
    function consumeEscape(css, start) {
      var next = start;
      var code = css.charCodeAt(next + 1);
      if (unescapable[code]) {
      } else if (hex[code]) {
        var hexDigits = 0;
        do {
          next++;
          hexDigits++;
          code = css.charCodeAt(next + 1);
        } while (hex[code] && hexDigits < 6);
        if (hexDigits < 6 && code === t.space) {
          next++;
        }
      } else {
        next++;
      }
      return next;
    }
    var FIELDS = {
      TYPE: 0,
      START_LINE: 1,
      START_COL: 2,
      END_LINE: 3,
      END_COL: 4,
      START_POS: 5,
      END_POS: 6
    };
    exports.FIELDS = FIELDS;
    function tokenize(input) {
      var tokens = [];
      var css = input.css.valueOf();
      var _css = css, length = _css.length;
      var offset = -1;
      var line = 1;
      var start = 0;
      var end = 0;
      var code, content, endColumn, endLine, escaped, escapePos, last, lines, next, nextLine, nextOffset, quote, tokenType;
      function unclosed(what, fix) {
        if (input.safe) {
          css += fix;
          next = css.length - 1;
        } else {
          throw input.error("Unclosed " + what, line, start - offset, start);
        }
      }
      while (start < length) {
        code = css.charCodeAt(start);
        if (code === t.newline) {
          offset = start;
          line += 1;
        }
        switch (code) {
          case t.space:
          case t.tab:
          case t.newline:
          case t.cr:
          case t.feed:
            next = start;
            do {
              next += 1;
              code = css.charCodeAt(next);
              if (code === t.newline) {
                offset = next;
                line += 1;
              }
            } while (code === t.space || code === t.newline || code === t.tab || code === t.cr || code === t.feed);
            tokenType = t.space;
            endLine = line;
            endColumn = next - offset - 1;
            end = next;
            break;
          case t.plus:
          case t.greaterThan:
          case t.tilde:
          case t.pipe:
            next = start;
            do {
              next += 1;
              code = css.charCodeAt(next);
            } while (code === t.plus || code === t.greaterThan || code === t.tilde || code === t.pipe);
            tokenType = t.combinator;
            endLine = line;
            endColumn = start - offset;
            end = next;
            break;
          case t.asterisk:
          case t.ampersand:
          case t.bang:
          case t.comma:
          case t.equals:
          case t.dollar:
          case t.caret:
          case t.openSquare:
          case t.closeSquare:
          case t.colon:
          case t.semicolon:
          case t.openParenthesis:
          case t.closeParenthesis:
            next = start;
            tokenType = code;
            endLine = line;
            endColumn = start - offset;
            end = next + 1;
            break;
          case t.singleQuote:
          case t.doubleQuote:
            quote = code === t.singleQuote ? "'" : '"';
            next = start;
            do {
              escaped = false;
              next = css.indexOf(quote, next + 1);
              if (next === -1) {
                unclosed("quote", quote);
              }
              escapePos = next;
              while (css.charCodeAt(escapePos - 1) === t.backslash) {
                escapePos -= 1;
                escaped = !escaped;
              }
            } while (escaped);
            tokenType = t.str;
            endLine = line;
            endColumn = start - offset;
            end = next + 1;
            break;
          default:
            if (code === t.slash && css.charCodeAt(start + 1) === t.asterisk) {
              next = css.indexOf("*/", start + 2) + 1;
              if (next === 0) {
                unclosed("comment", "*/");
              }
              content = css.slice(start, next + 1);
              lines = content.split("\n");
              last = lines.length - 1;
              if (last > 0) {
                nextLine = line + last;
                nextOffset = next - lines[last].length;
              } else {
                nextLine = line;
                nextOffset = offset;
              }
              tokenType = t.comment;
              line = nextLine;
              endLine = nextLine;
              endColumn = next - nextOffset;
            } else if (code === t.slash) {
              next = start;
              tokenType = code;
              endLine = line;
              endColumn = start - offset;
              end = next + 1;
            } else {
              next = consumeWord(css, start);
              tokenType = t.word;
              endLine = line;
              endColumn = next - offset;
            }
            end = next + 1;
            break;
        }
        tokens.push([
          tokenType,
          // [0] Token type
          line,
          // [1] Starting line
          start - offset,
          // [2] Starting column
          endLine,
          // [3] Ending line
          endColumn,
          // [4] Ending column
          start,
          // [5] Start position / Source index
          end
          // [6] End position
        ]);
        if (nextOffset) {
          offset = nextOffset;
          nextOffset = null;
        }
        start = end;
      }
      return tokens;
    }
  }
});

// node_modules/postcss-selector-parser/dist/parser.js
var require_parser5 = __commonJS({
  "node_modules/postcss-selector-parser/dist/parser.js"(exports, module2) {
    "use strict";
    exports.__esModule = true;
    exports["default"] = void 0;
    var _root = _interopRequireDefault(require_root2());
    var _selector = _interopRequireDefault(require_selector3());
    var _className = _interopRequireDefault(require_className());
    var _comment = _interopRequireDefault(require_comment2());
    var _id = _interopRequireDefault(require_id());
    var _tag = _interopRequireDefault(require_tag());
    var _string = _interopRequireDefault(require_string3());
    var _pseudo = _interopRequireDefault(require_pseudo3());
    var _attribute = _interopRequireWildcard(require_attribute());
    var _universal = _interopRequireDefault(require_universal());
    var _combinator = _interopRequireDefault(require_combinator());
    var _nesting = _interopRequireDefault(require_nesting());
    var _sortAscending = _interopRequireDefault(require_sortAscending());
    var _tokenize = _interopRequireWildcard(require_tokenize2());
    var tokens = _interopRequireWildcard(require_tokenTypes());
    var types = _interopRequireWildcard(require_types4());
    var _util = require_util2();
    var _WHITESPACE_TOKENS;
    var _Object$assign;
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      Object.defineProperty(Constructor, "prototype", { writable: false });
      return Constructor;
    }
    var WHITESPACE_TOKENS = (_WHITESPACE_TOKENS = {}, _WHITESPACE_TOKENS[tokens.space] = true, _WHITESPACE_TOKENS[tokens.cr] = true, _WHITESPACE_TOKENS[tokens.feed] = true, _WHITESPACE_TOKENS[tokens.newline] = true, _WHITESPACE_TOKENS[tokens.tab] = true, _WHITESPACE_TOKENS);
    var WHITESPACE_EQUIV_TOKENS = Object.assign({}, WHITESPACE_TOKENS, (_Object$assign = {}, _Object$assign[tokens.comment] = true, _Object$assign));
    function tokenStart(token) {
      return {
        line: token[_tokenize.FIELDS.START_LINE],
        column: token[_tokenize.FIELDS.START_COL]
      };
    }
    function tokenEnd(token) {
      return {
        line: token[_tokenize.FIELDS.END_LINE],
        column: token[_tokenize.FIELDS.END_COL]
      };
    }
    function getSource(startLine, startColumn, endLine, endColumn) {
      return {
        start: {
          line: startLine,
          column: startColumn
        },
        end: {
          line: endLine,
          column: endColumn
        }
      };
    }
    function getTokenSource(token) {
      return getSource(token[_tokenize.FIELDS.START_LINE], token[_tokenize.FIELDS.START_COL], token[_tokenize.FIELDS.END_LINE], token[_tokenize.FIELDS.END_COL]);
    }
    function getTokenSourceSpan(startToken, endToken) {
      if (!startToken) {
        return void 0;
      }
      return getSource(startToken[_tokenize.FIELDS.START_LINE], startToken[_tokenize.FIELDS.START_COL], endToken[_tokenize.FIELDS.END_LINE], endToken[_tokenize.FIELDS.END_COL]);
    }
    function unescapeProp(node, prop) {
      var value = node[prop];
      if (typeof value !== "string") {
        return;
      }
      if (value.indexOf("\\") !== -1) {
        (0, _util.ensureObject)(node, "raws");
        node[prop] = (0, _util.unesc)(value);
        if (node.raws[prop] === void 0) {
          node.raws[prop] = value;
        }
      }
      return node;
    }
    function indexesOf(array, item) {
      var i = -1;
      var indexes = [];
      while ((i = array.indexOf(item, i + 1)) !== -1) {
        indexes.push(i);
      }
      return indexes;
    }
    function uniqs() {
      var list = Array.prototype.concat.apply([], arguments);
      return list.filter(function(item, i) {
        return i === list.indexOf(item);
      });
    }
    var Parser = /* @__PURE__ */ function() {
      function Parser2(rule, options) {
        if (options === void 0) {
          options = {};
        }
        this.rule = rule;
        this.options = Object.assign({
          lossy: false,
          safe: false
        }, options);
        this.position = 0;
        this.css = typeof this.rule === "string" ? this.rule : this.rule.selector;
        this.tokens = (0, _tokenize["default"])({
          css: this.css,
          error: this._errorGenerator(),
          safe: this.options.safe
        });
        var rootSource = getTokenSourceSpan(this.tokens[0], this.tokens[this.tokens.length - 1]);
        this.root = new _root["default"]({
          source: rootSource
        });
        this.root.errorGenerator = this._errorGenerator();
        var selector = new _selector["default"]({
          source: {
            start: {
              line: 1,
              column: 1
            }
          }
        });
        this.root.append(selector);
        this.current = selector;
        this.loop();
      }
      var _proto = Parser2.prototype;
      _proto._errorGenerator = function _errorGenerator() {
        var _this = this;
        return function(message, errorOptions) {
          if (typeof _this.rule === "string") {
            return new Error(message);
          }
          return _this.rule.error(message, errorOptions);
        };
      };
      _proto.attribute = function attribute() {
        var attr = [];
        var startingToken = this.currToken;
        this.position++;
        while (this.position < this.tokens.length && this.currToken[_tokenize.FIELDS.TYPE] !== tokens.closeSquare) {
          attr.push(this.currToken);
          this.position++;
        }
        if (this.currToken[_tokenize.FIELDS.TYPE] !== tokens.closeSquare) {
          return this.expected("closing square bracket", this.currToken[_tokenize.FIELDS.START_POS]);
        }
        var len = attr.length;
        var node = {
          source: getSource(startingToken[1], startingToken[2], this.currToken[3], this.currToken[4]),
          sourceIndex: startingToken[_tokenize.FIELDS.START_POS]
        };
        if (len === 1 && !~[tokens.word].indexOf(attr[0][_tokenize.FIELDS.TYPE])) {
          return this.expected("attribute", attr[0][_tokenize.FIELDS.START_POS]);
        }
        var pos = 0;
        var spaceBefore = "";
        var commentBefore = "";
        var lastAdded = null;
        var spaceAfterMeaningfulToken = false;
        while (pos < len) {
          var token = attr[pos];
          var content = this.content(token);
          var next = attr[pos + 1];
          switch (token[_tokenize.FIELDS.TYPE]) {
            case tokens.space:
              spaceAfterMeaningfulToken = true;
              if (this.options.lossy) {
                break;
              }
              if (lastAdded) {
                (0, _util.ensureObject)(node, "spaces", lastAdded);
                var prevContent = node.spaces[lastAdded].after || "";
                node.spaces[lastAdded].after = prevContent + content;
                var existingComment = (0, _util.getProp)(node, "raws", "spaces", lastAdded, "after") || null;
                if (existingComment) {
                  node.raws.spaces[lastAdded].after = existingComment + content;
                }
              } else {
                spaceBefore = spaceBefore + content;
                commentBefore = commentBefore + content;
              }
              break;
            case tokens.asterisk:
              if (next[_tokenize.FIELDS.TYPE] === tokens.equals) {
                node.operator = content;
                lastAdded = "operator";
              } else if ((!node.namespace || lastAdded === "namespace" && !spaceAfterMeaningfulToken) && next) {
                if (spaceBefore) {
                  (0, _util.ensureObject)(node, "spaces", "attribute");
                  node.spaces.attribute.before = spaceBefore;
                  spaceBefore = "";
                }
                if (commentBefore) {
                  (0, _util.ensureObject)(node, "raws", "spaces", "attribute");
                  node.raws.spaces.attribute.before = spaceBefore;
                  commentBefore = "";
                }
                node.namespace = (node.namespace || "") + content;
                var rawValue = (0, _util.getProp)(node, "raws", "namespace") || null;
                if (rawValue) {
                  node.raws.namespace += content;
                }
                lastAdded = "namespace";
              }
              spaceAfterMeaningfulToken = false;
              break;
            case tokens.dollar:
              if (lastAdded === "value") {
                var oldRawValue = (0, _util.getProp)(node, "raws", "value");
                node.value += "$";
                if (oldRawValue) {
                  node.raws.value = oldRawValue + "$";
                }
                break;
              }
            case tokens.caret:
              if (next[_tokenize.FIELDS.TYPE] === tokens.equals) {
                node.operator = content;
                lastAdded = "operator";
              }
              spaceAfterMeaningfulToken = false;
              break;
            case tokens.combinator:
              if (content === "~" && next[_tokenize.FIELDS.TYPE] === tokens.equals) {
                node.operator = content;
                lastAdded = "operator";
              }
              if (content !== "|") {
                spaceAfterMeaningfulToken = false;
                break;
              }
              if (next[_tokenize.FIELDS.TYPE] === tokens.equals) {
                node.operator = content;
                lastAdded = "operator";
              } else if (!node.namespace && !node.attribute) {
                node.namespace = true;
              }
              spaceAfterMeaningfulToken = false;
              break;
            case tokens.word:
              if (next && this.content(next) === "|" && attr[pos + 2] && attr[pos + 2][_tokenize.FIELDS.TYPE] !== tokens.equals && // this look-ahead probably fails with comment nodes involved.
              !node.operator && !node.namespace) {
                node.namespace = content;
                lastAdded = "namespace";
              } else if (!node.attribute || lastAdded === "attribute" && !spaceAfterMeaningfulToken) {
                if (spaceBefore) {
                  (0, _util.ensureObject)(node, "spaces", "attribute");
                  node.spaces.attribute.before = spaceBefore;
                  spaceBefore = "";
                }
                if (commentBefore) {
                  (0, _util.ensureObject)(node, "raws", "spaces", "attribute");
                  node.raws.spaces.attribute.before = commentBefore;
                  commentBefore = "";
                }
                node.attribute = (node.attribute || "") + content;
                var _rawValue = (0, _util.getProp)(node, "raws", "attribute") || null;
                if (_rawValue) {
                  node.raws.attribute += content;
                }
                lastAdded = "attribute";
              } else if (!node.value && node.value !== "" || lastAdded === "value" && !(spaceAfterMeaningfulToken || node.quoteMark)) {
                var _unescaped = (0, _util.unesc)(content);
                var _oldRawValue = (0, _util.getProp)(node, "raws", "value") || "";
                var oldValue = node.value || "";
                node.value = oldValue + _unescaped;
                node.quoteMark = null;
                if (_unescaped !== content || _oldRawValue) {
                  (0, _util.ensureObject)(node, "raws");
                  node.raws.value = (_oldRawValue || oldValue) + content;
                }
                lastAdded = "value";
              } else {
                var insensitive = content === "i" || content === "I";
                if ((node.value || node.value === "") && (node.quoteMark || spaceAfterMeaningfulToken)) {
                  node.insensitive = insensitive;
                  if (!insensitive || content === "I") {
                    (0, _util.ensureObject)(node, "raws");
                    node.raws.insensitiveFlag = content;
                  }
                  lastAdded = "insensitive";
                  if (spaceBefore) {
                    (0, _util.ensureObject)(node, "spaces", "insensitive");
                    node.spaces.insensitive.before = spaceBefore;
                    spaceBefore = "";
                  }
                  if (commentBefore) {
                    (0, _util.ensureObject)(node, "raws", "spaces", "insensitive");
                    node.raws.spaces.insensitive.before = commentBefore;
                    commentBefore = "";
                  }
                } else if (node.value || node.value === "") {
                  lastAdded = "value";
                  node.value += content;
                  if (node.raws.value) {
                    node.raws.value += content;
                  }
                }
              }
              spaceAfterMeaningfulToken = false;
              break;
            case tokens.str:
              if (!node.attribute || !node.operator) {
                return this.error("Expected an attribute followed by an operator preceding the string.", {
                  index: token[_tokenize.FIELDS.START_POS]
                });
              }
              var _unescapeValue = (0, _attribute.unescapeValue)(content), unescaped = _unescapeValue.unescaped, quoteMark = _unescapeValue.quoteMark;
              node.value = unescaped;
              node.quoteMark = quoteMark;
              lastAdded = "value";
              (0, _util.ensureObject)(node, "raws");
              node.raws.value = content;
              spaceAfterMeaningfulToken = false;
              break;
            case tokens.equals:
              if (!node.attribute) {
                return this.expected("attribute", token[_tokenize.FIELDS.START_POS], content);
              }
              if (node.value) {
                return this.error('Unexpected "=" found; an operator was already defined.', {
                  index: token[_tokenize.FIELDS.START_POS]
                });
              }
              node.operator = node.operator ? node.operator + content : content;
              lastAdded = "operator";
              spaceAfterMeaningfulToken = false;
              break;
            case tokens.comment:
              if (lastAdded) {
                if (spaceAfterMeaningfulToken || next && next[_tokenize.FIELDS.TYPE] === tokens.space || lastAdded === "insensitive") {
                  var lastComment = (0, _util.getProp)(node, "spaces", lastAdded, "after") || "";
                  var rawLastComment = (0, _util.getProp)(node, "raws", "spaces", lastAdded, "after") || lastComment;
                  (0, _util.ensureObject)(node, "raws", "spaces", lastAdded);
                  node.raws.spaces[lastAdded].after = rawLastComment + content;
                } else {
                  var lastValue = node[lastAdded] || "";
                  var rawLastValue = (0, _util.getProp)(node, "raws", lastAdded) || lastValue;
                  (0, _util.ensureObject)(node, "raws");
                  node.raws[lastAdded] = rawLastValue + content;
                }
              } else {
                commentBefore = commentBefore + content;
              }
              break;
            default:
              return this.error('Unexpected "' + content + '" found.', {
                index: token[_tokenize.FIELDS.START_POS]
              });
          }
          pos++;
        }
        unescapeProp(node, "attribute");
        unescapeProp(node, "namespace");
        this.newNode(new _attribute["default"](node));
        this.position++;
      };
      _proto.parseWhitespaceEquivalentTokens = function parseWhitespaceEquivalentTokens(stopPosition) {
        if (stopPosition < 0) {
          stopPosition = this.tokens.length;
        }
        var startPosition = this.position;
        var nodes = [];
        var space = "";
        var lastComment = void 0;
        do {
          if (WHITESPACE_TOKENS[this.currToken[_tokenize.FIELDS.TYPE]]) {
            if (!this.options.lossy) {
              space += this.content();
            }
          } else if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.comment) {
            var spaces = {};
            if (space) {
              spaces.before = space;
              space = "";
            }
            lastComment = new _comment["default"]({
              value: this.content(),
              source: getTokenSource(this.currToken),
              sourceIndex: this.currToken[_tokenize.FIELDS.START_POS],
              spaces
            });
            nodes.push(lastComment);
          }
        } while (++this.position < stopPosition);
        if (space) {
          if (lastComment) {
            lastComment.spaces.after = space;
          } else if (!this.options.lossy) {
            var firstToken = this.tokens[startPosition];
            var lastToken = this.tokens[this.position - 1];
            nodes.push(new _string["default"]({
              value: "",
              source: getSource(firstToken[_tokenize.FIELDS.START_LINE], firstToken[_tokenize.FIELDS.START_COL], lastToken[_tokenize.FIELDS.END_LINE], lastToken[_tokenize.FIELDS.END_COL]),
              sourceIndex: firstToken[_tokenize.FIELDS.START_POS],
              spaces: {
                before: space,
                after: ""
              }
            }));
          }
        }
        return nodes;
      };
      _proto.convertWhitespaceNodesToSpace = function convertWhitespaceNodesToSpace(nodes, requiredSpace) {
        var _this2 = this;
        if (requiredSpace === void 0) {
          requiredSpace = false;
        }
        var space = "";
        var rawSpace = "";
        nodes.forEach(function(n) {
          var spaceBefore = _this2.lossySpace(n.spaces.before, requiredSpace);
          var rawSpaceBefore = _this2.lossySpace(n.rawSpaceBefore, requiredSpace);
          space += spaceBefore + _this2.lossySpace(n.spaces.after, requiredSpace && spaceBefore.length === 0);
          rawSpace += spaceBefore + n.value + _this2.lossySpace(n.rawSpaceAfter, requiredSpace && rawSpaceBefore.length === 0);
        });
        if (rawSpace === space) {
          rawSpace = void 0;
        }
        var result = {
          space,
          rawSpace
        };
        return result;
      };
      _proto.isNamedCombinator = function isNamedCombinator(position) {
        if (position === void 0) {
          position = this.position;
        }
        return this.tokens[position + 0] && this.tokens[position + 0][_tokenize.FIELDS.TYPE] === tokens.slash && this.tokens[position + 1] && this.tokens[position + 1][_tokenize.FIELDS.TYPE] === tokens.word && this.tokens[position + 2] && this.tokens[position + 2][_tokenize.FIELDS.TYPE] === tokens.slash;
      };
      _proto.namedCombinator = function namedCombinator() {
        if (this.isNamedCombinator()) {
          var nameRaw = this.content(this.tokens[this.position + 1]);
          var name = (0, _util.unesc)(nameRaw).toLowerCase();
          var raws = {};
          if (name !== nameRaw) {
            raws.value = "/" + nameRaw + "/";
          }
          var node = new _combinator["default"]({
            value: "/" + name + "/",
            source: getSource(this.currToken[_tokenize.FIELDS.START_LINE], this.currToken[_tokenize.FIELDS.START_COL], this.tokens[this.position + 2][_tokenize.FIELDS.END_LINE], this.tokens[this.position + 2][_tokenize.FIELDS.END_COL]),
            sourceIndex: this.currToken[_tokenize.FIELDS.START_POS],
            raws
          });
          this.position = this.position + 3;
          return node;
        } else {
          this.unexpected();
        }
      };
      _proto.combinator = function combinator() {
        var _this3 = this;
        if (this.content() === "|") {
          return this.namespace();
        }
        var nextSigTokenPos = this.locateNextMeaningfulToken(this.position);
        if (nextSigTokenPos < 0 || this.tokens[nextSigTokenPos][_tokenize.FIELDS.TYPE] === tokens.comma) {
          var nodes = this.parseWhitespaceEquivalentTokens(nextSigTokenPos);
          if (nodes.length > 0) {
            var last = this.current.last;
            if (last) {
              var _this$convertWhitespa = this.convertWhitespaceNodesToSpace(nodes), space = _this$convertWhitespa.space, rawSpace = _this$convertWhitespa.rawSpace;
              if (rawSpace !== void 0) {
                last.rawSpaceAfter += rawSpace;
              }
              last.spaces.after += space;
            } else {
              nodes.forEach(function(n) {
                return _this3.newNode(n);
              });
            }
          }
          return;
        }
        var firstToken = this.currToken;
        var spaceOrDescendantSelectorNodes = void 0;
        if (nextSigTokenPos > this.position) {
          spaceOrDescendantSelectorNodes = this.parseWhitespaceEquivalentTokens(nextSigTokenPos);
        }
        var node;
        if (this.isNamedCombinator()) {
          node = this.namedCombinator();
        } else if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.combinator) {
          node = new _combinator["default"]({
            value: this.content(),
            source: getTokenSource(this.currToken),
            sourceIndex: this.currToken[_tokenize.FIELDS.START_POS]
          });
          this.position++;
        } else if (WHITESPACE_TOKENS[this.currToken[_tokenize.FIELDS.TYPE]]) {
        } else if (!spaceOrDescendantSelectorNodes) {
          this.unexpected();
        }
        if (node) {
          if (spaceOrDescendantSelectorNodes) {
            var _this$convertWhitespa2 = this.convertWhitespaceNodesToSpace(spaceOrDescendantSelectorNodes), _space = _this$convertWhitespa2.space, _rawSpace = _this$convertWhitespa2.rawSpace;
            node.spaces.before = _space;
            node.rawSpaceBefore = _rawSpace;
          }
        } else {
          var _this$convertWhitespa3 = this.convertWhitespaceNodesToSpace(spaceOrDescendantSelectorNodes, true), _space2 = _this$convertWhitespa3.space, _rawSpace2 = _this$convertWhitespa3.rawSpace;
          if (!_rawSpace2) {
            _rawSpace2 = _space2;
          }
          var spaces = {};
          var raws = {
            spaces: {}
          };
          if (_space2.endsWith(" ") && _rawSpace2.endsWith(" ")) {
            spaces.before = _space2.slice(0, _space2.length - 1);
            raws.spaces.before = _rawSpace2.slice(0, _rawSpace2.length - 1);
          } else if (_space2.startsWith(" ") && _rawSpace2.startsWith(" ")) {
            spaces.after = _space2.slice(1);
            raws.spaces.after = _rawSpace2.slice(1);
          } else {
            raws.value = _rawSpace2;
          }
          node = new _combinator["default"]({
            value: " ",
            source: getTokenSourceSpan(firstToken, this.tokens[this.position - 1]),
            sourceIndex: firstToken[_tokenize.FIELDS.START_POS],
            spaces,
            raws
          });
        }
        if (this.currToken && this.currToken[_tokenize.FIELDS.TYPE] === tokens.space) {
          node.spaces.after = this.optionalSpace(this.content());
          this.position++;
        }
        return this.newNode(node);
      };
      _proto.comma = function comma() {
        if (this.position === this.tokens.length - 1) {
          this.root.trailingComma = true;
          this.position++;
          return;
        }
        this.current._inferEndPosition();
        var selector = new _selector["default"]({
          source: {
            start: tokenStart(this.tokens[this.position + 1])
          }
        });
        this.current.parent.append(selector);
        this.current = selector;
        this.position++;
      };
      _proto.comment = function comment() {
        var current = this.currToken;
        this.newNode(new _comment["default"]({
          value: this.content(),
          source: getTokenSource(current),
          sourceIndex: current[_tokenize.FIELDS.START_POS]
        }));
        this.position++;
      };
      _proto.error = function error(message, opts) {
        throw this.root.error(message, opts);
      };
      _proto.missingBackslash = function missingBackslash() {
        return this.error("Expected a backslash preceding the semicolon.", {
          index: this.currToken[_tokenize.FIELDS.START_POS]
        });
      };
      _proto.missingParenthesis = function missingParenthesis() {
        return this.expected("opening parenthesis", this.currToken[_tokenize.FIELDS.START_POS]);
      };
      _proto.missingSquareBracket = function missingSquareBracket() {
        return this.expected("opening square bracket", this.currToken[_tokenize.FIELDS.START_POS]);
      };
      _proto.unexpected = function unexpected() {
        return this.error("Unexpected '" + this.content() + "'. Escaping special characters with \\ may help.", this.currToken[_tokenize.FIELDS.START_POS]);
      };
      _proto.unexpectedPipe = function unexpectedPipe() {
        return this.error("Unexpected '|'.", this.currToken[_tokenize.FIELDS.START_POS]);
      };
      _proto.namespace = function namespace() {
        var before = this.prevToken && this.content(this.prevToken) || true;
        if (this.nextToken[_tokenize.FIELDS.TYPE] === tokens.word) {
          this.position++;
          return this.word(before);
        } else if (this.nextToken[_tokenize.FIELDS.TYPE] === tokens.asterisk) {
          this.position++;
          return this.universal(before);
        }
        this.unexpectedPipe();
      };
      _proto.nesting = function nesting() {
        if (this.nextToken) {
          var nextContent = this.content(this.nextToken);
          if (nextContent === "|") {
            this.position++;
            return;
          }
        }
        var current = this.currToken;
        this.newNode(new _nesting["default"]({
          value: this.content(),
          source: getTokenSource(current),
          sourceIndex: current[_tokenize.FIELDS.START_POS]
        }));
        this.position++;
      };
      _proto.parentheses = function parentheses() {
        var last = this.current.last;
        var unbalanced = 1;
        this.position++;
        if (last && last.type === types.PSEUDO) {
          var selector = new _selector["default"]({
            source: {
              start: tokenStart(this.tokens[this.position - 1])
            }
          });
          var cache = this.current;
          last.append(selector);
          this.current = selector;
          while (this.position < this.tokens.length && unbalanced) {
            if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.openParenthesis) {
              unbalanced++;
            }
            if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.closeParenthesis) {
              unbalanced--;
            }
            if (unbalanced) {
              this.parse();
            } else {
              this.current.source.end = tokenEnd(this.currToken);
              this.current.parent.source.end = tokenEnd(this.currToken);
              this.position++;
            }
          }
          this.current = cache;
        } else {
          var parenStart = this.currToken;
          var parenValue = "(";
          var parenEnd;
          while (this.position < this.tokens.length && unbalanced) {
            if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.openParenthesis) {
              unbalanced++;
            }
            if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.closeParenthesis) {
              unbalanced--;
            }
            parenEnd = this.currToken;
            parenValue += this.parseParenthesisToken(this.currToken);
            this.position++;
          }
          if (last) {
            last.appendToPropertyAndEscape("value", parenValue, parenValue);
          } else {
            this.newNode(new _string["default"]({
              value: parenValue,
              source: getSource(parenStart[_tokenize.FIELDS.START_LINE], parenStart[_tokenize.FIELDS.START_COL], parenEnd[_tokenize.FIELDS.END_LINE], parenEnd[_tokenize.FIELDS.END_COL]),
              sourceIndex: parenStart[_tokenize.FIELDS.START_POS]
            }));
          }
        }
        if (unbalanced) {
          return this.expected("closing parenthesis", this.currToken[_tokenize.FIELDS.START_POS]);
        }
      };
      _proto.pseudo = function pseudo() {
        var _this4 = this;
        var pseudoStr = "";
        var startingToken = this.currToken;
        while (this.currToken && this.currToken[_tokenize.FIELDS.TYPE] === tokens.colon) {
          pseudoStr += this.content();
          this.position++;
        }
        if (!this.currToken) {
          return this.expected(["pseudo-class", "pseudo-element"], this.position - 1);
        }
        if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.word) {
          this.splitWord(false, function(first, length) {
            pseudoStr += first;
            _this4.newNode(new _pseudo["default"]({
              value: pseudoStr,
              source: getTokenSourceSpan(startingToken, _this4.currToken),
              sourceIndex: startingToken[_tokenize.FIELDS.START_POS]
            }));
            if (length > 1 && _this4.nextToken && _this4.nextToken[_tokenize.FIELDS.TYPE] === tokens.openParenthesis) {
              _this4.error("Misplaced parenthesis.", {
                index: _this4.nextToken[_tokenize.FIELDS.START_POS]
              });
            }
          });
        } else {
          return this.expected(["pseudo-class", "pseudo-element"], this.currToken[_tokenize.FIELDS.START_POS]);
        }
      };
      _proto.space = function space() {
        var content = this.content();
        if (this.position === 0 || this.prevToken[_tokenize.FIELDS.TYPE] === tokens.comma || this.prevToken[_tokenize.FIELDS.TYPE] === tokens.openParenthesis || this.current.nodes.every(function(node) {
          return node.type === "comment";
        })) {
          this.spaces = this.optionalSpace(content);
          this.position++;
        } else if (this.position === this.tokens.length - 1 || this.nextToken[_tokenize.FIELDS.TYPE] === tokens.comma || this.nextToken[_tokenize.FIELDS.TYPE] === tokens.closeParenthesis) {
          this.current.last.spaces.after = this.optionalSpace(content);
          this.position++;
        } else {
          this.combinator();
        }
      };
      _proto.string = function string() {
        var current = this.currToken;
        this.newNode(new _string["default"]({
          value: this.content(),
          source: getTokenSource(current),
          sourceIndex: current[_tokenize.FIELDS.START_POS]
        }));
        this.position++;
      };
      _proto.universal = function universal(namespace) {
        var nextToken = this.nextToken;
        if (nextToken && this.content(nextToken) === "|") {
          this.position++;
          return this.namespace();
        }
        var current = this.currToken;
        this.newNode(new _universal["default"]({
          value: this.content(),
          source: getTokenSource(current),
          sourceIndex: current[_tokenize.FIELDS.START_POS]
        }), namespace);
        this.position++;
      };
      _proto.splitWord = function splitWord(namespace, firstCallback) {
        var _this5 = this;
        var nextToken = this.nextToken;
        var word = this.content();
        while (nextToken && ~[tokens.dollar, tokens.caret, tokens.equals, tokens.word].indexOf(nextToken[_tokenize.FIELDS.TYPE])) {
          this.position++;
          var current = this.content();
          word += current;
          if (current.lastIndexOf("\\") === current.length - 1) {
            var next = this.nextToken;
            if (next && next[_tokenize.FIELDS.TYPE] === tokens.space) {
              word += this.requiredSpace(this.content(next));
              this.position++;
            }
          }
          nextToken = this.nextToken;
        }
        var hasClass = indexesOf(word, ".").filter(function(i) {
          var escapedDot = word[i - 1] === "\\";
          var isKeyframesPercent = /^\d+\.\d+%$/.test(word);
          return !escapedDot && !isKeyframesPercent;
        });
        var hasId = indexesOf(word, "#").filter(function(i) {
          return word[i - 1] !== "\\";
        });
        var interpolations = indexesOf(word, "#{");
        if (interpolations.length) {
          hasId = hasId.filter(function(hashIndex) {
            return !~interpolations.indexOf(hashIndex);
          });
        }
        var indices = (0, _sortAscending["default"])(uniqs([0].concat(hasClass, hasId)));
        indices.forEach(function(ind, i) {
          var index = indices[i + 1] || word.length;
          var value = word.slice(ind, index);
          if (i === 0 && firstCallback) {
            return firstCallback.call(_this5, value, indices.length);
          }
          var node;
          var current2 = _this5.currToken;
          var sourceIndex = current2[_tokenize.FIELDS.START_POS] + indices[i];
          var source = getSource(current2[1], current2[2] + ind, current2[3], current2[2] + (index - 1));
          if (~hasClass.indexOf(ind)) {
            var classNameOpts = {
              value: value.slice(1),
              source,
              sourceIndex
            };
            node = new _className["default"](unescapeProp(classNameOpts, "value"));
          } else if (~hasId.indexOf(ind)) {
            var idOpts = {
              value: value.slice(1),
              source,
              sourceIndex
            };
            node = new _id["default"](unescapeProp(idOpts, "value"));
          } else {
            var tagOpts = {
              value,
              source,
              sourceIndex
            };
            unescapeProp(tagOpts, "value");
            node = new _tag["default"](tagOpts);
          }
          _this5.newNode(node, namespace);
          namespace = null;
        });
        this.position++;
      };
      _proto.word = function word(namespace) {
        var nextToken = this.nextToken;
        if (nextToken && this.content(nextToken) === "|") {
          this.position++;
          return this.namespace();
        }
        return this.splitWord(namespace);
      };
      _proto.loop = function loop() {
        while (this.position < this.tokens.length) {
          this.parse(true);
        }
        this.current._inferEndPosition();
        return this.root;
      };
      _proto.parse = function parse(throwOnParenthesis) {
        switch (this.currToken[_tokenize.FIELDS.TYPE]) {
          case tokens.space:
            this.space();
            break;
          case tokens.comment:
            this.comment();
            break;
          case tokens.openParenthesis:
            this.parentheses();
            break;
          case tokens.closeParenthesis:
            if (throwOnParenthesis) {
              this.missingParenthesis();
            }
            break;
          case tokens.openSquare:
            this.attribute();
            break;
          case tokens.dollar:
          case tokens.caret:
          case tokens.equals:
          case tokens.word:
            this.word();
            break;
          case tokens.colon:
            this.pseudo();
            break;
          case tokens.comma:
            this.comma();
            break;
          case tokens.asterisk:
            this.universal();
            break;
          case tokens.ampersand:
            this.nesting();
            break;
          case tokens.slash:
          case tokens.combinator:
            this.combinator();
            break;
          case tokens.str:
            this.string();
            break;
          case tokens.closeSquare:
            this.missingSquareBracket();
          case tokens.semicolon:
            this.missingBackslash();
          default:
            this.unexpected();
        }
      };
      _proto.expected = function expected(description, index, found) {
        if (Array.isArray(description)) {
          var last = description.pop();
          description = description.join(", ") + " or " + last;
        }
        var an = /^[aeiou]/.test(description[0]) ? "an" : "a";
        if (!found) {
          return this.error("Expected " + an + " " + description + ".", {
            index
          });
        }
        return this.error("Expected " + an + " " + description + ', found "' + found + '" instead.', {
          index
        });
      };
      _proto.requiredSpace = function requiredSpace(space) {
        return this.options.lossy ? " " : space;
      };
      _proto.optionalSpace = function optionalSpace(space) {
        return this.options.lossy ? "" : space;
      };
      _proto.lossySpace = function lossySpace(space, required) {
        if (this.options.lossy) {
          return required ? " " : "";
        } else {
          return space;
        }
      };
      _proto.parseParenthesisToken = function parseParenthesisToken(token) {
        var content = this.content(token);
        if (token[_tokenize.FIELDS.TYPE] === tokens.space) {
          return this.requiredSpace(content);
        } else {
          return content;
        }
      };
      _proto.newNode = function newNode(node, namespace) {
        if (namespace) {
          if (/^ +$/.test(namespace)) {
            if (!this.options.lossy) {
              this.spaces = (this.spaces || "") + namespace;
            }
            namespace = true;
          }
          node.namespace = namespace;
          unescapeProp(node, "namespace");
        }
        if (this.spaces) {
          node.spaces.before = this.spaces;
          this.spaces = "";
        }
        return this.current.append(node);
      };
      _proto.content = function content(token) {
        if (token === void 0) {
          token = this.currToken;
        }
        return this.css.slice(token[_tokenize.FIELDS.START_POS], token[_tokenize.FIELDS.END_POS]);
      };
      _proto.locateNextMeaningfulToken = function locateNextMeaningfulToken(startPosition) {
        if (startPosition === void 0) {
          startPosition = this.position + 1;
        }
        var searchPosition = startPosition;
        while (searchPosition < this.tokens.length) {
          if (WHITESPACE_EQUIV_TOKENS[this.tokens[searchPosition][_tokenize.FIELDS.TYPE]]) {
            searchPosition++;
            continue;
          } else {
            return searchPosition;
          }
        }
        return -1;
      };
      _createClass(Parser2, [{
        key: "currToken",
        get: function get() {
          return this.tokens[this.position];
        }
      }, {
        key: "nextToken",
        get: function get() {
          return this.tokens[this.position + 1];
        }
      }, {
        key: "prevToken",
        get: function get() {
          return this.tokens[this.position - 1];
        }
      }]);
      return Parser2;
    }();
    exports["default"] = Parser;
    module2.exports = exports.default;
  }
});

// node_modules/postcss-selector-parser/dist/processor.js
var require_processor2 = __commonJS({
  "node_modules/postcss-selector-parser/dist/processor.js"(exports, module2) {
    "use strict";
    exports.__esModule = true;
    exports["default"] = void 0;
    var _parser = _interopRequireDefault(require_parser5());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    var Processor = /* @__PURE__ */ function() {
      function Processor2(func, options) {
        this.func = func || function noop() {
        };
        this.funcRes = null;
        this.options = options;
      }
      var _proto = Processor2.prototype;
      _proto._shouldUpdateSelector = function _shouldUpdateSelector(rule, options) {
        if (options === void 0) {
          options = {};
        }
        var merged = Object.assign({}, this.options, options);
        if (merged.updateSelector === false) {
          return false;
        } else {
          return typeof rule !== "string";
        }
      };
      _proto._isLossy = function _isLossy(options) {
        if (options === void 0) {
          options = {};
        }
        var merged = Object.assign({}, this.options, options);
        if (merged.lossless === false) {
          return true;
        } else {
          return false;
        }
      };
      _proto._root = function _root(rule, options) {
        if (options === void 0) {
          options = {};
        }
        var parser = new _parser["default"](rule, this._parseOptions(options));
        return parser.root;
      };
      _proto._parseOptions = function _parseOptions(options) {
        return {
          lossy: this._isLossy(options)
        };
      };
      _proto._run = function _run(rule, options) {
        var _this = this;
        if (options === void 0) {
          options = {};
        }
        return new Promise(function(resolve, reject) {
          try {
            var root = _this._root(rule, options);
            Promise.resolve(_this.func(root)).then(function(transform2) {
              var string = void 0;
              if (_this._shouldUpdateSelector(rule, options)) {
                string = root.toString();
                rule.selector = string;
              }
              return {
                transform: transform2,
                root,
                string
              };
            }).then(resolve, reject);
          } catch (e) {
            reject(e);
            return;
          }
        });
      };
      _proto._runSync = function _runSync(rule, options) {
        if (options === void 0) {
          options = {};
        }
        var root = this._root(rule, options);
        var transform2 = this.func(root);
        if (transform2 && typeof transform2.then === "function") {
          throw new Error("Selector processor returned a promise to a synchronous call.");
        }
        var string = void 0;
        if (options.updateSelector && typeof rule !== "string") {
          string = root.toString();
          rule.selector = string;
        }
        return {
          transform: transform2,
          root,
          string
        };
      };
      _proto.ast = function ast(rule, options) {
        return this._run(rule, options).then(function(result) {
          return result.root;
        });
      };
      _proto.astSync = function astSync(rule, options) {
        return this._runSync(rule, options).root;
      };
      _proto.transform = function transform2(rule, options) {
        return this._run(rule, options).then(function(result) {
          return result.transform;
        });
      };
      _proto.transformSync = function transformSync(rule, options) {
        return this._runSync(rule, options).transform;
      };
      _proto.process = function process2(rule, options) {
        return this._run(rule, options).then(function(result) {
          return result.string || result.root.toString();
        });
      };
      _proto.processSync = function processSync(rule, options) {
        var result = this._runSync(rule, options);
        return result.string || result.root.toString();
      };
      return Processor2;
    }();
    exports["default"] = Processor;
    module2.exports = exports.default;
  }
});

// node_modules/postcss-selector-parser/dist/selectors/constructors.js
var require_constructors = __commonJS({
  "node_modules/postcss-selector-parser/dist/selectors/constructors.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.universal = exports.tag = exports.string = exports.selector = exports.root = exports.pseudo = exports.nesting = exports.id = exports.comment = exports.combinator = exports.className = exports.attribute = void 0;
    var _attribute = _interopRequireDefault(require_attribute());
    var _className = _interopRequireDefault(require_className());
    var _combinator = _interopRequireDefault(require_combinator());
    var _comment = _interopRequireDefault(require_comment2());
    var _id = _interopRequireDefault(require_id());
    var _nesting = _interopRequireDefault(require_nesting());
    var _pseudo = _interopRequireDefault(require_pseudo3());
    var _root = _interopRequireDefault(require_root2());
    var _selector = _interopRequireDefault(require_selector3());
    var _string = _interopRequireDefault(require_string3());
    var _tag = _interopRequireDefault(require_tag());
    var _universal = _interopRequireDefault(require_universal());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    var attribute = function attribute2(opts) {
      return new _attribute["default"](opts);
    };
    exports.attribute = attribute;
    var className = function className2(opts) {
      return new _className["default"](opts);
    };
    exports.className = className;
    var combinator = function combinator2(opts) {
      return new _combinator["default"](opts);
    };
    exports.combinator = combinator;
    var comment = function comment2(opts) {
      return new _comment["default"](opts);
    };
    exports.comment = comment;
    var id = function id2(opts) {
      return new _id["default"](opts);
    };
    exports.id = id;
    var nesting = function nesting2(opts) {
      return new _nesting["default"](opts);
    };
    exports.nesting = nesting;
    var pseudo = function pseudo2(opts) {
      return new _pseudo["default"](opts);
    };
    exports.pseudo = pseudo;
    var root = function root2(opts) {
      return new _root["default"](opts);
    };
    exports.root = root;
    var selector = function selector2(opts) {
      return new _selector["default"](opts);
    };
    exports.selector = selector;
    var string = function string2(opts) {
      return new _string["default"](opts);
    };
    exports.string = string;
    var tag = function tag2(opts) {
      return new _tag["default"](opts);
    };
    exports.tag = tag;
    var universal = function universal2(opts) {
      return new _universal["default"](opts);
    };
    exports.universal = universal;
  }
});

// node_modules/postcss-selector-parser/dist/selectors/guards.js
var require_guards = __commonJS({
  "node_modules/postcss-selector-parser/dist/selectors/guards.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.isComment = exports.isCombinator = exports.isClassName = exports.isAttribute = void 0;
    exports.isContainer = isContainer;
    exports.isIdentifier = void 0;
    exports.isNamespace = isNamespace;
    exports.isNesting = void 0;
    exports.isNode = isNode;
    exports.isPseudo = void 0;
    exports.isPseudoClass = isPseudoClass;
    exports.isPseudoElement = isPseudoElement;
    exports.isUniversal = exports.isTag = exports.isString = exports.isSelector = exports.isRoot = void 0;
    var _types = require_types4();
    var _IS_TYPE;
    var IS_TYPE = (_IS_TYPE = {}, _IS_TYPE[_types.ATTRIBUTE] = true, _IS_TYPE[_types.CLASS] = true, _IS_TYPE[_types.COMBINATOR] = true, _IS_TYPE[_types.COMMENT] = true, _IS_TYPE[_types.ID] = true, _IS_TYPE[_types.NESTING] = true, _IS_TYPE[_types.PSEUDO] = true, _IS_TYPE[_types.ROOT] = true, _IS_TYPE[_types.SELECTOR] = true, _IS_TYPE[_types.STRING] = true, _IS_TYPE[_types.TAG] = true, _IS_TYPE[_types.UNIVERSAL] = true, _IS_TYPE);
    function isNode(node) {
      return typeof node === "object" && IS_TYPE[node.type];
    }
    function isNodeType(type, node) {
      return isNode(node) && node.type === type;
    }
    var isAttribute = isNodeType.bind(null, _types.ATTRIBUTE);
    exports.isAttribute = isAttribute;
    var isClassName = isNodeType.bind(null, _types.CLASS);
    exports.isClassName = isClassName;
    var isCombinator = isNodeType.bind(null, _types.COMBINATOR);
    exports.isCombinator = isCombinator;
    var isComment = isNodeType.bind(null, _types.COMMENT);
    exports.isComment = isComment;
    var isIdentifier = isNodeType.bind(null, _types.ID);
    exports.isIdentifier = isIdentifier;
    var isNesting = isNodeType.bind(null, _types.NESTING);
    exports.isNesting = isNesting;
    var isPseudo = isNodeType.bind(null, _types.PSEUDO);
    exports.isPseudo = isPseudo;
    var isRoot = isNodeType.bind(null, _types.ROOT);
    exports.isRoot = isRoot;
    var isSelector = isNodeType.bind(null, _types.SELECTOR);
    exports.isSelector = isSelector;
    var isString = isNodeType.bind(null, _types.STRING);
    exports.isString = isString;
    var isTag = isNodeType.bind(null, _types.TAG);
    exports.isTag = isTag;
    var isUniversal = isNodeType.bind(null, _types.UNIVERSAL);
    exports.isUniversal = isUniversal;
    function isPseudoElement(node) {
      return isPseudo(node) && node.value && (node.value.startsWith("::") || node.value.toLowerCase() === ":before" || node.value.toLowerCase() === ":after" || node.value.toLowerCase() === ":first-letter" || node.value.toLowerCase() === ":first-line");
    }
    function isPseudoClass(node) {
      return isPseudo(node) && !isPseudoElement(node);
    }
    function isContainer(node) {
      return !!(isNode(node) && node.walk);
    }
    function isNamespace(node) {
      return isAttribute(node) || isTag(node);
    }
  }
});

// node_modules/postcss-selector-parser/dist/selectors/index.js
var require_selectors = __commonJS({
  "node_modules/postcss-selector-parser/dist/selectors/index.js"(exports) {
    "use strict";
    exports.__esModule = true;
    var _types = require_types4();
    Object.keys(_types).forEach(function(key) {
      if (key === "default" || key === "__esModule")
        return;
      if (key in exports && exports[key] === _types[key])
        return;
      exports[key] = _types[key];
    });
    var _constructors = require_constructors();
    Object.keys(_constructors).forEach(function(key) {
      if (key === "default" || key === "__esModule")
        return;
      if (key in exports && exports[key] === _constructors[key])
        return;
      exports[key] = _constructors[key];
    });
    var _guards = require_guards();
    Object.keys(_guards).forEach(function(key) {
      if (key === "default" || key === "__esModule")
        return;
      if (key in exports && exports[key] === _guards[key])
        return;
      exports[key] = _guards[key];
    });
  }
});

// node_modules/postcss-selector-parser/dist/index.js
var require_dist3 = __commonJS({
  "node_modules/postcss-selector-parser/dist/index.js"(exports, module2) {
    "use strict";
    exports.__esModule = true;
    exports["default"] = void 0;
    var _processor = _interopRequireDefault(require_processor2());
    var selectors = _interopRequireWildcard(require_selectors());
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    var parser = function parser2(processor) {
      return new _processor["default"](processor);
    };
    Object.assign(parser, selectors);
    delete parser.__esModule;
    var _default = parser;
    exports["default"] = _default;
    module2.exports = exports.default;
  }
});

// node_modules/postcss-calc/src/parser.js
var require_parser6 = __commonJS({
  "node_modules/postcss-calc/src/parser.js"(exports) {
    var parser = function() {
      function JisonParserError(msg, hash) {
        Object.defineProperty(this, "name", {
          enumerable: false,
          writable: false,
          value: "JisonParserError"
        });
        if (msg == null)
          msg = "???";
        Object.defineProperty(this, "message", {
          enumerable: false,
          writable: true,
          value: msg
        });
        this.hash = hash;
        var stacktrace;
        if (hash && hash.exception instanceof Error) {
          var ex2 = hash.exception;
          this.message = ex2.message || msg;
          stacktrace = ex2.stack;
        }
        if (!stacktrace) {
          if (Error.hasOwnProperty("captureStackTrace")) {
            Error.captureStackTrace(this, this.constructor);
          } else {
            stacktrace = new Error(msg).stack;
          }
        }
        if (stacktrace) {
          Object.defineProperty(this, "stack", {
            enumerable: false,
            writable: false,
            value: stacktrace
          });
        }
      }
      if (typeof Object.setPrototypeOf === "function") {
        Object.setPrototypeOf(JisonParserError.prototype, Error.prototype);
      } else {
        JisonParserError.prototype = Object.create(Error.prototype);
      }
      JisonParserError.prototype.constructor = JisonParserError;
      JisonParserError.prototype.name = "JisonParserError";
      function bp(s2) {
        var rv = [];
        var p = s2.pop;
        var r = s2.rule;
        for (var i = 0, l = p.length; i < l; i++) {
          rv.push([
            p[i],
            r[i]
          ]);
        }
        return rv;
      }
      function bda(s2) {
        var rv = {};
        var d = s2.idx;
        var g = s2.goto;
        for (var i = 0, l = d.length; i < l; i++) {
          var j = d[i];
          rv[j] = g[i];
        }
        return rv;
      }
      function bt(s2) {
        var rv = [];
        var d = s2.len;
        var y = s2.symbol;
        var t = s2.type;
        var a = s2.state;
        var m = s2.mode;
        var g = s2.goto;
        for (var i = 0, l = d.length; i < l; i++) {
          var n = d[i];
          var q = {};
          for (var j = 0; j < n; j++) {
            var z = y.shift();
            switch (t.shift()) {
              case 2:
                q[z] = [
                  m.shift(),
                  g.shift()
                ];
                break;
              case 0:
                q[z] = a.shift();
                break;
              default:
                q[z] = [
                  3
                ];
            }
          }
          rv.push(q);
        }
        return rv;
      }
      function s(c2, l, a) {
        a = a || 0;
        for (var i = 0; i < l; i++) {
          this.push(c2);
          c2 += a;
        }
      }
      function c(i, l) {
        i = this.length - i;
        for (l += i; i < l; i++) {
          this.push(this[i]);
        }
      }
      function u(a) {
        var rv = [];
        for (var i = 0, l = a.length; i < l; i++) {
          var e = a[i];
          if (typeof e === "function") {
            i++;
            e.apply(rv, a[i]);
          } else {
            rv.push(e);
          }
        }
        return rv;
      }
      var parser2 = {
        // Code Generator Information Report
        // ---------------------------------
        //
        // Options:
        //
        //   default action mode: ............. ["classic","merge"]
        //   test-compile action mode: ........ "parser:*,lexer:*"
        //   try..catch: ...................... true
        //   default resolve on conflict: ..... true
        //   on-demand look-ahead: ............ false
        //   error recovery token skip maximum: 3
        //   yyerror in parse actions is: ..... NOT recoverable,
        //   yyerror in lexer actions and other non-fatal lexer are:
        //   .................................. NOT recoverable,
        //   debug grammar/output: ............ false
        //   has partial LR conflict upgrade:   true
        //   rudimentary token-stack support:   false
        //   parser table compression mode: ... 2
        //   export debug tables: ............. false
        //   export *all* tables: ............. false
        //   module type: ..................... commonjs
        //   parser engine type: .............. lalr
        //   output main() in the module: ..... true
        //   has user-specified main(): ....... false
        //   has user-specified require()/import modules for main():
        //   .................................. false
        //   number of expected conflicts: .... 0
        //
        //
        // Parser Analysis flags:
        //
        //   no significant actions (parser is a language matcher only):
        //   .................................. false
        //   uses yyleng: ..................... false
        //   uses yylineno: ................... false
        //   uses yytext: ..................... false
        //   uses yylloc: ..................... false
        //   uses ParseError API: ............. false
        //   uses YYERROR: .................... false
        //   uses YYRECOVERING: ............... false
        //   uses YYERROK: .................... false
        //   uses YYCLEARIN: .................. false
        //   tracks rule values: .............. true
        //   assigns rule values: ............. true
        //   uses location tracking: .......... false
        //   assigns location: ................ false
        //   uses yystack: .................... false
        //   uses yysstack: ................... false
        //   uses yysp: ....................... true
        //   uses yyrulelength: ............... false
        //   uses yyMergeLocationInfo API: .... false
        //   has error recovery: .............. false
        //   has error reporting: ............. false
        //
        // --------- END OF REPORT -----------
        trace: function no_op_trace() {
        },
        JisonParserError,
        yy: {},
        options: {
          type: "lalr",
          hasPartialLrUpgradeOnConflict: true,
          errorRecoveryTokenDiscardCount: 3
        },
        symbols_: {
          "$accept": 0,
          "$end": 1,
          "ADD": 6,
          "ANGLE": 12,
          "CALC": 3,
          "CHS": 19,
          "DIV": 9,
          "EMS": 17,
          "EOF": 1,
          "EXS": 18,
          "FREQ": 14,
          "FUNCTION": 10,
          "LENGTH": 11,
          "LPAREN": 4,
          "MUL": 8,
          "NUMBER": 26,
          "PERCENTAGE": 25,
          "REMS": 20,
          "RES": 15,
          "RPAREN": 5,
          "SUB": 7,
          "TIME": 13,
          "UNKNOWN_DIMENSION": 16,
          "VHS": 21,
          "VMAXS": 24,
          "VMINS": 23,
          "VWS": 22,
          "dimension": 30,
          "error": 2,
          "expression": 27,
          "function": 29,
          "math_expression": 28,
          "number": 31
        },
        terminals_: {
          1: "EOF",
          2: "error",
          3: "CALC",
          4: "LPAREN",
          5: "RPAREN",
          6: "ADD",
          7: "SUB",
          8: "MUL",
          9: "DIV",
          10: "FUNCTION",
          11: "LENGTH",
          12: "ANGLE",
          13: "TIME",
          14: "FREQ",
          15: "RES",
          16: "UNKNOWN_DIMENSION",
          17: "EMS",
          18: "EXS",
          19: "CHS",
          20: "REMS",
          21: "VHS",
          22: "VWS",
          23: "VMINS",
          24: "VMAXS",
          25: "PERCENTAGE",
          26: "NUMBER"
        },
        TERROR: 2,
        EOF: 1,
        // internals: defined here so the object *structure* doesn't get modified by parse() et al,
        // thus helping JIT compilers like Chrome V8.
        originalQuoteName: null,
        originalParseError: null,
        cleanupAfterParse: null,
        constructParseErrorInfo: null,
        yyMergeLocationInfo: null,
        __reentrant_call_depth: 0,
        // INTERNAL USE ONLY
        __error_infos: [],
        // INTERNAL USE ONLY: the set of parseErrorInfo objects created since the last cleanup
        __error_recovery_infos: [],
        // INTERNAL USE ONLY: the set of parseErrorInfo objects created since the last cleanup
        // APIs which will be set up depending on user action code analysis:
        //yyRecovering: 0,
        //yyErrOk: 0,
        //yyClearIn: 0,
        // Helper APIs
        // -----------
        // Helper function which can be overridden by user code later on: put suitable quotes around
        // literal IDs in a description string.
        quoteName: function parser_quoteName(id_str) {
          return '"' + id_str + '"';
        },
        // Return the name of the given symbol (terminal or non-terminal) as a string, when available.
        //
        // Return NULL when the symbol is unknown to the parser.
        getSymbolName: function parser_getSymbolName(symbol) {
          if (this.terminals_[symbol]) {
            return this.terminals_[symbol];
          }
          var s2 = this.symbols_;
          for (var key in s2) {
            if (s2[key] === symbol) {
              return key;
            }
          }
          return null;
        },
        // Return a more-or-less human-readable description of the given symbol, when available,
        // or the symbol itself, serving as its own 'description' for lack of something better to serve up.
        //
        // Return NULL when the symbol is unknown to the parser.
        describeSymbol: function parser_describeSymbol(symbol) {
          if (symbol !== this.EOF && this.terminal_descriptions_ && this.terminal_descriptions_[symbol]) {
            return this.terminal_descriptions_[symbol];
          } else if (symbol === this.EOF) {
            return "end of input";
          }
          var id = this.getSymbolName(symbol);
          if (id) {
            return this.quoteName(id);
          }
          return null;
        },
        // Produce a (more or less) human-readable list of expected tokens at the point of failure.
        //
        // The produced list may contain token or token set descriptions instead of the tokens
        // themselves to help turning this output into something that easier to read by humans
        // unless `do_not_describe` parameter is set, in which case a list of the raw, *numeric*,
        // expected terminals and nonterminals is produced.
        //
        // The returned list (array) will not contain any duplicate entries.
        collect_expected_token_set: function parser_collect_expected_token_set(state, do_not_describe) {
          var TERROR = this.TERROR;
          var tokenset = [];
          var check = {};
          if (!do_not_describe && this.state_descriptions_ && this.state_descriptions_[state]) {
            return [
              this.state_descriptions_[state]
            ];
          }
          for (var p in this.table[state]) {
            p = +p;
            if (p !== TERROR) {
              var d = do_not_describe ? p : this.describeSymbol(p);
              if (d && !check[d]) {
                tokenset.push(d);
                check[d] = true;
              }
            }
          }
          return tokenset;
        },
        productions_: bp({
          pop: u([
            27,
            s,
            [28, 9],
            29,
            s,
            [30, 17],
            s,
            [31, 3]
          ]),
          rule: u([
            2,
            4,
            s,
            [3, 5],
            s,
            [1, 19],
            2,
            2,
            c,
            [3, 3]
          ])
        }),
        performAction: function parser__PerformAction(yystate, yysp, yyvstack) {
          var yy = this.yy;
          var yyparser = yy.parser;
          var yylexer = yy.lexer;
          switch (yystate) {
            case 0:
              this.$ = yyvstack[yysp - 1];
              break;
            case 1:
              this.$ = yyvstack[yysp - 1];
              return yyvstack[yysp - 1];
              break;
            case 2:
              this.$ = yyvstack[yysp - 1];
              break;
            case 3:
            case 4:
            case 5:
            case 6:
              this.$ = { type: "MathExpression", operator: yyvstack[yysp - 1], left: yyvstack[yysp - 2], right: yyvstack[yysp] };
              break;
            case 7:
              this.$ = { type: "ParenthesizedExpression", content: yyvstack[yysp - 1] };
              break;
            case 8:
            case 9:
            case 10:
              this.$ = yyvstack[yysp];
              break;
            case 11:
              this.$ = { type: "Function", value: yyvstack[yysp] };
              break;
            case 12:
              this.$ = { type: "LengthValue", value: parseFloat(yyvstack[yysp]), unit: /[a-z]+$/i.exec(yyvstack[yysp])[0] };
              break;
            case 13:
              this.$ = { type: "AngleValue", value: parseFloat(yyvstack[yysp]), unit: /[a-z]+$/i.exec(yyvstack[yysp])[0] };
              break;
            case 14:
              this.$ = { type: "TimeValue", value: parseFloat(yyvstack[yysp]), unit: /[a-z]+$/i.exec(yyvstack[yysp])[0] };
              break;
            case 15:
              this.$ = { type: "FrequencyValue", value: parseFloat(yyvstack[yysp]), unit: /[a-z]+$/i.exec(yyvstack[yysp])[0] };
              break;
            case 16:
              this.$ = { type: "ResolutionValue", value: parseFloat(yyvstack[yysp]), unit: /[a-z]+$/i.exec(yyvstack[yysp])[0] };
              break;
            case 17:
              this.$ = { type: "UnknownDimension", value: parseFloat(yyvstack[yysp]), unit: /[a-z]+$/i.exec(yyvstack[yysp])[0] };
              break;
            case 18:
              this.$ = { type: "EmValue", value: parseFloat(yyvstack[yysp]), unit: "em" };
              break;
            case 19:
              this.$ = { type: "ExValue", value: parseFloat(yyvstack[yysp]), unit: "ex" };
              break;
            case 20:
              this.$ = { type: "ChValue", value: parseFloat(yyvstack[yysp]), unit: "ch" };
              break;
            case 21:
              this.$ = { type: "RemValue", value: parseFloat(yyvstack[yysp]), unit: "rem" };
              break;
            case 22:
              this.$ = { type: "VhValue", value: parseFloat(yyvstack[yysp]), unit: "vh" };
              break;
            case 23:
              this.$ = { type: "VwValue", value: parseFloat(yyvstack[yysp]), unit: "vw" };
              break;
            case 24:
              this.$ = { type: "VminValue", value: parseFloat(yyvstack[yysp]), unit: "vmin" };
              break;
            case 25:
              this.$ = { type: "VmaxValue", value: parseFloat(yyvstack[yysp]), unit: "vmax" };
              break;
            case 26:
              this.$ = { type: "PercentageValue", value: parseFloat(yyvstack[yysp]), unit: "%" };
              break;
            case 27:
              var prev = yyvstack[yysp];
              this.$ = prev;
              break;
            case 28:
              var prev = yyvstack[yysp];
              prev.value *= -1;
              this.$ = prev;
              break;
            case 29:
            case 30:
              this.$ = { type: "Number", value: parseFloat(yyvstack[yysp]) };
              break;
            case 31:
              this.$ = { type: "Number", value: parseFloat(yyvstack[yysp]) * -1 };
              break;
          }
        },
        table: bt({
          len: u([
            26,
            1,
            5,
            1,
            25,
            s,
            [0, 19],
            19,
            19,
            0,
            0,
            s,
            [25, 5],
            5,
            0,
            0,
            18,
            18,
            0,
            0,
            6,
            6,
            0,
            0,
            c,
            [11, 3]
          ]),
          symbol: u([
            3,
            4,
            6,
            7,
            s,
            [10, 22, 1],
            1,
            1,
            s,
            [6, 4, 1],
            4,
            c,
            [33, 21],
            c,
            [32, 4],
            6,
            7,
            c,
            [22, 16],
            30,
            c,
            [19, 19],
            c,
            [63, 25],
            c,
            [25, 100],
            s,
            [5, 5, 1],
            c,
            [149, 17],
            c,
            [167, 18],
            30,
            1,
            c,
            [42, 5],
            c,
            [6, 6],
            c,
            [5, 5]
          ]),
          type: u([
            s,
            [2, 21],
            s,
            [0, 5],
            1,
            s,
            [2, 27],
            s,
            [0, 4],
            c,
            [22, 19],
            c,
            [19, 37],
            c,
            [63, 25],
            c,
            [25, 103],
            c,
            [148, 19],
            c,
            [18, 18]
          ]),
          state: u([
            1,
            2,
            5,
            6,
            7,
            33,
            c,
            [4, 3],
            34,
            38,
            40,
            c,
            [6, 3],
            41,
            c,
            [4, 3],
            42,
            c,
            [4, 3],
            43,
            c,
            [4, 3],
            44,
            c,
            [22, 5]
          ]),
          mode: u([
            s,
            [1, 228],
            s,
            [2, 4],
            c,
            [6, 8],
            s,
            [1, 5]
          ]),
          goto: u([
            3,
            4,
            24,
            25,
            s,
            [8, 16, 1],
            s,
            [26, 7, 1],
            c,
            [27, 21],
            36,
            37,
            c,
            [18, 15],
            35,
            c,
            [18, 17],
            39,
            c,
            [57, 21],
            c,
            [21, 84],
            45,
            c,
            [168, 4],
            c,
            [128, 17],
            c,
            [17, 17],
            s,
            [3, 4],
            30,
            31,
            s,
            [4, 4],
            30,
            31,
            46,
            c,
            [51, 4]
          ])
        }),
        defaultActions: bda({
          idx: u([
            s,
            [5, 19, 1],
            26,
            27,
            34,
            35,
            38,
            39,
            42,
            43,
            45,
            46
          ]),
          goto: u([
            s,
            [8, 19, 1],
            29,
            1,
            27,
            30,
            28,
            31,
            5,
            6,
            7,
            2
          ])
        }),
        parseError: function parseError(str, hash, ExceptionClass) {
          if (hash.recoverable) {
            if (typeof this.trace === "function") {
              this.trace(str);
            }
            hash.destroy();
          } else {
            if (typeof this.trace === "function") {
              this.trace(str);
            }
            if (!ExceptionClass) {
              ExceptionClass = this.JisonParserError;
            }
            throw new ExceptionClass(str, hash);
          }
        },
        parse: function parse(input) {
          var self2 = this;
          var stack = new Array(128);
          var sstack = new Array(128);
          var vstack = new Array(128);
          var table = this.table;
          var sp = 0;
          var symbol = 0;
          var TERROR = this.TERROR;
          var EOF = this.EOF;
          var ERROR_RECOVERY_TOKEN_DISCARD_COUNT = this.options.errorRecoveryTokenDiscardCount | 0 || 3;
          var NO_ACTION = [
            0,
            47
            /* === table.length :: ensures that anyone using this new state will fail dramatically! */
          ];
          var lexer2;
          if (this.__lexer__) {
            lexer2 = this.__lexer__;
          } else {
            lexer2 = this.__lexer__ = Object.create(this.lexer);
          }
          var sharedState_yy = {
            parseError: void 0,
            quoteName: void 0,
            lexer: void 0,
            parser: void 0,
            pre_parse: void 0,
            post_parse: void 0,
            pre_lex: void 0,
            post_lex: void 0
            // WARNING: must be written this way for the code expanders to work correctly in both ES5 and ES6 modes!
          };
          var ASSERT;
          if (typeof assert !== "function") {
            ASSERT = function JisonAssert(cond, msg) {
              if (!cond) {
                throw new Error("assertion failed: " + (msg || "***"));
              }
            };
          } else {
            ASSERT = assert;
          }
          this.yyGetSharedState = function yyGetSharedState() {
            return sharedState_yy;
          };
          function shallow_copy_noclobber(dst, src) {
            for (var k in src) {
              if (typeof dst[k] === "undefined" && Object.prototype.hasOwnProperty.call(src, k)) {
                dst[k] = src[k];
              }
            }
          }
          shallow_copy_noclobber(sharedState_yy, this.yy);
          sharedState_yy.lexer = lexer2;
          sharedState_yy.parser = this;
          if (typeof sharedState_yy.parseError === "function") {
            this.parseError = function parseErrorAlt(str, hash, ExceptionClass) {
              if (!ExceptionClass) {
                ExceptionClass = this.JisonParserError;
              }
              return sharedState_yy.parseError.call(this, str, hash, ExceptionClass);
            };
          } else {
            this.parseError = this.originalParseError;
          }
          if (typeof sharedState_yy.quoteName === "function") {
            this.quoteName = function quoteNameAlt(id_str) {
              return sharedState_yy.quoteName.call(this, id_str);
            };
          } else {
            this.quoteName = this.originalQuoteName;
          }
          this.cleanupAfterParse = function parser_cleanupAfterParse(resultValue, invoke_post_methods, do_not_nuke_errorinfos) {
            var rv;
            if (invoke_post_methods) {
              var hash;
              if (sharedState_yy.post_parse || this.post_parse) {
                hash = this.constructParseErrorInfo(null, null, null, false);
              }
              if (sharedState_yy.post_parse) {
                rv = sharedState_yy.post_parse.call(this, sharedState_yy, resultValue, hash);
                if (typeof rv !== "undefined")
                  resultValue = rv;
              }
              if (this.post_parse) {
                rv = this.post_parse.call(this, sharedState_yy, resultValue, hash);
                if (typeof rv !== "undefined")
                  resultValue = rv;
              }
              if (hash && hash.destroy) {
                hash.destroy();
              }
            }
            if (this.__reentrant_call_depth > 1)
              return resultValue;
            if (lexer2.cleanupAfterLex) {
              lexer2.cleanupAfterLex(do_not_nuke_errorinfos);
            }
            if (sharedState_yy) {
              sharedState_yy.lexer = void 0;
              sharedState_yy.parser = void 0;
              if (lexer2.yy === sharedState_yy) {
                lexer2.yy = void 0;
              }
            }
            sharedState_yy = void 0;
            this.parseError = this.originalParseError;
            this.quoteName = this.originalQuoteName;
            stack.length = 0;
            sstack.length = 0;
            vstack.length = 0;
            sp = 0;
            if (!do_not_nuke_errorinfos) {
              for (var i = this.__error_infos.length - 1; i >= 0; i--) {
                var el = this.__error_infos[i];
                if (el && typeof el.destroy === "function") {
                  el.destroy();
                }
              }
              this.__error_infos.length = 0;
            }
            return resultValue;
          };
          this.constructParseErrorInfo = function parser_constructParseErrorInfo(msg, ex, expected2, recoverable) {
            var pei = {
              errStr: msg,
              exception: ex,
              text: lexer2.match,
              value: lexer2.yytext,
              token: this.describeSymbol(symbol) || symbol,
              token_id: symbol,
              line: lexer2.yylineno,
              expected: expected2,
              recoverable,
              state,
              action,
              new_state: newState,
              symbol_stack: stack,
              state_stack: sstack,
              value_stack: vstack,
              stack_pointer: sp,
              yy: sharedState_yy,
              lexer: lexer2,
              parser: this,
              // and make sure the error info doesn't stay due to potential
              // ref cycle via userland code manipulations.
              // These would otherwise all be memory leak opportunities!
              //
              // Note that only array and object references are nuked as those
              // constitute the set of elements which can produce a cyclic ref.
              // The rest of the members is kept intact as they are harmless.
              destroy: function destructParseErrorInfo() {
                var rec = !!this.recoverable;
                for (var key in this) {
                  if (this.hasOwnProperty(key) && typeof key === "object") {
                    this[key] = void 0;
                  }
                }
                this.recoverable = rec;
              }
            };
            this.__error_infos.push(pei);
            return pei;
          };
          function getNonTerminalFromCode(symbol2) {
            var tokenName = self2.getSymbolName(symbol2);
            if (!tokenName) {
              tokenName = symbol2;
            }
            return tokenName;
          }
          function stdLex() {
            var token = lexer2.lex();
            if (typeof token !== "number") {
              token = self2.symbols_[token] || token;
            }
            return token || EOF;
          }
          function fastLex() {
            var token = lexer2.fastLex();
            if (typeof token !== "number") {
              token = self2.symbols_[token] || token;
            }
            return token || EOF;
          }
          var lex = stdLex;
          var state, action, r, t;
          var yyval = {
            $: true,
            _$: void 0,
            yy: sharedState_yy
          };
          var p;
          var yyrulelen;
          var this_production;
          var newState;
          var retval = false;
          try {
            this.__reentrant_call_depth++;
            lexer2.setInput(input, sharedState_yy);
            if (typeof lexer2.canIUse === "function") {
              var lexerInfo = lexer2.canIUse();
              if (lexerInfo.fastLex && typeof fastLex === "function") {
                lex = fastLex;
              }
            }
            vstack[sp] = null;
            sstack[sp] = 0;
            stack[sp] = 0;
            ++sp;
            if (this.pre_parse) {
              this.pre_parse.call(this, sharedState_yy);
            }
            if (sharedState_yy.pre_parse) {
              sharedState_yy.pre_parse.call(this, sharedState_yy);
            }
            newState = sstack[sp - 1];
            for (; ; ) {
              state = newState;
              if (this.defaultActions[state]) {
                action = 2;
                newState = this.defaultActions[state];
              } else {
                if (!symbol) {
                  symbol = lex();
                }
                t = table[state] && table[state][symbol] || NO_ACTION;
                newState = t[1];
                action = t[0];
                if (!action) {
                  var errStr;
                  var errSymbolDescr = this.describeSymbol(symbol) || symbol;
                  var expected = this.collect_expected_token_set(state);
                  if (typeof lexer2.yylineno === "number") {
                    errStr = "Parse error on line " + (lexer2.yylineno + 1) + ": ";
                  } else {
                    errStr = "Parse error: ";
                  }
                  if (typeof lexer2.showPosition === "function") {
                    errStr += "\n" + lexer2.showPosition(79 - 10, 10) + "\n";
                  }
                  if (expected.length) {
                    errStr += "Expecting " + expected.join(", ") + ", got unexpected " + errSymbolDescr;
                  } else {
                    errStr += "Unexpected " + errSymbolDescr;
                  }
                  p = this.constructParseErrorInfo(errStr, null, expected, false);
                  r = this.parseError(p.errStr, p, this.JisonParserError);
                  if (typeof r !== "undefined") {
                    retval = r;
                  }
                  break;
                }
              }
              switch (action) {
                default:
                  if (action instanceof Array) {
                    p = this.constructParseErrorInfo("Parse Error: multiple actions possible at state: " + state + ", token: " + symbol, null, null, false);
                    r = this.parseError(p.errStr, p, this.JisonParserError);
                    if (typeof r !== "undefined") {
                      retval = r;
                    }
                    break;
                  }
                  p = this.constructParseErrorInfo("Parsing halted. No viable error recovery approach available due to internal system failure.", null, null, false);
                  r = this.parseError(p.errStr, p, this.JisonParserError);
                  if (typeof r !== "undefined") {
                    retval = r;
                  }
                  break;
                case 1:
                  stack[sp] = symbol;
                  vstack[sp] = lexer2.yytext;
                  sstack[sp] = newState;
                  ++sp;
                  symbol = 0;
                  continue;
                case 2:
                  this_production = this.productions_[newState - 1];
                  yyrulelen = this_production[1];
                  r = this.performAction.call(yyval, newState, sp - 1, vstack);
                  if (typeof r !== "undefined") {
                    retval = r;
                    break;
                  }
                  sp -= yyrulelen;
                  var ntsymbol = this_production[0];
                  stack[sp] = ntsymbol;
                  vstack[sp] = yyval.$;
                  newState = table[sstack[sp - 1]][ntsymbol];
                  sstack[sp] = newState;
                  ++sp;
                  continue;
                case 3:
                  if (sp !== -2) {
                    retval = true;
                    sp--;
                    if (typeof vstack[sp] !== "undefined") {
                      retval = vstack[sp];
                    }
                  }
                  break;
              }
              break;
            }
          } catch (ex) {
            if (ex instanceof this.JisonParserError) {
              throw ex;
            } else if (lexer2 && typeof lexer2.JisonLexerError === "function" && ex instanceof lexer2.JisonLexerError) {
              throw ex;
            }
            p = this.constructParseErrorInfo("Parsing aborted due to exception.", ex, null, false);
            retval = false;
            r = this.parseError(p.errStr, p, this.JisonParserError);
            if (typeof r !== "undefined") {
              retval = r;
            }
          } finally {
            retval = this.cleanupAfterParse(retval, true, true);
            this.__reentrant_call_depth--;
          }
          return retval;
        }
      };
      parser2.originalParseError = parser2.parseError;
      parser2.originalQuoteName = parser2.quoteName;
      var lexer = function() {
        function JisonLexerError(msg, hash) {
          Object.defineProperty(this, "name", {
            enumerable: false,
            writable: false,
            value: "JisonLexerError"
          });
          if (msg == null)
            msg = "???";
          Object.defineProperty(this, "message", {
            enumerable: false,
            writable: true,
            value: msg
          });
          this.hash = hash;
          var stacktrace;
          if (hash && hash.exception instanceof Error) {
            var ex2 = hash.exception;
            this.message = ex2.message || msg;
            stacktrace = ex2.stack;
          }
          if (!stacktrace) {
            if (Error.hasOwnProperty("captureStackTrace")) {
              Error.captureStackTrace(this, this.constructor);
            } else {
              stacktrace = new Error(msg).stack;
            }
          }
          if (stacktrace) {
            Object.defineProperty(this, "stack", {
              enumerable: false,
              writable: false,
              value: stacktrace
            });
          }
        }
        if (typeof Object.setPrototypeOf === "function") {
          Object.setPrototypeOf(JisonLexerError.prototype, Error.prototype);
        } else {
          JisonLexerError.prototype = Object.create(Error.prototype);
        }
        JisonLexerError.prototype.constructor = JisonLexerError;
        JisonLexerError.prototype.name = "JisonLexerError";
        var lexer2 = {
          // Code Generator Information Report
          // ---------------------------------
          //
          // Options:
          //
          //   backtracking: .................... false
          //   location.ranges: ................. false
          //   location line+column tracking: ... true
          //
          //
          // Forwarded Parser Analysis flags:
          //
          //   uses yyleng: ..................... false
          //   uses yylineno: ................... false
          //   uses yytext: ..................... false
          //   uses yylloc: ..................... false
          //   uses lexer values: ............... true / true
          //   location tracking: ............... false
          //   location assignment: ............. false
          //
          //
          // Lexer Analysis flags:
          //
          //   uses yyleng: ..................... ???
          //   uses yylineno: ................... ???
          //   uses yytext: ..................... ???
          //   uses yylloc: ..................... ???
          //   uses ParseError API: ............. ???
          //   uses yyerror: .................... ???
          //   uses location tracking & editing:  ???
          //   uses more() API: ................. ???
          //   uses unput() API: ................ ???
          //   uses reject() API: ............... ???
          //   uses less() API: ................. ???
          //   uses display APIs pastInput(), upcomingInput(), showPosition():
          //        ............................. ???
          //   uses describeYYLLOC() API: ....... ???
          //
          // --------- END OF REPORT -----------
          EOF: 1,
          ERROR: 2,
          // JisonLexerError: JisonLexerError,        /// <-- injected by the code generator
          // options: {},                             /// <-- injected by the code generator
          // yy: ...,                                 /// <-- injected by setInput()
          __currentRuleSet__: null,
          /// INTERNAL USE ONLY: internal rule set cache for the current lexer state  
          __error_infos: [],
          /// INTERNAL USE ONLY: the set of lexErrorInfo objects created since the last cleanup  
          __decompressed: false,
          /// INTERNAL USE ONLY: mark whether the lexer instance has been 'unfolded' completely and is now ready for use  
          done: false,
          /// INTERNAL USE ONLY  
          _backtrack: false,
          /// INTERNAL USE ONLY  
          _input: "",
          /// INTERNAL USE ONLY  
          _more: false,
          /// INTERNAL USE ONLY  
          _signaled_error_token: false,
          /// INTERNAL USE ONLY  
          conditionStack: [],
          /// INTERNAL USE ONLY; managed via `pushState()`, `popState()`, `topState()` and `stateStackSize()`  
          match: "",
          /// READ-ONLY EXTERNAL ACCESS - ADVANCED USE ONLY: tracks input which has been matched so far for the lexer token under construction. `match` is identical to `yytext` except that this one still contains the matched input string after `lexer.performAction()` has been invoked, where userland code MAY have changed/replaced the `yytext` value entirely!  
          matched: "",
          /// READ-ONLY EXTERNAL ACCESS - ADVANCED USE ONLY: tracks entire input which has been matched so far  
          matches: false,
          /// READ-ONLY EXTERNAL ACCESS - ADVANCED USE ONLY: tracks RE match result for last (successful) match attempt  
          yytext: "",
          /// ADVANCED USE ONLY: tracks input which has been matched so far for the lexer token under construction; this value is transferred to the parser as the 'token value' when the parser consumes the lexer token produced through a call to the `lex()` API.  
          offset: 0,
          /// READ-ONLY EXTERNAL ACCESS - ADVANCED USE ONLY: tracks the 'cursor position' in the input string, i.e. the number of characters matched so far  
          yyleng: 0,
          /// READ-ONLY EXTERNAL ACCESS - ADVANCED USE ONLY: length of matched input for the token under construction (`yytext`)  
          yylineno: 0,
          /// READ-ONLY EXTERNAL ACCESS - ADVANCED USE ONLY: 'line number' at which the token under construction is located  
          yylloc: null,
          /// READ-ONLY EXTERNAL ACCESS - ADVANCED USE ONLY: tracks location info (lines + columns) for the token under construction  
          /**
           * INTERNAL USE: construct a suitable error info hash object instance for `parseError`.
           * 
           * @public
           * @this {RegExpLexer}
           */
          constructLexErrorInfo: function lexer_constructLexErrorInfo(msg, recoverable, show_input_position) {
            msg = "" + msg;
            if (show_input_position == void 0) {
              show_input_position = !(msg.indexOf("\n") > 0 && msg.indexOf("^") > 0);
            }
            if (this.yylloc && show_input_position) {
              if (typeof this.prettyPrintRange === "function") {
                var pretty_src = this.prettyPrintRange(this.yylloc);
                if (!/\n\s*$/.test(msg)) {
                  msg += "\n";
                }
                msg += "\n  Erroneous area:\n" + this.prettyPrintRange(this.yylloc);
              } else if (typeof this.showPosition === "function") {
                var pos_str = this.showPosition();
                if (pos_str) {
                  if (msg.length && msg[msg.length - 1] !== "\n" && pos_str[0] !== "\n") {
                    msg += "\n" + pos_str;
                  } else {
                    msg += pos_str;
                  }
                }
              }
            }
            var pei = {
              errStr: msg,
              recoverable: !!recoverable,
              text: this.match,
              // This one MAY be empty; userland code should use the `upcomingInput` API to obtain more text which follows the 'lexer cursor position'...  
              token: null,
              line: this.yylineno,
              loc: this.yylloc,
              yy: this.yy,
              lexer: this,
              /**
               * and make sure the error info doesn't stay due to potential
               * ref cycle via userland code manipulations.
               * These would otherwise all be memory leak opportunities!
               * 
               * Note that only array and object references are nuked as those
               * constitute the set of elements which can produce a cyclic ref.
               * The rest of the members is kept intact as they are harmless.
               * 
               * @public
               * @this {LexErrorInfo}
               */
              destroy: function destructLexErrorInfo() {
                var rec = !!this.recoverable;
                for (var key in this) {
                  if (this.hasOwnProperty(key) && typeof key === "object") {
                    this[key] = void 0;
                  }
                }
                this.recoverable = rec;
              }
            };
            this.__error_infos.push(pei);
            return pei;
          },
          /**
           * handler which is invoked when a lexer error occurs.
           * 
           * @public
           * @this {RegExpLexer}
           */
          parseError: function lexer_parseError(str, hash, ExceptionClass) {
            if (!ExceptionClass) {
              ExceptionClass = this.JisonLexerError;
            }
            if (this.yy) {
              if (this.yy.parser && typeof this.yy.parser.parseError === "function") {
                return this.yy.parser.parseError.call(this, str, hash, ExceptionClass) || this.ERROR;
              } else if (typeof this.yy.parseError === "function") {
                return this.yy.parseError.call(this, str, hash, ExceptionClass) || this.ERROR;
              }
            }
            throw new ExceptionClass(str, hash);
          },
          /**
           * method which implements `yyerror(str, ...args)` functionality for use inside lexer actions.
           * 
           * @public
           * @this {RegExpLexer}
           */
          yyerror: function yyError(str) {
            var lineno_msg = "";
            if (this.yylloc) {
              lineno_msg = " on line " + (this.yylineno + 1);
            }
            var p = this.constructLexErrorInfo(
              "Lexical error" + lineno_msg + ": " + str,
              this.options.lexerErrorsAreRecoverable
            );
            var args = Array.prototype.slice.call(arguments, 1);
            if (args.length) {
              p.extra_error_attributes = args;
            }
            return this.parseError(p.errStr, p, this.JisonLexerError) || this.ERROR;
          },
          /**
           * final cleanup function for when we have completed lexing the input;
           * make it an API so that external code can use this one once userland
           * code has decided it's time to destroy any lingering lexer error
           * hash object instances and the like: this function helps to clean
           * up these constructs, which *may* carry cyclic references which would
           * otherwise prevent the instances from being properly and timely
           * garbage-collected, i.e. this function helps prevent memory leaks!
           * 
           * @public
           * @this {RegExpLexer}
           */
          cleanupAfterLex: function lexer_cleanupAfterLex(do_not_nuke_errorinfos) {
            this.setInput("", {});
            if (!do_not_nuke_errorinfos) {
              for (var i = this.__error_infos.length - 1; i >= 0; i--) {
                var el = this.__error_infos[i];
                if (el && typeof el.destroy === "function") {
                  el.destroy();
                }
              }
              this.__error_infos.length = 0;
            }
            return this;
          },
          /**
           * clear the lexer token context; intended for internal use only
           * 
           * @public
           * @this {RegExpLexer}
           */
          clear: function lexer_clear() {
            this.yytext = "";
            this.yyleng = 0;
            this.match = "";
            this.matches = false;
            this._more = false;
            this._backtrack = false;
            var col = this.yylloc ? this.yylloc.last_column : 0;
            this.yylloc = {
              first_line: this.yylineno + 1,
              first_column: col,
              last_line: this.yylineno + 1,
              last_column: col,
              range: [this.offset, this.offset]
            };
          },
          /**
           * resets the lexer, sets new input
           * 
           * @public
           * @this {RegExpLexer}
           */
          setInput: function lexer_setInput(input, yy) {
            this.yy = yy || this.yy || {};
            if (!this.__decompressed) {
              var rules = this.rules;
              for (var i = 0, len = rules.length; i < len; i++) {
                var rule_re = rules[i];
                if (typeof rule_re === "number") {
                  rules[i] = rules[rule_re];
                }
              }
              var conditions = this.conditions;
              for (var k in conditions) {
                var spec = conditions[k];
                var rule_ids = spec.rules;
                var len = rule_ids.length;
                var rule_regexes = new Array(len + 1);
                var rule_new_ids = new Array(len + 1);
                for (var i = 0; i < len; i++) {
                  var idx = rule_ids[i];
                  var rule_re = rules[idx];
                  rule_regexes[i + 1] = rule_re;
                  rule_new_ids[i + 1] = idx;
                }
                spec.rules = rule_new_ids;
                spec.__rule_regexes = rule_regexes;
                spec.__rule_count = len;
              }
              this.__decompressed = true;
            }
            this._input = input || "";
            this.clear();
            this._signaled_error_token = false;
            this.done = false;
            this.yylineno = 0;
            this.matched = "";
            this.conditionStack = ["INITIAL"];
            this.__currentRuleSet__ = null;
            this.yylloc = {
              first_line: 1,
              first_column: 0,
              last_line: 1,
              last_column: 0,
              range: [0, 0]
            };
            this.offset = 0;
            return this;
          },
          /**
           * edit the remaining input via user-specified callback.
           * This can be used to forward-adjust the input-to-parse, 
           * e.g. inserting macro expansions and alike in the
           * input which has yet to be lexed.
           * The behaviour of this API contrasts the `unput()` et al
           * APIs as those act on the *consumed* input, while this
           * one allows one to manipulate the future, without impacting
           * the current `yyloc` cursor location or any history. 
           * 
           * Use this API to help implement C-preprocessor-like
           * `#include` statements, etc.
           * 
           * The provided callback must be synchronous and is
           * expected to return the edited input (string).
           *
           * The `cpsArg` argument value is passed to the callback
           * as-is.
           *
           * `callback` interface: 
           * `function callback(input, cpsArg)`
           * 
           * - `input` will carry the remaining-input-to-lex string
           *   from the lexer.
           * - `cpsArg` is `cpsArg` passed into this API.
           * 
           * The `this` reference for the callback will be set to
           * reference this lexer instance so that userland code
           * in the callback can easily and quickly access any lexer
           * API. 
           *
           * When the callback returns a non-string-type falsey value,
           * we assume the callback did not edit the input and we
           * will using the input as-is.
           *
           * When the callback returns a non-string-type value, it
           * is converted to a string for lexing via the `"" + retval`
           * operation. (See also why: http://2ality.com/2012/03/converting-to-string.html 
           * -- that way any returned object's `toValue()` and `toString()`
           * methods will be invoked in a proper/desirable order.)
           * 
           * @public
           * @this {RegExpLexer}
           */
          editRemainingInput: function lexer_editRemainingInput(callback, cpsArg) {
            var rv = callback.call(this, this._input, cpsArg);
            if (typeof rv !== "string") {
              if (rv) {
                this._input = "" + rv;
              }
            } else {
              this._input = rv;
            }
            return this;
          },
          /**
           * consumes and returns one char from the input
           * 
           * @public
           * @this {RegExpLexer}
           */
          input: function lexer_input() {
            if (!this._input) {
              return null;
            }
            var ch = this._input[0];
            this.yytext += ch;
            this.yyleng++;
            this.offset++;
            this.match += ch;
            this.matched += ch;
            var slice_len = 1;
            var lines = false;
            if (ch === "\n") {
              lines = true;
            } else if (ch === "\r") {
              lines = true;
              var ch2 = this._input[1];
              if (ch2 === "\n") {
                slice_len++;
                ch += ch2;
                this.yytext += ch2;
                this.yyleng++;
                this.offset++;
                this.match += ch2;
                this.matched += ch2;
                this.yylloc.range[1]++;
              }
            }
            if (lines) {
              this.yylineno++;
              this.yylloc.last_line++;
              this.yylloc.last_column = 0;
            } else {
              this.yylloc.last_column++;
            }
            this.yylloc.range[1]++;
            this._input = this._input.slice(slice_len);
            return ch;
          },
          /**
           * unshifts one char (or an entire string) into the input
           * 
           * @public
           * @this {RegExpLexer}
           */
          unput: function lexer_unput(ch) {
            var len = ch.length;
            var lines = ch.split(/(?:\r\n?|\n)/g);
            this._input = ch + this._input;
            this.yytext = this.yytext.substr(0, this.yytext.length - len);
            this.yyleng = this.yytext.length;
            this.offset -= len;
            this.match = this.match.substr(0, this.match.length - len);
            this.matched = this.matched.substr(0, this.matched.length - len);
            if (lines.length > 1) {
              this.yylineno -= lines.length - 1;
              this.yylloc.last_line = this.yylineno + 1;
              var pre = this.match;
              var pre_lines = pre.split(/(?:\r\n?|\n)/g);
              if (pre_lines.length === 1) {
                pre = this.matched;
                pre_lines = pre.split(/(?:\r\n?|\n)/g);
              }
              this.yylloc.last_column = pre_lines[pre_lines.length - 1].length;
            } else {
              this.yylloc.last_column -= len;
            }
            this.yylloc.range[1] = this.yylloc.range[0] + this.yyleng;
            this.done = false;
            return this;
          },
          /**
           * cache matched text and append it on next action
           * 
           * @public
           * @this {RegExpLexer}
           */
          more: function lexer_more() {
            this._more = true;
            return this;
          },
          /**
           * signal the lexer that this rule fails to match the input, so the
           * next matching rule (regex) should be tested instead.
           * 
           * @public
           * @this {RegExpLexer}
           */
          reject: function lexer_reject() {
            if (this.options.backtrack_lexer) {
              this._backtrack = true;
            } else {
              var lineno_msg = "";
              if (this.yylloc) {
                lineno_msg = " on line " + (this.yylineno + 1);
              }
              var p = this.constructLexErrorInfo(
                "Lexical error" + lineno_msg + ": You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).",
                false
              );
              this._signaled_error_token = this.parseError(p.errStr, p, this.JisonLexerError) || this.ERROR;
            }
            return this;
          },
          /**
           * retain first n characters of the match
           * 
           * @public
           * @this {RegExpLexer}
           */
          less: function lexer_less(n) {
            return this.unput(this.match.slice(n));
          },
          /**
           * return (part of the) already matched input, i.e. for error
           * messages.
           * 
           * Limit the returned string length to `maxSize` (default: 20).
           * 
           * Limit the returned string to the `maxLines` number of lines of
           * input (default: 1).
           * 
           * Negative limit values equal *unlimited*.
           * 
           * @public
           * @this {RegExpLexer}
           */
          pastInput: function lexer_pastInput(maxSize, maxLines) {
            var past = this.matched.substring(0, this.matched.length - this.match.length);
            if (maxSize < 0)
              maxSize = past.length;
            else if (!maxSize)
              maxSize = 20;
            if (maxLines < 0)
              maxLines = past.length;
            else if (!maxLines)
              maxLines = 1;
            past = past.substr(-maxSize * 2 - 2);
            var a = past.replace(/\r\n|\r/g, "\n").split("\n");
            a = a.slice(-maxLines);
            past = a.join("\n");
            if (past.length > maxSize) {
              past = "..." + past.substr(-maxSize);
            }
            return past;
          },
          /**
           * return (part of the) upcoming input, i.e. for error messages.
           * 
           * Limit the returned string length to `maxSize` (default: 20).
           * 
           * Limit the returned string to the `maxLines` number of lines of input (default: 1).
           * 
           * Negative limit values equal *unlimited*.
           *
           * > ### NOTE ###
           * >
           * > *"upcoming input"* is defined as the whole of the both
           * > the *currently lexed* input, together with any remaining input
           * > following that. *"currently lexed"* input is the input 
           * > already recognized by the lexer but not yet returned with
           * > the lexer token. This happens when you are invoking this API
           * > from inside any lexer rule action code block. 
           * >
           * 
           * @public
           * @this {RegExpLexer}
           */
          upcomingInput: function lexer_upcomingInput(maxSize, maxLines) {
            var next = this.match;
            if (maxSize < 0)
              maxSize = next.length + this._input.length;
            else if (!maxSize)
              maxSize = 20;
            if (maxLines < 0)
              maxLines = maxSize;
            else if (!maxLines)
              maxLines = 1;
            if (next.length < maxSize * 2 + 2) {
              next += this._input.substring(0, maxSize * 2 + 2);
            }
            var a = next.replace(/\r\n|\r/g, "\n").split("\n");
            a = a.slice(0, maxLines);
            next = a.join("\n");
            if (next.length > maxSize) {
              next = next.substring(0, maxSize) + "...";
            }
            return next;
          },
          /**
           * return a string which displays the character position where the
           * lexing error occurred, i.e. for error messages
           * 
           * @public
           * @this {RegExpLexer}
           */
          showPosition: function lexer_showPosition(maxPrefix, maxPostfix) {
            var pre = this.pastInput(maxPrefix).replace(/\s/g, " ");
            var c2 = new Array(pre.length + 1).join("-");
            return pre + this.upcomingInput(maxPostfix).replace(/\s/g, " ") + "\n" + c2 + "^";
          },
          /**
           * return an YYLLOC info object derived off the given context (actual, preceding, following, current).
           * Use this method when the given `actual` location is not guaranteed to exist (i.e. when
           * it MAY be NULL) and you MUST have a valid location info object anyway:
           * then we take the given context of the `preceding` and `following` locations, IFF those are available,
           * and reconstruct the `actual` location info from those.
           * If this fails, the heuristic is to take the `current` location, IFF available.
           * If this fails as well, we assume the sought location is at/around the current lexer position
           * and then produce that one as a response. DO NOTE that these heuristic/derived location info
           * values MAY be inaccurate!
           *
           * NOTE: `deriveLocationInfo()` ALWAYS produces a location info object *copy* of `actual`, not just
           * a *reference* hence all input location objects can be assumed to be 'constant' (function has no side-effects).
           * 
           * @public
           * @this {RegExpLexer}
           */
          deriveLocationInfo: function lexer_deriveYYLLOC(actual, preceding, following, current) {
            var loc = {
              first_line: 1,
              first_column: 0,
              last_line: 1,
              last_column: 0,
              range: [0, 0]
            };
            if (actual) {
              loc.first_line = actual.first_line | 0;
              loc.last_line = actual.last_line | 0;
              loc.first_column = actual.first_column | 0;
              loc.last_column = actual.last_column | 0;
              if (actual.range) {
                loc.range[0] = actual.range[0] | 0;
                loc.range[1] = actual.range[1] | 0;
              }
            }
            if (loc.first_line <= 0 || loc.last_line < loc.first_line) {
              if (loc.first_line <= 0 && preceding) {
                loc.first_line = preceding.last_line | 0;
                loc.first_column = preceding.last_column | 0;
                if (preceding.range) {
                  loc.range[0] = actual.range[1] | 0;
                }
              }
              if ((loc.last_line <= 0 || loc.last_line < loc.first_line) && following) {
                loc.last_line = following.first_line | 0;
                loc.last_column = following.first_column | 0;
                if (following.range) {
                  loc.range[1] = actual.range[0] | 0;
                }
              }
              if (loc.first_line <= 0 && current && (loc.last_line <= 0 || current.last_line <= loc.last_line)) {
                loc.first_line = current.first_line | 0;
                loc.first_column = current.first_column | 0;
                if (current.range) {
                  loc.range[0] = current.range[0] | 0;
                }
              }
              if (loc.last_line <= 0 && current && (loc.first_line <= 0 || current.first_line >= loc.first_line)) {
                loc.last_line = current.last_line | 0;
                loc.last_column = current.last_column | 0;
                if (current.range) {
                  loc.range[1] = current.range[1] | 0;
                }
              }
            }
            if (loc.last_line <= 0) {
              if (loc.first_line <= 0) {
                loc.first_line = this.yylloc.first_line;
                loc.last_line = this.yylloc.last_line;
                loc.first_column = this.yylloc.first_column;
                loc.last_column = this.yylloc.last_column;
                loc.range[0] = this.yylloc.range[0];
                loc.range[1] = this.yylloc.range[1];
              } else {
                loc.last_line = this.yylloc.last_line;
                loc.last_column = this.yylloc.last_column;
                loc.range[1] = this.yylloc.range[1];
              }
            }
            if (loc.first_line <= 0) {
              loc.first_line = loc.last_line;
              loc.first_column = 0;
              loc.range[1] = loc.range[0];
            }
            if (loc.first_column < 0) {
              loc.first_column = 0;
            }
            if (loc.last_column < 0) {
              loc.last_column = loc.first_column > 0 ? loc.first_column : 80;
            }
            return loc;
          },
          /**
           * return a string which displays the lines & columns of input which are referenced 
           * by the given location info range, plus a few lines of context.
           * 
           * This function pretty-prints the indicated section of the input, with line numbers 
           * and everything!
           * 
           * This function is very useful to provide highly readable error reports, while
           * the location range may be specified in various flexible ways:
           * 
           * - `loc` is the location info object which references the area which should be
           *   displayed and 'marked up': these lines & columns of text are marked up by `^`
           *   characters below each character in the entire input range.
           * 
           * - `context_loc` is the *optional* location info object which instructs this
           *   pretty-printer how much *leading* context should be displayed alongside
           *   the area referenced by `loc`. This can help provide context for the displayed
           *   error, etc.
           * 
           *   When this location info is not provided, a default context of 3 lines is
           *   used.
           * 
           * - `context_loc2` is another *optional* location info object, which serves
           *   a similar purpose to `context_loc`: it specifies the amount of *trailing*
           *   context lines to display in the pretty-print output.
           * 
           *   When this location info is not provided, a default context of 1 line only is
           *   used.
           * 
           * Special Notes:
           * 
           * - when the `loc`-indicated range is very large (about 5 lines or more), then
           *   only the first and last few lines of this block are printed while a
           *   `...continued...` message will be printed between them.
           * 
           *   This serves the purpose of not printing a huge amount of text when the `loc`
           *   range happens to be huge: this way a manageable & readable output results
           *   for arbitrary large ranges.
           * 
           * - this function can display lines of input which whave not yet been lexed.
           *   `prettyPrintRange()` can access the entire input!
           * 
           * @public
           * @this {RegExpLexer}
           */
          prettyPrintRange: function lexer_prettyPrintRange(loc, context_loc, context_loc2) {
            loc = this.deriveLocationInfo(loc, context_loc, context_loc2);
            const CONTEXT = 3;
            const CONTEXT_TAIL = 1;
            const MINIMUM_VISIBLE_NONEMPTY_LINE_COUNT = 2;
            var input = this.matched + this._input;
            var lines = input.split("\n");
            var l0 = Math.max(1, context_loc ? context_loc.first_line : loc.first_line - CONTEXT);
            var l1 = Math.max(1, context_loc2 ? context_loc2.last_line : loc.last_line + CONTEXT_TAIL);
            var lineno_display_width = 1 + Math.log10(l1 | 1) | 0;
            var ws_prefix = new Array(lineno_display_width).join(" ");
            var nonempty_line_indexes = [];
            var rv = lines.slice(l0 - 1, l1 + 1).map(function injectLineNumber(line, index) {
              var lno = index + l0;
              var lno_pfx = (ws_prefix + lno).substr(-lineno_display_width);
              var rv2 = lno_pfx + ": " + line;
              var errpfx = new Array(lineno_display_width + 1).join("^");
              var offset = 2 + 1;
              var len = 0;
              if (lno === loc.first_line) {
                offset += loc.first_column;
                len = Math.max(
                  2,
                  (lno === loc.last_line ? loc.last_column : line.length) - loc.first_column + 1
                );
              } else if (lno === loc.last_line) {
                len = Math.max(2, loc.last_column + 1);
              } else if (lno > loc.first_line && lno < loc.last_line) {
                len = Math.max(2, line.length + 1);
              }
              if (len) {
                var lead = new Array(offset).join(".");
                var mark = new Array(len).join("^");
                rv2 += "\n" + errpfx + lead + mark;
                if (line.trim().length > 0) {
                  nonempty_line_indexes.push(index);
                }
              }
              rv2 = rv2.replace(/\t/g, " ");
              return rv2;
            });
            if (nonempty_line_indexes.length > 2 * MINIMUM_VISIBLE_NONEMPTY_LINE_COUNT) {
              var clip_start = nonempty_line_indexes[MINIMUM_VISIBLE_NONEMPTY_LINE_COUNT - 1] + 1;
              var clip_end = nonempty_line_indexes[nonempty_line_indexes.length - MINIMUM_VISIBLE_NONEMPTY_LINE_COUNT] - 1;
              var intermediate_line = new Array(lineno_display_width + 1).join(" ") + "  (...continued...)";
              intermediate_line += "\n" + new Array(lineno_display_width + 1).join("-") + "  (---------------)";
              rv.splice(clip_start, clip_end - clip_start + 1, intermediate_line);
            }
            return rv.join("\n");
          },
          /**
           * helper function, used to produce a human readable description as a string, given
           * the input `yylloc` location object.
           * 
           * Set `display_range_too` to TRUE to include the string character index position(s)
           * in the description if the `yylloc.range` is available.
           * 
           * @public
           * @this {RegExpLexer}
           */
          describeYYLLOC: function lexer_describe_yylloc(yylloc, display_range_too) {
            var l1 = yylloc.first_line;
            var l2 = yylloc.last_line;
            var c1 = yylloc.first_column;
            var c2 = yylloc.last_column;
            var dl = l2 - l1;
            var dc = c2 - c1;
            var rv;
            if (dl === 0) {
              rv = "line " + l1 + ", ";
              if (dc <= 1) {
                rv += "column " + c1;
              } else {
                rv += "columns " + c1 + " .. " + c2;
              }
            } else {
              rv = "lines " + l1 + "(column " + c1 + ") .. " + l2 + "(column " + c2 + ")";
            }
            if (yylloc.range && display_range_too) {
              var r1 = yylloc.range[0];
              var r2 = yylloc.range[1] - 1;
              if (r2 <= r1) {
                rv += " {String Offset: " + r1 + "}";
              } else {
                rv += " {String Offset range: " + r1 + " .. " + r2 + "}";
              }
            }
            return rv;
          },
          /**
           * test the lexed token: return FALSE when not a match, otherwise return token.
           * 
           * `match` is supposed to be an array coming out of a regex match, i.e. `match[0]`
           * contains the actually matched text string.
           * 
           * Also move the input cursor forward and update the match collectors:
           * 
           * - `yytext`
           * - `yyleng`
           * - `match`
           * - `matches`
           * - `yylloc`
           * - `offset`
           * 
           * @public
           * @this {RegExpLexer}
           */
          test_match: function lexer_test_match(match, indexed_rule) {
            var token, lines, backup, match_str, match_str_len;
            if (this.options.backtrack_lexer) {
              backup = {
                yylineno: this.yylineno,
                yylloc: {
                  first_line: this.yylloc.first_line,
                  last_line: this.yylloc.last_line,
                  first_column: this.yylloc.first_column,
                  last_column: this.yylloc.last_column,
                  range: this.yylloc.range.slice(0)
                },
                yytext: this.yytext,
                match: this.match,
                matches: this.matches,
                matched: this.matched,
                yyleng: this.yyleng,
                offset: this.offset,
                _more: this._more,
                _input: this._input,
                //_signaled_error_token: this._signaled_error_token,
                yy: this.yy,
                conditionStack: this.conditionStack.slice(0),
                done: this.done
              };
            }
            match_str = match[0];
            match_str_len = match_str.length;
            lines = match_str.split(/(?:\r\n?|\n)/g);
            if (lines.length > 1) {
              this.yylineno += lines.length - 1;
              this.yylloc.last_line = this.yylineno + 1;
              this.yylloc.last_column = lines[lines.length - 1].length;
            } else {
              this.yylloc.last_column += match_str_len;
            }
            this.yytext += match_str;
            this.match += match_str;
            this.matched += match_str;
            this.matches = match;
            this.yyleng = this.yytext.length;
            this.yylloc.range[1] += match_str_len;
            this.offset += match_str_len;
            this._more = false;
            this._backtrack = false;
            this._input = this._input.slice(match_str_len);
            token = this.performAction.call(
              this,
              this.yy,
              indexed_rule,
              this.conditionStack[this.conditionStack.length - 1]
              /* = YY_START */
            );
            if (this.done && this._input) {
              this.done = false;
            }
            if (token) {
              return token;
            } else if (this._backtrack) {
              for (var k in backup) {
                this[k] = backup[k];
              }
              this.__currentRuleSet__ = null;
              return false;
            } else if (this._signaled_error_token) {
              token = this._signaled_error_token;
              this._signaled_error_token = false;
              return token;
            }
            return false;
          },
          /**
           * return next match in input
           * 
           * @public
           * @this {RegExpLexer}
           */
          next: function lexer_next() {
            if (this.done) {
              this.clear();
              return this.EOF;
            }
            if (!this._input) {
              this.done = true;
            }
            var token, match, tempMatch, index;
            if (!this._more) {
              this.clear();
            }
            var spec = this.__currentRuleSet__;
            if (!spec) {
              spec = this.__currentRuleSet__ = this._currentRules();
              if (!spec || !spec.rules) {
                var lineno_msg = "";
                if (this.options.trackPosition) {
                  lineno_msg = " on line " + (this.yylineno + 1);
                }
                var p = this.constructLexErrorInfo(
                  "Internal lexer engine error" + lineno_msg + ': The lex grammar programmer pushed a non-existing condition name "' + this.topState() + '"; this is a fatal error and should be reported to the application programmer team!',
                  false
                );
                return this.parseError(p.errStr, p, this.JisonLexerError) || this.ERROR;
              }
            }
            var rule_ids = spec.rules;
            var regexes = spec.__rule_regexes;
            var len = spec.__rule_count;
            for (var i = 1; i <= len; i++) {
              tempMatch = this._input.match(regexes[i]);
              if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {
                match = tempMatch;
                index = i;
                if (this.options.backtrack_lexer) {
                  token = this.test_match(tempMatch, rule_ids[i]);
                  if (token !== false) {
                    return token;
                  } else if (this._backtrack) {
                    match = void 0;
                    continue;
                  } else {
                    return false;
                  }
                } else if (!this.options.flex) {
                  break;
                }
              }
            }
            if (match) {
              token = this.test_match(match, rule_ids[index]);
              if (token !== false) {
                return token;
              }
              return false;
            }
            if (!this._input) {
              this.done = true;
              this.clear();
              return this.EOF;
            } else {
              var lineno_msg = "";
              if (this.options.trackPosition) {
                lineno_msg = " on line " + (this.yylineno + 1);
              }
              var p = this.constructLexErrorInfo(
                "Lexical error" + lineno_msg + ": Unrecognized text.",
                this.options.lexerErrorsAreRecoverable
              );
              var pendingInput = this._input;
              var activeCondition = this.topState();
              var conditionStackDepth = this.conditionStack.length;
              token = this.parseError(p.errStr, p, this.JisonLexerError) || this.ERROR;
              if (token === this.ERROR) {
                if (!this.matches && // and make sure the input has been modified/consumed ...
                pendingInput === this._input && // ...or the lexer state has been modified significantly enough
                // to merit a non-consuming error handling action right now.
                activeCondition === this.topState() && conditionStackDepth === this.conditionStack.length) {
                  this.input();
                }
              }
              return token;
            }
          },
          /**
           * return next match that has a token
           * 
           * @public
           * @this {RegExpLexer}
           */
          lex: function lexer_lex() {
            var r;
            if (typeof this.pre_lex === "function") {
              r = this.pre_lex.call(this, 0);
            }
            if (typeof this.options.pre_lex === "function") {
              r = this.options.pre_lex.call(this, r) || r;
            }
            if (this.yy && typeof this.yy.pre_lex === "function") {
              r = this.yy.pre_lex.call(this, r) || r;
            }
            while (!r) {
              r = this.next();
            }
            if (this.yy && typeof this.yy.post_lex === "function") {
              r = this.yy.post_lex.call(this, r) || r;
            }
            if (typeof this.options.post_lex === "function") {
              r = this.options.post_lex.call(this, r) || r;
            }
            if (typeof this.post_lex === "function") {
              r = this.post_lex.call(this, r) || r;
            }
            return r;
          },
          /**
           * return next match that has a token. Identical to the `lex()` API but does not invoke any of the 
           * `pre_lex()` nor any of the `post_lex()` callbacks.
           * 
           * @public
           * @this {RegExpLexer}
           */
          fastLex: function lexer_fastLex() {
            var r;
            while (!r) {
              r = this.next();
            }
            return r;
          },
          /**
           * return info about the lexer state that can help a parser or other lexer API user to use the
           * most efficient means available. This API is provided to aid run-time performance for larger
           * systems which employ this lexer.
           * 
           * @public
           * @this {RegExpLexer}
           */
          canIUse: function lexer_canIUse() {
            var rv = {
              fastLex: !(typeof this.pre_lex === "function" || typeof this.options.pre_lex === "function" || this.yy && typeof this.yy.pre_lex === "function" || this.yy && typeof this.yy.post_lex === "function" || typeof this.options.post_lex === "function" || typeof this.post_lex === "function") && typeof this.fastLex === "function"
            };
            return rv;
          },
          /**
           * backwards compatible alias for `pushState()`;
           * the latter is symmetrical with `popState()` and we advise to use
           * those APIs in any modern lexer code, rather than `begin()`.
           * 
           * @public
           * @this {RegExpLexer}
           */
          begin: function lexer_begin(condition) {
            return this.pushState(condition);
          },
          /**
           * activates a new lexer condition state (pushes the new lexer
           * condition state onto the condition stack)
           * 
           * @public
           * @this {RegExpLexer}
           */
          pushState: function lexer_pushState(condition) {
            this.conditionStack.push(condition);
            this.__currentRuleSet__ = null;
            return this;
          },
          /**
           * pop the previously active lexer condition state off the condition
           * stack
           * 
           * @public
           * @this {RegExpLexer}
           */
          popState: function lexer_popState() {
            var n = this.conditionStack.length - 1;
            if (n > 0) {
              this.__currentRuleSet__ = null;
              return this.conditionStack.pop();
            } else {
              return this.conditionStack[0];
            }
          },
          /**
           * return the currently active lexer condition state; when an index
           * argument is provided it produces the N-th previous condition state,
           * if available
           * 
           * @public
           * @this {RegExpLexer}
           */
          topState: function lexer_topState(n) {
            n = this.conditionStack.length - 1 - Math.abs(n || 0);
            if (n >= 0) {
              return this.conditionStack[n];
            } else {
              return "INITIAL";
            }
          },
          /**
           * (internal) determine the lexer rule set which is active for the
           * currently active lexer condition state
           * 
           * @public
           * @this {RegExpLexer}
           */
          _currentRules: function lexer__currentRules() {
            if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {
              return this.conditions[this.conditionStack[this.conditionStack.length - 1]];
            } else {
              return this.conditions["INITIAL"];
            }
          },
          /**
           * return the number of states currently on the stack
           * 
           * @public
           * @this {RegExpLexer}
           */
          stateStackSize: function lexer_stateStackSize() {
            return this.conditionStack.length;
          },
          options: {
            trackPosition: true,
            caseInsensitive: true
          },
          JisonLexerError,
          performAction: function lexer__performAction(yy, yyrulenumber, YY_START) {
            var yy_ = this;
            var YYSTATE = YY_START;
            switch (yyrulenumber) {
              case 0:
                break;
              default:
                return this.simpleCaseActionClusters[yyrulenumber];
            }
          },
          simpleCaseActionClusters: {
            /*! Conditions:: INITIAL */
            /*! Rule::       (-(webkit|moz)-)?calc\b */
            1: 3,
            /*! Conditions:: INITIAL */
            /*! Rule::       [a-z][a-z0-9-]*\s*\((?:(?:"(?:\\.|[^\"\\])*"|'(?:\\.|[^\'\\])*')|\([^)]*\)|[^\(\)]*)*\) */
            2: 10,
            /*! Conditions:: INITIAL */
            /*! Rule::       \* */
            3: 8,
            /*! Conditions:: INITIAL */
            /*! Rule::       \/ */
            4: 9,
            /*! Conditions:: INITIAL */
            /*! Rule::       \+ */
            5: 6,
            /*! Conditions:: INITIAL */
            /*! Rule::       - */
            6: 7,
            /*! Conditions:: INITIAL */
            /*! Rule::       (([0-9]+(\.[0-9]+)?|\.[0-9]+)(e(\+|-)[0-9]+)?)em\b */
            7: 17,
            /*! Conditions:: INITIAL */
            /*! Rule::       (([0-9]+(\.[0-9]+)?|\.[0-9]+)(e(\+|-)[0-9]+)?)ex\b */
            8: 18,
            /*! Conditions:: INITIAL */
            /*! Rule::       (([0-9]+(\.[0-9]+)?|\.[0-9]+)(e(\+|-)[0-9]+)?)ch\b */
            9: 19,
            /*! Conditions:: INITIAL */
            /*! Rule::       (([0-9]+(\.[0-9]+)?|\.[0-9]+)(e(\+|-)[0-9]+)?)rem\b */
            10: 20,
            /*! Conditions:: INITIAL */
            /*! Rule::       (([0-9]+(\.[0-9]+)?|\.[0-9]+)(e(\+|-)[0-9]+)?)vw\b */
            11: 22,
            /*! Conditions:: INITIAL */
            /*! Rule::       (([0-9]+(\.[0-9]+)?|\.[0-9]+)(e(\+|-)[0-9]+)?)vh\b */
            12: 21,
            /*! Conditions:: INITIAL */
            /*! Rule::       (([0-9]+(\.[0-9]+)?|\.[0-9]+)(e(\+|-)[0-9]+)?)vmin\b */
            13: 23,
            /*! Conditions:: INITIAL */
            /*! Rule::       (([0-9]+(\.[0-9]+)?|\.[0-9]+)(e(\+|-)[0-9]+)?)vmax\b */
            14: 24,
            /*! Conditions:: INITIAL */
            /*! Rule::       (([0-9]+(\.[0-9]+)?|\.[0-9]+)(e(\+|-)[0-9]+)?)cm\b */
            15: 11,
            /*! Conditions:: INITIAL */
            /*! Rule::       (([0-9]+(\.[0-9]+)?|\.[0-9]+)(e(\+|-)[0-9]+)?)mm\b */
            16: 11,
            /*! Conditions:: INITIAL */
            /*! Rule::       (([0-9]+(\.[0-9]+)?|\.[0-9]+)(e(\+|-)[0-9]+)?)Q\b */
            17: 11,
            /*! Conditions:: INITIAL */
            /*! Rule::       (([0-9]+(\.[0-9]+)?|\.[0-9]+)(e(\+|-)[0-9]+)?)in\b */
            18: 11,
            /*! Conditions:: INITIAL */
            /*! Rule::       (([0-9]+(\.[0-9]+)?|\.[0-9]+)(e(\+|-)[0-9]+)?)pt\b */
            19: 11,
            /*! Conditions:: INITIAL */
            /*! Rule::       (([0-9]+(\.[0-9]+)?|\.[0-9]+)(e(\+|-)[0-9]+)?)pc\b */
            20: 11,
            /*! Conditions:: INITIAL */
            /*! Rule::       (([0-9]+(\.[0-9]+)?|\.[0-9]+)(e(\+|-)[0-9]+)?)px\b */
            21: 11,
            /*! Conditions:: INITIAL */
            /*! Rule::       (([0-9]+(\.[0-9]+)?|\.[0-9]+)(e(\+|-)[0-9]+)?)deg\b */
            22: 12,
            /*! Conditions:: INITIAL */
            /*! Rule::       (([0-9]+(\.[0-9]+)?|\.[0-9]+)(e(\+|-)[0-9]+)?)grad\b */
            23: 12,
            /*! Conditions:: INITIAL */
            /*! Rule::       (([0-9]+(\.[0-9]+)?|\.[0-9]+)(e(\+|-)[0-9]+)?)rad\b */
            24: 12,
            /*! Conditions:: INITIAL */
            /*! Rule::       (([0-9]+(\.[0-9]+)?|\.[0-9]+)(e(\+|-)[0-9]+)?)turn\b */
            25: 12,
            /*! Conditions:: INITIAL */
            /*! Rule::       (([0-9]+(\.[0-9]+)?|\.[0-9]+)(e(\+|-)[0-9]+)?)s\b */
            26: 13,
            /*! Conditions:: INITIAL */
            /*! Rule::       (([0-9]+(\.[0-9]+)?|\.[0-9]+)(e(\+|-)[0-9]+)?)ms\b */
            27: 13,
            /*! Conditions:: INITIAL */
            /*! Rule::       (([0-9]+(\.[0-9]+)?|\.[0-9]+)(e(\+|-)[0-9]+)?)Hz\b */
            28: 14,
            /*! Conditions:: INITIAL */
            /*! Rule::       (([0-9]+(\.[0-9]+)?|\.[0-9]+)(e(\+|-)[0-9]+)?)kHz\b */
            29: 14,
            /*! Conditions:: INITIAL */
            /*! Rule::       (([0-9]+(\.[0-9]+)?|\.[0-9]+)(e(\+|-)[0-9]+)?)dpi\b */
            30: 15,
            /*! Conditions:: INITIAL */
            /*! Rule::       (([0-9]+(\.[0-9]+)?|\.[0-9]+)(e(\+|-)[0-9]+)?)dpcm\b */
            31: 15,
            /*! Conditions:: INITIAL */
            /*! Rule::       (([0-9]+(\.[0-9]+)?|\.[0-9]+)(e(\+|-)[0-9]+)?)dppx\b */
            32: 15,
            /*! Conditions:: INITIAL */
            /*! Rule::       (([0-9]+(\.[0-9]+)?|\.[0-9]+)(e(\+|-)[0-9]+)?)% */
            33: 25,
            /*! Conditions:: INITIAL */
            /*! Rule::       (([0-9]+(\.[0-9]+)?|\.[0-9]+)(e(\+|-)[0-9]+)?)\b */
            34: 26,
            /*! Conditions:: INITIAL */
            /*! Rule::       (([0-9]+(\.[0-9]+)?|\.[0-9]+)(e(\+|-)[0-9]+)?)-?([a-zA-Z_]|[\240-\377]|(\\[0-9a-fA-F]{1,6}(\r\n|[ \t\r\n\f])?|\\[^\r\n\f0-9a-fA-F]))([a-zA-Z0-9_-]|[\240-\377]|(\\[0-9a-fA-F]{1,6}(\r\n|[ \t\r\n\f])?|\\[^\r\n\f0-9a-fA-F]))*\b */
            35: 16,
            /*! Conditions:: INITIAL */
            /*! Rule::       \( */
            36: 4,
            /*! Conditions:: INITIAL */
            /*! Rule::       \) */
            37: 5,
            /*! Conditions:: INITIAL */
            /*! Rule::       $ */
            38: 1
          },
          rules: [
            /*  0: */
            /^(?:\s+)/i,
            /*  1: */
            /^(?:(-(webkit|moz)-)?calc\b)/i,
            /*  2: */
            /^(?:[a-z][\d\-a-z]*\s*\((?:(?:"(?:\\.|[^"\\])*"|'(?:\\.|[^'\\])*')|\([^)]*\)|[^()]*)*\))/i,
            /*  3: */
            /^(?:\*)/i,
            /*  4: */
            /^(?:\/)/i,
            /*  5: */
            /^(?:\+)/i,
            /*  6: */
            /^(?:-)/i,
            /*  7: */
            /^(?:((\d+(\.\d+)?|\.\d+)(e(\+|-)\d+)?)em\b)/i,
            /*  8: */
            /^(?:((\d+(\.\d+)?|\.\d+)(e(\+|-)\d+)?)ex\b)/i,
            /*  9: */
            /^(?:((\d+(\.\d+)?|\.\d+)(e(\+|-)\d+)?)ch\b)/i,
            /* 10: */
            /^(?:((\d+(\.\d+)?|\.\d+)(e(\+|-)\d+)?)rem\b)/i,
            /* 11: */
            /^(?:((\d+(\.\d+)?|\.\d+)(e(\+|-)\d+)?)vw\b)/i,
            /* 12: */
            /^(?:((\d+(\.\d+)?|\.\d+)(e(\+|-)\d+)?)vh\b)/i,
            /* 13: */
            /^(?:((\d+(\.\d+)?|\.\d+)(e(\+|-)\d+)?)vmin\b)/i,
            /* 14: */
            /^(?:((\d+(\.\d+)?|\.\d+)(e(\+|-)\d+)?)vmax\b)/i,
            /* 15: */
            /^(?:((\d+(\.\d+)?|\.\d+)(e(\+|-)\d+)?)cm\b)/i,
            /* 16: */
            /^(?:((\d+(\.\d+)?|\.\d+)(e(\+|-)\d+)?)mm\b)/i,
            /* 17: */
            /^(?:((\d+(\.\d+)?|\.\d+)(e(\+|-)\d+)?)Q\b)/i,
            /* 18: */
            /^(?:((\d+(\.\d+)?|\.\d+)(e(\+|-)\d+)?)in\b)/i,
            /* 19: */
            /^(?:((\d+(\.\d+)?|\.\d+)(e(\+|-)\d+)?)pt\b)/i,
            /* 20: */
            /^(?:((\d+(\.\d+)?|\.\d+)(e(\+|-)\d+)?)pc\b)/i,
            /* 21: */
            /^(?:((\d+(\.\d+)?|\.\d+)(e(\+|-)\d+)?)px\b)/i,
            /* 22: */
            /^(?:((\d+(\.\d+)?|\.\d+)(e(\+|-)\d+)?)deg\b)/i,
            /* 23: */
            /^(?:((\d+(\.\d+)?|\.\d+)(e(\+|-)\d+)?)grad\b)/i,
            /* 24: */
            /^(?:((\d+(\.\d+)?|\.\d+)(e(\+|-)\d+)?)rad\b)/i,
            /* 25: */
            /^(?:((\d+(\.\d+)?|\.\d+)(e(\+|-)\d+)?)turn\b)/i,
            /* 26: */
            /^(?:((\d+(\.\d+)?|\.\d+)(e(\+|-)\d+)?)s\b)/i,
            /* 27: */
            /^(?:((\d+(\.\d+)?|\.\d+)(e(\+|-)\d+)?)ms\b)/i,
            /* 28: */
            /^(?:((\d+(\.\d+)?|\.\d+)(e(\+|-)\d+)?)Hz\b)/i,
            /* 29: */
            /^(?:((\d+(\.\d+)?|\.\d+)(e(\+|-)\d+)?)kHz\b)/i,
            /* 30: */
            /^(?:((\d+(\.\d+)?|\.\d+)(e(\+|-)\d+)?)dpi\b)/i,
            /* 31: */
            /^(?:((\d+(\.\d+)?|\.\d+)(e(\+|-)\d+)?)dpcm\b)/i,
            /* 32: */
            /^(?:((\d+(\.\d+)?|\.\d+)(e(\+|-)\d+)?)dppx\b)/i,
            /* 33: */
            /^(?:((\d+(\.\d+)?|\.\d+)(e(\+|-)\d+)?)%)/i,
            /* 34: */
            /^(?:((\d+(\.\d+)?|\.\d+)(e(\+|-)\d+)?)\b)/i,
            /* 35: */
            /^(?:((\d+(\.\d+)?|\.\d+)(e(\+|-)\d+)?)-?([^\W\d]|[ -ÿ]|(\\[\dA-Fa-f]{1,6}(\r\n|[\t\n\f\r ])?|\\[^\d\n\f\rA-Fa-f]))([\w\-]|[ -ÿ]|(\\[\dA-Fa-f]{1,6}(\r\n|[\t\n\f\r ])?|\\[^\d\n\f\rA-Fa-f]))*\b)/i,
            /* 36: */
            /^(?:\()/i,
            /* 37: */
            /^(?:\))/i,
            /* 38: */
            /^(?:$)/i
          ],
          conditions: {
            "INITIAL": {
              rules: [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38
              ],
              inclusive: true
            }
          }
        };
        return lexer2;
      }();
      parser2.lexer = lexer;
      function Parser() {
        this.yy = {};
      }
      Parser.prototype = parser2;
      parser2.Parser = Parser;
      return new Parser();
    }();
    if (typeof require !== "undefined" && typeof exports !== "undefined") {
      exports.parser = parser;
      exports.Parser = parser.Parser;
      exports.parse = function() {
        return parser.parse.apply(parser, arguments);
      };
    }
  }
});

// node_modules/postcss-calc/src/lib/convertUnit.js
var require_convertUnit = __commonJS({
  "node_modules/postcss-calc/src/lib/convertUnit.js"(exports, module2) {
    "use strict";
    var conversions = {
      // Absolute length units
      px: {
        px: 1,
        cm: 96 / 2.54,
        mm: 96 / 25.4,
        q: 96 / 101.6,
        in: 96,
        pt: 96 / 72,
        pc: 16
      },
      cm: {
        px: 2.54 / 96,
        cm: 1,
        mm: 0.1,
        q: 0.025,
        in: 2.54,
        pt: 2.54 / 72,
        pc: 2.54 / 6
      },
      mm: {
        px: 25.4 / 96,
        cm: 10,
        mm: 1,
        q: 0.25,
        in: 25.4,
        pt: 25.4 / 72,
        pc: 25.4 / 6
      },
      q: {
        px: 101.6 / 96,
        cm: 40,
        mm: 4,
        q: 1,
        in: 101.6,
        pt: 101.6 / 72,
        pc: 101.6 / 6
      },
      in: {
        px: 1 / 96,
        cm: 1 / 2.54,
        mm: 1 / 25.4,
        q: 1 / 101.6,
        in: 1,
        pt: 1 / 72,
        pc: 1 / 6
      },
      pt: {
        px: 0.75,
        cm: 72 / 2.54,
        mm: 72 / 25.4,
        q: 72 / 101.6,
        in: 72,
        pt: 1,
        pc: 12
      },
      pc: {
        px: 0.0625,
        cm: 6 / 2.54,
        mm: 6 / 25.4,
        q: 6 / 101.6,
        in: 6,
        pt: 6 / 72,
        pc: 1
      },
      // Angle units
      deg: {
        deg: 1,
        grad: 0.9,
        rad: 180 / Math.PI,
        turn: 360
      },
      grad: {
        deg: 400 / 360,
        grad: 1,
        rad: 200 / Math.PI,
        turn: 400
      },
      rad: {
        deg: Math.PI / 180,
        grad: Math.PI / 200,
        rad: 1,
        turn: Math.PI * 2
      },
      turn: {
        deg: 1 / 360,
        grad: 25e-4,
        rad: 0.5 / Math.PI,
        turn: 1
      },
      // Duration units
      s: {
        s: 1,
        ms: 1e-3
      },
      ms: {
        s: 1e3,
        ms: 1
      },
      // Frequency units
      hz: {
        hz: 1,
        khz: 1e3
      },
      khz: {
        hz: 1e-3,
        khz: 1
      },
      // Resolution units
      dpi: {
        dpi: 1,
        dpcm: 1 / 2.54,
        dppx: 1 / 96
      },
      dpcm: {
        dpi: 2.54,
        dpcm: 1,
        dppx: 2.54 / 96
      },
      dppx: {
        dpi: 96,
        dpcm: 96 / 2.54,
        dppx: 1
      }
    };
    function convertUnit(value, sourceUnit, targetUnit, precision) {
      const sourceUnitNormalized = sourceUnit.toLowerCase();
      const targetUnitNormalized = targetUnit.toLowerCase();
      if (!conversions[targetUnitNormalized]) {
        throw new Error("Cannot convert to " + targetUnit);
      }
      if (!conversions[targetUnitNormalized][sourceUnitNormalized]) {
        throw new Error("Cannot convert from " + sourceUnit + " to " + targetUnit);
      }
      const converted = conversions[targetUnitNormalized][sourceUnitNormalized] * value;
      if (precision !== false) {
        precision = Math.pow(10, Math.ceil(precision) || 5);
        return Math.round(converted * precision) / precision;
      }
      return converted;
    }
    module2.exports = convertUnit;
  }
});

// node_modules/postcss-calc/src/lib/reducer.js
var require_reducer = __commonJS({
  "node_modules/postcss-calc/src/lib/reducer.js"(exports, module2) {
    "use strict";
    var convertUnit = require_convertUnit();
    function isValueType(node) {
      switch (node.type) {
        case "LengthValue":
        case "AngleValue":
        case "TimeValue":
        case "FrequencyValue":
        case "ResolutionValue":
        case "EmValue":
        case "ExValue":
        case "ChValue":
        case "RemValue":
        case "VhValue":
        case "VwValue":
        case "VminValue":
        case "VmaxValue":
        case "PercentageValue":
        case "Number":
          return true;
      }
      return false;
    }
    function flip(operator) {
      return operator === "+" ? "-" : "+";
    }
    function isAddSubOperator(operator) {
      return operator === "+" || operator === "-";
    }
    function collectAddSubItems(preOperator, node, collected, precision) {
      if (!isAddSubOperator(preOperator)) {
        throw new Error(`invalid operator ${preOperator}`);
      }
      if (isValueType(node)) {
        const itemIndex = collected.findIndex((x) => x.node.type === node.type);
        if (itemIndex >= 0) {
          if (node.value === 0) {
            return;
          }
          const otherValueNode = (
            /** @type import('../parser').ValueExpression*/
            collected[itemIndex].node
          );
          const { left: reducedNode, right: current } = convertNodesUnits(
            otherValueNode,
            node,
            precision
          );
          if (collected[itemIndex].preOperator === "-") {
            collected[itemIndex].preOperator = "+";
            reducedNode.value *= -1;
          }
          if (preOperator === "+") {
            reducedNode.value += current.value;
          } else {
            reducedNode.value -= current.value;
          }
          if (reducedNode.value >= 0) {
            collected[itemIndex] = { node: reducedNode, preOperator: "+" };
          } else {
            reducedNode.value *= -1;
            collected[itemIndex] = { node: reducedNode, preOperator: "-" };
          }
        } else {
          if (node.value >= 0) {
            collected.push({ node, preOperator });
          } else {
            node.value *= -1;
            collected.push({ node, preOperator: flip(preOperator) });
          }
        }
      } else if (node.type === "MathExpression") {
        if (isAddSubOperator(node.operator)) {
          collectAddSubItems(preOperator, node.left, collected, precision);
          const collectRightOperator = preOperator === "-" ? flip(node.operator) : node.operator;
          collectAddSubItems(
            collectRightOperator,
            node.right,
            collected,
            precision
          );
        } else {
          const reducedNode = reduce(node, precision);
          if (reducedNode.type !== "MathExpression" || isAddSubOperator(reducedNode.operator)) {
            collectAddSubItems(preOperator, reducedNode, collected, precision);
          } else {
            collected.push({ node: reducedNode, preOperator });
          }
        }
      } else if (node.type === "ParenthesizedExpression") {
        collectAddSubItems(preOperator, node.content, collected, precision);
      } else {
        collected.push({ node, preOperator });
      }
    }
    function reduceAddSubExpression(node, precision) {
      const collected = [];
      collectAddSubItems("+", node, collected, precision);
      const withoutZeroItem = collected.filter(
        (item) => !(isValueType(item.node) && item.node.value === 0)
      );
      const firstNonZeroItem = withoutZeroItem[0];
      if (!firstNonZeroItem || firstNonZeroItem.preOperator === "-" && !isValueType(firstNonZeroItem.node)) {
        const firstZeroItem = collected.find(
          (item) => isValueType(item.node) && item.node.value === 0
        );
        if (firstZeroItem) {
          withoutZeroItem.unshift(firstZeroItem);
        }
      }
      if (withoutZeroItem[0].preOperator === "-" && isValueType(withoutZeroItem[0].node)) {
        withoutZeroItem[0].node.value *= -1;
        withoutZeroItem[0].preOperator = "+";
      }
      let root = withoutZeroItem[0].node;
      for (let i = 1; i < withoutZeroItem.length; i++) {
        root = {
          type: "MathExpression",
          operator: withoutZeroItem[i].preOperator,
          left: root,
          right: withoutZeroItem[i].node
        };
      }
      return root;
    }
    function reduceDivisionExpression(node) {
      if (!isValueType(node.right)) {
        return node;
      }
      if (node.right.type !== "Number") {
        throw new Error(`Cannot divide by "${node.right.unit}", number expected`);
      }
      return applyNumberDivision(node.left, node.right.value);
    }
    function applyNumberDivision(node, divisor) {
      if (divisor === 0) {
        throw new Error("Cannot divide by zero");
      }
      if (isValueType(node)) {
        node.value /= divisor;
        return node;
      }
      if (node.type === "MathExpression" && isAddSubOperator(node.operator)) {
        return {
          type: "MathExpression",
          operator: node.operator,
          left: applyNumberDivision(node.left, divisor),
          right: applyNumberDivision(node.right, divisor)
        };
      }
      return {
        type: "MathExpression",
        operator: "/",
        left: node,
        right: {
          type: "Number",
          value: divisor
        }
      };
    }
    function reduceMultiplicationExpression(node) {
      if (node.right.type === "Number") {
        return applyNumberMultiplication(node.left, node.right.value);
      }
      if (node.left.type === "Number") {
        return applyNumberMultiplication(node.right, node.left.value);
      }
      return node;
    }
    function applyNumberMultiplication(node, multiplier) {
      if (isValueType(node)) {
        node.value *= multiplier;
        return node;
      }
      if (node.type === "MathExpression" && isAddSubOperator(node.operator)) {
        return {
          type: "MathExpression",
          operator: node.operator,
          left: applyNumberMultiplication(node.left, multiplier),
          right: applyNumberMultiplication(node.right, multiplier)
        };
      }
      return {
        type: "MathExpression",
        operator: "*",
        left: node,
        right: {
          type: "Number",
          value: multiplier
        }
      };
    }
    function convertNodesUnits(left, right, precision) {
      switch (left.type) {
        case "LengthValue":
        case "AngleValue":
        case "TimeValue":
        case "FrequencyValue":
        case "ResolutionValue":
          if (right.type === left.type && right.unit && left.unit) {
            const converted = convertUnit(
              right.value,
              right.unit,
              left.unit,
              precision
            );
            right = {
              type: left.type,
              value: converted,
              unit: left.unit
            };
          }
          return { left, right };
        default:
          return { left, right };
      }
    }
    function includesNoCssProperties(node) {
      return node.content.type !== "Function" && (node.content.type !== "MathExpression" || node.content.right.type !== "Function" && node.content.left.type !== "Function");
    }
    function reduce(node, precision) {
      if (node.type === "MathExpression") {
        if (isAddSubOperator(node.operator)) {
          return reduceAddSubExpression(node, precision);
        }
        node.left = reduce(node.left, precision);
        node.right = reduce(node.right, precision);
        switch (node.operator) {
          case "/":
            return reduceDivisionExpression(node);
          case "*":
            return reduceMultiplicationExpression(node);
        }
        return node;
      }
      if (node.type === "ParenthesizedExpression") {
        if (includesNoCssProperties(node)) {
          return reduce(node.content, precision);
        }
      }
      return node;
    }
    module2.exports = reduce;
  }
});

// node_modules/postcss-calc/src/lib/stringifier.js
var require_stringifier3 = __commonJS({
  "node_modules/postcss-calc/src/lib/stringifier.js"(exports, module2) {
    "use strict";
    var order = {
      "*": 0,
      "/": 0,
      "+": 1,
      "-": 1
    };
    function round(value, prec) {
      if (prec !== false) {
        const precision = Math.pow(10, prec);
        return Math.round(value * precision) / precision;
      }
      return value;
    }
    function stringify(node, prec) {
      switch (node.type) {
        case "MathExpression": {
          const { left, right, operator: op } = node;
          let str = "";
          if (left.type === "MathExpression" && order[op] < order[left.operator]) {
            str += `(${stringify(left, prec)})`;
          } else {
            str += stringify(left, prec);
          }
          str += order[op] ? ` ${node.operator} ` : node.operator;
          if (right.type === "MathExpression" && order[op] < order[right.operator]) {
            str += `(${stringify(right, prec)})`;
          } else {
            str += stringify(right, prec);
          }
          return str;
        }
        case "Number":
          return round(node.value, prec).toString();
        case "Function":
          return node.value.toString();
        case "ParenthesizedExpression":
          return `(${stringify(node.content, prec)})`;
        default:
          return round(node.value, prec) + node.unit;
      }
    }
    module2.exports = function(calc, node, originalValue, options, result, item) {
      let str = stringify(node, options.precision);
      const shouldPrintCalc = node.type === "MathExpression" || node.type === "Function" || node.type === "ParenthesizedExpression";
      if (shouldPrintCalc) {
        if (node.type === "ParenthesizedExpression") {
          str = `${calc}${str}`;
        } else {
          str = `${calc}(${str})`;
        }
        if (options.warnWhenCannotResolve) {
          result.warn("Could not reduce expression: " + originalValue, {
            plugin: "postcss-calc",
            node: item
          });
        }
      }
      return str;
    };
  }
});

// node_modules/postcss-calc/src/lib/transform.js
var require_transform = __commonJS({
  "node_modules/postcss-calc/src/lib/transform.js"(exports, module2) {
    "use strict";
    var selectorParser = require_dist3();
    var valueParser = require_lib();
    var { parser } = require_parser6();
    var reducer = require_reducer();
    var stringifier = require_stringifier3();
    var MATCH_CALC = /((?:-(moz|webkit)-)?calc)/i;
    function transformValue(value, options, result, item) {
      return valueParser(value).walk((node) => {
        if (node.type !== "function" || !MATCH_CALC.test(node.value)) {
          return;
        }
        const contents = valueParser.stringify(node.nodes);
        const ast = parser.parse(contents);
        const reducedAst = reducer(ast, options.precision);
        node.type = "word";
        node.value = stringifier(
          node.value,
          reducedAst,
          value,
          options,
          result,
          item
        );
        return false;
      }).toString();
    }
    function transformSelector(value, options, result, item) {
      return selectorParser((selectors) => {
        selectors.walk((node) => {
          if (node.type === "attribute" && node.value) {
            node.setValue(transformValue(node.value, options, result, item));
          }
          if (node.type === "tag") {
            node.value = transformValue(node.value, options, result, item);
          }
          return;
        });
      }).processSync(value);
    }
    module2.exports = (node, property, options, result) => {
      let value = node[property];
      try {
        value = property === "selector" ? transformSelector(node[property], options, result, node) : transformValue(node[property], options, result, node);
      } catch (error) {
        if (error instanceof Error) {
          result.warn(error.message, { node });
        } else {
          result.warn("Error", { node });
        }
        return;
      }
      if (options.preserve && node[property] !== value) {
        const clone = node.clone();
        clone[property] = value;
        node.parent.insertBefore(node, clone);
      } else {
        node[property] = value;
      }
    };
  }
});

// node_modules/postcss-calc/src/index.js
var require_src8 = __commonJS({
  "node_modules/postcss-calc/src/index.js"(exports, module2) {
    "use strict";
    var transform2 = require_transform();
    function pluginCreator(opts) {
      const options = Object.assign(
        {
          precision: 5,
          preserve: false,
          warnWhenCannotResolve: false,
          mediaQueries: false,
          selectors: false
        },
        opts
      );
      return {
        postcssPlugin: "postcss-calc",
        OnceExit(css, { result }) {
          css.walk((node) => {
            const { type } = node;
            if (type === "decl") {
              transform2(node, "value", options, result);
            }
            if (type === "atrule" && options.mediaQueries) {
              transform2(node, "params", options, result);
            }
            if (type === "rule" && options.selectors) {
              transform2(node, "selector", options, result);
            }
          });
        }
      };
    }
    pluginCreator.postcss = true;
    module2.exports = pluginCreator;
  }
});

// node_modules/colord/plugins/minify.js
var require_minify = __commonJS({
  "node_modules/colord/plugins/minify.js"(exports, module2) {
    module2.exports = function(t) {
      var r = function(t2) {
        var r2, n2, e, i = t2.toHex(), a = t2.alpha(), h = i.split(""), s = h[1], o = h[2], u = h[3], l = h[4], p = h[5], f = h[6], g = h[7], v = h[8];
        if (a > 0 && a < 1 && (r2 = parseInt(g + v, 16) / 255, void 0 === (n2 = 2) && (n2 = 0), void 0 === e && (e = Math.pow(10, n2)), Math.round(e * r2) / e + 0 !== a))
          return null;
        if (s === o && u === l && p === f) {
          if (1 === a)
            return "#" + s + u + p;
          if (g === v)
            return "#" + s + u + p + g;
        }
        return i;
      }, n = function(t2) {
        return t2 > 0 && t2 < 1 ? t2.toString().replace("0.", ".") : t2;
      };
      t.prototype.minify = function(t2) {
        void 0 === t2 && (t2 = {});
        var e = this.toRgb(), i = n(e.r), a = n(e.g), h = n(e.b), s = this.toHsl(), o = n(s.h), u = n(s.s), l = n(s.l), p = n(this.alpha()), f = Object.assign({ hex: true, rgb: true, hsl: true }, t2), g = [];
        if (f.hex && (1 === p || f.alphaHex)) {
          var v = r(this);
          v && g.push(v);
        }
        if (f.rgb && g.push(1 === p ? "rgb(" + i + "," + a + "," + h + ")" : "rgba(" + i + "," + a + "," + h + "," + p + ")"), f.hsl && g.push(1 === p ? "hsl(" + o + "," + u + "%," + l + "%)" : "hsla(" + o + "," + u + "%," + l + "%," + p + ")"), f.transparent && 0 === i && 0 === a && 0 === h && 0 === p)
          g.push("transparent");
        else if (1 === p && f.name && "function" == typeof this.toName) {
          var c = this.toName();
          c && g.push(c);
        }
        return function(t3) {
          for (var r2 = t3[0], n2 = 1; n2 < t3.length; n2++)
            t3[n2].length < r2.length && (r2 = t3[n2]);
          return r2;
        }(g);
      };
    };
  }
});

// node_modules/postcss-colormin/src/minifyColor.js
var require_minifyColor = __commonJS({
  "node_modules/postcss-colormin/src/minifyColor.js"(exports, module2) {
    "use strict";
    var { colord, extend } = require_colord();
    var namesPlugin = require_names();
    var minifierPlugin = require_minify();
    extend(
      /** @type {any[]} */
      [namesPlugin, minifierPlugin]
    );
    module2.exports = function minifyColor(input, options = {}) {
      const instance = colord(input);
      if (instance.isValid()) {
        const minified = instance.minify(options);
        return minified.length < input.length ? minified : input.toLowerCase();
      } else {
        return input;
      }
    };
  }
});

// node_modules/postcss-colormin/src/index.js
var require_src9 = __commonJS({
  "node_modules/postcss-colormin/src/index.js"(exports, module2) {
    "use strict";
    var browserslist = require_browserslist();
    var { isSupported } = require_dist2();
    var valueParser = require_lib();
    var minifyColor = require_minifyColor();
    function walk(parent, callback) {
      parent.nodes.forEach((node, index) => {
        const bubble = callback(node, index, parent);
        if (node.type === "function" && bubble !== false) {
          walk(node, callback);
        }
      });
    }
    var browsersWithTransparentBug = /* @__PURE__ */ new Set(["ie 8", "ie 9"]);
    var mathFunctions = /* @__PURE__ */ new Set(["calc", "min", "max", "clamp"]);
    function isMathFunctionNode(node) {
      if (node.type !== "function") {
        return false;
      }
      return mathFunctions.has(node.value.toLowerCase());
    }
    function transform2(value, options) {
      const parsed = valueParser(value);
      walk(parsed, (node, index, parent) => {
        if (node.type === "function") {
          if (/^(rgb|hsl)a?$/i.test(node.value)) {
            const { value: originalValue } = node;
            node.value = minifyColor(valueParser.stringify(node), options);
            node.type = "word";
            const next = parent.nodes[index + 1];
            if (node.value !== originalValue && next && (next.type === "word" || next.type === "function")) {
              parent.nodes.splice(
                index + 1,
                0,
                /** @type {valueParser.SpaceNode} */
                {
                  type: "space",
                  value: " "
                }
              );
            }
          } else if (isMathFunctionNode(node)) {
            return false;
          }
        } else if (node.type === "word") {
          node.value = minifyColor(node.value, options);
        }
      });
      return parsed.toString();
    }
    function addPluginDefaults(options, browsers) {
      const defaults = {
        // Does the browser support 4 & 8 character hex notation
        transparent: browsers.some((b) => browsersWithTransparentBug.has(b)) === false,
        // Does the browser support "transparent" value properly
        alphaHex: isSupported("css-rrggbbaa", browsers),
        name: true
      };
      return { ...defaults, ...options };
    }
    function pluginCreator(config = {}) {
      return {
        postcssPlugin: "postcss-colormin",
        prepare(result) {
          const resultOptions = result.opts || {};
          const browsers = browserslist(null, {
            stats: resultOptions.stats,
            path: __dirname,
            env: resultOptions.env
          });
          const cache = /* @__PURE__ */ new Map();
          const options = addPluginDefaults(config, browsers);
          return {
            OnceExit(css) {
              css.walkDecls((decl) => {
                if (/^(composes|font|src$|filter|-webkit-tap-highlight-color)/i.test(
                  decl.prop
                )) {
                  return;
                }
                const value = decl.value;
                if (!value) {
                  return;
                }
                const cacheKey = JSON.stringify({ value, options, browsers });
                if (cache.has(cacheKey)) {
                  decl.value = cache.get(cacheKey);
                  return;
                }
                const newValue = transform2(value, options);
                decl.value = newValue;
                cache.set(cacheKey, newValue);
              });
            }
          };
        }
      };
    }
    pluginCreator.postcss = true;
    module2.exports = pluginCreator;
  }
});

// node_modules/postcss-ordered-values/src/lib/joinGridValue.js
var require_joinGridValue = __commonJS({
  "node_modules/postcss-ordered-values/src/lib/joinGridValue.js"(exports, module2) {
    "use strict";
    module2.exports = function joinGridVal(grid) {
      return grid.join(" / ").trim();
    };
  }
});

// node_modules/postcss-ordered-values/src/rules/grid.js
var require_grid = __commonJS({
  "node_modules/postcss-ordered-values/src/rules/grid.js"(exports, module2) {
    "use strict";
    var joinGridValue = require_joinGridValue();
    var normalizeGridAutoFlow = (gridAutoFlow) => {
      let newValue = { front: "", back: "" };
      let shouldNormalize = false;
      gridAutoFlow.walk((node) => {
        if (node.value === "dense") {
          shouldNormalize = true;
          newValue.back = node.value;
        } else if (["row", "column"].includes(node.value.trim().toLowerCase())) {
          shouldNormalize = true;
          newValue.front = node.value;
        } else {
          shouldNormalize = false;
        }
      });
      if (shouldNormalize) {
        return `${newValue.front.trim()} ${newValue.back.trim()}`;
      }
      return gridAutoFlow;
    };
    var normalizeGridColumnRowGap = (gridGap) => {
      let newValue = { front: "", back: "" };
      let shouldNormalize = false;
      gridGap.walk((node) => {
        if (node.value === "normal") {
          shouldNormalize = true;
          newValue.front = node.value;
        } else {
          newValue.back = `${newValue.back} ${node.value}`;
        }
      });
      if (shouldNormalize) {
        return `${newValue.front.trim()} ${newValue.back.trim()}`;
      }
      return gridGap;
    };
    var normalizeGridColumnRow = (grid) => {
      let gridValue = grid.toString().split("/");
      if (gridValue.length > 1) {
        return joinGridValue(
          gridValue.map((gridLine) => {
            let normalizeValue = {
              front: "",
              back: ""
            };
            gridLine = gridLine.trim();
            gridLine.split(" ").forEach((node) => {
              if (node === "span") {
                normalizeValue.front = node;
              } else {
                normalizeValue.back = `${normalizeValue.back} ${node}`;
              }
            });
            return `${normalizeValue.front.trim()} ${normalizeValue.back.trim()}`;
          })
          // returns "2 / span 3"
        );
      }
      return gridValue.map((gridLine) => {
        let normalizeValue = {
          front: "",
          back: ""
        };
        gridLine = gridLine.trim();
        gridLine.split(" ").forEach((node) => {
          if (node === "span") {
            normalizeValue.front = node;
          } else {
            normalizeValue.back = `${normalizeValue.back} ${node}`;
          }
        });
        return `${normalizeValue.front.trim()} ${normalizeValue.back.trim()}`;
      });
    };
    module2.exports = {
      normalizeGridAutoFlow,
      normalizeGridColumnRowGap,
      normalizeGridColumnRow
    };
  }
});

// node_modules/postcss-ordered-values/src/lib/addSpace.js
var require_addSpace = __commonJS({
  "node_modules/postcss-ordered-values/src/lib/addSpace.js"(exports, module2) {
    "use strict";
    module2.exports = function addSpace() {
      return (
        /** @type import('postcss-value-parser').SpaceNode */
        {
          type: "space",
          value: " "
        }
      );
    };
  }
});

// node_modules/postcss-ordered-values/src/lib/getValue.js
var require_getValue = __commonJS({
  "node_modules/postcss-ordered-values/src/lib/getValue.js"(exports, module2) {
    "use strict";
    var { stringify } = require_lib();
    module2.exports = function getValue(values) {
      return stringify(flatten(values));
    };
    function flatten(values) {
      const nodes = [];
      for (const [index, arg] of values.entries()) {
        arg.forEach((val, idx) => {
          if (idx === arg.length - 1 && index === values.length - 1 && val.type === "space") {
            return;
          }
          nodes.push(val);
        });
        if (index !== values.length - 1) {
          nodes[nodes.length - 1].type = "div";
          nodes[nodes.length - 1].value = ",";
        }
      }
      return nodes;
    }
  }
});

// node_modules/postcss-ordered-values/src/rules/animation.js
var require_animation = __commonJS({
  "node_modules/postcss-ordered-values/src/rules/animation.js"(exports, module2) {
    "use strict";
    var { unit } = require_lib();
    var { getArguments } = require_src3();
    var addSpace = require_addSpace();
    var getValue = require_getValue();
    var functions = /* @__PURE__ */ new Set(["steps", "cubic-bezier", "frames"]);
    var keywords = /* @__PURE__ */ new Set([
      "ease",
      "ease-in",
      "ease-in-out",
      "ease-out",
      "linear",
      "step-end",
      "step-start"
    ]);
    var directions = /* @__PURE__ */ new Set([
      "normal",
      "reverse",
      "alternate",
      "alternate-reverse"
    ]);
    var fillModes = /* @__PURE__ */ new Set(["none", "forwards", "backwards", "both"]);
    var playStates = /* @__PURE__ */ new Set(["running", "paused"]);
    var timeUnits = /* @__PURE__ */ new Set(["ms", "s"]);
    var isTimingFunction = (value, type) => {
      return type === "function" && functions.has(value) || keywords.has(value);
    };
    var isDirection = (value) => {
      return directions.has(value);
    };
    var isFillMode = (value) => {
      return fillModes.has(value);
    };
    var isPlayState = (value) => {
      return playStates.has(value);
    };
    var isTime = (value) => {
      const quantity = unit(value);
      return quantity && timeUnits.has(quantity.unit);
    };
    var isIterationCount = (value) => {
      const quantity = unit(value);
      return value === "infinite" || quantity && !quantity.unit;
    };
    var stateConditions = [
      { property: "duration", delegate: isTime },
      { property: "timingFunction", delegate: isTimingFunction },
      { property: "delay", delegate: isTime },
      { property: "iterationCount", delegate: isIterationCount },
      { property: "direction", delegate: isDirection },
      { property: "fillMode", delegate: isFillMode },
      { property: "playState", delegate: isPlayState }
    ];
    function normalize(args) {
      const list = [];
      for (const arg of args) {
        const state = {
          name: [],
          duration: [],
          timingFunction: [],
          delay: [],
          iterationCount: [],
          direction: [],
          fillMode: [],
          playState: []
        };
        arg.forEach((node) => {
          let { type, value } = node;
          if (type === "space") {
            return;
          }
          value = value.toLowerCase();
          const hasMatch = stateConditions.some(({ property, delegate }) => {
            if (delegate(value, type) && !state[property].length) {
              state[property] = [node, addSpace()];
              return true;
            }
          });
          if (!hasMatch) {
            state.name = [...state.name, node, addSpace()];
          }
        });
        list.push([
          ...state.name,
          ...state.duration,
          ...state.timingFunction,
          ...state.delay,
          ...state.iterationCount,
          ...state.direction,
          ...state.fillMode,
          ...state.playState
        ]);
      }
      return list;
    }
    module2.exports = function normalizeAnimation(parsed) {
      const values = normalize(getArguments(parsed));
      return getValue(values);
    };
  }
});

// node_modules/postcss-ordered-values/src/lib/mathfunctions.js
var require_mathfunctions = __commonJS({
  "node_modules/postcss-ordered-values/src/lib/mathfunctions.js"(exports, module2) {
    "use strict";
    module2.exports = /* @__PURE__ */ new Set(["calc", "clamp", "max", "min"]);
  }
});

// node_modules/postcss-ordered-values/src/rules/border.js
var require_border2 = __commonJS({
  "node_modules/postcss-ordered-values/src/rules/border.js"(exports, module2) {
    "use strict";
    var { unit, stringify } = require_lib();
    var mathFunctions = require_mathfunctions();
    var borderWidths = /* @__PURE__ */ new Set(["thin", "medium", "thick"]);
    var borderStyles = /* @__PURE__ */ new Set([
      "none",
      "auto",
      // only in outline-style
      "hidden",
      "dotted",
      "dashed",
      "solid",
      "double",
      "groove",
      "ridge",
      "inset",
      "outset"
    ]);
    module2.exports = function normalizeBorder(border) {
      const order = { width: "", style: "", color: "" };
      border.walk((node) => {
        const { type, value } = node;
        if (type === "word") {
          if (borderStyles.has(value.toLowerCase())) {
            order.style = value;
            return false;
          }
          if (borderWidths.has(value.toLowerCase()) || unit(value.toLowerCase())) {
            if (order.width !== "") {
              order.width = `${order.width} ${value}`;
              return false;
            }
            order.width = value;
            return false;
          }
          order.color = value;
          return false;
        }
        if (type === "function") {
          if (mathFunctions.has(value.toLowerCase())) {
            order.width = stringify(node);
          } else {
            order.color = stringify(node);
          }
          return false;
        }
      });
      return `${order.width} ${order.style} ${order.color}`.trim();
    };
  }
});

// node_modules/postcss-ordered-values/src/lib/vendorUnprefixed.js
var require_vendorUnprefixed = __commonJS({
  "node_modules/postcss-ordered-values/src/lib/vendorUnprefixed.js"(exports, module2) {
    "use strict";
    function vendorUnprefixed(prop) {
      return prop.replace(/^-\w+-/, "");
    }
    module2.exports = vendorUnprefixed;
  }
});

// node_modules/postcss-ordered-values/src/rules/boxShadow.js
var require_boxShadow = __commonJS({
  "node_modules/postcss-ordered-values/src/rules/boxShadow.js"(exports, module2) {
    "use strict";
    var { unit } = require_lib();
    var { getArguments } = require_src3();
    var addSpace = require_addSpace();
    var getValue = require_getValue();
    var mathFunctions = require_mathfunctions();
    var vendorUnprefixed = require_vendorUnprefixed();
    module2.exports = function normalizeBoxShadow(parsed) {
      let args = getArguments(parsed);
      const normalized = normalize(args);
      if (normalized === false) {
        return parsed.toString();
      }
      return getValue(normalized);
    };
    function normalize(args) {
      const list = [];
      let abort = false;
      for (const arg of args) {
        let val = [];
        let state = {
          inset: [],
          color: []
        };
        arg.forEach((node) => {
          const { type, value } = node;
          if (type === "function" && mathFunctions.has(vendorUnprefixed(value.toLowerCase()))) {
            abort = true;
            return;
          }
          if (type === "space") {
            return;
          }
          if (unit(value)) {
            val = [...val, node, addSpace()];
          } else if (value.toLowerCase() === "inset") {
            state.inset = [...state.inset, node, addSpace()];
          } else {
            state.color = [...state.color, node, addSpace()];
          }
        });
        if (abort) {
          return false;
        }
        list.push([...state.inset, ...val, ...state.color]);
      }
      return list;
    }
  }
});

// node_modules/postcss-ordered-values/src/rules/flexFlow.js
var require_flexFlow = __commonJS({
  "node_modules/postcss-ordered-values/src/rules/flexFlow.js"(exports, module2) {
    "use strict";
    var flexDirection = /* @__PURE__ */ new Set([
      "row",
      "row-reverse",
      "column",
      "column-reverse"
    ]);
    var flexWrap = /* @__PURE__ */ new Set(["nowrap", "wrap", "wrap-reverse"]);
    module2.exports = function normalizeFlexFlow(flexFlow) {
      let order = {
        direction: "",
        wrap: ""
      };
      flexFlow.walk(({ value }) => {
        if (flexDirection.has(value.toLowerCase())) {
          order.direction = value;
          return;
        }
        if (flexWrap.has(value.toLowerCase())) {
          order.wrap = value;
          return;
        }
      });
      return `${order.direction} ${order.wrap}`.trim();
    };
  }
});

// node_modules/postcss-ordered-values/src/rules/transition.js
var require_transition = __commonJS({
  "node_modules/postcss-ordered-values/src/rules/transition.js"(exports, module2) {
    "use strict";
    var { unit } = require_lib();
    var { getArguments } = require_src3();
    var addSpace = require_addSpace();
    var getValue = require_getValue();
    var timingFunctions = /* @__PURE__ */ new Set([
      "ease",
      "linear",
      "ease-in",
      "ease-out",
      "ease-in-out",
      "step-start",
      "step-end"
    ]);
    function normalize(args) {
      const list = [];
      for (const arg of args) {
        let state = {
          timingFunction: [],
          property: [],
          time1: [],
          time2: []
        };
        arg.forEach((node) => {
          const { type, value } = node;
          if (type === "space") {
            return;
          }
          if (type === "function" && (/* @__PURE__ */ new Set(["steps", "cubic-bezier"])).has(value.toLowerCase())) {
            state.timingFunction = [...state.timingFunction, node, addSpace()];
          } else if (unit(value)) {
            if (!state.time1.length) {
              state.time1 = [...state.time1, node, addSpace()];
            } else {
              state.time2 = [...state.time2, node, addSpace()];
            }
          } else if (timingFunctions.has(value.toLowerCase())) {
            state.timingFunction = [...state.timingFunction, node, addSpace()];
          } else {
            state.property = [...state.property, node, addSpace()];
          }
        });
        list.push([
          ...state.property,
          ...state.time1,
          ...state.timingFunction,
          ...state.time2
        ]);
      }
      return list;
    }
    module2.exports = function normalizeTransition(parsed) {
      const values = normalize(getArguments(parsed));
      return getValue(values);
    };
  }
});

// node_modules/postcss-ordered-values/src/rules/listStyleTypes.json
var require_listStyleTypes = __commonJS({
  "node_modules/postcss-ordered-values/src/rules/listStyleTypes.json"(exports, module2) {
    module2.exports = {
      "list-style-type": [
        "afar",
        "amharic",
        "amharic-abegede",
        "arabic-indic",
        "armenian",
        "asterisks",
        "bengali",
        "binary",
        "cambodian",
        "circle",
        "cjk-decimal",
        "cjk-earthly-branch",
        "cjk-heavenly-stem",
        "cjk-ideographic",
        "decimal",
        "decimal-leading-zero",
        "devanagari",
        "disc",
        "disclosure-closed",
        "disclosure-open",
        "ethiopic",
        "ethiopic-abegede",
        "ethiopic-abegede-am-et",
        "ethiopic-abegede-gez",
        "ethiopic-abegede-ti-er",
        "ethiopic-abegede-ti-et",
        "ethiopic-halehame",
        "ethiopic-halehame-aa-er",
        "ethiopic-halehame-aa-et",
        "ethiopic-halehame-am",
        "ethiopic-halehame-am-et",
        "ethiopic-halehame-gez",
        "ethiopic-halehame-om-et",
        "ethiopic-halehame-sid-et",
        "ethiopic-halehame-so-et",
        "ethiopic-halehame-ti-er",
        "ethiopic-halehame-ti-et",
        "ethiopic-halehame-tig",
        "ethiopic-numeric",
        "footnotes",
        "georgian",
        "gujarati",
        "gurmukhi",
        "hangul",
        "hangul-consonant",
        "hebrew",
        "hiragana",
        "hiragana-iroha",
        "japanese-formal",
        "japanese-informal",
        "kannada",
        "katakana",
        "katakana-iroha",
        "khmer",
        "korean-hangul-formal",
        "korean-hanja-formal",
        "korean-hanja-informal",
        "lao",
        "lower-alpha",
        "lower-armenian",
        "lower-greek",
        "lower-hexadecimal",
        "lower-latin",
        "lower-norwegian",
        "lower-roman",
        "malayalam",
        "mongolian",
        "myanmar",
        "octal",
        "oriya",
        "oromo",
        "persian",
        "sidama",
        "simp-chinese-formal",
        "simp-chinese-informal",
        "somali",
        "square",
        "string",
        "symbols",
        "tamil",
        "telugu",
        "thai",
        "tibetan",
        "tigre",
        "tigrinya-er",
        "tigrinya-er-abegede",
        "tigrinya-et",
        "tigrinya-et-abegede",
        "trad-chinese-formal",
        "trad-chinese-informal",
        "upper-alpha",
        "upper-armenian",
        "upper-greek",
        "upper-hexadecimal",
        "upper-latin",
        "upper-norwegian",
        "upper-roman",
        "urdu"
      ]
    };
  }
});

// node_modules/postcss-ordered-values/src/rules/listStyle.js
var require_listStyle = __commonJS({
  "node_modules/postcss-ordered-values/src/rules/listStyle.js"(exports, module2) {
    "use strict";
    var valueParser = require_lib();
    var listStyleTypes = require_listStyleTypes();
    var definedTypes = new Set(listStyleTypes["list-style-type"]);
    var definedPosition = /* @__PURE__ */ new Set(["inside", "outside"]);
    module2.exports = function listStyleNormalizer(listStyle) {
      const order = { type: "", position: "", image: "" };
      listStyle.walk((decl) => {
        if (decl.type === "word") {
          if (definedTypes.has(decl.value)) {
            order.type = `${order.type} ${decl.value}`;
          } else if (definedPosition.has(decl.value)) {
            order.position = `${order.position} ${decl.value}`;
          } else if (decl.value === "none") {
            if (order.type.split(" ").filter((e) => e !== "" && e !== " ").includes("none")) {
              order.image = `${order.image} ${decl.value}`;
            } else {
              order.type = `${order.type} ${decl.value}`;
            }
          } else {
            order.type = `${order.type} ${decl.value}`;
          }
        }
        if (decl.type === "function") {
          order.image = `${order.image} ${valueParser.stringify(decl)}`;
        }
      });
      return `${order.type.trim()} ${order.position.trim()} ${order.image.trim()}`.trim();
    };
  }
});

// node_modules/postcss-ordered-values/src/rules/columns.js
var require_columns = __commonJS({
  "node_modules/postcss-ordered-values/src/rules/columns.js"(exports, module2) {
    "use strict";
    var { unit } = require_lib();
    function hasUnit(value) {
      const parsedVal = unit(value);
      return parsedVal && parsedVal.unit !== "";
    }
    module2.exports = (columns) => {
      const widths = [];
      const other = [];
      columns.walk((node) => {
        const { type, value } = node;
        if (type === "word") {
          if (hasUnit(value)) {
            widths.push(value);
          } else {
            other.push(value);
          }
        }
      });
      if (other.length === 1 && widths.length === 1) {
        return `${widths[0].trimStart()} ${other[0].trimStart()}`;
      }
      return columns;
    };
  }
});

// node_modules/postcss-ordered-values/src/index.js
var require_src10 = __commonJS({
  "node_modules/postcss-ordered-values/src/index.js"(exports, module2) {
    "use strict";
    var valueParser = require_lib();
    var {
      normalizeGridAutoFlow,
      normalizeGridColumnRowGap,
      normalizeGridColumnRow
    } = require_grid();
    var animation = require_animation();
    var border = require_border2();
    var boxShadow = require_boxShadow();
    var flexFlow = require_flexFlow();
    var transition = require_transition();
    var listStyle = require_listStyle();
    var column = require_columns();
    var vendorUnprefixed = require_vendorUnprefixed();
    var borderRules = [
      ["border", border],
      ["border-block", border],
      ["border-inline", border],
      ["border-block-end", border],
      ["border-block-start", border],
      ["border-inline-end", border],
      ["border-inline-start", border],
      ["border-top", border],
      ["border-right", border],
      ["border-bottom", border],
      ["border-left", border]
    ];
    var grid = [
      ["grid-auto-flow", normalizeGridAutoFlow],
      ["grid-column-gap", normalizeGridColumnRowGap],
      // normal | <length-percentage>
      ["grid-row-gap", normalizeGridColumnRowGap],
      // normal | <length-percentage>
      ["grid-column", normalizeGridColumnRow],
      // <grid-line>+
      ["grid-row", normalizeGridColumnRow],
      // <grid-line>+
      ["grid-row-start", normalizeGridColumnRow],
      // <grid-line>
      ["grid-row-end", normalizeGridColumnRow],
      // <grid-line>
      ["grid-column-start", normalizeGridColumnRow],
      // <grid-line>
      ["grid-column-end", normalizeGridColumnRow]
      // <grid-line>
    ];
    var columnRules = [
      ["column-rule", border],
      ["columns", column]
    ];
    var rules = new Map([
      ["animation", animation],
      ["outline", border],
      ["box-shadow", boxShadow],
      ["flex-flow", flexFlow],
      ["list-style", listStyle],
      ["transition", transition],
      ...borderRules,
      ...grid,
      ...columnRules
    ]);
    var variableFunctions = /* @__PURE__ */ new Set(["var", "env", "constant"]);
    function isVariableFunctionNode(node) {
      if (node.type !== "function") {
        return false;
      }
      return variableFunctions.has(node.value.toLowerCase());
    }
    function shouldAbort(parsed) {
      let abort = false;
      parsed.walk((node) => {
        if (node.type === "comment" || isVariableFunctionNode(node) || node.type === "word" && node.value.includes(`___CSS_LOADER_IMPORT___`)) {
          abort = true;
          return false;
        }
      });
      return abort;
    }
    function getValue(decl) {
      let { value, raws } = decl;
      if (raws && raws.value && raws.value.raw) {
        value = raws.value.raw;
      }
      return value;
    }
    function pluginCreator() {
      return {
        postcssPlugin: "postcss-ordered-values",
        prepare() {
          const cache = /* @__PURE__ */ new Map();
          return {
            OnceExit(css) {
              css.walkDecls((decl) => {
                const lowerCasedProp = decl.prop.toLowerCase();
                const normalizedProp = vendorUnprefixed(lowerCasedProp);
                const processor = rules.get(normalizedProp);
                if (!processor) {
                  return;
                }
                const value = getValue(decl);
                if (cache.has(value)) {
                  decl.value = cache.get(value);
                  return;
                }
                const parsed = valueParser(value);
                if (parsed.nodes.length < 2 || shouldAbort(parsed)) {
                  cache.set(value, value);
                  return;
                }
                const result = processor(parsed);
                decl.value = result.toString();
                cache.set(value, result.toString());
              });
            }
          };
        }
      };
    }
    pluginCreator.postcss = true;
    module2.exports = pluginCreator;
  }
});

// node_modules/postcss-minify-selectors/src/lib/canUnquote.js
var require_canUnquote = __commonJS({
  "node_modules/postcss-minify-selectors/src/lib/canUnquote.js"(exports, module2) {
    "use strict";
    var escapes = /\\([0-9A-Fa-f]{1,6})[ \t\n\f\r]?/g;
    var range = (
      // eslint-disable-next-line no-control-regex
      /[\u0000-\u002c\u002e\u002f\u003A-\u0040\u005B-\u005E\u0060\u007B-\u009f]/
    );
    module2.exports = function canUnquote(value) {
      if (value === "-" || value === "") {
        return false;
      }
      value = value.replace(escapes, "a").replace(/\\./g, "a");
      return !(range.test(value) || /^(?:-?\d|--)/.test(value));
    };
  }
});

// node_modules/postcss-minify-selectors/src/index.js
var require_src11 = __commonJS({
  "node_modules/postcss-minify-selectors/src/index.js"(exports, module2) {
    "use strict";
    var parser = require_dist3();
    var canUnquote = require_canUnquote();
    var pseudoElements = /* @__PURE__ */ new Set([
      "::before",
      "::after",
      "::first-letter",
      "::first-line"
    ]);
    function attribute(selector) {
      if (selector.value) {
        if (selector.raws.value) {
          selector.raws.value = selector.raws.value.replace(/\\\n/g, "").trim();
        }
        if (canUnquote(selector.value)) {
          selector.quoteMark = null;
        }
        if (selector.operator) {
          selector.operator = /** @type {parser.AttributeOperator} */
          selector.operator.trim();
        }
      }
      selector.rawSpaceBefore = "";
      selector.rawSpaceAfter = "";
      selector.spaces.attribute = { before: "", after: "" };
      selector.spaces.operator = { before: "", after: "" };
      selector.spaces.value = {
        before: "",
        after: selector.insensitive ? " " : ""
      };
      if (selector.raws.spaces) {
        selector.raws.spaces.attribute = {
          before: "",
          after: ""
        };
        selector.raws.spaces.operator = {
          before: "",
          after: ""
        };
        selector.raws.spaces.value = {
          before: "",
          after: selector.insensitive ? " " : ""
        };
        if (selector.insensitive) {
          selector.raws.spaces.insensitive = {
            before: "",
            after: ""
          };
        }
      }
      selector.attribute = selector.attribute.trim();
    }
    function combinator(selector) {
      const value = selector.value.trim();
      selector.spaces.before = "";
      selector.spaces.after = "";
      selector.rawSpaceBefore = "";
      selector.rawSpaceAfter = "";
      selector.value = value.length ? value : " ";
    }
    var pseudoReplacements = /* @__PURE__ */ new Map([
      [":nth-child", ":first-child"],
      [":nth-of-type", ":first-of-type"],
      [":nth-last-child", ":last-child"],
      [":nth-last-of-type", ":last-of-type"]
    ]);
    function pseudo(selector) {
      const value = selector.value.toLowerCase();
      if (selector.nodes.length === 1 && pseudoReplacements.has(value)) {
        const first = selector.at(0);
        const one = first.at(0);
        if (first.length === 1) {
          if (one.value === "1") {
            selector.replaceWith(
              parser.pseudo({
                value: (
                  /** @type {string} */
                  pseudoReplacements.get(value)
                )
              })
            );
          }
          if (one.value && one.value.toLowerCase() === "even") {
            one.value = "2n";
          }
        }
        if (first.length === 3) {
          const two = first.at(1);
          const three = first.at(2);
          if (one.value && one.value.toLowerCase() === "2n" && two.value === "+" && three.value === "1") {
            one.value = "odd";
            two.remove();
            three.remove();
          }
        }
        return;
      }
      selector.walk((child) => {
        if (child.type === "selector" && child.parent) {
          const uniques = /* @__PURE__ */ new Set();
          child.parent.each((sibling) => {
            const siblingStr = String(sibling);
            if (!uniques.has(siblingStr)) {
              uniques.add(siblingStr);
            } else {
              sibling.remove();
            }
          });
        }
      });
      if (pseudoElements.has(value)) {
        selector.value = selector.value.slice(1);
      }
    }
    var tagReplacements = /* @__PURE__ */ new Map([
      ["from", "0%"],
      ["100%", "to"]
    ]);
    function tag(selector) {
      const value = selector.value.toLowerCase();
      if (tagReplacements.has(value)) {
        selector.value = /** @type {string} */
        tagReplacements.get(value);
      }
    }
    function universal(selector) {
      const next = selector.next();
      if (next && next.type !== "combinator") {
        selector.remove();
      }
    }
    var reducers = /* @__PURE__ */ new Map(
      /** @type {[string, ((selector: parser.Node) => void)][]}*/
      [
        ["attribute", attribute],
        ["combinator", combinator],
        ["pseudo", pseudo],
        ["tag", tag],
        ["universal", universal]
      ]
    );
    function pluginCreator() {
      return {
        postcssPlugin: "postcss-minify-selectors",
        OnceExit(css) {
          const cache = /* @__PURE__ */ new Map();
          const processor = parser((selectors) => {
            const uniqueSelectors = /* @__PURE__ */ new Set();
            selectors.walk((sel) => {
              sel.spaces.before = sel.spaces.after = "";
              const reducer = reducers.get(sel.type);
              if (reducer !== void 0) {
                reducer(sel);
                return;
              }
              const toString = String(sel);
              if (sel.type === "selector" && sel.parent && sel.parent.type !== "pseudo") {
                if (!uniqueSelectors.has(toString)) {
                  uniqueSelectors.add(toString);
                } else {
                  sel.remove();
                }
              }
            });
            selectors.nodes.sort();
          });
          css.walkRules((rule) => {
            const selector = rule.raws.selector && rule.raws.selector.value === rule.selector ? rule.raws.selector.raw : rule.selector;
            if (selector[selector.length - 1] === ":") {
              return;
            }
            if (cache.has(selector)) {
              rule.selector = cache.get(selector);
              return;
            }
            const optimizedSelector = processor.processSync(selector);
            rule.selector = optimizedSelector;
            cache.set(selector, optimizedSelector);
          });
        }
      };
    }
    pluginCreator.postcss = true;
    module2.exports = pluginCreator;
  }
});

// node_modules/postcss-minify-params/src/index.js
var require_src12 = __commonJS({
  "node_modules/postcss-minify-params/src/index.js"(exports, module2) {
    "use strict";
    var browserslist = require_browserslist();
    var valueParser = require_lib();
    var { getArguments } = require_src3();
    function gcd(a, b) {
      return b ? gcd(b, a % b) : a;
    }
    function aspectRatio(a, b) {
      const divisor = gcd(a, b);
      return [a / divisor, b / divisor];
    }
    function split(args) {
      return args.map((arg) => valueParser.stringify(arg)).join("");
    }
    function removeNode(node) {
      node.value = "";
      node.type = "word";
    }
    function sortAndDedupe(items) {
      const a = [...new Set(items)];
      a.sort();
      return a.join();
    }
    function transform2(legacy, rule) {
      const ruleName = rule.name.toLowerCase();
      if (!rule.params || !["media", "supports"].includes(ruleName)) {
        return;
      }
      const params = valueParser(rule.params);
      params.walk((node, index) => {
        if (node.type === "div") {
          node.before = node.after = "";
        } else if (node.type === "function") {
          node.before = "";
          if (node.nodes[0] && node.nodes[0].type === "word" && node.nodes[0].value.startsWith("--") && node.nodes[2] === void 0) {
            node.after = " ";
          } else {
            node.after = "";
          }
          if (node.nodes[4] && node.nodes[0].value.toLowerCase().indexOf("-aspect-ratio") === 3) {
            const [a, b] = aspectRatio(
              Number(node.nodes[2].value),
              Number(node.nodes[4].value)
            );
            node.nodes[2].value = a.toString();
            node.nodes[4].value = b.toString();
          }
        } else if (node.type === "space") {
          node.value = " ";
        } else {
          const prevWord = params.nodes[index - 2];
          if (node.value.toLowerCase() === "all" && rule.name.toLowerCase() === "media" && !prevWord) {
            const nextWord = params.nodes[index + 2];
            if (!legacy || nextWord) {
              removeNode(node);
            }
            if (nextWord && nextWord.value.toLowerCase() === "and") {
              const nextSpace = params.nodes[index + 1];
              const secondSpace = params.nodes[index + 3];
              removeNode(nextWord);
              removeNode(nextSpace);
              removeNode(secondSpace);
            }
          }
        }
      }, true);
      rule.params = sortAndDedupe(getArguments(params).map(split));
      if (!rule.params.length) {
        rule.raws.afterName = "";
      }
    }
    var allBugBrowers = /* @__PURE__ */ new Set(["ie 10", "ie 11"]);
    function pluginCreator(options = {}) {
      const browsers = browserslist(null, {
        stats: options.stats,
        path: __dirname,
        env: options.env
      });
      const hasAllBug = browsers.some((browser) => allBugBrowers.has(browser));
      return {
        postcssPlugin: "postcss-minify-params",
        OnceExit(css) {
          css.walkAtRules((rule) => transform2(hasAllBug, rule));
        }
      };
    }
    pluginCreator.postcss = true;
    module2.exports = pluginCreator;
  }
});

// node_modules/postcss-normalize-charset/src/index.js
var require_src13 = __commonJS({
  "node_modules/postcss-normalize-charset/src/index.js"(exports, module2) {
    "use strict";
    var charset = "charset";
    var nonAscii = /[^\x00-\x7F]/;
    function pluginCreator(opts = {}) {
      return {
        postcssPlugin: "postcss-normalize-" + charset,
        OnceExit(css, { AtRule }) {
          let charsetRule;
          let nonAsciiNode;
          css.walk((node) => {
            if (node.type === "atrule" && node.name === charset) {
              if (!charsetRule) {
                charsetRule = node;
              }
              node.remove();
            } else if (!nonAsciiNode && node.parent === css && nonAscii.test(node.toString())) {
              nonAsciiNode = node;
            }
          });
          if (nonAsciiNode) {
            if (!charsetRule && opts.add !== false) {
              charsetRule = new AtRule({
                name: charset,
                params: '"utf-8"'
              });
            }
            if (charsetRule) {
              charsetRule.source = nonAsciiNode.source;
              css.prepend(charsetRule);
            }
          }
        }
      };
    }
    pluginCreator.postcss = true;
    module2.exports = pluginCreator;
  }
});

// node_modules/postcss-minify-font-values/src/lib/minify-weight.js
var require_minify_weight = __commonJS({
  "node_modules/postcss-minify-font-values/src/lib/minify-weight.js"(exports, module2) {
    "use strict";
    module2.exports = function(value) {
      const lowerCasedValue = value.toLowerCase();
      return lowerCasedValue === "normal" ? "400" : lowerCasedValue === "bold" ? "700" : value;
    };
  }
});

// node_modules/postcss-minify-font-values/src/lib/minify-family.js
var require_minify_family = __commonJS({
  "node_modules/postcss-minify-font-values/src/lib/minify-family.js"(exports, module2) {
    "use strict";
    var { stringify } = require_lib();
    function uniqueFontFamilies(list) {
      return list.filter((item, i) => {
        if (item.toLowerCase() === "monospace") {
          return true;
        }
        return i === list.indexOf(item);
      });
    }
    var globalKeywords = ["inherit", "initial", "unset"];
    var genericFontFamilykeywords = /* @__PURE__ */ new Set([
      "sans-serif",
      "serif",
      "fantasy",
      "cursive",
      "monospace",
      "system-ui"
    ]);
    function makeArray(value, length) {
      let array = [];
      while (length--) {
        array[length] = value;
      }
      return array;
    }
    var regexSimpleEscapeCharacters = /[ !"#$%&'()*+,.\/;<=>?@\[\\\]^`{|}~]/;
    function escape(string, escapeForString) {
      let counter = 0;
      let character;
      let charCode;
      let value;
      let output = "";
      while (counter < string.length) {
        character = string.charAt(counter++);
        charCode = character.charCodeAt(0);
        if (!escapeForString && /[\t\n\v\f:]/.test(character)) {
          value = "\\" + charCode.toString(16) + " ";
        } else if (!escapeForString && regexSimpleEscapeCharacters.test(character)) {
          value = "\\" + character;
        } else {
          value = character;
        }
        output += value;
      }
      if (!escapeForString) {
        if (/^-[-\d]/.test(output)) {
          output = "\\-" + output.slice(1);
        }
        const firstChar = string.charAt(0);
        if (/\d/.test(firstChar)) {
          output = "\\3" + firstChar + " " + output.slice(1);
        }
      }
      return output;
    }
    var regexKeyword = new RegExp(
      [...genericFontFamilykeywords].concat(globalKeywords).join("|"),
      "i"
    );
    var regexInvalidIdentifier = /^(-?\d|--)/;
    var regexSpaceAtStart = /^\x20/;
    var regexWhitespace = /[\t\n\f\r\x20]/g;
    var regexIdentifierCharacter = /^[a-zA-Z\d\xa0-\uffff_-]+$/;
    var regexConsecutiveSpaces = /(\\(?:[a-fA-F0-9]{1,6}\x20|\x20))?(\x20{2,})/g;
    var regexTrailingEscape = /\\[a-fA-F0-9]{0,6}\x20$/;
    var regexTrailingSpace = /\x20$/;
    function escapeIdentifierSequence(string) {
      let identifiers = string.split(regexWhitespace);
      let index = 0;
      let result = [];
      let escapeResult;
      while (index < identifiers.length) {
        let subString = identifiers[index++];
        if (subString === "") {
          result.push(subString);
          continue;
        }
        escapeResult = escape(subString, false);
        if (regexIdentifierCharacter.test(subString)) {
          if (regexInvalidIdentifier.test(subString)) {
            if (index === 1) {
              result.push(escapeResult);
            } else {
              result[index - 2] += "\\";
              result.push(escape(subString, true));
            }
          } else {
            result.push(escapeResult);
          }
        } else {
          result.push(escapeResult);
        }
      }
      result = result.join(" ").replace(regexConsecutiveSpaces, ($0, $1, $2) => {
        const spaceCount = $2.length;
        const escapesNeeded = Math.floor(spaceCount / 2);
        const array = makeArray("\\ ", escapesNeeded);
        if (spaceCount % 2) {
          array[escapesNeeded - 1] += "\\ ";
        }
        return ($1 || "") + " " + array.join(" ");
      });
      if (regexTrailingSpace.test(result) && !regexTrailingEscape.test(result)) {
        result = result.replace(regexTrailingSpace, "\\ ");
      }
      if (regexSpaceAtStart.test(result)) {
        result = "\\ " + result.slice(1);
      }
      return result;
    }
    module2.exports = function(nodes, opts) {
      const family = [];
      let last = null;
      let i, max;
      nodes.forEach((node, index, arr) => {
        if (node.type === "string" || node.type === "function") {
          family.push(node);
        } else if (node.type === "word") {
          if (!last) {
            last = /** @type {import('postcss-value-parser').WordNode} */
            {
              type: "word",
              value: ""
            };
            family.push(last);
          }
          last.value += node.value;
        } else if (node.type === "space") {
          if (last && index !== arr.length - 1) {
            last.value += " ";
          }
        } else {
          last = null;
        }
      });
      let normalizedFamilies = family.map((node) => {
        if (node.type === "string") {
          const isKeyword = regexKeyword.test(node.value);
          if (!opts.removeQuotes || isKeyword || /[0-9]/.test(node.value.slice(0, 1))) {
            return stringify(node);
          }
          let escaped = escapeIdentifierSequence(node.value);
          if (escaped.length < node.value.length + 2) {
            return escaped;
          }
        }
        return stringify(node);
      });
      if (opts.removeAfterKeyword) {
        for (i = 0, max = normalizedFamilies.length; i < max; i += 1) {
          if (genericFontFamilykeywords.has(normalizedFamilies[i].toLowerCase())) {
            normalizedFamilies = normalizedFamilies.slice(0, i + 1);
            break;
          }
        }
      }
      if (opts.removeDuplicates) {
        normalizedFamilies = uniqueFontFamilies(normalizedFamilies);
      }
      return [
        /** @type {import('postcss-value-parser').WordNode} */
        {
          type: "word",
          value: normalizedFamilies.join()
        }
      ];
    };
  }
});

// node_modules/postcss-minify-font-values/src/lib/keywords.js
var require_keywords = __commonJS({
  "node_modules/postcss-minify-font-values/src/lib/keywords.js"(exports, module2) {
    "use strict";
    module2.exports = {
      style: /* @__PURE__ */ new Set(["italic", "oblique"]),
      variant: /* @__PURE__ */ new Set(["small-caps"]),
      weight: /* @__PURE__ */ new Set([
        "100",
        "200",
        "300",
        "400",
        "500",
        "600",
        "700",
        "800",
        "900",
        "bold",
        "lighter",
        "bolder"
      ]),
      stretch: /* @__PURE__ */ new Set([
        "ultra-condensed",
        "extra-condensed",
        "condensed",
        "semi-condensed",
        "semi-expanded",
        "expanded",
        "extra-expanded",
        "ultra-expanded"
      ]),
      size: /* @__PURE__ */ new Set([
        "xx-small",
        "x-small",
        "small",
        "medium",
        "large",
        "x-large",
        "xx-large",
        "larger",
        "smaller"
      ])
    };
  }
});

// node_modules/postcss-minify-font-values/src/lib/minify-font.js
var require_minify_font = __commonJS({
  "node_modules/postcss-minify-font-values/src/lib/minify-font.js"(exports, module2) {
    "use strict";
    var { unit } = require_lib();
    var keywords = require_keywords();
    var minifyFamily = require_minify_family();
    var minifyWeight = require_minify_weight();
    module2.exports = function(nodes, opts) {
      let i, max, node, family;
      let familyStart = NaN;
      let hasSize = false;
      for (i = 0, max = nodes.length; i < max; i += 1) {
        node = nodes[i];
        if (node.type === "word") {
          if (hasSize) {
            continue;
          }
          const value = node.value.toLowerCase();
          if (value === "normal" || value === "inherit" || value === "initial" || value === "unset") {
            familyStart = i;
          } else if (keywords.style.has(value) || unit(value)) {
            familyStart = i;
          } else if (keywords.variant.has(value)) {
            familyStart = i;
          } else if (keywords.weight.has(value)) {
            node.value = minifyWeight(value);
            familyStart = i;
          } else if (keywords.stretch.has(value)) {
            familyStart = i;
          } else if (keywords.size.has(value) || unit(value)) {
            familyStart = i;
            hasSize = true;
          }
        } else if (node.type === "function" && nodes[i + 1] && nodes[i + 1].type === "space") {
          familyStart = i;
        } else if (node.type === "div" && node.value === "/") {
          familyStart = i + 1;
          break;
        }
      }
      familyStart += 2;
      family = minifyFamily(nodes.slice(familyStart), opts);
      return nodes.slice(0, familyStart).concat(family);
    };
  }
});

// node_modules/postcss-minify-font-values/src/index.js
var require_src14 = __commonJS({
  "node_modules/postcss-minify-font-values/src/index.js"(exports, module2) {
    "use strict";
    var valueParser = require_lib();
    var minifyWeight = require_minify_weight();
    var minifyFamily = require_minify_family();
    var minifyFont = require_minify_font();
    function hasVariableFunction(value) {
      const lowerCasedValue = value.toLowerCase();
      return lowerCasedValue.includes("var(") || lowerCasedValue.includes("env(");
    }
    function transform2(prop, value, opts) {
      let lowerCasedProp = prop.toLowerCase();
      if (lowerCasedProp === "font-weight" && !hasVariableFunction(value)) {
        return minifyWeight(value);
      } else if (lowerCasedProp === "font-family" && !hasVariableFunction(value)) {
        const tree = valueParser(value);
        tree.nodes = minifyFamily(tree.nodes, opts);
        return tree.toString();
      } else if (lowerCasedProp === "font") {
        const tree = valueParser(value);
        tree.nodes = minifyFont(tree.nodes, opts);
        return tree.toString();
      }
      return value;
    }
    function pluginCreator(opts) {
      opts = Object.assign(
        {},
        {
          removeAfterKeyword: false,
          removeDuplicates: true,
          removeQuotes: true
        },
        opts
      );
      return {
        postcssPlugin: "postcss-minify-font-values",
        prepare() {
          const cache = /* @__PURE__ */ new Map();
          return {
            OnceExit(css) {
              css.walkDecls(/font/i, (decl) => {
                const value = decl.value;
                if (!value) {
                  return;
                }
                const prop = decl.prop;
                const cacheKey = `${prop}|${value}`;
                if (cache.has(cacheKey)) {
                  decl.value = cache.get(cacheKey);
                  return;
                }
                const newValue = transform2(prop, value, opts);
                decl.value = newValue;
                cache.set(cacheKey, newValue);
              });
            }
          };
        }
      };
    }
    pluginCreator.postcss = true;
    module2.exports = pluginCreator;
  }
});

// node_modules/postcss-normalize-url/src/normalize.js
var require_normalize = __commonJS({
  "node_modules/postcss-normalize-url/src/normalize.js"(exports, module2) {
    "use strict";
    var DATA_URL_DEFAULT_MIME_TYPE = "text/plain";
    var DATA_URL_DEFAULT_CHARSET = "us-ascii";
    var supportedProtocols = /* @__PURE__ */ new Set(["https:", "http:", "file:"]);
    function hasCustomProtocol(urlString) {
      try {
        const { protocol } = new URL(urlString);
        return protocol.endsWith(":") && !supportedProtocols.has(protocol);
      } catch (e) {
        return false;
      }
    }
    function normalizeDataURL(urlString) {
      var _a, _b;
      const match = /^data:(?<type>[^,]*?),(?<data>[^#]*?)(?:#(?<hash>.*))?$/.exec(
        urlString
      );
      if (!match) {
        throw new Error(`Invalid URL: ${urlString}`);
      }
      let { type, data, hash } = (
        /** @type {{type: string, data: string, hash: string}} */
        match.groups
      );
      const mediaType = type.split(";");
      let isBase64 = false;
      if (mediaType[mediaType.length - 1] === "base64") {
        mediaType.pop();
        isBase64 = true;
      }
      const mimeType = (_b = (_a = mediaType.shift()) == null ? void 0 : _a.toLowerCase()) != null ? _b : "";
      const attributes = mediaType.map(
        /** @type {(string: string) => string} */
        (attribute) => {
          let [key, value = ""] = attribute.split("=").map(
            /** @type {(string: string) => string} */
            (string) => string.trim()
          );
          if (key === "charset") {
            value = value.toLowerCase();
            if (value === DATA_URL_DEFAULT_CHARSET) {
              return "";
            }
          }
          return `${key}${value ? `=${value}` : ""}`;
        }
      ).filter(Boolean);
      const normalizedMediaType = [...attributes];
      if (isBase64) {
        normalizedMediaType.push("base64");
      }
      if (normalizedMediaType.length > 0 || mimeType && mimeType !== DATA_URL_DEFAULT_MIME_TYPE) {
        normalizedMediaType.unshift(mimeType);
      }
      return `data:${normalizedMediaType.join(";")},${isBase64 ? data.trim() : data}${hash ? `#${hash}` : ""}`;
    }
    function normalizeUrl(urlString) {
      urlString = urlString.trim();
      if (/^data:/i.test(urlString)) {
        return normalizeDataURL(urlString);
      }
      if (hasCustomProtocol(urlString)) {
        return urlString;
      }
      const hasRelativeProtocol = urlString.startsWith("//");
      const isRelativeUrl = !hasRelativeProtocol && /^\.*\//.test(urlString);
      if (!isRelativeUrl) {
        urlString = urlString.replace(/^(?!(?:\w+:)?\/\/)|^\/\//, "http:");
      }
      const urlObject = new URL(urlString);
      if (urlObject.pathname) {
        urlObject.pathname = urlObject.pathname.replace(
          /(?<!\b[a-z][a-z\d+\-.]{1,50}:)\/{2,}/g,
          "/"
        );
      }
      if (urlObject.pathname) {
        try {
          urlObject.pathname = decodeURI(urlObject.pathname);
        } catch (e) {
        }
      }
      if (urlObject.hostname) {
        urlObject.hostname = urlObject.hostname.replace(/\.$/, "");
      }
      urlObject.pathname = urlObject.pathname.replace(/\/$/, "");
      urlString = urlObject.toString();
      if (urlObject.pathname === "/" && urlObject.hash === "") {
        urlString = urlString.replace(/\/$/, "");
      }
      if (hasRelativeProtocol) {
        urlString = urlString.replace(/^http:\/\//, "//");
      }
      return urlString;
    }
    module2.exports = normalizeUrl;
  }
});

// node_modules/postcss-normalize-url/src/index.js
var require_src15 = __commonJS({
  "node_modules/postcss-normalize-url/src/index.js"(exports, module2) {
    "use strict";
    var path = require("path");
    var valueParser = require_lib();
    var normalize = require_normalize();
    var multiline = /\\[\r\n]/;
    var escapeChars = /([\s\(\)"'])/g;
    var ABSOLUTE_URL_REGEX = /^[a-zA-Z][a-zA-Z\d+\-.]*?:/;
    var WINDOWS_PATH_REGEX = /^[a-zA-Z]:\\/;
    function isAbsolute(url) {
      if (WINDOWS_PATH_REGEX.test(url)) {
        return false;
      }
      return ABSOLUTE_URL_REGEX.test(url);
    }
    function convert2(url) {
      if (isAbsolute(url) || url.startsWith("//")) {
        let normalizedURL;
        try {
          normalizedURL = normalize(url);
        } catch (e) {
          normalizedURL = url;
        }
        return normalizedURL;
      }
      return path.normalize(url).replace(new RegExp("\\" + path.sep, "g"), "/");
    }
    function transformNamespace(rule) {
      rule.params = valueParser(rule.params).walk((node) => {
        if (node.type === "function" && node.value.toLowerCase() === "url" && node.nodes.length) {
          node.type = "string";
          node.quote = node.nodes[0].type === "string" ? node.nodes[0].quote : '"';
          node.value = node.nodes[0].value;
        }
        if (node.type === "string") {
          node.value = node.value.trim();
        }
        return false;
      }).toString();
    }
    function transformDecl(decl) {
      decl.value = valueParser(decl.value).walk((node) => {
        if (node.type !== "function" || node.value.toLowerCase() !== "url") {
          return false;
        }
        node.before = node.after = "";
        if (!node.nodes.length) {
          return false;
        }
        let url = node.nodes[0];
        let escaped;
        url.value = url.value.trim().replace(multiline, "");
        if (url.value.length === 0) {
          url.quote = "";
          return false;
        }
        if (/^data:(.*)?,/i.test(url.value)) {
          return false;
        }
        if (!/^.+-extension:\//i.test(url.value)) {
          url.value = convert2(url.value);
        }
        if (escapeChars.test(url.value) && url.type === "string") {
          escaped = url.value.replace(escapeChars, "\\$1");
          if (escaped.length < url.value.length + 2) {
            url.value = escaped;
            url.type = "word";
          }
        } else {
          url.type = "word";
        }
        return false;
      }).toString();
    }
    function pluginCreator() {
      return {
        postcssPlugin: "postcss-normalize-url",
        OnceExit(css) {
          css.walk((node) => {
            if (node.type === "decl") {
              return transformDecl(node);
            } else if (node.type === "atrule" && node.name.toLowerCase() === "namespace") {
              return transformNamespace(node);
            }
          });
        }
      };
    }
    pluginCreator.postcss = true;
    module2.exports = pluginCreator;
  }
});

// node_modules/stylehacks/src/exists.js
var require_exists = __commonJS({
  "node_modules/stylehacks/src/exists.js"(exports, module2) {
    "use strict";
    module2.exports = function exists(selector, index, value) {
      const node = selector.at(index);
      return node && node.value && node.value.toLowerCase() === value;
    };
  }
});

// node_modules/stylehacks/src/isMixin.js
var require_isMixin = __commonJS({
  "node_modules/stylehacks/src/isMixin.js"(exports, module2) {
    "use strict";
    module2.exports = function isMixin(node) {
      const { selector } = node;
      if (!selector || selector[selector.length - 1] === ":") {
        return true;
      }
      return false;
    };
  }
});

// node_modules/stylehacks/src/plugin.js
var require_plugin = __commonJS({
  "node_modules/stylehacks/src/plugin.js"(exports, module2) {
    "use strict";
    module2.exports = class BasePlugin {
      /**
       * @param {string[]} targets
       * @param {string[]} nodeTypes
       * @param {import('postcss').Result=} result
       */
      constructor(targets, nodeTypes, result) {
        this.nodes = [];
        this.targets = new Set(targets);
        this.nodeTypes = new Set(nodeTypes);
        this.result = result;
      }
      /**
       * @param {import('postcss').Node} node
       * @param {{identifier: string, hack: string}} metadata
       * @return {void}
       */
      push(node, metadata) {
        node._stylehacks = Object.assign(
          {},
          metadata,
          {
            message: `Bad ${metadata.identifier}: ${metadata.hack}`,
            browsers: this.targets
          }
        );
        this.nodes.push(
          /** @type {NodeWithInfo} */
          node
        );
      }
      /**
       * @param {import('postcss').Node} node
       * @return {boolean}
       */
      any(node) {
        if (this.nodeTypes.has(node.type)) {
          this.detect(node);
          return (
            /** @type {NodeWithInfo} */
            node._stylehacks !== void 0
          );
        }
        return false;
      }
      /**
       * @param {import('postcss').Node} node
       * @return {void}
       */
      detectAndResolve(node) {
        this.nodes = [];
        this.detect(node);
        return this.resolve();
      }
      /**
       * @param {import('postcss').Node} node
       * @return {void}
       */
      detectAndWarn(node) {
        this.nodes = [];
        this.detect(node);
        return this.warn();
      }
      /** @param {import('postcss').Node} node */
      // eslint-disable-next-line no-unused-vars
      detect(node) {
        throw new Error("You need to implement this method in a subclass.");
      }
      /** @return {void} */
      resolve() {
        return this.nodes.forEach((node) => node.remove());
      }
      warn() {
        return this.nodes.forEach((node) => {
          const { message, browsers, identifier, hack } = node._stylehacks;
          return node.warn(
            /** @type {import('postcss').Result} */
            this.result,
            message + JSON.stringify({ browsers, identifier, hack })
          );
        });
      }
    };
  }
});

// node_modules/stylehacks/src/dictionary/browsers.js
var require_browsers3 = __commonJS({
  "node_modules/stylehacks/src/dictionary/browsers.js"(exports, module2) {
    "use strict";
    var FF_2 = "firefox 2";
    var IE_5_5 = "ie 5.5";
    var IE_6 = "ie 6";
    var IE_7 = "ie 7";
    var IE_8 = "ie 8";
    var OP_9 = "opera 9";
    module2.exports = { FF_2, IE_5_5, IE_6, IE_7, IE_8, OP_9 };
  }
});

// node_modules/stylehacks/src/dictionary/identifiers.js
var require_identifiers = __commonJS({
  "node_modules/stylehacks/src/dictionary/identifiers.js"(exports, module2) {
    "use strict";
    var MEDIA_QUERY = "media query";
    var PROPERTY = "property";
    var SELECTOR = "selector";
    var VALUE = "value";
    module2.exports = { MEDIA_QUERY, PROPERTY, SELECTOR, VALUE };
  }
});

// node_modules/stylehacks/src/dictionary/postcss.js
var require_postcss2 = __commonJS({
  "node_modules/stylehacks/src/dictionary/postcss.js"(exports, module2) {
    "use strict";
    var ATRULE = "atrule";
    var DECL = "decl";
    var RULE = "rule";
    module2.exports = { ATRULE, DECL, RULE };
  }
});

// node_modules/stylehacks/src/dictionary/tags.js
var require_tags = __commonJS({
  "node_modules/stylehacks/src/dictionary/tags.js"(exports, module2) {
    "use strict";
    var BODY = "body";
    var HTML = "html";
    module2.exports = { BODY, HTML };
  }
});

// node_modules/stylehacks/src/plugins/bodyEmpty.js
var require_bodyEmpty = __commonJS({
  "node_modules/stylehacks/src/plugins/bodyEmpty.js"(exports, module2) {
    "use strict";
    var parser = require_dist3();
    var exists = require_exists();
    var isMixin = require_isMixin();
    var BasePlugin = require_plugin();
    var { FF_2 } = require_browsers3();
    var { SELECTOR } = require_identifiers();
    var { RULE } = require_postcss2();
    var { BODY } = require_tags();
    module2.exports = class BodyEmpty extends BasePlugin {
      /** @param {import('postcss').Result} result */
      constructor(result) {
        super([FF_2], [RULE], result);
      }
      /**
       * @param {import('postcss').Rule} rule
       * @return {void}
       */
      detect(rule) {
        if (isMixin(rule)) {
          return;
        }
        parser(this.analyse(rule)).processSync(rule.selector);
      }
      /**
       * @param {import('postcss').Rule} rule
       * @return {parser.SyncProcessor<void>}
       */
      analyse(rule) {
        return (selectors) => {
          selectors.each((selector) => {
            if (exists(selector, 0, BODY) && exists(selector, 1, ":empty") && exists(selector, 2, " ") && selector.at(3)) {
              this.push(rule, {
                identifier: SELECTOR,
                hack: selector.toString()
              });
            }
          });
        };
      }
    };
  }
});

// node_modules/stylehacks/src/plugins/htmlCombinatorCommentBody.js
var require_htmlCombinatorCommentBody = __commonJS({
  "node_modules/stylehacks/src/plugins/htmlCombinatorCommentBody.js"(exports, module2) {
    "use strict";
    var parser = require_dist3();
    var exists = require_exists();
    var isMixin = require_isMixin();
    var BasePlugin = require_plugin();
    var { IE_5_5, IE_6, IE_7 } = require_browsers3();
    var { SELECTOR } = require_identifiers();
    var { RULE } = require_postcss2();
    var { BODY, HTML } = require_tags();
    module2.exports = class HtmlCombinatorCommentBody extends BasePlugin {
      /** @param {import('postcss').Result} result */
      constructor(result) {
        super([IE_5_5, IE_6, IE_7], [RULE], result);
      }
      /**
       * @param {import('postcss').Rule} rule
       * @return {void}
       */
      detect(rule) {
        if (isMixin(rule)) {
          return;
        }
        if (rule.raws.selector && rule.raws.selector.raw) {
          parser(this.analyse(rule)).processSync(rule.raws.selector.raw);
        }
      }
      /** @param {import('postcss').Rule} rule
       *  @return {parser.SyncProcessor<void>}
       */
      analyse(rule) {
        return (selectors) => {
          selectors.each((selector) => {
            if (exists(selector, 0, HTML) && (exists(selector, 1, ">") || exists(selector, 1, "~")) && selector.at(2) && selector.at(2).type === "comment" && exists(selector, 3, " ") && exists(selector, 4, BODY) && exists(selector, 5, " ") && selector.at(6)) {
              this.push(rule, {
                identifier: SELECTOR,
                hack: selector.toString()
              });
            }
          });
        };
      }
    };
  }
});

// node_modules/stylehacks/src/plugins/htmlFirstChild.js
var require_htmlFirstChild = __commonJS({
  "node_modules/stylehacks/src/plugins/htmlFirstChild.js"(exports, module2) {
    "use strict";
    var parser = require_dist3();
    var exists = require_exists();
    var isMixin = require_isMixin();
    var BasePlugin = require_plugin();
    var { OP_9 } = require_browsers3();
    var { SELECTOR } = require_identifiers();
    var { RULE } = require_postcss2();
    var { HTML } = require_tags();
    module2.exports = class HtmlFirstChild extends BasePlugin {
      /** @param {import('postcss').Result} result */
      constructor(result) {
        super([OP_9], [RULE], result);
      }
      /**
       * @param {import('postcss').Rule} rule
       * @return {void}
       */
      detect(rule) {
        if (isMixin(rule)) {
          return;
        }
        parser(this.analyse(rule)).processSync(rule.selector);
      }
      /**
       * @param {import('postcss').Rule} rule
       * @return {parser.SyncProcessor<void>}
       */
      analyse(rule) {
        return (selectors) => {
          selectors.each((selector) => {
            if (exists(selector, 0, HTML) && exists(selector, 1, ":first-child") && exists(selector, 2, " ") && selector.at(3)) {
              this.push(rule, {
                identifier: SELECTOR,
                hack: selector.toString()
              });
            }
          });
        };
      }
    };
  }
});

// node_modules/stylehacks/src/plugins/important.js
var require_important = __commonJS({
  "node_modules/stylehacks/src/plugins/important.js"(exports, module2) {
    "use strict";
    var BasePlugin = require_plugin();
    var { IE_5_5, IE_6, IE_7 } = require_browsers3();
    var { DECL } = require_postcss2();
    module2.exports = class Important extends BasePlugin {
      /** @param {import('postcss').Result=} result */
      constructor(result) {
        super([IE_5_5, IE_6, IE_7], [DECL], result);
      }
      /**
       * @param {import('postcss').Declaration} decl
       * @return {void}
       */
      detect(decl) {
        const match = decl.value.match(/!\w/);
        if (match && match.index) {
          const hack = decl.value.substr(match.index, decl.value.length - 1);
          this.push(decl, {
            identifier: "!important",
            hack
          });
        }
      }
    };
  }
});

// node_modules/stylehacks/src/plugins/leadingStar.js
var require_leadingStar = __commonJS({
  "node_modules/stylehacks/src/plugins/leadingStar.js"(exports, module2) {
    "use strict";
    var BasePlugin = require_plugin();
    var { IE_5_5, IE_6, IE_7 } = require_browsers3();
    var { PROPERTY } = require_identifiers();
    var { ATRULE, DECL } = require_postcss2();
    var hacks = "!_$_&_*_)_=_%_+_,_._/_`_]_#_~_?_:_|".split("_");
    module2.exports = class LeadingStar extends BasePlugin {
      /** @param {import('postcss').Result=} result */
      constructor(result) {
        super([IE_5_5, IE_6, IE_7], [ATRULE, DECL], result);
      }
      /**
       * @param {import('postcss').Declaration | import('postcss').AtRule} node
       * @return {void}
       */
      detect(node) {
        if (node.type === DECL) {
          hacks.forEach((hack) => {
            if (!node.prop.indexOf(hack)) {
              this.push(node, {
                identifier: PROPERTY,
                hack: node.prop
              });
            }
          });
          const { before } = node.raws;
          if (!before) {
            return;
          }
          hacks.forEach((hack) => {
            if (before.includes(hack)) {
              this.push(node, {
                identifier: PROPERTY,
                hack: `${before.trim()}${node.prop}`
              });
            }
          });
        } else {
          const { name } = node;
          const len = name.length - 1;
          if (name.lastIndexOf(":") === len) {
            this.push(node, {
              identifier: PROPERTY,
              hack: `@${name.substr(0, len)}`
            });
          }
        }
      }
    };
  }
});

// node_modules/stylehacks/src/plugins/leadingUnderscore.js
var require_leadingUnderscore = __commonJS({
  "node_modules/stylehacks/src/plugins/leadingUnderscore.js"(exports, module2) {
    "use strict";
    var BasePlugin = require_plugin();
    var { IE_6 } = require_browsers3();
    var { PROPERTY } = require_identifiers();
    var { DECL } = require_postcss2();
    function vendorPrefix(prop) {
      let match = prop.match(/^(-\w+-)/);
      if (match) {
        return match[0];
      }
      return "";
    }
    module2.exports = class LeadingUnderscore extends BasePlugin {
      /** @param {import('postcss').Result=} result */
      constructor(result) {
        super([IE_6], [DECL], result);
      }
      /**
       * @param {import('postcss').Declaration} decl
       * @return {void}
       */
      detect(decl) {
        const { before } = decl.raws;
        if (before && before.includes("_")) {
          this.push(decl, {
            identifier: PROPERTY,
            hack: `${before.trim()}${decl.prop}`
          });
        }
        if (decl.prop[0] === "-" && decl.prop[1] !== "-" && vendorPrefix(decl.prop) === "") {
          this.push(decl, {
            identifier: PROPERTY,
            hack: decl.prop
          });
        }
      }
    };
  }
});

// node_modules/stylehacks/src/plugins/mediaSlash0.js
var require_mediaSlash0 = __commonJS({
  "node_modules/stylehacks/src/plugins/mediaSlash0.js"(exports, module2) {
    "use strict";
    var BasePlugin = require_plugin();
    var { IE_8 } = require_browsers3();
    var { MEDIA_QUERY } = require_identifiers();
    var { ATRULE } = require_postcss2();
    module2.exports = class MediaSlash0 extends BasePlugin {
      /** @param {import('postcss').Result} result */
      constructor(result) {
        super([IE_8], [ATRULE], result);
      }
      /**
       * @param {import('postcss').AtRule} rule
       * @return {void}
       */
      detect(rule) {
        const params = rule.params.trim();
        if (params.toLowerCase() === "\\0screen") {
          this.push(rule, {
            identifier: MEDIA_QUERY,
            hack: params
          });
        }
      }
    };
  }
});

// node_modules/stylehacks/src/plugins/mediaSlash0Slash9.js
var require_mediaSlash0Slash9 = __commonJS({
  "node_modules/stylehacks/src/plugins/mediaSlash0Slash9.js"(exports, module2) {
    "use strict";
    var BasePlugin = require_plugin();
    var { IE_5_5, IE_6, IE_7, IE_8 } = require_browsers3();
    var { MEDIA_QUERY } = require_identifiers();
    var { ATRULE } = require_postcss2();
    module2.exports = class MediaSlash0Slash9 extends BasePlugin {
      /** @param {import('postcss').Result} result */
      constructor(result) {
        super([IE_5_5, IE_6, IE_7, IE_8], [ATRULE], result);
      }
      /**
       * @param {import('postcss').AtRule} rule
       * @return {void}
       */
      detect(rule) {
        const params = rule.params.trim();
        if (params.toLowerCase() === "\\0screen\\,screen\\9") {
          this.push(rule, {
            identifier: MEDIA_QUERY,
            hack: params
          });
        }
      }
    };
  }
});

// node_modules/stylehacks/src/plugins/mediaSlash9.js
var require_mediaSlash9 = __commonJS({
  "node_modules/stylehacks/src/plugins/mediaSlash9.js"(exports, module2) {
    "use strict";
    var BasePlugin = require_plugin();
    var { IE_5_5, IE_6, IE_7 } = require_browsers3();
    var { MEDIA_QUERY } = require_identifiers();
    var { ATRULE } = require_postcss2();
    module2.exports = class MediaSlash9 extends BasePlugin {
      /** @param {import('postcss').Result} result */
      constructor(result) {
        super([IE_5_5, IE_6, IE_7], [ATRULE], result);
      }
      /**
       * @param {import('postcss').AtRule} rule
       * @return {void}
       */
      detect(rule) {
        const params = rule.params.trim();
        if (params.toLowerCase() === "screen\\9") {
          this.push(rule, {
            identifier: MEDIA_QUERY,
            hack: params
          });
        }
      }
    };
  }
});

// node_modules/stylehacks/src/plugins/slash9.js
var require_slash9 = __commonJS({
  "node_modules/stylehacks/src/plugins/slash9.js"(exports, module2) {
    "use strict";
    var BasePlugin = require_plugin();
    var { IE_6, IE_7, IE_8 } = require_browsers3();
    var { VALUE } = require_identifiers();
    var { DECL } = require_postcss2();
    module2.exports = class Slash9 extends BasePlugin {
      /** @param {import('postcss').Result=} result */
      constructor(result) {
        super([IE_6, IE_7, IE_8], [DECL], result);
      }
      /**
       * @param {import('postcss').Declaration} decl
       * @return {void}
       */
      detect(decl) {
        let v = decl.value;
        if (v && v.length > 2 && v.indexOf("\\9") === v.length - 2) {
          this.push(decl, {
            identifier: VALUE,
            hack: v
          });
        }
      }
    };
  }
});

// node_modules/stylehacks/src/plugins/starHtml.js
var require_starHtml = __commonJS({
  "node_modules/stylehacks/src/plugins/starHtml.js"(exports, module2) {
    "use strict";
    var parser = require_dist3();
    var exists = require_exists();
    var isMixin = require_isMixin();
    var BasePlugin = require_plugin();
    var { IE_5_5, IE_6 } = require_browsers3();
    var { SELECTOR } = require_identifiers();
    var { RULE } = require_postcss2();
    var { HTML } = require_tags();
    module2.exports = class StarHtml extends BasePlugin {
      /** @param {import('postcss').Result=} result */
      constructor(result) {
        super([IE_5_5, IE_6], [RULE], result);
      }
      /**
       * @param {import('postcss').Rule} rule
       * @return {void}
       */
      detect(rule) {
        if (isMixin(rule)) {
          return;
        }
        parser(this.analyse(rule)).processSync(rule.selector);
      }
      /**
       * @param {import('postcss').Rule} rule
       * @return {parser.SyncProcessor<void>}
       */
      analyse(rule) {
        return (selectors) => {
          selectors.each((selector) => {
            if (exists(selector, 0, "*") && exists(selector, 1, " ") && exists(selector, 2, HTML) && exists(selector, 3, " ") && selector.at(4)) {
              this.push(rule, {
                identifier: SELECTOR,
                hack: selector.toString()
              });
            }
          });
        };
      }
    };
  }
});

// node_modules/stylehacks/src/plugins/trailingSlashComma.js
var require_trailingSlashComma = __commonJS({
  "node_modules/stylehacks/src/plugins/trailingSlashComma.js"(exports, module2) {
    "use strict";
    var BasePlugin = require_plugin();
    var isMixin = require_isMixin();
    var { IE_5_5, IE_6, IE_7 } = require_browsers3();
    var { SELECTOR } = require_identifiers();
    var { RULE } = require_postcss2();
    module2.exports = class TrailingSlashComma extends BasePlugin {
      /** @param {import('postcss').Result=} result */
      constructor(result) {
        super([IE_5_5, IE_6, IE_7], [RULE], result);
      }
      /**
       * @param {import('postcss').Rule} rule
       * @return {void}
       */
      detect(rule) {
        if (isMixin(rule)) {
          return;
        }
        const { selector } = rule;
        const trim = selector.trim();
        if (trim.lastIndexOf(",") === selector.length - 1 || trim.lastIndexOf("\\") === selector.length - 1) {
          this.push(rule, {
            identifier: SELECTOR,
            hack: selector
          });
        }
      }
    };
  }
});

// node_modules/stylehacks/src/plugins/index.js
var require_plugins2 = __commonJS({
  "node_modules/stylehacks/src/plugins/index.js"(exports, module2) {
    "use strict";
    var bodyEmpty = require_bodyEmpty();
    var htmlCombinatorCommentBody = require_htmlCombinatorCommentBody();
    var htmlFirstChild = require_htmlFirstChild();
    var important = require_important();
    var leadingStar = require_leadingStar();
    var leadingUnderscore = require_leadingUnderscore();
    var mediaSlash0 = require_mediaSlash0();
    var mediaSlash0Slash9 = require_mediaSlash0Slash9();
    var mediaSlash9 = require_mediaSlash9();
    var slash9 = require_slash9();
    var starHtml = require_starHtml();
    var trailingSlashComma = require_trailingSlashComma();
    module2.exports = [
      bodyEmpty,
      htmlCombinatorCommentBody,
      htmlFirstChild,
      important,
      leadingStar,
      leadingUnderscore,
      mediaSlash0,
      mediaSlash0Slash9,
      mediaSlash9,
      slash9,
      starHtml,
      trailingSlashComma
    ];
  }
});

// node_modules/stylehacks/src/index.js
var require_src16 = __commonJS({
  "node_modules/stylehacks/src/index.js"(exports, module2) {
    "use strict";
    var browserslist = require_browserslist();
    var plugins = require_plugins2();
    function pluginCreator(opts = {}) {
      return {
        postcssPlugin: "stylehacks",
        OnceExit(css, { result }) {
          const resultOpts = result.opts || {};
          const browsers = browserslist(null, {
            stats: resultOpts.stats,
            path: __dirname,
            env: resultOpts.env
          });
          const processors = [];
          for (const Plugin of plugins) {
            const hack = new Plugin(result);
            if (!browsers.some((browser) => hack.targets.has(browser))) {
              processors.push(hack);
            }
          }
          css.walk((node) => {
            processors.forEach((proc) => {
              if (!proc.nodeTypes.has(node.type)) {
                return;
              }
              if (opts.lint) {
                return proc.detectAndWarn(node);
              }
              return proc.detectAndResolve(node);
            });
          });
        }
      };
    }
    pluginCreator.detect = (node) => {
      return plugins.some((Plugin) => {
        const hack = new Plugin();
        return hack.any(node);
      });
    };
    pluginCreator.postcss = true;
    module2.exports = pluginCreator;
  }
});

// node_modules/postcss-merge-longhand/src/lib/insertCloned.js
var require_insertCloned = __commonJS({
  "node_modules/postcss-merge-longhand/src/lib/insertCloned.js"(exports, module2) {
    "use strict";
    module2.exports = function insertCloned(rule, decl, props) {
      const newNode = Object.assign(decl.clone(), props);
      rule.insertAfter(decl, newNode);
      return newNode;
    };
  }
});

// node_modules/postcss-merge-longhand/src/lib/parseTrbl.js
var require_parseTrbl = __commonJS({
  "node_modules/postcss-merge-longhand/src/lib/parseTrbl.js"(exports, module2) {
    "use strict";
    var { list } = require_postcss();
    module2.exports = (v) => {
      const s = typeof v === "string" ? list.space(v) : v;
      return [
        s[0],
        // top
        s[1] || s[0],
        // right
        s[2] || s[0],
        // bottom
        s[3] || s[1] || s[0]
        // left
      ];
    };
  }
});

// node_modules/postcss-merge-longhand/src/lib/hasAllProps.js
var require_hasAllProps = __commonJS({
  "node_modules/postcss-merge-longhand/src/lib/hasAllProps.js"(exports, module2) {
    "use strict";
    module2.exports = (rule, ...props) => {
      return props.every(
        (p) => rule.some((node) => node.prop && node.prop.toLowerCase().includes(p))
      );
    };
  }
});

// node_modules/postcss-merge-longhand/src/lib/getDecls.js
var require_getDecls = __commonJS({
  "node_modules/postcss-merge-longhand/src/lib/getDecls.js"(exports, module2) {
    "use strict";
    module2.exports = function getDecls(rule, properties) {
      return (
        /** @type {import('postcss').Declaration[]} */
        rule.nodes.filter(
          (node) => node.type === "decl" && properties.includes(node.prop.toLowerCase())
        )
      );
    };
  }
});

// node_modules/postcss-merge-longhand/src/lib/getLastNode.js
var require_getLastNode = __commonJS({
  "node_modules/postcss-merge-longhand/src/lib/getLastNode.js"(exports, module2) {
    "use strict";
    module2.exports = (rule, prop) => {
      return (
        /** @type {import('postcss').Declaration} */
        rule.filter((n) => n.type === "decl" && n.prop.toLowerCase() === prop).pop()
      );
    };
  }
});

// node_modules/postcss-merge-longhand/src/lib/getRules.js
var require_getRules = __commonJS({
  "node_modules/postcss-merge-longhand/src/lib/getRules.js"(exports, module2) {
    "use strict";
    var getLastNode = require_getLastNode();
    module2.exports = function getRules(props, properties) {
      return properties.map((property) => {
        return getLastNode(props, property);
      }).filter(Boolean);
    };
  }
});

// node_modules/postcss-merge-longhand/src/lib/getValue.js
var require_getValue2 = __commonJS({
  "node_modules/postcss-merge-longhand/src/lib/getValue.js"(exports, module2) {
    "use strict";
    module2.exports = function getValue({ value }) {
      return value;
    };
  }
});

// node_modules/postcss-merge-longhand/src/lib/mergeRules.js
var require_mergeRules = __commonJS({
  "node_modules/postcss-merge-longhand/src/lib/mergeRules.js"(exports, module2) {
    "use strict";
    var hasAllProps = require_hasAllProps();
    var getDecls = require_getDecls();
    var getRules = require_getRules();
    function isConflictingProp(propA, propB) {
      if (!propB.prop || propB.important !== propA.important || propA.prop === propB.prop) {
        return false;
      }
      const partsA = propA.prop.split("-");
      const partsB = propB.prop.split("-");
      if (partsA[0] !== partsB[0]) {
        return false;
      }
      const partsASet = new Set(partsA);
      return partsB.every((partB) => partsASet.has(partB));
    }
    function hasConflicts(match, nodes) {
      const firstNode = Math.min(...match.map((n) => nodes.indexOf(n)));
      const lastNode = Math.max(...match.map((n) => nodes.indexOf(n)));
      const between = nodes.slice(firstNode + 1, lastNode);
      return match.some((a) => between.some((b) => isConflictingProp(a, b)));
    }
    module2.exports = function mergeRules(rule, properties, callback) {
      let decls = getDecls(rule, properties);
      while (decls.length) {
        const last = decls[decls.length - 1];
        const props = decls.filter((node) => node.important === last.important);
        const rules = getRules(props, properties);
        if (hasAllProps(rules, ...properties) && !hasConflicts(
          rules,
          /** @type import('postcss').Declaration[]*/
          rule.nodes
        )) {
          if (callback(rules, last, props)) {
            decls = decls.filter((node) => !rules.includes(node));
          }
        }
        decls = decls.filter((node) => node !== last);
      }
    };
  }
});

// node_modules/postcss-merge-longhand/src/lib/minifyTrbl.js
var require_minifyTrbl = __commonJS({
  "node_modules/postcss-merge-longhand/src/lib/minifyTrbl.js"(exports, module2) {
    "use strict";
    var parseTrbl = require_parseTrbl();
    module2.exports = (v) => {
      const value = parseTrbl(v);
      if (value[3] === value[1]) {
        value.pop();
        if (value[2] === value[0]) {
          value.pop();
          if (value[0] === value[1]) {
            value.pop();
          }
        }
      }
      return value.join(" ");
    };
  }
});

// node_modules/postcss-merge-longhand/src/lib/colornames.js
var require_colornames = __commonJS({
  "node_modules/postcss-merge-longhand/src/lib/colornames.js"(exports, module2) {
    "use strict";
    module2.exports = /* @__PURE__ */ new Set([
      "aliceblue",
      "antiquewhite",
      "aqua",
      "aquamarine",
      "azure",
      "beige",
      "bisque",
      "black",
      "blanchedalmond",
      "blue",
      "blueviolet",
      "brown",
      "burlywood",
      "cadetblue",
      "chartreuse",
      "chocolate",
      "coral",
      "cornflowerblue",
      "cornsilk",
      "crimson",
      "cyan",
      "darkblue",
      "darkcyan",
      "darkgoldenrod",
      "darkgray",
      "darkgreen",
      "darkgrey",
      "darkkhaki",
      "darkmagenta",
      "darkolivegreen",
      "darkorange",
      "darkorchid",
      "darkred",
      "darksalmon",
      "darkseagreen",
      "darkslateblue",
      "darkslategray",
      "darkslategrey",
      "darkturquoise",
      "darkviolet",
      "deeppink",
      "deepskyblue",
      "dimgray",
      "dimgrey",
      "dodgerblue",
      "firebrick",
      "floralwhite",
      "forestgreen",
      "fuchsia",
      "gainsboro",
      "ghostwhite",
      "gold",
      "goldenrod",
      "gray",
      "green",
      "greenyellow",
      "grey",
      "honeydew",
      "hotpink",
      "indianred",
      "indigo",
      "ivory",
      "khaki",
      "lavender",
      "lavenderblush",
      "lawngreen",
      "lemonchiffon",
      "lightblue",
      "lightcoral",
      "lightcyan",
      "lightgoldenrodyellow",
      "lightgray",
      "lightgreen",
      "lightgrey",
      "lightpink",
      "lightsalmon",
      "lightseagreen",
      "lightskyblue",
      "lightslategray",
      "lightslategrey",
      "lightsteelblue",
      "lightyellow",
      "lime",
      "limegreen",
      "linen",
      "magenta",
      "maroon",
      "mediumaquamarine",
      "mediumblue",
      "mediumorchid",
      "mediumpurple",
      "mediumseagreen",
      "mediumslateblue",
      "mediumspringgreen",
      "mediumturquoise",
      "mediumvioletred",
      "midnightblue",
      "mintcream",
      "mistyrose",
      "moccasin",
      "navajowhite",
      "navy",
      "oldlace",
      "olive",
      "olivedrab",
      "orange",
      "orangered",
      "orchid",
      "palegoldenrod",
      "palegreen",
      "paleturquoise",
      "palevioletred",
      "papayawhip",
      "peachpuff",
      "peru",
      "pink",
      "plum",
      "powderblue",
      "purple",
      "rebeccapurple",
      "red",
      "rosybrown",
      "royalblue",
      "saddlebrown",
      "salmon",
      "sandybrown",
      "seagreen",
      "seashell",
      "sienna",
      "silver",
      "skyblue",
      "slateblue",
      "slategray",
      "slategrey",
      "snow",
      "springgreen",
      "steelblue",
      "tan",
      "teal",
      "thistle",
      "tomato",
      "turquoise",
      "violet",
      "wheat",
      "white",
      "whitesmoke",
      "yellow",
      "yellowgreen"
    ]);
  }
});

// node_modules/postcss-merge-longhand/src/lib/validateWsc.js
var require_validateWsc = __commonJS({
  "node_modules/postcss-merge-longhand/src/lib/validateWsc.js"(exports, module2) {
    "use strict";
    var colors = require_colornames();
    var widths = /* @__PURE__ */ new Set(["thin", "medium", "thick"]);
    var styles = /* @__PURE__ */ new Set([
      "none",
      "hidden",
      "dotted",
      "dashed",
      "solid",
      "double",
      "groove",
      "ridge",
      "inset",
      "outset"
    ]);
    function isStyle(value) {
      return value !== void 0 && styles.has(value.toLowerCase());
    }
    function isWidth(value) {
      return value && widths.has(value.toLowerCase()) || /^(\d+(\.\d+)?|\.\d+)(\w+)?$/.test(value);
    }
    function isColor(value) {
      if (!value) {
        return false;
      }
      value = value.toLowerCase();
      if (/rgba?\(/.test(value)) {
        return true;
      }
      if (/hsla?\(/.test(value)) {
        return true;
      }
      if (/#([0-9a-z]{6}|[0-9a-z]{3})/.test(value)) {
        return true;
      }
      if (value === "transparent") {
        return true;
      }
      if (value === "currentcolor") {
        return true;
      }
      return colors.has(value);
    }
    function isValidWsc(wscs) {
      const validWidth = isWidth(wscs[0]);
      const validStyle = isStyle(wscs[1]);
      const validColor = isColor(wscs[2]);
      return validWidth && validStyle || validWidth && validColor || validStyle && validColor;
    }
    module2.exports = { isStyle, isWidth, isColor, isValidWsc };
  }
});

// node_modules/postcss-merge-longhand/src/lib/parseWsc.js
var require_parseWsc = __commonJS({
  "node_modules/postcss-merge-longhand/src/lib/parseWsc.js"(exports, module2) {
    "use strict";
    var { list } = require_postcss();
    var { isWidth, isStyle, isColor } = require_validateWsc();
    var none = /^\s*(none|medium)(\s+none(\s+(none|currentcolor))?)?\s*$/i;
    var varRE = /--(\w|-|[^\x00-\x7F])+/g;
    var toLower = (v) => {
      let match;
      let lastIndex = 0;
      let result = "";
      varRE.lastIndex = 0;
      while ((match = varRE.exec(v)) !== null) {
        if (match.index > lastIndex) {
          result += v.substring(lastIndex, match.index).toLowerCase();
        }
        result += match[0];
        lastIndex = match.index + match[0].length;
      }
      if (lastIndex < v.length) {
        result += v.substring(lastIndex).toLowerCase();
      }
      if (result === "") {
        return v;
      }
      return result;
    };
    module2.exports = function parseWsc(value) {
      if (none.test(value)) {
        return ["medium", "none", "currentcolor"];
      }
      let width, style, color;
      const values = list.space(value);
      if (values.length > 1 && isStyle(values[1]) && values[0].toLowerCase() === "none") {
        values.unshift();
        width = "0";
      }
      const unknown = [];
      values.forEach((v) => {
        if (isStyle(v)) {
          style = toLower(v);
        } else if (isWidth(v)) {
          width = toLower(v);
        } else if (isColor(v)) {
          color = toLower(v);
        } else {
          unknown.push(v);
        }
      });
      if (unknown.length) {
        if (!width && style && color) {
          width = unknown.pop();
        }
        if (width && !style && color) {
          style = unknown.pop();
        }
        if (width && style && !color) {
          color = unknown.pop();
        }
      }
      return (
        /** @type {[string, string, string]} */
        [width, style, color]
      );
    };
  }
});

// node_modules/postcss-merge-longhand/src/lib/minifyWsc.js
var require_minifyWsc = __commonJS({
  "node_modules/postcss-merge-longhand/src/lib/minifyWsc.js"(exports, module2) {
    "use strict";
    var parseWsc = require_parseWsc();
    var minifyTrbl = require_minifyTrbl();
    var { isValidWsc } = require_validateWsc();
    var defaults = ["medium", "none", "currentcolor"];
    module2.exports = (v) => {
      const values = parseWsc(v);
      if (!isValidWsc(values)) {
        return minifyTrbl(v);
      }
      const value = [...values, ""].reduceRight((prev, cur, i, arr) => {
        if (cur === void 0 || cur.toLowerCase() === defaults[i] && (!i || (arr[i - 1] || "").toLowerCase() !== cur.toLowerCase())) {
          return prev;
        }
        return cur + " " + prev;
      }).trim();
      return minifyTrbl(value || "none");
    };
  }
});

// node_modules/postcss-merge-longhand/src/lib/isCustomProp.js
var require_isCustomProp = __commonJS({
  "node_modules/postcss-merge-longhand/src/lib/isCustomProp.js"(exports, module2) {
    "use strict";
    module2.exports = (node) => node.value.search(/var\s*\(\s*--/i) !== -1;
  }
});

// node_modules/postcss-merge-longhand/src/lib/canMerge.js
var require_canMerge = __commonJS({
  "node_modules/postcss-merge-longhand/src/lib/canMerge.js"(exports, module2) {
    "use strict";
    var isCustomProp = require_isCustomProp();
    var important = (node) => node.important;
    var unimportant = (node) => !node.important;
    var cssWideKeywords = ["inherit", "initial", "unset", "revert"];
    module2.exports = (props, includeCustomProps = true) => {
      const uniqueProps = new Set(props.map((node) => node.value.toLowerCase()));
      if (uniqueProps.size > 1) {
        for (const unmergeable of cssWideKeywords) {
          if (uniqueProps.has(unmergeable)) {
            return false;
          }
        }
      }
      if (includeCustomProps && props.some(isCustomProp) && !props.every(isCustomProp)) {
        return false;
      }
      return props.every(unimportant) || props.every(important);
    };
  }
});

// node_modules/postcss-merge-longhand/src/lib/trbl.js
var require_trbl = __commonJS({
  "node_modules/postcss-merge-longhand/src/lib/trbl.js"(exports, module2) {
    "use strict";
    module2.exports = ["top", "right", "bottom", "left"];
  }
});

// node_modules/postcss-merge-longhand/src/lib/canExplode.js
var require_canExplode = __commonJS({
  "node_modules/postcss-merge-longhand/src/lib/canExplode.js"(exports, module2) {
    "use strict";
    var isCustomProp = require_isCustomProp();
    var globalKeywords = /* @__PURE__ */ new Set(["inherit", "initial", "unset", "revert"]);
    module2.exports = (prop, includeCustomProps = true) => {
      if (!prop.value || includeCustomProps && isCustomProp(prop) || prop.value && globalKeywords.has(prop.value.toLowerCase())) {
        return false;
      }
      return true;
    };
  }
});

// node_modules/postcss-merge-longhand/src/lib/decl/borders.js
var require_borders = __commonJS({
  "node_modules/postcss-merge-longhand/src/lib/decl/borders.js"(exports, module2) {
    "use strict";
    var { list } = require_postcss();
    var stylehacks = require_src16();
    var insertCloned = require_insertCloned();
    var parseTrbl = require_parseTrbl();
    var hasAllProps = require_hasAllProps();
    var getDecls = require_getDecls();
    var getRules = require_getRules();
    var getValue = require_getValue2();
    var mergeRules = require_mergeRules();
    var minifyTrbl = require_minifyTrbl();
    var minifyWsc = require_minifyWsc();
    var canMerge = require_canMerge();
    var trbl = require_trbl();
    var isCustomProp = require_isCustomProp();
    var canExplode = require_canExplode();
    var getLastNode = require_getLastNode();
    var parseWsc = require_parseWsc();
    var { isValidWsc } = require_validateWsc();
    var wsc = ["width", "style", "color"];
    var defaults = ["medium", "none", "currentcolor"];
    var colorMightRequireFallback = /(hsla|rgba|color|hwb|lab|lch|oklab|oklch)\(/i;
    function borderProperty(...parts) {
      return `border-${parts.join("-")}`;
    }
    function mapBorderProperty(value) {
      return borderProperty(value);
    }
    var directions = trbl.map(mapBorderProperty);
    var properties = wsc.map(mapBorderProperty);
    var directionalProperties = directions.reduce(
      (prev, curr) => prev.concat(wsc.map((prop) => `${curr}-${prop}`)),
      /** @type {string[]} */
      []
    );
    var precedence = [
      ["border"],
      directions.concat(properties),
      directionalProperties
    ];
    var allProperties = precedence.reduce((a, b) => a.concat(b));
    function getLevel(prop) {
      for (let i = 0; i < precedence.length; i++) {
        if (precedence[i].includes(prop.toLowerCase())) {
          return i;
        }
      }
    }
    var isValueCustomProp = (value) => value !== void 0 && value.search(/var\s*\(\s*--/i) !== -1;
    function canMergeValues(values) {
      return !values.some(isValueCustomProp);
    }
    function getColorValue(decl) {
      if (decl.prop.substr(-5) === "color") {
        return decl.value;
      }
      return parseWsc(decl.value)[2] || defaults[2];
    }
    function diffingProps(values, nextValues) {
      return wsc.reduce(
        (prev, curr, i) => {
          if (values[i] === nextValues[i]) {
            return prev;
          }
          return [...prev, curr];
        },
        /** @type {string[]} */
        []
      );
    }
    function mergeRedundant({ values, nextValues, decl, nextDecl, index }) {
      if (!canMerge([decl, nextDecl])) {
        return;
      }
      if (stylehacks.detect(decl) || stylehacks.detect(nextDecl)) {
        return;
      }
      const diff = diffingProps(values, nextValues);
      if (diff.length !== 1) {
        return;
      }
      const prop = (
        /** @type {string} */
        diff.pop()
      );
      const position = wsc.indexOf(prop);
      const prop1 = `${nextDecl.prop}-${prop}`;
      const prop2 = `border-${prop}`;
      let props = parseTrbl(values[position]);
      props[index] = nextValues[position];
      const borderValue2 = values.filter((e, i) => i !== position).join(" ");
      const propValue2 = minifyTrbl(props);
      const origLength = (minifyWsc(decl.value) + nextDecl.prop + nextDecl.value).length;
      const newLength1 = decl.value.length + prop1.length + minifyWsc(nextValues[position]).length;
      const newLength2 = borderValue2.length + prop2.length + propValue2.length;
      if (newLength1 < newLength2 && newLength1 < origLength) {
        nextDecl.prop = prop1;
        nextDecl.value = nextValues[position];
      }
      if (newLength2 < newLength1 && newLength2 < origLength) {
        decl.value = borderValue2;
        nextDecl.prop = prop2;
        nextDecl.value = propValue2;
      }
    }
    function isCloseEnough(mapped) {
      return mapped[0] === mapped[1] && mapped[1] === mapped[2] || mapped[1] === mapped[2] && mapped[2] === mapped[3] || mapped[2] === mapped[3] && mapped[3] === mapped[0] || mapped[3] === mapped[0] && mapped[0] === mapped[1];
    }
    function getDistinctShorthands(mapped) {
      return [...new Set(mapped)];
    }
    function explode(rule) {
      rule.walkDecls(/^border/i, (decl) => {
        if (!canExplode(decl, false)) {
          return;
        }
        if (stylehacks.detect(decl)) {
          return;
        }
        const prop = decl.prop.toLowerCase();
        if (prop === "border") {
          if (isValidWsc(parseWsc(decl.value))) {
            directions.forEach((direction) => {
              insertCloned(
                /** @type {import('postcss').Rule} */
                decl.parent,
                decl,
                { prop: direction }
              );
            });
            decl.remove();
          }
        }
        if (directions.some((direction) => prop === direction)) {
          let values = parseWsc(decl.value);
          if (isValidWsc(values)) {
            wsc.forEach((d, i) => {
              insertCloned(
                /** @type {import('postcss').Rule} */
                decl.parent,
                decl,
                {
                  prop: `${prop}-${d}`,
                  value: values[i] || defaults[i]
                }
              );
            });
            decl.remove();
          }
        }
        wsc.some((style) => {
          if (prop !== borderProperty(style)) {
            return false;
          }
          if (isCustomProp(decl)) {
            decl.prop = decl.prop.toLowerCase();
            return false;
          }
          parseTrbl(decl.value).forEach((value, i) => {
            insertCloned(
              /** @type {import('postcss').Rule} */
              decl.parent,
              decl,
              {
                prop: borderProperty(trbl[i], style),
                value
              }
            );
          });
          return decl.remove();
        });
      });
    }
    function merge(rule) {
      trbl.forEach((direction) => {
        const prop = borderProperty(direction);
        mergeRules(
          rule,
          wsc.map((style) => borderProperty(direction, style)),
          (rules, lastNode) => {
            if (canMerge(rules, false) && !rules.some(stylehacks.detect)) {
              insertCloned(
                /** @type {import('postcss').Rule} */
                lastNode.parent,
                lastNode,
                {
                  prop,
                  value: rules.map(getValue).join(" ")
                }
              );
              for (const node of rules) {
                node.remove();
              }
              return true;
            }
            return false;
          }
        );
      });
      wsc.forEach((style) => {
        const prop = borderProperty(style);
        mergeRules(
          rule,
          trbl.map((direction) => borderProperty(direction, style)),
          (rules, lastNode) => {
            if (canMerge(rules) && !rules.some(stylehacks.detect)) {
              insertCloned(
                /** @type {import('postcss').Rule} */
                lastNode.parent,
                lastNode,
                {
                  prop,
                  value: minifyTrbl(rules.map(getValue).join(" "))
                }
              );
              for (const node of rules) {
                node.remove();
              }
              return true;
            }
            return false;
          }
        );
      });
      mergeRules(rule, directions, (rules, lastNode) => {
        if (rules.some(stylehacks.detect)) {
          return false;
        }
        const values = rules.map(({ value }) => value);
        if (!canMergeValues(values)) {
          return false;
        }
        const parsed = values.map((value) => parseWsc(value));
        if (!parsed.every(isValidWsc)) {
          return false;
        }
        wsc.forEach((d, i) => {
          const value = parsed.map((v) => v[i] || defaults[i]);
          if (canMergeValues(value)) {
            insertCloned(
              /** @type {import('postcss').Rule} */
              lastNode.parent,
              lastNode,
              {
                prop: borderProperty(d),
                value: minifyTrbl(
                  /** @type {[string, string, string, string]} */
                  value
                )
              }
            );
          } else {
            insertCloned(
              /** @type {import('postcss').Rule} */
              lastNode.parent,
              lastNode
            );
          }
        });
        for (const node of rules) {
          node.remove();
        }
        return true;
      });
      mergeRules(rule, properties, (rules, lastNode) => {
        if (rules.some(stylehacks.detect)) {
          return false;
        }
        const values = rules.map((node) => parseTrbl(node.value));
        const mapped = [0, 1, 2, 3].map(
          (i) => [values[0][i], values[1][i], values[2][i]].join(" ")
        );
        if (!canMergeValues(mapped)) {
          return false;
        }
        const [width, style, color] = rules;
        const reduced = getDistinctShorthands(mapped);
        if (isCloseEnough(mapped) && canMerge(rules, false)) {
          const first = mapped.indexOf(reduced[0]) !== mapped.lastIndexOf(reduced[0]);
          const border = insertCloned(
            /** @type {import('postcss').Rule} */
            lastNode.parent,
            lastNode,
            {
              prop: "border",
              value: first ? reduced[0] : reduced[1]
            }
          );
          if (reduced[1]) {
            const value = first ? reduced[1] : reduced[0];
            const prop = borderProperty(trbl[mapped.indexOf(value)]);
            rule.insertAfter(
              border,
              Object.assign(lastNode.clone(), {
                prop,
                value
              })
            );
          }
          for (const node of rules) {
            node.remove();
          }
          return true;
        } else if (reduced.length === 1) {
          rule.insertBefore(
            color,
            Object.assign(lastNode.clone(), {
              prop: "border",
              value: [width, style].map(getValue).join(" ")
            })
          );
          rules.filter((node) => node.prop.toLowerCase() !== properties[2]).forEach((node) => node.remove());
          return true;
        }
        return false;
      });
      mergeRules(rule, properties, (rules, lastNode) => {
        if (rules.some(stylehacks.detect)) {
          return false;
        }
        const values = rules.map((node) => parseTrbl(node.value));
        const mapped = [0, 1, 2, 3].map(
          (i) => [values[0][i], values[1][i], values[2][i]].join(" ")
        );
        const reduced = getDistinctShorthands(mapped);
        const none = "medium none currentcolor";
        if (reduced.length > 1 && reduced.length < 4 && reduced.includes(none)) {
          const filtered = mapped.filter((p) => p !== none);
          const mostCommon = reduced.sort(
            (a, b) => mapped.filter((v) => v === b).length - mapped.filter((v) => v === a).length
          )[0];
          const borderValue = reduced.length === 2 ? filtered[0] : mostCommon;
          rule.insertBefore(
            lastNode,
            Object.assign(lastNode.clone(), {
              prop: "border",
              value: borderValue
            })
          );
          directions.forEach((dir, i) => {
            if (mapped[i] !== borderValue) {
              rule.insertBefore(
                lastNode,
                Object.assign(lastNode.clone(), {
                  prop: dir,
                  value: mapped[i]
                })
              );
            }
          });
          for (const node of rules) {
            node.remove();
          }
          return true;
        }
        return false;
      });
      mergeRules(rule, directions, (rules, lastNode) => {
        if (rules.some(stylehacks.detect)) {
          return false;
        }
        const values = rules.map((node) => {
          const wscValue = parseWsc(node.value);
          if (!isValidWsc(wscValue)) {
            return node.value;
          }
          return wscValue.map((value, i) => value || defaults[i]).join(" ");
        });
        const reduced = getDistinctShorthands(values);
        if (isCloseEnough(values)) {
          const first = values.indexOf(reduced[0]) !== values.lastIndexOf(reduced[0]);
          rule.insertBefore(
            lastNode,
            Object.assign(lastNode.clone(), {
              prop: "border",
              value: minifyWsc(first ? values[0] : values[1])
            })
          );
          if (reduced[1]) {
            const value = first ? reduced[1] : reduced[0];
            const prop = directions[values.indexOf(value)];
            rule.insertBefore(
              lastNode,
              Object.assign(lastNode.clone(), {
                prop,
                value: minifyWsc(value)
              })
            );
          }
          for (const node of rules) {
            node.remove();
          }
          return true;
        }
        return false;
      });
      directions.forEach((direction) => {
        wsc.forEach((style, i) => {
          const prop = `${direction}-${style}`;
          mergeRules(rule, [direction, prop], (rules, lastNode) => {
            if (lastNode.prop !== direction) {
              return false;
            }
            const values = parseWsc(lastNode.value);
            if (!isValidWsc(values)) {
              return false;
            }
            const wscProp = rules.filter((r) => r !== lastNode)[0];
            if (!isValueCustomProp(values[i]) || isCustomProp(wscProp)) {
              return false;
            }
            const wscValue = values[i];
            values[i] = wscProp.value;
            if (canMerge(rules, false) && !rules.some(stylehacks.detect)) {
              insertCloned(
                /** @type {import('postcss').Rule} */
                lastNode.parent,
                lastNode,
                {
                  prop,
                  value: wscValue
                }
              );
              lastNode.value = minifyWsc(
                /** @type {any} */
                values
              );
              wscProp.remove();
              return true;
            }
            return false;
          });
        });
      });
      wsc.forEach((style, i) => {
        const prop = borderProperty(style);
        mergeRules(rule, ["border", prop], (rules, lastNode) => {
          if (lastNode.prop !== "border") {
            return false;
          }
          const values = parseWsc(lastNode.value);
          if (!isValidWsc(values)) {
            return false;
          }
          const wscProp = rules.filter((r) => r !== lastNode)[0];
          if (!isValueCustomProp(values[i]) || isCustomProp(wscProp)) {
            return false;
          }
          const wscValue = values[i];
          values[i] = wscProp.value;
          if (canMerge(rules, false) && !rules.some(stylehacks.detect)) {
            insertCloned(
              /** @type {import('postcss').Rule} */
              lastNode.parent,
              lastNode,
              {
                prop,
                value: wscValue
              }
            );
            lastNode.value = minifyWsc(
              /** @type {any} */
              values
            );
            wscProp.remove();
            return true;
          }
          return false;
        });
      });
      let decls = getDecls(rule, directions);
      while (decls.length) {
        const lastNode = decls[decls.length - 1];
        wsc.forEach((d, i) => {
          const names = directions.filter((name) => name !== lastNode.prop).map((name) => `${name}-${d}`);
          let nodes = rule.nodes.slice(0, rule.nodes.indexOf(lastNode));
          const border = getLastNode(nodes, "border");
          if (border) {
            nodes = nodes.slice(nodes.indexOf(border));
          }
          const props = nodes.filter(
            (node) => node.type === "decl" && names.includes(node.prop) && node.important === lastNode.important
          );
          const rules = getRules(
            /** @type {import('postcss').Declaration[]} */
            props,
            names
          );
          if (hasAllProps(rules, ...names) && !rules.some(stylehacks.detect)) {
            const values = rules.map((node) => node ? node.value : null);
            const filteredValues = values.filter(Boolean);
            const lastNodeValue = list.space(lastNode.value)[i];
            values[directions.indexOf(lastNode.prop)] = lastNodeValue;
            let value = minifyTrbl(values.join(" "));
            if (filteredValues[0] === filteredValues[1] && filteredValues[1] === filteredValues[2]) {
              value = /** @type {string} */
              filteredValues[0];
            }
            let refNode = props[props.length - 1];
            if (value === lastNodeValue) {
              refNode = lastNode;
              let valueArray = list.space(lastNode.value);
              valueArray.splice(i, 1);
              lastNode.value = valueArray.join(" ");
            }
            insertCloned(
              /** @type {import('postcss').Rule} */
              refNode.parent,
              /** @type {import('postcss').Declaration} */
              refNode,
              {
                prop: borderProperty(d),
                value
              }
            );
            decls = decls.filter((node) => !rules.includes(node));
            for (const node of rules) {
              node.remove();
            }
          }
        });
        decls = decls.filter((node) => node !== lastNode);
      }
      rule.walkDecls("border", (decl) => {
        const nextDecl = decl.next();
        if (!nextDecl || nextDecl.type !== "decl") {
          return false;
        }
        const index = directions.indexOf(nextDecl.prop);
        if (index === -1) {
          return;
        }
        const values = parseWsc(decl.value);
        const nextValues = parseWsc(nextDecl.value);
        if (!isValidWsc(values) || !isValidWsc(nextValues)) {
          return;
        }
        const config = {
          values,
          nextValues,
          decl,
          nextDecl,
          index
        };
        return mergeRedundant(config);
      });
      rule.walkDecls(/^border($|-(top|right|bottom|left)$)/i, (decl) => {
        let values = parseWsc(decl.value);
        if (!isValidWsc(values)) {
          return;
        }
        const position = directions.indexOf(decl.prop);
        let dirs = [...directions];
        dirs.splice(position, 1);
        wsc.forEach((d, i) => {
          const props = dirs.map((dir) => `${dir}-${d}`);
          mergeRules(rule, [decl.prop, ...props], (rules) => {
            if (!rules.includes(decl)) {
              return false;
            }
            const longhands = rules.filter((p) => p !== decl);
            if (longhands[0].value.toLowerCase() === longhands[1].value.toLowerCase() && longhands[1].value.toLowerCase() === longhands[2].value.toLowerCase() && values[i] !== void 0 && longhands[0].value.toLowerCase() === values[i].toLowerCase()) {
              for (const node of longhands) {
                node.remove();
              }
              insertCloned(
                /** @type {import('postcss').Rule} */
                decl.parent,
                decl,
                {
                  prop: borderProperty(d),
                  value: values[i]
                }
              );
              values[i] = null;
            }
            return false;
          });
          const newValue = values.join(" ");
          if (newValue) {
            decl.value = newValue;
          } else {
            decl.remove();
          }
        });
      });
      rule.walkDecls(/^border($|-(top|right|bottom|left)$)/i, (decl) => {
        decl.value = minifyWsc(decl.value);
      });
      rule.walkDecls(/^border-spacing$/i, (decl) => {
        const value = list.space(decl.value);
        if (value.length > 1 && value[0] === value[1]) {
          decl.value = value.slice(1).join(" ");
        }
      });
      decls = getDecls(rule, allProperties);
      while (decls.length) {
        const lastNode = decls[decls.length - 1];
        const lastPart = lastNode.prop.split("-").pop();
        const lesser = decls.filter(
          (node) => !stylehacks.detect(lastNode) && !stylehacks.detect(node) && !isCustomProp(lastNode) && node !== lastNode && node.important === lastNode.important && /** @type {number} */
          getLevel(node.prop) > /** @type {number} */
          getLevel(lastNode.prop) && (node.prop.toLowerCase().includes(lastNode.prop) || node.prop.toLowerCase().endsWith(
            /** @type {string} */
            lastPart
          ))
        );
        for (const node of lesser) {
          node.remove();
        }
        decls = decls.filter((node) => !lesser.includes(node));
        let duplicates = decls.filter(
          (node) => !stylehacks.detect(lastNode) && !stylehacks.detect(node) && node !== lastNode && node.important === lastNode.important && node.prop === lastNode.prop && !(!isCustomProp(node) && isCustomProp(lastNode))
        );
        if (duplicates.length) {
          if (colorMightRequireFallback.test(getColorValue(lastNode))) {
            const preserve = duplicates.filter(
              (node) => !colorMightRequireFallback.test(getColorValue(node))
            ).pop();
            duplicates = duplicates.filter((node) => node !== preserve);
          }
          for (const node of duplicates) {
            node.remove();
          }
        }
        decls = decls.filter(
          (node) => node !== lastNode && !duplicates.includes(node)
        );
      }
    }
    module2.exports = {
      explode,
      merge
    };
  }
});

// node_modules/postcss-merge-longhand/src/lib/decl/columns.js
var require_columns2 = __commonJS({
  "node_modules/postcss-merge-longhand/src/lib/decl/columns.js"(exports, module2) {
    "use strict";
    var { list } = require_postcss();
    var { unit } = require_lib();
    var stylehacks = require_src16();
    var canMerge = require_canMerge();
    var getDecls = require_getDecls();
    var getValue = require_getValue2();
    var mergeRules = require_mergeRules();
    var insertCloned = require_insertCloned();
    var isCustomProp = require_isCustomProp();
    var canExplode = require_canExplode();
    var properties = ["column-width", "column-count"];
    var auto = "auto";
    var inherit = "inherit";
    function normalize(values) {
      if (values[0].toLowerCase() === auto) {
        return values[1];
      }
      if (values[1].toLowerCase() === auto) {
        return values[0];
      }
      if (values[0].toLowerCase() === inherit && values[1].toLowerCase() === inherit) {
        return inherit;
      }
      return values.join(" ");
    }
    function explode(rule) {
      rule.walkDecls(/^columns$/i, (decl) => {
        if (!canExplode(decl)) {
          return;
        }
        if (stylehacks.detect(decl)) {
          return;
        }
        let values = list.space(decl.value);
        if (values.length === 1) {
          values.push(auto);
        }
        values.forEach((value, i) => {
          let prop = properties[1];
          const dimension = unit(value);
          if (value.toLowerCase() === auto) {
            prop = properties[i];
          } else if (dimension && dimension.unit !== "") {
            prop = properties[0];
          }
          insertCloned(
            /** @type {import('postcss').Rule} */
            decl.parent,
            decl,
            {
              prop,
              value
            }
          );
        });
        decl.remove();
      });
    }
    function cleanup(rule) {
      let decls = getDecls(rule, ["columns"].concat(properties));
      while (decls.length) {
        const lastNode = decls[decls.length - 1];
        const lesser = decls.filter(
          (node) => !stylehacks.detect(lastNode) && !stylehacks.detect(node) && node !== lastNode && node.important === lastNode.important && lastNode.prop === "columns" && node.prop !== lastNode.prop
        );
        for (const node of lesser) {
          node.remove();
        }
        decls = decls.filter((node) => !lesser.includes(node));
        let duplicates = decls.filter(
          (node) => !stylehacks.detect(lastNode) && !stylehacks.detect(node) && node !== lastNode && node.important === lastNode.important && node.prop === lastNode.prop && !(!isCustomProp(node) && isCustomProp(lastNode))
        );
        for (const node of duplicates) {
          node.remove();
        }
        decls = decls.filter(
          (node) => node !== lastNode && !duplicates.includes(node)
        );
      }
    }
    function merge(rule) {
      mergeRules(rule, properties, (rules, lastNode) => {
        if (canMerge(rules) && !rules.some(stylehacks.detect)) {
          insertCloned(
            /** @type {import('postcss').Rule} */
            lastNode.parent,
            lastNode,
            {
              prop: "columns",
              value: normalize(
                /** @type [string, string] */
                rules.map(getValue)
              )
            }
          );
          for (const node of rules) {
            node.remove();
          }
          return true;
        }
        return false;
      });
      cleanup(rule);
    }
    module2.exports = {
      explode,
      merge
    };
  }
});

// node_modules/postcss-merge-longhand/src/lib/mergeValues.js
var require_mergeValues = __commonJS({
  "node_modules/postcss-merge-longhand/src/lib/mergeValues.js"(exports, module2) {
    "use strict";
    var getValue = require_getValue2();
    module2.exports = (...rules) => rules.map(getValue).join(" ");
  }
});

// node_modules/postcss-merge-longhand/src/lib/decl/boxBase.js
var require_boxBase = __commonJS({
  "node_modules/postcss-merge-longhand/src/lib/decl/boxBase.js"(exports, module2) {
    "use strict";
    var stylehacks = require_src16();
    var canMerge = require_canMerge();
    var getDecls = require_getDecls();
    var minifyTrbl = require_minifyTrbl();
    var parseTrbl = require_parseTrbl();
    var insertCloned = require_insertCloned();
    var mergeRules = require_mergeRules();
    var mergeValues = require_mergeValues();
    var trbl = require_trbl();
    var isCustomProp = require_isCustomProp();
    var canExplode = require_canExplode();
    module2.exports = (prop) => {
      const properties = trbl.map((direction) => `${prop}-${direction}`);
      const cleanup = (rule) => {
        let decls = getDecls(rule, [prop].concat(properties));
        while (decls.length) {
          const lastNode = decls[decls.length - 1];
          const lesser = decls.filter(
            (node) => !stylehacks.detect(lastNode) && !stylehacks.detect(node) && node !== lastNode && node.important === lastNode.important && lastNode.prop === prop && node.prop !== lastNode.prop
          );
          for (const node of lesser) {
            node.remove();
          }
          decls = decls.filter((node) => !lesser.includes(node));
          let duplicates = decls.filter(
            (node) => !stylehacks.detect(lastNode) && !stylehacks.detect(node) && node !== lastNode && node.important === lastNode.important && node.prop === lastNode.prop && !(!isCustomProp(node) && isCustomProp(lastNode))
          );
          for (const node of duplicates) {
            node.remove();
          }
          decls = decls.filter(
            (node) => node !== lastNode && !duplicates.includes(node)
          );
        }
      };
      const processor = {
        /** @type {(rule: import('postcss').Rule) => void} */
        explode: (rule) => {
          rule.walkDecls(new RegExp("^" + prop + "$", "i"), (decl) => {
            if (!canExplode(decl)) {
              return;
            }
            if (stylehacks.detect(decl)) {
              return;
            }
            const values = parseTrbl(decl.value);
            trbl.forEach((direction, index) => {
              insertCloned(
                /** @type {import('postcss').Rule} */
                decl.parent,
                decl,
                {
                  prop: properties[index],
                  value: values[index]
                }
              );
            });
            decl.remove();
          });
        },
        /** @type {(rule: import('postcss').Rule) => void} */
        merge: (rule) => {
          mergeRules(rule, properties, (rules, lastNode) => {
            if (canMerge(rules) && !rules.some(stylehacks.detect)) {
              insertCloned(
                /** @type {import('postcss').Rule} */
                lastNode.parent,
                lastNode,
                {
                  prop,
                  value: minifyTrbl(mergeValues(...rules))
                }
              );
              for (const node of rules) {
                node.remove();
              }
              return true;
            }
            return false;
          });
          cleanup(rule);
        }
      };
      return processor;
    };
  }
});

// node_modules/postcss-merge-longhand/src/lib/decl/margin.js
var require_margin = __commonJS({
  "node_modules/postcss-merge-longhand/src/lib/decl/margin.js"(exports, module2) {
    "use strict";
    var base = require_boxBase();
    module2.exports = base("margin");
  }
});

// node_modules/postcss-merge-longhand/src/lib/decl/padding.js
var require_padding = __commonJS({
  "node_modules/postcss-merge-longhand/src/lib/decl/padding.js"(exports, module2) {
    "use strict";
    var base = require_boxBase();
    module2.exports = base("padding");
  }
});

// node_modules/postcss-merge-longhand/src/lib/decl/index.js
var require_decl = __commonJS({
  "node_modules/postcss-merge-longhand/src/lib/decl/index.js"(exports, module2) {
    "use strict";
    var borders = require_borders();
    var columns = require_columns2();
    var margin = require_margin();
    var padding = require_padding();
    module2.exports = [borders, columns, margin, padding];
  }
});

// node_modules/postcss-merge-longhand/src/index.js
var require_src17 = __commonJS({
  "node_modules/postcss-merge-longhand/src/index.js"(exports, module2) {
    "use strict";
    var processors = require_decl();
    function pluginCreator() {
      return {
        postcssPlugin: "postcss-merge-longhand",
        OnceExit(css) {
          css.walkRules((rule) => {
            processors.forEach((p) => {
              p.explode(rule);
              p.merge(rule);
            });
          });
        }
      };
    }
    pluginCreator.postcss = true;
    module2.exports = pluginCreator;
  }
});

// node_modules/postcss-discard-duplicates/src/index.js
var require_src18 = __commonJS({
  "node_modules/postcss-discard-duplicates/src/index.js"(exports, module2) {
    "use strict";
    function trimValue(value) {
      return value ? value.trim() : value;
    }
    function empty(node) {
      return !node.nodes.filter((child) => child.type !== "comment").length;
    }
    function equals(nodeA, nodeB) {
      const a = (
        /** @type {any} */
        nodeA
      );
      const b = (
        /** @type {any} */
        nodeB
      );
      if (a.type !== b.type) {
        return false;
      }
      if (a.important !== b.important) {
        return false;
      }
      if (a.raws && !b.raws || !a.raws && b.raws) {
        return false;
      }
      switch (a.type) {
        case "rule":
          if (a.selector !== b.selector) {
            return false;
          }
          break;
        case "atrule":
          if (a.name !== b.name || a.params !== b.params) {
            return false;
          }
          if (a.raws && trimValue(a.raws.before) !== trimValue(b.raws.before)) {
            return false;
          }
          if (a.raws && trimValue(a.raws.afterName) !== trimValue(b.raws.afterName)) {
            return false;
          }
          break;
        case "decl":
          if (a.prop !== b.prop || a.value !== b.value) {
            return false;
          }
          if (a.raws && trimValue(a.raws.before) !== trimValue(b.raws.before)) {
            return false;
          }
          break;
      }
      if (a.nodes) {
        if (a.nodes.length !== b.nodes.length) {
          return false;
        }
        for (let i = 0; i < a.nodes.length; i++) {
          if (!equals(a.nodes[i], b.nodes[i])) {
            return false;
          }
        }
      }
      return true;
    }
    function dedupeRule(last, nodes) {
      let index = nodes.indexOf(last) - 1;
      while (index >= 0) {
        const node = nodes[index--];
        if (node && node.type === "rule" && node.selector === last.selector) {
          last.each((child) => {
            if (child.type === "decl") {
              dedupeNode(child, node.nodes);
            }
          });
          if (empty(node)) {
            node.remove();
          }
        }
      }
    }
    function dedupeNode(last, nodes) {
      let index = nodes.includes(last) ? nodes.indexOf(last) - 1 : nodes.length - 1;
      while (index >= 0) {
        const node = nodes[index--];
        if (node && equals(node, last)) {
          node.remove();
        }
      }
    }
    function dedupe(root) {
      const { nodes } = (
        /** @type {import('postcss').Container<import('postcss').ChildNode>} */
        root
      );
      if (!nodes) {
        return;
      }
      let index = nodes.length - 1;
      while (index >= 0) {
        let last = nodes[index--];
        if (!last || !last.parent) {
          continue;
        }
        dedupe(last);
        if (last.type === "rule") {
          dedupeRule(last, nodes);
        } else if (last.type === "atrule" || last.type === "decl") {
          dedupeNode(last, nodes);
        }
      }
    }
    function pluginCreator() {
      return {
        postcssPlugin: "postcss-discard-duplicates",
        OnceExit(css) {
          dedupe(css);
        }
      };
    }
    pluginCreator.postcss = true;
    module2.exports = pluginCreator;
  }
});

// node_modules/postcss-discard-overridden/src/index.js
var require_src19 = __commonJS({
  "node_modules/postcss-discard-overridden/src/index.js"(exports, module2) {
    "use strict";
    var OVERRIDABLE_RULES = /* @__PURE__ */ new Set(["keyframes", "counter-style"]);
    var SCOPE_RULES = /* @__PURE__ */ new Set(["media", "supports"]);
    function vendorUnprefixed(prop) {
      return prop.replace(/^-\w+-/, "");
    }
    function isOverridable(name) {
      return OVERRIDABLE_RULES.has(vendorUnprefixed(name.toLowerCase()));
    }
    function isScope(name) {
      return SCOPE_RULES.has(vendorUnprefixed(name.toLowerCase()));
    }
    function getScope(node) {
      let current = node.parent;
      const chain = [node.name.toLowerCase(), node.params];
      while (current) {
        if (current.type === "atrule" && isScope(
          /** @type import('postcss').AtRule */
          current.name
        )) {
          chain.unshift(
            /** @type import('postcss').AtRule */
            current.name + " " + /** @type import('postcss').AtRule */
            current.params
          );
        }
        current = current.parent;
      }
      return chain.join("|");
    }
    function pluginCreator() {
      return {
        postcssPlugin: "postcss-discard-overridden",
        prepare() {
          const cache = /* @__PURE__ */ new Map();
          const rules = [];
          return {
            OnceExit(css) {
              css.walkAtRules((node) => {
                if (isOverridable(node.name)) {
                  const scope = getScope(node);
                  cache.set(scope, node);
                  rules.push({
                    node,
                    scope
                  });
                }
              });
              rules.forEach((rule) => {
                if (cache.get(rule.scope) !== rule.node) {
                  rule.node.remove();
                }
              });
            }
          };
        }
      };
    }
    pluginCreator.postcss = true;
    module2.exports = pluginCreator;
  }
});

// node_modules/postcss-normalize-repeat-style/src/lib/map.js
var require_map = __commonJS({
  "node_modules/postcss-normalize-repeat-style/src/lib/map.js"(exports, module2) {
    "use strict";
    module2.exports = /* @__PURE__ */ new Map([
      [["repeat", "no-repeat"].toString(), "repeat-x"],
      [["no-repeat", "repeat"].toString(), "repeat-y"],
      [["repeat", "repeat"].toString(), "repeat"],
      [["space", "space"].toString(), "space"],
      [["round", "round"].toString(), "round"],
      [["no-repeat", "no-repeat"].toString(), "no-repeat"]
    ]);
  }
});

// node_modules/postcss-normalize-repeat-style/src/index.js
var require_src20 = __commonJS({
  "node_modules/postcss-normalize-repeat-style/src/index.js"(exports, module2) {
    "use strict";
    var valueParser = require_lib();
    var mappings = require_map();
    function evenValues(item, index) {
      return index % 2 === 0;
    }
    var repeatKeywords = new Set(mappings.values());
    function isCommaNode(node) {
      return node.type === "div" && node.value === ",";
    }
    var variableFunctions = /* @__PURE__ */ new Set(["var", "env", "constant"]);
    function isVariableFunctionNode(node) {
      if (node.type !== "function") {
        return false;
      }
      return variableFunctions.has(node.value.toLowerCase());
    }
    function transform2(value) {
      const parsed = valueParser(value);
      if (parsed.nodes.length === 1) {
        return value;
      }
      const ranges = [];
      let rangeIndex = 0;
      let shouldContinue = true;
      parsed.nodes.forEach((node, index) => {
        if (isCommaNode(node)) {
          rangeIndex += 1;
          shouldContinue = true;
          return;
        }
        if (!shouldContinue) {
          return;
        }
        if (node.type === "div" && node.value === "/") {
          shouldContinue = false;
          return;
        }
        if (!ranges[rangeIndex]) {
          ranges[rangeIndex] = {
            start: null,
            end: null
          };
        }
        if (isVariableFunctionNode(node)) {
          shouldContinue = false;
          ranges[rangeIndex].start = null;
          ranges[rangeIndex].end = null;
          return;
        }
        const isRepeatKeyword = node.type === "word" && repeatKeywords.has(node.value.toLowerCase());
        if (ranges[rangeIndex].start === null && isRepeatKeyword) {
          ranges[rangeIndex].start = index;
          ranges[rangeIndex].end = index;
          return;
        }
        if (ranges[rangeIndex].start !== null) {
          if (node.type === "space") {
            return;
          } else if (isRepeatKeyword) {
            ranges[rangeIndex].end = index;
            return;
          }
          return;
        }
      });
      ranges.forEach((range) => {
        if (range.start === null) {
          return;
        }
        const nodes = parsed.nodes.slice(
          range.start,
          /** @type {number} */
          range.end + 1
        );
        if (nodes.length !== 3) {
          return;
        }
        const key = nodes.filter(evenValues).map((n) => n.value.toLowerCase()).toString();
        const match = mappings.get(key);
        if (match) {
          nodes[0].value = match;
          nodes[1].value = nodes[2].value = "";
        }
      });
      return parsed.toString();
    }
    function pluginCreator() {
      return {
        postcssPlugin: "postcss-normalize-repeat-style",
        prepare() {
          const cache = /* @__PURE__ */ new Map();
          return {
            OnceExit(css) {
              css.walkDecls(
                /^(background(-repeat)?|(-\w+-)?mask-repeat)$/i,
                (decl) => {
                  const value = decl.value;
                  if (!value) {
                    return;
                  }
                  if (cache.has(value)) {
                    decl.value = cache.get(value);
                    return;
                  }
                  const result = transform2(value);
                  decl.value = result;
                  cache.set(value, result);
                }
              );
            }
          };
        }
      };
    }
    pluginCreator.postcss = true;
    module2.exports = pluginCreator;
  }
});

// node_modules/postcss-merge-rules/src/lib/ensureCompatibility.js
var require_ensureCompatibility = __commonJS({
  "node_modules/postcss-merge-rules/src/lib/ensureCompatibility.js"(exports, module2) {
    "use strict";
    var { isSupported } = require_dist2();
    var selectorParser = require_dist3();
    var simpleSelectorRe = /^#?[-._a-z0-9 ]+$/i;
    var cssSel2 = "css-sel2";
    var cssSel3 = "css-sel3";
    var cssGencontent = "css-gencontent";
    var cssFirstLetter = "css-first-letter";
    var cssFirstLine = "css-first-line";
    var cssInOutOfRange = "css-in-out-of-range";
    var formValidation = "form-validation";
    var vendorPrefix = /-(ah|apple|atsc|epub|hp|khtml|moz|ms|o|rim|ro|tc|wap|webkit|xv)-/;
    var level2Sel = /* @__PURE__ */ new Set(["=", "~=", "|="]);
    var level3Sel = /* @__PURE__ */ new Set(["^=", "$=", "*="]);
    function filterPrefixes(selector) {
      return selector.match(vendorPrefix);
    }
    var findMsInputPlaceholder = (selector) => ~selector.search(/-ms-input-placeholder/i);
    function sameVendor(selectorsA, selectorsB) {
      let same = (selectors) => selectors.map(filterPrefixes).join();
      let findMsVendor = (selectors) => selectors.find(findMsInputPlaceholder);
      return same(selectorsA) === same(selectorsB) && !(findMsVendor(selectorsA) && findMsVendor(selectorsB));
    }
    function noVendor(selector) {
      return !vendorPrefix.test(selector);
    }
    var pseudoElements = {
      ":active": cssSel2,
      ":after": cssGencontent,
      ":any-link": "css-any-link",
      ":before": cssGencontent,
      ":checked": cssSel3,
      ":default": "css-default-pseudo",
      ":dir": "css-dir-pseudo",
      ":disabled": cssSel3,
      ":empty": cssSel3,
      ":enabled": cssSel3,
      ":first-child": cssSel2,
      ":first-letter": cssFirstLetter,
      ":first-line": cssFirstLine,
      ":first-of-type": cssSel3,
      ":focus": cssSel2,
      ":focus-within": "css-focus-within",
      ":focus-visible": "css-focus-visible",
      ":has": "css-has",
      ":hover": cssSel2,
      ":in-range": cssInOutOfRange,
      ":indeterminate": "css-indeterminate-pseudo",
      ":invalid": formValidation,
      ":is": "css-matches-pseudo",
      ":lang": cssSel2,
      ":last-child": cssSel3,
      ":last-of-type": cssSel3,
      ":link": cssSel2,
      ":matches": "css-matches-pseudo",
      ":not": cssSel3,
      ":nth-child": cssSel3,
      ":nth-last-child": cssSel3,
      ":nth-last-of-type": cssSel3,
      ":nth-of-type": cssSel3,
      ":only-child": cssSel3,
      ":only-of-type": cssSel3,
      ":optional": "css-optional-pseudo",
      ":out-of-range": cssInOutOfRange,
      ":placeholder-shown": "css-placeholder-shown",
      ":required": formValidation,
      ":root": cssSel3,
      ":target": cssSel3,
      "::after": cssGencontent,
      "::backdrop": "dialog",
      "::before": cssGencontent,
      "::first-letter": cssFirstLetter,
      "::first-line": cssFirstLine,
      "::marker": "css-marker-pseudo",
      "::placeholder": "css-placeholder",
      "::selection": "css-selection",
      ":valid": formValidation,
      ":visited": cssSel2
    };
    function isCssMixin(selector) {
      return selector[selector.length - 1] === ":";
    }
    function isHostPseudoClass(selector) {
      return selector.includes(":host");
    }
    var isSupportedCache = /* @__PURE__ */ new Map();
    function isSupportedCached(feature, browsers) {
      const key = JSON.stringify({ feature, browsers });
      let result = isSupportedCache.get(key);
      if (!result) {
        result = isSupported(
          feature,
          /** @type {string[]} */
          browsers
        );
        isSupportedCache.set(key, result);
      }
      return result;
    }
    function ensureCompatibility(selectors, browsers, compatibilityCache) {
      if (selectors.some(isCssMixin)) {
        return false;
      }
      if (selectors.some(isHostPseudoClass)) {
        return false;
      }
      return selectors.every((selector) => {
        if (simpleSelectorRe.test(selector)) {
          return true;
        }
        if (compatibilityCache && compatibilityCache.has(selector)) {
          return compatibilityCache.get(selector);
        }
        let compatible = true;
        selectorParser((ast) => {
          ast.walk((node) => {
            const { type, value } = node;
            if (type === "pseudo") {
              const entry = pseudoElements[
                /** @type {keyof pseudoElements} */
                value
              ];
              if (!entry && noVendor(value)) {
                compatible = false;
              }
              if (entry && compatible) {
                compatible = isSupportedCached(entry, browsers);
              }
            }
            if (type === "combinator") {
              if (value.includes("~")) {
                compatible = isSupportedCached(cssSel3, browsers);
              }
              if (value.includes(">") || value.includes("+")) {
                compatible = isSupportedCached(cssSel2, browsers);
              }
            }
            if (type === "attribute" && node.attribute) {
              if (!node.operator) {
                compatible = isSupportedCached(cssSel2, browsers);
              }
              if (value) {
                if (level2Sel.has(
                  /** @type {string} */
                  node.operator
                )) {
                  compatible = isSupportedCached(cssSel2, browsers);
                }
                if (level3Sel.has(
                  /** @type {string} */
                  node.operator
                )) {
                  compatible = isSupportedCached(cssSel3, browsers);
                }
              }
              if (node.insensitive) {
                compatible = isSupportedCached("css-case-insensitive", browsers);
              }
            }
            if (!compatible) {
              return false;
            }
          });
        }).processSync(selector);
        if (compatibilityCache) {
          compatibilityCache.set(selector, compatible);
        }
        return compatible;
      });
    }
    module2.exports = { sameVendor, noVendor, pseudoElements, ensureCompatibility };
  }
});

// node_modules/postcss-merge-rules/src/index.js
var require_src21 = __commonJS({
  "node_modules/postcss-merge-rules/src/index.js"(exports, module2) {
    "use strict";
    var browserslist = require_browserslist();
    var { sameParent } = require_src3();
    var {
      ensureCompatibility,
      sameVendor,
      noVendor
    } = require_ensureCompatibility();
    function declarationIsEqual(a, b) {
      return a.important === b.important && a.prop === b.prop && a.value === b.value;
    }
    function indexOfDeclaration(array, decl) {
      return array.findIndex((d) => declarationIsEqual(d, decl));
    }
    function intersect(a, b, not) {
      return a.filter((c) => {
        const index = indexOfDeclaration(b, c) !== -1;
        return not ? !index : index;
      });
    }
    function sameDeclarationsAndOrder(a, b) {
      if (a.length !== b.length) {
        return false;
      }
      return a.every((d, index) => declarationIsEqual(d, b[index]));
    }
    function canMerge(ruleA, ruleB, browsers, compatibilityCache) {
      const a = ruleA.selectors;
      const b = ruleB.selectors;
      const selectors = a.concat(b);
      if (!ensureCompatibility(selectors, browsers, compatibilityCache)) {
        return false;
      }
      const parent = sameParent(
        /** @type {any} */
        ruleA,
        /** @type {any} */
        ruleB
      );
      if (parent && ruleA.parent && ruleA.parent.type === "atrule" && /** @type {import('postcss').AtRule} */
      ruleA.parent.name.includes(
        "keyframes"
      )) {
        return false;
      }
      if (ruleA.some(isRuleOrAtRule) || ruleB.some(isRuleOrAtRule)) {
        return false;
      }
      return parent && (selectors.every(noVendor) || sameVendor(a, b));
    }
    function isRuleOrAtRule(node) {
      return node.type === "rule" || node.type === "atrule";
    }
    function isDeclaration(node) {
      return node.type === "decl";
    }
    function getDecls(rule) {
      return rule.nodes.filter(isDeclaration);
    }
    var joinSelectors = (...rules) => rules.map((s) => s.selector).join();
    function ruleLength(...rules) {
      return rules.map((r) => r.nodes.length ? String(r) : "").join("").length;
    }
    function splitProp(prop) {
      const parts = prop.split("-");
      if (prop[0] !== "-") {
        return {
          prefix: "",
          base: parts[0],
          rest: parts.slice(1)
        };
      }
      if (prop[1] === "-") {
        return {
          prefix: null,
          base: null,
          rest: [prop]
        };
      }
      return {
        prefix: parts[1],
        base: parts[2],
        rest: parts.slice(3)
      };
    }
    function isConflictingProp(propA, propB) {
      if (propA === propB) {
        return true;
      }
      const a = splitProp(propA);
      const b = splitProp(propB);
      if (!a.base && !b.base) {
        return true;
      }
      if (a.base !== b.base && a.base !== "place" && b.base !== "place") {
        return false;
      }
      if (a.rest.length !== b.rest.length) {
        return true;
      }
      if (a.base === "border") {
        const allRestProps = /* @__PURE__ */ new Set([...a.rest, ...b.rest]);
        if (allRestProps.has("image") || allRestProps.has("width") || allRestProps.has("color") || allRestProps.has("style")) {
          return true;
        }
      }
      return a.rest.every((s, index) => b.rest[index] === s);
    }
    function mergeParents(first, second) {
      if (!first.parent || !second.parent) {
        return false;
      }
      if (first.parent === second.parent) {
        return false;
      }
      second.remove();
      first.parent.append(second);
      return true;
    }
    function partialMerge(first, second) {
      let intersection = intersect(getDecls(first), getDecls(second));
      if (intersection.length === 0) {
        return second;
      }
      let nextRule = second.next();
      if (!nextRule) {
        const parentSibling = (
          /** @type {import('postcss').Container<import('postcss').ChildNode>} */
          second.parent.next()
        );
        nextRule = parentSibling && parentSibling.nodes && parentSibling.nodes[0];
      }
      if (nextRule && nextRule.type === "rule" && canMerge(second, nextRule)) {
        let nextIntersection = intersect(getDecls(second), getDecls(nextRule));
        if (nextIntersection.length > intersection.length) {
          mergeParents(second, nextRule);
          first = second;
          second = nextRule;
          intersection = nextIntersection;
        }
      }
      const firstDecls = getDecls(first);
      intersection = intersection.filter((decl, intersectIndex) => {
        const indexOfDecl = indexOfDeclaration(firstDecls, decl);
        const nextConflictInFirst = firstDecls.slice(indexOfDecl + 1).filter((d) => isConflictingProp(d.prop, decl.prop));
        if (nextConflictInFirst.length === 0) {
          return true;
        }
        const nextConflictInIntersection = intersection.slice(intersectIndex + 1).filter((d) => isConflictingProp(d.prop, decl.prop));
        if (nextConflictInFirst.length !== nextConflictInIntersection.length) {
          return false;
        }
        return nextConflictInFirst.every(
          (d, index) => declarationIsEqual(d, nextConflictInIntersection[index])
        );
      });
      const secondDecls = getDecls(second);
      intersection = intersection.filter((decl) => {
        const nextConflictIndex = secondDecls.findIndex(
          (d) => isConflictingProp(d.prop, decl.prop)
        );
        if (nextConflictIndex === -1) {
          return false;
        }
        if (!declarationIsEqual(secondDecls[nextConflictIndex], decl)) {
          return false;
        }
        if (decl.prop.toLowerCase() !== "direction" && decl.prop.toLowerCase() !== "unicode-bidi" && secondDecls.some(
          (declaration) => declaration.prop.toLowerCase() === "all"
        )) {
          return false;
        }
        secondDecls.splice(nextConflictIndex, 1);
        return true;
      });
      if (intersection.length === 0) {
        return second;
      }
      const receivingBlock = second.clone();
      receivingBlock.selector = joinSelectors(first, second);
      receivingBlock.nodes = [];
      second.parent.insertBefore(second, receivingBlock);
      const firstClone = first.clone();
      const secondClone = second.clone();
      function moveDecl(callback) {
        return (decl) => {
          if (indexOfDeclaration(intersection, decl) !== -1) {
            callback.call(this, decl);
          }
        };
      }
      firstClone.walkDecls(
        moveDecl((decl) => {
          decl.remove();
          receivingBlock.append(decl);
        })
      );
      secondClone.walkDecls(moveDecl((decl) => decl.remove()));
      const merged = ruleLength(firstClone, receivingBlock, secondClone);
      const original = ruleLength(first, second);
      if (merged < original) {
        first.replaceWith(firstClone);
        second.replaceWith(secondClone);
        [firstClone, receivingBlock, secondClone].forEach((r) => {
          if (r.nodes.length === 0) {
            r.remove();
          }
        });
        if (!secondClone.parent) {
          return receivingBlock;
        }
        return secondClone;
      } else {
        receivingBlock.remove();
        return second;
      }
    }
    function selectorMerger(browsers, compatibilityCache) {
      let cache = null;
      return function(rule) {
        if (!cache || !canMerge(rule, cache, browsers, compatibilityCache)) {
          cache = rule;
          return;
        }
        if (cache === rule) {
          cache = rule;
          return;
        }
        mergeParents(cache, rule);
        if (sameDeclarationsAndOrder(getDecls(rule), getDecls(cache))) {
          rule.selector = joinSelectors(cache, rule);
          cache.remove();
          cache = rule;
          return;
        }
        if (cache.selector === rule.selector) {
          const cached = getDecls(cache);
          rule.walk((node) => {
            if (node.type === "decl" && indexOfDeclaration(cached, node) !== -1) {
              node.remove();
              return;
            }
            cache.append(node);
          });
          rule.remove();
          return;
        }
        cache = partialMerge(cache, rule);
      };
    }
    function pluginCreator() {
      return {
        postcssPlugin: "postcss-merge-rules",
        prepare(result) {
          const resultOpts = result.opts || {};
          const browsers = browserslist(null, {
            stats: resultOpts.stats,
            path: __dirname,
            env: resultOpts.env
          });
          const compatibilityCache = /* @__PURE__ */ new Map();
          return {
            OnceExit(css) {
              css.walkRules(selectorMerger(browsers, compatibilityCache));
            }
          };
        }
      };
    }
    pluginCreator.postcss = true;
    module2.exports = pluginCreator;
  }
});

// node_modules/postcss-discard-empty/src/index.js
var require_src22 = __commonJS({
  "node_modules/postcss-discard-empty/src/index.js"(exports, module2) {
    "use strict";
    var plugin = "postcss-discard-empty";
    function discardAndReport(css, result) {
      function discardEmpty(node) {
        const { type } = node;
        const sub = (
          /** @type {any} */
          node.nodes
        );
        if (sub) {
          node.each(discardEmpty);
        }
        if (type === "decl" && !node.value && !node.prop.startsWith("--") || type === "rule" && !node.selector || sub && !sub.length || type === "atrule" && (!sub && !node.params || !node.params && !/** @type {import('postcss').ChildNode[]}*/
        sub.length)) {
          node.remove();
          result.messages.push({
            type: "removal",
            plugin,
            node
          });
        }
      }
      css.each(discardEmpty);
    }
    function pluginCreator() {
      return {
        postcssPlugin: plugin,
        OnceExit(css, { result }) {
          discardAndReport(css, result);
        }
      };
    }
    pluginCreator.postcss = true;
    module2.exports = pluginCreator;
  }
});

// node_modules/postcss-unique-selectors/src/index.js
var require_src23 = __commonJS({
  "node_modules/postcss-unique-selectors/src/index.js"(exports, module2) {
    "use strict";
    var selectorParser = require_dist3();
    function parseSelectors(selectors, callback) {
      return selectorParser(callback).processSync(selectors);
    }
    function unique(rule) {
      const selector = [...new Set(rule.selectors)];
      selector.sort();
      return selector.join();
    }
    function pluginCreator() {
      return {
        postcssPlugin: "postcss-unique-selectors",
        OnceExit(css) {
          css.walkRules((nodes) => {
            let comments = [];
            const removeAndSaveComments = (selNode) => {
              selNode.walk((sel) => {
                if (sel.type === "comment") {
                  comments.push(sel.value);
                  sel.remove();
                  return;
                } else {
                  return;
                }
              });
            };
            if (nodes.raws.selector && nodes.raws.selector.raw) {
              parseSelectors(nodes.raws.selector.raw, removeAndSaveComments);
              nodes.raws.selector.raw = unique(nodes);
            }
            nodes.selector = parseSelectors(nodes.selector, removeAndSaveComments);
            nodes.selector = unique(nodes);
            nodes.selectors = nodes.selectors.concat(comments);
          });
        }
      };
    }
    pluginCreator.postcss = true;
    module2.exports = pluginCreator;
  }
});

// node_modules/postcss-normalize-string/src/index.js
var require_src24 = __commonJS({
  "node_modules/postcss-normalize-string/src/index.js"(exports, module2) {
    "use strict";
    var valueParser = require_lib();
    var SINGLE_QUOTE = "'".charCodeAt(0);
    var DOUBLE_QUOTE = '"'.charCodeAt(0);
    var BACKSLASH = "\\".charCodeAt(0);
    var NEWLINE = "\n".charCodeAt(0);
    var SPACE = " ".charCodeAt(0);
    var FEED = "\f".charCodeAt(0);
    var TAB = "	".charCodeAt(0);
    var CR = "\r".charCodeAt(0);
    var WORD_END = /[ \n\t\r\f'"\\]/g;
    var C_STRING = "string";
    var C_ESCAPED_SINGLE_QUOTE = "escapedSingleQuote";
    var C_ESCAPED_DOUBLE_QUOTE = "escapedDoubleQuote";
    var C_SINGLE_QUOTE = "singleQuote";
    var C_DOUBLE_QUOTE = "doubleQuote";
    var C_NEWLINE = "newline";
    var C_SINGLE = "single";
    var L_SINGLE_QUOTE = `'`;
    var L_DOUBLE_QUOTE = `"`;
    var L_NEWLINE = `\\
`;
    var T_ESCAPED_SINGLE_QUOTE = { type: C_ESCAPED_SINGLE_QUOTE, value: `\\'` };
    var T_ESCAPED_DOUBLE_QUOTE = { type: C_ESCAPED_DOUBLE_QUOTE, value: `\\"` };
    var T_SINGLE_QUOTE = { type: C_SINGLE_QUOTE, value: L_SINGLE_QUOTE };
    var T_DOUBLE_QUOTE = { type: C_DOUBLE_QUOTE, value: L_DOUBLE_QUOTE };
    var T_NEWLINE = { type: C_NEWLINE, value: L_NEWLINE };
    function stringify(ast) {
      return ast.nodes.reduce((str, { value }) => {
        if (value === L_NEWLINE) {
          return str;
        }
        return str + value;
      }, "");
    }
    function parse(str) {
      let code, next, value;
      let pos = 0;
      let len = str.length;
      const ast = {
        nodes: [],
        types: {
          escapedSingleQuote: 0,
          escapedDoubleQuote: 0,
          singleQuote: 0,
          doubleQuote: 0
        },
        quotes: false
      };
      while (pos < len) {
        code = str.charCodeAt(pos);
        switch (code) {
          case SPACE:
          case TAB:
          case CR:
          case FEED:
            next = pos;
            do {
              next += 1;
              code = str.charCodeAt(next);
            } while (code === SPACE || code === NEWLINE || code === TAB || code === CR || code === FEED);
            ast.nodes.push({
              type: "space",
              value: str.slice(pos, next)
            });
            pos = next - 1;
            break;
          case SINGLE_QUOTE:
            ast.nodes.push(T_SINGLE_QUOTE);
            ast.types[C_SINGLE_QUOTE]++;
            ast.quotes = true;
            break;
          case DOUBLE_QUOTE:
            ast.nodes.push(T_DOUBLE_QUOTE);
            ast.types[C_DOUBLE_QUOTE]++;
            ast.quotes = true;
            break;
          case BACKSLASH:
            next = pos + 1;
            if (str.charCodeAt(next) === SINGLE_QUOTE) {
              ast.nodes.push(T_ESCAPED_SINGLE_QUOTE);
              ast.types[C_ESCAPED_SINGLE_QUOTE]++;
              ast.quotes = true;
              pos = next;
              break;
            } else if (str.charCodeAt(next) === DOUBLE_QUOTE) {
              ast.nodes.push(T_ESCAPED_DOUBLE_QUOTE);
              ast.types[C_ESCAPED_DOUBLE_QUOTE]++;
              ast.quotes = true;
              pos = next;
              break;
            } else if (str.charCodeAt(next) === NEWLINE) {
              ast.nodes.push(T_NEWLINE);
              pos = next;
              break;
            }
          default:
            WORD_END.lastIndex = pos + 1;
            WORD_END.test(str);
            if (WORD_END.lastIndex === 0) {
              next = len - 1;
            } else {
              next = WORD_END.lastIndex - 2;
            }
            value = str.slice(pos, next + 1);
            ast.nodes.push({
              type: C_STRING,
              value
            });
            pos = next;
        }
        pos++;
      }
      return ast;
    }
    function changeWrappingQuotes(node, ast) {
      const { types } = ast;
      if (types[C_SINGLE_QUOTE] || types[C_DOUBLE_QUOTE]) {
        return;
      }
      if (node.quote === L_SINGLE_QUOTE && types[C_ESCAPED_SINGLE_QUOTE] > 0 && !types[C_ESCAPED_DOUBLE_QUOTE]) {
        node.quote = L_DOUBLE_QUOTE;
      }
      if (node.quote === L_DOUBLE_QUOTE && types[C_ESCAPED_DOUBLE_QUOTE] > 0 && !types[C_ESCAPED_SINGLE_QUOTE]) {
        node.quote = L_SINGLE_QUOTE;
      }
      ast.nodes = changeChildQuotes(ast.nodes, node.quote);
    }
    function changeChildQuotes(childNodes, parentQuote) {
      const updatedChildren = [];
      for (const child of childNodes) {
        if (child.type === C_ESCAPED_DOUBLE_QUOTE && parentQuote === L_SINGLE_QUOTE) {
          updatedChildren.push(T_DOUBLE_QUOTE);
        } else if (child.type === C_ESCAPED_SINGLE_QUOTE && parentQuote === L_DOUBLE_QUOTE) {
          updatedChildren.push(T_SINGLE_QUOTE);
        } else {
          updatedChildren.push(child);
        }
      }
      return updatedChildren;
    }
    function normalize(value, preferredQuote) {
      if (!value || !value.length) {
        return value;
      }
      return valueParser(value).walk((child) => {
        if (child.type !== C_STRING) {
          return;
        }
        const ast = parse(child.value);
        if (ast.quotes) {
          changeWrappingQuotes(child, ast);
        } else if (preferredQuote === C_SINGLE) {
          child.quote = L_SINGLE_QUOTE;
        } else {
          child.quote = L_DOUBLE_QUOTE;
        }
        child.value = stringify(ast);
      }).toString();
    }
    function minify(original, cache, preferredQuote) {
      const key = original + "|" + preferredQuote;
      if (cache.has(key)) {
        return (
          /** @type {string} */
          cache.get(key)
        );
      }
      const newValue = normalize(original, preferredQuote);
      cache.set(key, newValue);
      return newValue;
    }
    function pluginCreator(opts) {
      const { preferredQuote } = Object.assign(
        {},
        {
          preferredQuote: "double"
        },
        opts
      );
      return {
        postcssPlugin: "postcss-normalize-string",
        OnceExit(css) {
          const cache = /* @__PURE__ */ new Map();
          css.walk((node) => {
            switch (node.type) {
              case "rule":
                node.selector = minify(node.selector, cache, preferredQuote);
                break;
              case "decl":
                node.value = minify(node.value, cache, preferredQuote);
                break;
              case "atrule":
                node.params = minify(node.params, cache, preferredQuote);
                break;
            }
          });
        }
      };
    }
    pluginCreator.postcss = true;
    module2.exports = pluginCreator;
  }
});

// node_modules/postcss-normalize-positions/src/index.js
var require_src25 = __commonJS({
  "node_modules/postcss-normalize-positions/src/index.js"(exports, module2) {
    "use strict";
    var valueParser = require_lib();
    var directionKeywords = /* @__PURE__ */ new Set(["top", "right", "bottom", "left", "center"]);
    var center = "50%";
    var horizontal = /* @__PURE__ */ new Map([
      ["right", "100%"],
      ["left", "0"]
    ]);
    var verticalValue = /* @__PURE__ */ new Map([
      ["bottom", "100%"],
      ["top", "0"]
    ]);
    var mathFunctions = /* @__PURE__ */ new Set(["calc", "min", "max", "clamp"]);
    var variableFunctions = /* @__PURE__ */ new Set(["var", "env", "constant"]);
    function isCommaNode(node) {
      return node.type === "div" && node.value === ",";
    }
    function isVariableFunctionNode(node) {
      if (node.type !== "function") {
        return false;
      }
      return variableFunctions.has(node.value.toLowerCase());
    }
    function isMathFunctionNode(node) {
      if (node.type !== "function") {
        return false;
      }
      return mathFunctions.has(node.value.toLowerCase());
    }
    function isNumberNode(node) {
      if (node.type !== "word") {
        return false;
      }
      const value = parseFloat(node.value);
      return !isNaN(value);
    }
    function isDimensionNode(node) {
      if (node.type !== "word") {
        return false;
      }
      const parsed = valueParser.unit(node.value);
      if (!parsed) {
        return false;
      }
      return parsed.unit !== "";
    }
    function transform2(value) {
      const parsed = valueParser(value);
      const ranges = [];
      let rangeIndex = 0;
      let shouldContinue = true;
      parsed.nodes.forEach((node, index) => {
        if (isCommaNode(node)) {
          rangeIndex += 1;
          shouldContinue = true;
          return;
        }
        if (!shouldContinue) {
          return;
        }
        if (node.type === "div" && node.value === "/") {
          shouldContinue = false;
          return;
        }
        if (!ranges[rangeIndex]) {
          ranges[rangeIndex] = {
            start: null,
            end: null
          };
        }
        if (isVariableFunctionNode(node)) {
          shouldContinue = false;
          ranges[rangeIndex].start = null;
          ranges[rangeIndex].end = null;
          return;
        }
        const isPositionKeyword = node.type === "word" && directionKeywords.has(node.value.toLowerCase()) || isDimensionNode(node) || isNumberNode(node) || isMathFunctionNode(node);
        if (ranges[rangeIndex].start === null && isPositionKeyword) {
          ranges[rangeIndex].start = index;
          ranges[rangeIndex].end = index;
          return;
        }
        if (ranges[rangeIndex].start !== null) {
          if (node.type === "space") {
            return;
          } else if (isPositionKeyword) {
            ranges[rangeIndex].end = index;
            return;
          }
          return;
        }
      });
      ranges.forEach((range) => {
        if (range.start === null) {
          return;
        }
        const nodes = parsed.nodes.slice(range.start, range.end + 1);
        if (nodes.length > 3) {
          return;
        }
        const firstNode = nodes[0].value.toLowerCase();
        const secondNode = nodes[2] && nodes[2].value ? nodes[2].value.toLowerCase() : null;
        if (nodes.length === 1 || secondNode === "center") {
          if (secondNode) {
            nodes[2].value = nodes[1].value = "";
          }
          const map = new Map([...horizontal, ["center", center]]);
          if (map.has(firstNode)) {
            nodes[0].value = /** @type {string}*/
            map.get(firstNode);
          }
          return;
        }
        if (secondNode !== null) {
          if (firstNode === "center" && directionKeywords.has(secondNode)) {
            nodes[0].value = nodes[1].value = "";
            if (horizontal.has(secondNode)) {
              nodes[2].value = /** @type {string} */
              horizontal.get(secondNode);
            }
            return;
          }
          if (horizontal.has(firstNode) && verticalValue.has(secondNode)) {
            nodes[0].value = /** @type {string} */
            horizontal.get(firstNode);
            nodes[2].value = /** @type {string} */
            verticalValue.get(secondNode);
            return;
          } else if (verticalValue.has(firstNode) && horizontal.has(secondNode)) {
            nodes[0].value = /** @type {string} */
            horizontal.get(secondNode);
            nodes[2].value = /** @type {string} */
            verticalValue.get(firstNode);
            return;
          }
        }
      });
      return parsed.toString();
    }
    function pluginCreator() {
      return {
        postcssPlugin: "postcss-normalize-positions",
        OnceExit(css) {
          const cache = /* @__PURE__ */ new Map();
          css.walkDecls(
            /^(background(-position)?|(-\w+-)?perspective-origin)$/i,
            (decl) => {
              const value = decl.value;
              if (!value) {
                return;
              }
              if (cache.has(value)) {
                decl.value = cache.get(value);
                return;
              }
              const result = transform2(value);
              decl.value = result;
              cache.set(value, result);
            }
          );
        }
      };
    }
    pluginCreator.postcss = true;
    module2.exports = pluginCreator;
  }
});

// node_modules/postcss-normalize-whitespace/src/index.js
var require_src26 = __commonJS({
  "node_modules/postcss-normalize-whitespace/src/index.js"(exports, module2) {
    "use strict";
    var valueParser = require_lib();
    var atrule = "atrule";
    var decl = "decl";
    var rule = "rule";
    var variableFunctions = /* @__PURE__ */ new Set(["var", "env", "constant"]);
    function reduceCalcWhitespaces(node) {
      if (node.type === "space") {
        node.value = " ";
      } else if (node.type === "function") {
        if (!variableFunctions.has(node.value.toLowerCase())) {
          node.before = node.after = "";
        }
      }
    }
    function reduceWhitespaces(node) {
      if (node.type === "space") {
        node.value = " ";
      } else if (node.type === "div") {
        node.before = node.after = "";
      } else if (node.type === "function") {
        if (!variableFunctions.has(node.value.toLowerCase())) {
          node.before = node.after = "";
        }
        if (node.value.toLowerCase() === "calc") {
          valueParser.walk(node.nodes, reduceCalcWhitespaces);
          return false;
        }
      }
    }
    function pluginCreator() {
      return {
        postcssPlugin: "postcss-normalize-whitespace",
        OnceExit(css) {
          const cache = /* @__PURE__ */ new Map();
          css.walk((node) => {
            const { type } = node;
            if ([decl, rule, atrule].includes(type) && node.raws.before) {
              node.raws.before = node.raws.before.replace(/\s/g, "");
            }
            if (type === decl) {
              if (node.important) {
                node.raws.important = "!important";
              }
              node.value = node.value.replace(/\s*(\\9)\s*/, "$1");
              const value = node.value;
              if (cache.has(value)) {
                node.value = cache.get(value);
              } else {
                const parsed = valueParser(node.value);
                const result = parsed.walk(reduceWhitespaces).toString();
                node.value = result;
                cache.set(value, result);
              }
              if (node.prop.startsWith("--") && node.value === "") {
                node.value = " ";
              }
              if (node.raws.before) {
                const prev = node.prev();
                if (prev && prev.type !== rule) {
                  node.raws.before = node.raws.before.replace(/;/g, "");
                }
              }
              node.raws.between = ":";
              node.raws.semicolon = false;
            } else if (type === rule || type === atrule) {
              node.raws.between = node.raws.after = "";
              node.raws.semicolon = false;
            }
          });
          css.raws.after = "";
        }
      };
    }
    pluginCreator.postcss = true;
    module2.exports = pluginCreator;
  }
});

// node_modules/postcss-normalize-unicode/src/index.js
var require_src27 = __commonJS({
  "node_modules/postcss-normalize-unicode/src/index.js"(exports, module2) {
    "use strict";
    var browserslist = require_browserslist();
    var valueParser = require_lib();
    var regexLowerCaseUPrefix = /^u(?=\+)/;
    function unicode(range) {
      const values = range.slice(2).split("-");
      if (values.length < 2) {
        return range;
      }
      const left = values[0].split("");
      const right = values[1].split("");
      if (left.length !== right.length) {
        return range;
      }
      const merged = mergeRangeBounds(left, right);
      if (merged) {
        return merged;
      }
      return range;
    }
    function mergeRangeBounds(left, right) {
      let questionCounter = 0;
      let group = "u+";
      for (const [index, value] of left.entries()) {
        if (value === right[index] && questionCounter === 0) {
          group = group + value;
        } else if (value === "0" && right[index] === "f") {
          questionCounter++;
          group = group + "?";
        } else {
          return false;
        }
      }
      if (questionCounter < 6) {
        return group;
      } else {
        return false;
      }
    }
    function hasLowerCaseUPrefixBug(browser) {
      return browserslist("ie <=11, edge <= 15").includes(browser);
    }
    function transform2(value, isLegacy = false) {
      return valueParser(value).walk((child) => {
        if (child.type === "unicode-range") {
          const transformed = unicode(child.value.toLowerCase());
          child.value = isLegacy ? transformed.replace(regexLowerCaseUPrefix, "U") : transformed;
        }
        return false;
      }).toString();
    }
    function pluginCreator() {
      return {
        postcssPlugin: "postcss-normalize-unicode",
        /** @param {import('postcss').Result & {opts: browserslist.Options}} result*/
        prepare(result) {
          const cache = /* @__PURE__ */ new Map();
          const resultOpts = result.opts || {};
          const browsers = browserslist(null, {
            stats: resultOpts.stats,
            path: __dirname,
            env: resultOpts.env
          });
          const isLegacy = browsers.some(hasLowerCaseUPrefixBug);
          return {
            OnceExit(css) {
              css.walkDecls(/^unicode-range$/i, (decl) => {
                const value = decl.value;
                if (cache.has(value)) {
                  decl.value = cache.get(value);
                  return;
                }
                const newValue = transform2(value, isLegacy);
                decl.value = newValue;
                cache.set(value, newValue);
              });
            }
          };
        }
      };
    }
    pluginCreator.postcss = true;
    module2.exports = pluginCreator;
  }
});

// node_modules/postcss-normalize-display-values/src/lib/map.js
var require_map2 = __commonJS({
  "node_modules/postcss-normalize-display-values/src/lib/map.js"(exports, module2) {
    "use strict";
    var block = "block";
    var flex = "flex";
    var flow = "flow";
    var flowRoot = "flow-root";
    var grid = "grid";
    var inline = "inline";
    var inlineBlock = "inline-block";
    var inlineFlex = "inline-flex";
    var inlineGrid = "inline-grid";
    var inlineTable = "inline-table";
    var listItem = "list-item";
    var ruby = "ruby";
    var rubyBase = "ruby-base";
    var rubyText = "ruby-text";
    var runIn = "run-in";
    var table = "table";
    var tableCell = "table-cell";
    var tableCaption = "table-caption";
    module2.exports = /* @__PURE__ */ new Map([
      [[block, flow].toString(), block],
      [[block, flowRoot].toString(), flowRoot],
      [[inline, flow].toString(), inline],
      [[inline, flowRoot].toString(), inlineBlock],
      [[runIn, flow].toString(), runIn],
      [[listItem, block, flow].toString(), listItem],
      [[inline, flow, listItem].toString(), inline + " " + listItem],
      [[block, flex].toString(), flex],
      [[inline, flex].toString(), inlineFlex],
      [[block, grid].toString(), grid],
      [[inline, grid].toString(), inlineGrid],
      [[inline, ruby].toString(), ruby],
      // `block ruby` is same
      [[block, table].toString(), table],
      [[inline, table].toString(), inlineTable],
      [[tableCell, flow].toString(), tableCell],
      [[tableCaption, flow].toString(), tableCaption],
      [[rubyBase, flow].toString(), rubyBase],
      [[rubyText, flow].toString(), rubyText]
    ]);
  }
});

// node_modules/postcss-normalize-display-values/src/index.js
var require_src28 = __commonJS({
  "node_modules/postcss-normalize-display-values/src/index.js"(exports, module2) {
    "use strict";
    var valueParser = require_lib();
    var mappings = require_map2();
    function transform2(value) {
      const { nodes } = valueParser(value);
      if (nodes.length === 1) {
        return value;
      }
      const values = nodes.filter((list, index) => index % 2 === 0).filter((node) => node.type === "word").map((n) => n.value.toLowerCase());
      if (values.length === 0) {
        return value;
      }
      const match = mappings.get(values.toString());
      if (!match) {
        return value;
      }
      return match;
    }
    function pluginCreator() {
      return {
        postcssPlugin: "postcss-normalize-display-values",
        prepare() {
          const cache = /* @__PURE__ */ new Map();
          return {
            OnceExit(css) {
              css.walkDecls(/^display$/i, (decl) => {
                const value = decl.value;
                if (!value) {
                  return;
                }
                if (cache.has(value)) {
                  decl.value = cache.get(value);
                  return;
                }
                const result = transform2(value);
                decl.value = result;
                cache.set(value, result);
              });
            }
          };
        }
      };
    }
    pluginCreator.postcss = true;
    module2.exports = pluginCreator;
  }
});

// node_modules/postcss-normalize-timing-functions/src/index.js
var require_src29 = __commonJS({
  "node_modules/postcss-normalize-timing-functions/src/index.js"(exports, module2) {
    "use strict";
    var valueParser = require_lib();
    var getValue = (node) => parseFloat(node.value);
    var conversions = /* @__PURE__ */ new Map([
      [[0.25, 0.1, 0.25, 1].toString(), "ease"],
      [[0, 0, 1, 1].toString(), "linear"],
      [[0.42, 0, 1, 1].toString(), "ease-in"],
      [[0, 0, 0.58, 1].toString(), "ease-out"],
      [[0.42, 0, 0.58, 1].toString(), "ease-in-out"]
    ]);
    function reduce(node) {
      if (node.type !== "function") {
        return false;
      }
      if (!node.value) {
        return;
      }
      const lowerCasedValue = node.value.toLowerCase();
      if (lowerCasedValue === "steps") {
        if (node.nodes[0].type === "word" && getValue(node.nodes[0]) === 1 && node.nodes[2] && node.nodes[2].type === "word" && (node.nodes[2].value.toLowerCase() === "start" || node.nodes[2].value.toLowerCase() === "jump-start")) {
          node.type = "word";
          node.value = "step-start";
          delete /** @type Partial<valueParser.FunctionNode> */
          node.nodes;
          return;
        }
        if (node.nodes[0].type === "word" && getValue(node.nodes[0]) === 1 && node.nodes[2] && node.nodes[2].type === "word" && (node.nodes[2].value.toLowerCase() === "end" || node.nodes[2].value.toLowerCase() === "jump-end")) {
          node.type = "word";
          node.value = "step-end";
          delete /** @type Partial<valueParser.FunctionNode> */
          node.nodes;
          return;
        }
        if (node.nodes[2] && node.nodes[2].type === "word" && (node.nodes[2].value.toLowerCase() === "end" || node.nodes[2].value.toLowerCase() === "jump-end")) {
          node.nodes = [node.nodes[0]];
          return;
        }
        return false;
      }
      if (lowerCasedValue === "cubic-bezier") {
        const values = node.nodes.filter((list, index) => {
          return index % 2 === 0;
        }).map(getValue);
        if (values.length !== 4) {
          return;
        }
        const match = conversions.get(values.toString());
        if (match) {
          node.type = "word";
          node.value = match;
          delete /** @type Partial<valueParser.FunctionNode> */
          node.nodes;
          return;
        }
      }
    }
    function transform2(value) {
      return valueParser(value).walk(reduce).toString();
    }
    function pluginCreator() {
      return {
        postcssPlugin: "postcss-normalize-timing-functions",
        OnceExit(css) {
          const cache = /* @__PURE__ */ new Map();
          css.walkDecls(
            /^(-\w+-)?(animation|transition)(-timing-function)?$/i,
            (decl) => {
              const value = decl.value;
              if (cache.has(value)) {
                decl.value = cache.get(value);
                return;
              }
              const result = transform2(value);
              decl.value = result;
              cache.set(value, result);
            }
          );
        }
      };
    }
    pluginCreator.postcss = true;
    module2.exports = pluginCreator;
  }
});

// node_modules/cssnano-preset-default/src/index.js
var require_src30 = __commonJS({
  "node_modules/cssnano-preset-default/src/index.js"(exports, module2) {
    "use strict";
    var cssDeclarationSorter = require_main();
    var postcssDiscardComments = require_src();
    var postcssReduceInitial = require_src2();
    var postcssMinifyGradients = require_src4();
    var postcssSvgo = require_src5();
    var postcssReduceTransforms = require_src6();
    var postcssConvertValues = require_src7();
    var postcssCalc = require_src8();
    var postcssColormin = require_src9();
    var postcssOrderedValues = require_src10();
    var postcssMinifySelectors = require_src11();
    var postcssMinifyParams = require_src12();
    var postcssNormalizeCharset = require_src13();
    var postcssMinifyFontValues = require_src14();
    var postcssNormalizeUrl = require_src15();
    var postcssMergeLonghand = require_src17();
    var postcssDiscardDuplicates = require_src18();
    var postcssDiscardOverridden = require_src19();
    var postcssNormalizeRepeatStyle = require_src20();
    var postcssMergeRules = require_src21();
    var postcssDiscardEmpty = require_src22();
    var postcssUniqueSelectors = require_src23();
    var postcssNormalizeString = require_src24();
    var postcssNormalizePositions = require_src25();
    var postcssNormalizeWhitespace = require_src26();
    var postcssNormalizeUnicode = require_src27();
    var postcssNormalizeDisplayValues = require_src28();
    var postcssNormalizeTimingFunctions = require_src29();
    var { rawCache } = require_src3();
    var defaultOpts = {
      convertValues: {
        length: false
      },
      normalizeCharset: {
        add: false
      },
      cssDeclarationSorter: {
        keepOverrides: true
      }
    };
    function defaultPreset(opts = {}) {
      const options = Object.assign({}, defaultOpts, opts);
      const plugins = [
        [postcssDiscardComments, options.discardComments],
        [postcssMinifyGradients, options.minifyGradients],
        [postcssReduceInitial, options.reduceInitial],
        [postcssSvgo, options.svgo],
        [postcssNormalizeDisplayValues, options.normalizeDisplayValues],
        [postcssReduceTransforms, options.reduceTransforms],
        [postcssColormin, options.colormin],
        [postcssNormalizeTimingFunctions, options.normalizeTimingFunctions],
        [postcssCalc, options.calc],
        [postcssConvertValues, options.convertValues],
        [postcssOrderedValues, options.orderedValues],
        [postcssMinifySelectors, options.minifySelectors],
        [postcssMinifyParams, options.minifyParams],
        [postcssNormalizeCharset, options.normalizeCharset],
        [postcssDiscardOverridden, options.discardOverridden],
        [postcssNormalizeString, options.normalizeString],
        [postcssNormalizeUnicode, options.normalizeUnicode],
        [postcssMinifyFontValues, options.minifyFontValues],
        [postcssNormalizeUrl, options.normalizeUrl],
        [postcssNormalizeRepeatStyle, options.normalizeRepeatStyle],
        [postcssNormalizePositions, options.normalizePositions],
        [postcssNormalizeWhitespace, options.normalizeWhitespace],
        [postcssMergeLonghand, options.mergeLonghand],
        [postcssDiscardDuplicates, options.discardDuplicates],
        [postcssMergeRules, options.mergeRules],
        [postcssDiscardEmpty, options.discardEmpty],
        [postcssUniqueSelectors, options.uniqueSelectors],
        [cssDeclarationSorter, options.cssDeclarationSorter],
        [rawCache, options.rawCache]
      ];
      return { plugins };
    }
    module2.exports = defaultPreset;
  }
});

// node_modules/cssnano/src/index.js
var require_src31 = __commonJS({
  "node_modules/cssnano/src/index.js"(exports, module2) {
    "use strict";
    var path = require("path");
    var postcss = require_postcss();
    var { lilconfigSync } = require_dist();
    var cssnano2 = "cssnano";
    function isResolvable(moduleId) {
      try {
        require.resolve(moduleId);
        return true;
      } catch (e) {
        return false;
      }
    }
    function resolvePreset(preset) {
      let fn, options;
      if (Array.isArray(preset)) {
        fn = preset[0];
        options = preset[1];
      } else {
        fn = preset;
        options = {};
      }
      if (preset.plugins) {
        return preset.plugins;
      }
      if (fn === "default") {
        return require_src30()(options).plugins;
      }
      if (typeof fn === "function") {
        return fn(options).plugins;
      }
      if (isResolvable(fn)) {
        return require(fn)(options).plugins;
      }
      const sugar = `cssnano-preset-${fn}`;
      if (isResolvable(sugar)) {
        return require(sugar)(options).plugins;
      }
      throw new Error(
        `Cannot load preset "${fn}". Please check your configuration for errors and try again.`
      );
    }
    function resolveConfig(options) {
      if (options.preset) {
        return resolvePreset(options.preset);
      }
      let searchPath = process.cwd();
      let configPath = void 0;
      if (options.configFile) {
        searchPath = void 0;
        configPath = path.resolve(process.cwd(), options.configFile);
      }
      const configExplorer = lilconfigSync(cssnano2, {
        searchPlaces: [
          "package.json",
          ".cssnanorc",
          ".cssnanorc.json",
          ".cssnanorc.js",
          "cssnano.config.js"
        ]
      });
      const config = configPath ? configExplorer.load(configPath) : configExplorer.search(searchPath);
      if (config === null) {
        return resolvePreset("default");
      }
      return resolvePreset(config.config.preset || config.config);
    }
    function cssnanoPlugin(options = {}) {
      if (Array.isArray(options.plugins)) {
        if (!options.preset || !options.preset.plugins) {
          options.preset = { plugins: [] };
        }
        options.plugins.forEach((plugin) => {
          if (Array.isArray(plugin)) {
            const [pluginDef, opts = {}] = plugin;
            if (typeof pluginDef === "string" && isResolvable(pluginDef)) {
              options.preset.plugins.push([require(pluginDef), opts]);
            } else {
              options.preset.plugins.push([pluginDef, opts]);
            }
          } else if (typeof plugin === "string" && isResolvable(plugin)) {
            options.preset.plugins.push([require(plugin), {}]);
          } else {
            options.preset.plugins.push([plugin, {}]);
          }
        });
      }
      const plugins = [];
      const nanoPlugins = resolveConfig(options);
      for (const nanoPlugin of nanoPlugins) {
        if (Array.isArray(nanoPlugin)) {
          const [processor, opts] = nanoPlugin;
          if (typeof opts === "undefined" || typeof opts === "object" && !opts.exclude || typeof opts === "boolean" && opts === true) {
            plugins.push(processor(opts));
          }
        } else {
          plugins.push(nanoPlugin);
        }
      }
      return postcss(plugins);
    }
    cssnanoPlugin.postcss = true;
    module2.exports = cssnanoPlugin;
  }
});

// packages/lit-css/lit-css.ts
var lit_css_exports = {};
__export(lit_css_exports, {
  transform: () => transform
});
module.exports = __toCommonJS(lit_css_exports);

// node_modules/string-to-template-literal/dist/main.js
var illegalChars = /* @__PURE__ */ new Map();
illegalChars.set("\\", "\\\\");
illegalChars.set("`", "\\`");
illegalChars.set("$", "\\$");
function convert(s) {
  if (!s) {
    return "``";
  }
  let res = "";
  for (let i = 0; i < s.length; i++) {
    const c = s.charAt(i);
    res += illegalChars.get(c) || c;
  }
  return `\`${res}\``;
}

// packages/lit-css/lit-css.ts
var import_uglifycss = __toESM(require_uglifycss(), 1);
var import_cssnano = __toESM(require_src31(), 1);
async function cssnanoify(css, options) {
  const cssnanoOptions = typeof options === "object" ? options : void 0;
  const result = await (0, import_cssnano.default)(cssnanoOptions).process(css);
  return result.css;
}
async function uglifycssify(css, options) {
  const uglifyOptions = typeof options === "object" ? options : void 0;
  const result = (0, import_uglifycss.processString)(css, uglifyOptions);
  return result;
}
async function transform({
  css: source,
  filePath,
  specifier = "lit",
  tag = "css",
  uglify = false,
  cssnano: cssnano2 = false,
  transform: transform2 = (x) => x
}) {
  const css = await transform2(source, { filePath });
  const cssContent = cssnano2 ? await cssnanoify(css, cssnano2) : uglify ? await uglifycssify(css, uglify) : css;
  return `import {${tag}} from '${specifier}';
export const styles = ${tag}${convert(cssContent)};
export default styles;
`;
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  transform
});
/*! Bundled license information:

cssesc/cssesc.js:
  (*! https://mths.be/cssesc v3.0.0 by @mathias *)

cssnano-preset-default/src/index.js:
  (**
   * @author Ben Briggs
   * @license MIT
   * @module cssnano:preset:default
   * @overview
   *
   * This default preset for cssnano only includes transforms that make no
   * assumptions about your CSS other than what is passed in. In previous
   * iterations of cssnano, assumptions were made about your CSS which caused
   * output to look different in certain use cases, but not others. These
   * transforms have been moved from the defaults to other presets, to make
   * this preset require only minimal configuration.
   *)
*/
//# sourceMappingURL=lit-css.cjs.map
